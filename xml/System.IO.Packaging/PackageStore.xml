<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="245b0dbe550b6d8c9da469b38d25afbd8040fa21" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996815" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.IO.Packaging.Package" /> と組み合わせて使用されるアプリケーション固有の <see cref="T:System.IO.Packaging.PackWebRequest" /> インスタンスのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.IO.Packaging.PackageStore> 、アプリケーションで開いてアクティブになっているパッケージの参照コレクションを定義します。  に<xref:System.IO.Packaging.PackageStore>追加されたパッケージは、そのキー URI 値によってアクセスされます。  は<xref:System.IO.Packaging.PackageStore> 、次の3つの一般的な用途をサポートします。  
  
1.  を<xref:System.IO.Packaging.PackagePart> 使用<xref:System.IO.Packaging.PackWebRequest>したデータへのアクセス。  
  
2.  パッケージの URI を<xref:System.IO.Packaging.Package>指定してのインスタンスを取得するアプリケーション。  
  
3.  に作成され、 <xref:System.IO.MemoryStream>格納されているパッケージにアクセスする。  
  
 パフォーマンスを向上させ、ファイルを開く/閉じる操作を繰り返すことに<xref:System.IO.Packaging.PackageStore>よるオーバーヘッドを最小限に抑えるために、 <xref:System.IO.Packaging.PackWebRequest>は、によってアクセスされるパッケージのインスタンスを管理し、アプリケーションによって直接管理します。  パッケージ<xref:System.IO.Packaging.Package>内のデータにアクセスする場合は、まず、 <xref:System.IO.Packaging.PackagePart>パッケージが既に定義されていて、 <xref:System.IO.Packaging.PackageStore>で開かれているかどうかを確認するために、要求<xref:System.IO.Packaging.PackagePart.Uri%2A>されたのアドレスが確認されます。  パッケージがで<xref:System.IO.Packaging.PackageStore>開いているように定義されている場合、要求ごとにパッケージを開いたり閉じたりすることなく、要求されたパーツに直接アクセスできます。  
  
 アプリケーションでを使用して<xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>パッケージを開いた場合は、パッケージをに<xref:System.IO.Packaging.PackageStore>追加するためにを<xref:System.IO.Packaging.PackageStore.AddPackage%2A>呼び出すことができます。  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>を呼び出す<xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>前に、からパッケージを削除<xref:System.IO.Packaging.PackageStore>するには、後でを呼び出す必要があります。  
  
 <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>コンストラクターで開かれた XPS パッケージは、ドキュメントが作成さ<xref:System.IO.Packaging.PackageStore>れて破棄されるときに、自動的に追加され、から削除されます。  (コンストラクターで<xref:System.IO.Packaging.PackageStore.AddPackage%2A> <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 開かれたXPSパッケージでは、またはを個別に呼び出す必要はあり<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>ません)。  
  
 を<xref:System.IO.Packaging.PackageStore>介してアクセスされるパッケージのファイル i/o アクセス許可は、開いたときにパッケージに設定された i/o アクセス許可と同じままです。  は<xref:System.IO.Packaging.PackageStore> 、ストアを追加したパッケージへの参照のみを提供します。  各パッケージを正しく開いて更新し、終了するのは、アプリケーションの場合です。  
  
 に追加され<xref:System.IO.Packaging.PackageStore>たパッケージは、のような[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>パーサーと組み合わせて使用すると、マルチスレッド環境でアクセスできます。  マルチスレッド環境で動作している場合、アプリケーションはアクセスの前にパッケージをロックする必要があります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.IO.Packaging.PackWebRequest" /> で比較される <paramref name="package" /> の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] キー。</param>
        <param name="package">ストアに追加するパッケージ。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> をストアに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`を呼び出す<xref:System.IO.Packaging.PackWebRequest>と比較されるパッケージのキー URI を定義します。  
  
 が`packageUri` <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackageStore>呼び出しでのと一致する場合、に定義されているパッケージを使用して、要求されたパーツにアクセスします。 <xref:System.IO.Packaging.PackagePart.Uri%2A> <xref:System.IO.Packaging.PackWebRequest>  
  
 が呼び出しでのと一致<xref:System.IO.Packaging.PackagePart.Uri%2A> <xref:System.IO.Packaging.PackagePart>しない場合は、指定された URI を持つパッケージが、要求されたパーツにアクセスするために開かれます。 `packageUri` <xref:System.IO.Packaging.PackWebRequest>  
  
 **セキュリティ**に関する注意このメソッドは<xref:System.Security.Permissions.EnvironmentPermission> 、すべての<xref:System.IO.Packaging.Package>カスタム (非<xref:System.IO.Packaging.ZipPackage>) 型に対して要求を行います。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] です。</exception>
        <exception cref="T:System.InvalidOperationException">指定した <paramref name="packageUri" /> を持つパッケージが、既にストアに存在します。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">返されるパッケージの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</param>
        <summary>指定した [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を持つ <see cref="T:System.IO.Packaging.Package" /> をストアから返します。</summary>
        <returns>指定した <paramref name="packageUri" /> を持つパッケージ。指定した <paramref name="packageUri" /> を持つパッケージがストア内に存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`は、 <xref:System.IO.Packaging.PackageStore.AddPackage%2A>メソッドの呼び出しで指定された uri と一致します。  
  
 **セキュリティ**に関する注意このメソッドは<xref:System.Security.Permissions.EnvironmentPermission> 、すべての<xref:System.IO.Packaging.Package>カスタム (非<xref:System.IO.Packaging.ZipPackage>) 型に対して要求を行います。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.GetPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] です。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">削除するパッケージの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</param>
        <summary>指定された [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を持つ <see cref="T:System.IO.Packaging.Package" /> をストアから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`は、 <xref:System.IO.Packaging.PackageStore.AddPackage%2A>メソッドの呼び出しで指定された uri と一致します。  
  
 **セキュリティ**に関する注意このメソッドは<xref:System.Security.Permissions.EnvironmentPermission> 、すべての<xref:System.IO.Packaging.Package>カスタム (非<xref:System.IO.Packaging.ZipPackage>) 型に対して要求を行います。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> が無効なパッケージ [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] です。</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>