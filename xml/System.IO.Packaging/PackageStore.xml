<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0069dd3fa7ffc551098e5832098396c82ef09290" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37758932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of application-specific <see cref="T:System.IO.Packaging.Package" /> instances used in combination with <see cref="T:System.IO.Packaging.PackWebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore>を開き、アプリケーションのアクティブなパッケージの参照のコレクションを定義します。  パッケージに追加、<xref:System.IO.Packaging.PackageStore>アクセスは、キーの URI 値は。  <xref:System.IO.Packaging.PackageStore> 3 つの一般的な使用をサポートしています。  
  
1.  アクセスする<xref:System.IO.Packaging.PackagePart>を使用してデータ<xref:System.IO.Packaging.PackWebRequest>します。  
  
2.  インスタンスを取得するアプリケーションを<xref:System.IO.Packaging.Package>パッケージの URI を指定します。  
  
3.  作成されに格納されているパッケージにアクセスする、<xref:System.IO.MemoryStream>します。  
  
 パフォーマンス向上や、繰り返しファイルを開く/閉じる操作のオーバーヘッドを最小限に抑える、<xref:System.IO.Packaging.PackageStore>パッケージ アクセスのインスタンスを管理するために使用<xref:System.IO.Packaging.PackWebRequest>と、アプリケーションから直接します。  パッケージ内のデータにアクセスするとき、<xref:System.IO.Packaging.Package>の要求されたアドレス<xref:System.IO.Packaging.PackagePart><xref:System.IO.Packaging.PackagePart.Uri%2A>が最初にチェックするかどうか、パッケージが既に定義されで開いているを参照してください、<xref:System.IO.Packaging.PackageStore>します。  パッケージはオープンで定義されている場合、 <xref:System.IO.Packaging.PackageStore>、要求の部分を繰り返し要求ごとに、パッケージの開閉せずに直接アクセスできます。  
  
 アプリケーションが使用してパッケージを開いた場合<xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>、<xref:System.IO.Packaging.PackageStore.AddPackage%2A>にパッケージを追加するということができます、<xref:System.IO.Packaging.PackageStore>します。  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> 後でパッケージを削除して呼び出す必要があります、<xref:System.IO.Packaging.PackageStore>呼び出す前に<xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>します。  
  
 XPS パッケージを開いて、<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>コンス トラクターが自動的に追加、削除、<xref:System.IO.Packaging.PackageStore>ドキュメントが作成され破棄します。  (を呼び出す必要はありません<xref:System.IO.Packaging.PackageStore.AddPackage%2A>または<xref:System.IO.Packaging.PackageStore.RemovePackage%2A>で XPS パッケージが開かれたのとは別に<xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>コンス トラクター)。  
  
 パッケージを使用してアクセスのファイル I/O アクセス許可、<xref:System.IO.Packaging.PackageStore>は開かれたときに、パッケージに設定する I/O のアクセス許可と同じままです。  <xref:System.IO.Packaging.PackageStore>のみ、ストアに追加されているパッケージへの参照を提供します。  アプリケーションを正しく開く、更新、および各パッケージの終了の責任です。  
  
 パッケージに追加、<xref:System.IO.Packaging.PackageStore>と組み合わせて使用している場合、マルチ スレッド環境でアクセスできる、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]などパーサー<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>します。  マルチ スレッド環境で使用する場合、アプリケーションがアクセスする前にパッケージをロックする必要があります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">The key [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <c>package</c> to compare in a <see cref="T:System.IO.Packaging.PackWebRequest" />.</param>
        <param name="package">The package to add to the store.</param>
        <summary>Adds a <see cref="T:System.IO.Packaging.Package" /> to the store.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` パッケージのキーを呼び出すときと比較する URI を定義します。<xref:System.IO.Packaging.PackWebRequest>します。  
  
 場合、`packageUri`と一致する、<xref:System.IO.Packaging.PackagePart.Uri%2A>の<xref:System.IO.Packaging.PackagePart>で、<xref:System.IO.Packaging.PackWebRequest>で定義されているパッケージを呼び出して、<xref:System.IO.Packaging.PackageStore>要求された部分にアクセスするために使用します。  
  
 場合、`packageUri`と一致しません、<xref:System.IO.Packaging.PackagePart.Uri%2A>の<xref:System.IO.Packaging.PackagePart>で、<xref:System.IO.Packaging.PackWebRequest>要求の一部にアクセスする呼び出し、指定の URI を持つパッケージが開かれます。  
  
 **セキュリティに関する注意**このメソッドが要求<xref:System.Security.Permissions.EnvironmentPermission>すべてカスタム<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) の種類。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.AddPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.InvalidOperationException">A package with the specified <paramref name="packageUri" /> is already in the store.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to return.</param>
        <summary>Returns the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</summary>
        <returns>The package with a specified <paramref name="packageUri" />; or <see langword="null" />, if a package with the specified <paramref name="packageUri" /> is not in the store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Uri に一致で指定されている、<xref:System.IO.Packaging.PackageStore.AddPackage%2A>メソッドの呼び出し。  
  
 **セキュリティに関する注意**このメソッドが要求<xref:System.Security.Permissions.EnvironmentPermission>すべてカスタム<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) の種類。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.GetPackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the package to remove.</param>
        <summary>Removes the <see cref="T:System.IO.Packaging.Package" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from the store.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Uri に一致で指定されている、<xref:System.IO.Packaging.PackageStore.AddPackage%2A>メソッドの呼び出し。  
  
 **セキュリティに関する注意**このメソッドが要求<xref:System.Security.Permissions.EnvironmentPermission>すべてカスタム<xref:System.IO.Packaging.Package>(非<xref:System.IO.Packaging.ZipPackage>) の種類。  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is an invalid package [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>