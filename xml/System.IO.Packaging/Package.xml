<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dee45f1f612e06eeda3bbc4d49ae2828aed0329" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51912681" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="95fa5-101">複数のデータ オブジェクトを格納できるコンテナーを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95fa5-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-102"><xref:System.IO.Packaging.Package> 抽象クラスに移植性と効率的なアクセスの場合は、定義されている物理形式の 1 つのエンティティ オブジェクトを編成するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="95fa5-103">ZIP ファイルは、プライマリの物理形式の<xref:System.IO.Packaging.Package>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="95fa5-104">その他の<xref:System.IO.Packaging.Package>実装の XML ドキュメントの場合、データベースなどの他の物理形式を使用して、または Web サービス可能性があります。</span><span class="sxs-lookup"><span data-stu-id="95fa5-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="95fa5-105">ファイル システムのような項目が含まれている、<xref:System.IO.Packaging.Package>フォルダーとファイルの階層構造で参照されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="95fa5-106"><xref:System.IO.Packaging.Package>自体は抽象クラスで、<xref:System.IO.Packaging.ZipPackage>派生クラスによって既定として使用される、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-107">A <xref:System.IO.Packaging.PackagePart> (「パーツ」) が格納されているオブジェクトを表す抽象クラス、<xref:System.IO.Packaging.Package>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="95fa5-108">A <xref:System.IO.Packaging.PackageRelationship> (「リレーションシップ」)、ソースとの間の関連付けを定義する<xref:System.IO.Packaging.Package>または<xref:System.IO.Packaging.PackagePart>とターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="95fa5-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="95fa5-109">A<xref:System.IO.Packaging.PackageRelationship>それぞれできる 2 つの形式のいずれかの 2 種類のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="95fa5-110">パッケージ レベル リレーションシップを (によって作成された、<xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>メソッド) に関連する<xref:System.IO.Packaging.Package>いずれかに。</span><span class="sxs-lookup"><span data-stu-id="95fa5-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="95fa5-111">パッケージ内のターゲット パーツ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="95fa5-112">パッケージの外部にターゲット リソースです。</span><span class="sxs-lookup"><span data-stu-id="95fa5-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="95fa5-113">パーツ レベル リレーションシップ (によって作成された、<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>メソッド) がソースに関連<xref:System.IO.Packaging.PackagePart>いずれかに。</span><span class="sxs-lookup"><span data-stu-id="95fa5-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="95fa5-114">パッケージ内の別のターゲット パーツ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="95fa5-115">パッケージの外部にターゲット リソースです。</span><span class="sxs-lookup"><span data-stu-id="95fa5-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-116">リレーションシップのソース<xref:System.IO.Packaging.Package>またはソース<xref:System.IO.Packaging.PackagePart>はリレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-117">ソース オブジェクトが削除されると、ソース オブジェクトによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="95fa5-118">作成するか、リレーションシップの削除のプロセスが何らかの方法でソースまたはターゲットのいずれかのオブジェクトを物理的に変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="95fa5-119">A <xref:System.IO.Packaging.PackageDigitalSignature> (「デジタル署名」) は、コンポジションのパーツとリレーションシップに含まれるデジタル署名を表す、<xref:System.IO.Packaging.Package>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="95fa5-120">デジタル署名は、発信元を識別し、署名付きのパーツとリレーションシップに含まれることを検証します、<xref:System.IO.Packaging.Package>が変更されていません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="95fa5-121">パッケージはデジタル著作権管理 (DRM)、コンテンツ要素でもサポート、<xref:System.IO.Packaging.Package>承認されたユーザーに付与される特定のアクセス権を使用して暗号化します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="95fa5-122">に基づいて、 <xref:System.IO.Packaging.Package> 、アーキテクチャ、<xref:System.Windows.Xps.Packaging.XpsDocument>開くに基づいてドキュメントを格納するために設計されています。 パッケージの種類は、 [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="95fa5-123">.NET Framework では、パッケージを使用して、コンテンツ、リソース、およびページおよびドキュメントの標準の ZIP ファイルを使用して既定のリレーションシップを格納します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="95fa5-124">アプリケーションで使用して、ZIP ファイルとして、<xref:System.IO.Packaging>クラスを格納し、必要に応じて任意の 1 つの効率的なアクセス コンテナー内のデータ ファイルの数または種類を保護します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="95fa5-125">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-126">次の例を作成するための基本的な手順を示しています、<xref:System.IO.Packaging.Package>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="95fa5-127">この例では、ドキュメントの一部として表示されるグラフィック イメージと共にドキュメントを格納するパッケージが作成されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="95fa5-128">(これは、HTML ファイルが必要がある場合と同様に、 \<IMG > タグを外部の画像ファイルを参照します)。2 つ<xref:System.IO.Packaging.PackageRelationship>要素がパッケージにも含まれています。</span><span class="sxs-lookup"><span data-stu-id="95fa5-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="95fa5-129">「パッケージ レベル」リレーションシップでは、1 つ目は、パッケージのルート要素としてのドキュメント パーツを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="95fa5-130">2 番目の「パーツ レベル」関係は、文書パーツ (パーツ レベル リレーションシップの「ソース」) とイメージのパーツ (パーツ レベル リレーションシップの「ターゲット」) の間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="95fa5-131">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-131">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">
      <span data-ttu-id="95fa5-132">規則 (OPC) 仕様をパッケージ化を開く</span>
      <span class="sxs-lookup">
        <span data-stu-id="95fa5-132">Open Packaging Conventions (OPC) Specification</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">
      <span data-ttu-id="95fa5-133">Open Packaging Conventions のデジタル署名フレームワーク</span>
      <span class="sxs-lookup">
        <span data-stu-id="95fa5-133">Digital Signing Framework of the Open Packaging Conventions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-134">
            <see cref="T:System.IO.Packaging.Package" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="95fa5-135">パッケージのファイル IO アクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-135">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-136">指定した <see cref="T:System.IO.Packaging.Package" /> を使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-136">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-137"><xref:System.IO.Packaging.Package.%23ctor%2A> 保護されたコンス トラクターは、<xref:System.IO.Packaging.Package>抽象基本クラス。</span><span class="sxs-lookup"><span data-stu-id="95fa5-137"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="95fa5-138">派生クラスで呼び出されると、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターが派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-138">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-139">
            <paramref name="openFileAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-139">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="95fa5-140">パッケージのファイル IO アクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-140">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="95fa5-141">パッケージをストリーミング用に開く場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-141">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-142">指定した <see cref="T:System.IO.Packaging.Package" /> とストリーミング オプションを使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-142">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-143"><xref:System.IO.Packaging.Package.%23ctor%2A> 保護されたコンス トラクターは、<xref:System.IO.Packaging.Package>基本抽象基本クラスを抽象化します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-143"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="95fa5-144">派生クラスで呼び出されると、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターが派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-144">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-145">
            <paramref name="openFileAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-145">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-146">パッケージと、基になるすべてのパーツ ストリームを保存して閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-146">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-147"><xref:System.IO.Packaging.Package>クラス<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>同じ操作を実行-を呼び出す必要はありません<xref:System.IO.Packaging.Package.Dispose%2A>を呼び出す場合<xref:System.IO.Packaging.Package.Close%2A>、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-147">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="95fa5-148"><xref:System.IO.Packaging.Package.Close%2A> <xref:System.IO.Packaging.Package.Dispose%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.Flush%2A>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-148"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95fa5-149">`using`ステートメント (異なる、`using`名前空間ディレクティブ) をお勧め<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>パッケージ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-149">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="95fa5-150">[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)と[読み取るパッケージ サンプル](https://go.microsoft.com/fwlink/?LinkID=160034)閉じてを使用してパッケージを破棄する方法を示して、`using`ステートメント。</span><span class="sxs-lookup"><span data-stu-id="95fa5-150">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-151">新しいパッケージ パーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-151">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-152"><xref:System.IO.Packaging.Package.CreatePart%2A> 空の初期化<xref:System.IO.Stream>の新しい部分。</span><span class="sxs-lookup"><span data-stu-id="95fa5-152"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="95fa5-153"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パーツに関連付けられているストリームのインスタンスへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-153">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="95fa5-154">パッケージ パーツの詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.1 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-154">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-155">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-155">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="95fa5-156">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-156">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-157">
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 派生クラスを内部的に呼び出します<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />部分を実際に作成する方法、派生クラスで実装された物理形式に基づいています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-157">
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-158">新しいパーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-158">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="95fa5-159">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-159">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-160">指定した URI とコンテンツ タイプを使用して、新しい非圧縮のパーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-160">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-161">新規作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-161">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-162"><xref:System.IO.Packaging.Package.CreatePart%2A> 空の初期化<xref:System.IO.Stream>の新しい部分。</span><span class="sxs-lookup"><span data-stu-id="95fa5-162"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="95fa5-163"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パーツに関連付けられているストリームのインスタンスへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-163">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="95fa5-164">部品<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>は<xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-164">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="95fa5-165">パッケージ パーツの追加については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.1 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-165">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-166">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-166">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="95fa5-167">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-167">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-168">
            <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-168">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-169">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-169">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95fa5-170">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-170">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-171">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-171">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-172">パッケージは読み取り専用です (新しいパーツを追加できません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-172">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-173">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 内部的に、派生クラスを呼び出す<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />部分を実際に作成する方法、派生クラスで実装された物理形式に基づいています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-173">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-174">新しいパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-174">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="95fa5-175">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-175">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="95fa5-176">データ ストリームの圧縮オプション。<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> または <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 圧縮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-176">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-177">指定した URI、コンテンツ タイプ、および圧縮オプションを使用して、新しいパーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-177">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-178">新規作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-178">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-179">既定の<xref:System.IO.Packaging.ZipPackage>派生クラスで、<xref:System.IO.Packaging.Package.CreatePart%2A>メソッドのみサポートしている 2 つ`compressionOption`値、<xref:System.IO.Packaging.CompressionOption.NotCompressed>または<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-179">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="95fa5-180">その他の<xref:System.IO.Packaging.CompressionOption>の値<xref:System.IO.Packaging.CompressionOption.Maximum>、 <xref:System.IO.Packaging.CompressionOption.Fast>、または<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-180">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="95fa5-181"><xref:System.IO.Packaging.Package.CreatePart%2A> 空を作成します。<xref:System.IO.Stream>の新しい部分。</span><span class="sxs-lookup"><span data-stu-id="95fa5-181"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="95fa5-182"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パーツに関連付けられているストリームのインスタンスへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-182">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="95fa5-183">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-183">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-184">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-184">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="95fa5-185">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-185">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-186">
            <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-186">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-187">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-187">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95fa5-188">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-188">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-189">
            <paramref name="compressionOption" /> 値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-189">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-190">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-190">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-191">パッケージは読み取り専用です (新しいパーツを追加できません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-191">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-192">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 内部的に、派生クラスを呼び出す<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />部分を実際に作成する方法、派生クラスで実装された物理形式に基づいています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-192">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-193">作成されるパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-193">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="95fa5-194">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-194">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="95fa5-195">データ ストリームの圧縮オプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-195">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-196">派生クラスでオーバーライドされると、新しいパーツをパッケージ内に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-196">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-197">作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-197">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-198">派生<xref:System.IO.Packaging.Package.CreatePartCore%2A>メソッドを呼び出して、<xref:System.IO.Packaging.Package.CreatePart%2A>パーツを作成する方法、派生クラスで実装された物理形式に基づいています。</span><span class="sxs-lookup"><span data-stu-id="95fa5-198">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="95fa5-199">既定で、<xref:System.IO.Packaging.ZipPackage>の抽象クラスの実装を派生<xref:System.IO.Packaging.Package>クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-199">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="95fa5-200">既定の操作で<xref:System.IO.Packaging.Package.CreatePart%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.CreatePartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルに新しいパーツを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="95fa5-200">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="95fa5-201">既定の<xref:System.IO.Packaging.ZipPackage>派生クラスで、<xref:System.IO.Packaging.Package.CreatePartCore%2A>メソッドのみサポートしている 2 つ`compressionOption`値、<xref:System.IO.Packaging.CompressionOption.NotCompressed>または<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-201">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="95fa5-202">その他の<xref:System.IO.Packaging.CompressionOption>の値<xref:System.IO.Packaging.CompressionOption.Maximum>、 <xref:System.IO.Packaging.CompressionOption.Fast>、または<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-202">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="95fa5-203">パッケージ モデルとパッケージ パーツの詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-203">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-204">派生した<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />実装では何も順序またはによって実行される操作について想定しないように注意して、<see cref="Overload:System.IO.Packaging.Package.CreatePart" />メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-204">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-205">指定したパーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-205">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-206">パッケージ レベル リレーションシップでは、パッケージと関連付けられているターゲット パーツまたはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-206">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="95fa5-207">パッケージ レベル リレーションシップには、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-207">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="95fa5-208">間、<xref:System.IO.Packaging.Package>をターゲットに<xref:System.IO.Packaging.PackagePart>パッケージ内で。</span><span class="sxs-lookup"><span data-stu-id="95fa5-208">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="95fa5-209">間、<xref:System.IO.Packaging.Package>パッケージの外部にターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-209">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-210">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-210">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-211">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-211">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="95fa5-212">作成するか、リレーションシップの削除のプロセスは、ターゲット パーツまたは任意の方法でリソースを物理的に変更されません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-212">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="95fa5-213">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-213">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-214">次の例を作成、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルートのドキュメント パーツ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-214">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="95fa5-215">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-215">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="95fa5-216">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-216">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="95fa5-217">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-217">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="95fa5-218">リレーションシップのロールを一意に定義する URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-218">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-219">指定した URI、ターゲット モード、およびリレーションシップ型を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-219">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-220">指定したパーツへのパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-220">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-221">パッケージ レベル リレーションシップでは、パッケージと関連付けられているターゲット パーツまたはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-221">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="95fa5-222">パッケージ レベル リレーションシップには、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-222">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="95fa5-223">間、<xref:System.IO.Packaging.Package>パッケージ内のターゲット パーツにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-223">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="95fa5-224">間、<xref:System.IO.Packaging.Package>パッケージの外部にターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-224">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-225">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-225">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-226">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-226">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="95fa5-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 物理的に変わりませんターゲット パーツまたは任意の方法でリソース。</span><span class="sxs-lookup"><span data-stu-id="95fa5-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="95fa5-228">リレーションシップのターゲットは、別のリレーションシップをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-228">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="95fa5-229">場合`targetMode`として指定されて<xref:System.IO.Packaging.TargetMode.Internal>、`targetUri`に従って構成される相対 URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-230">内部の相対 URI でもかまいませんなどの文字をスラッシュ (「/」) で開始するか、絶対パス"/page1.xaml"または"/images/picture4.jpg"、またはなどの相対パス"../imagespicture1.jpg"パッケージのルートに対して (として「/」)、ベース URI を解決します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-230">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="95fa5-231">場合`targetMode`として指定されて<xref:System.IO.Packaging.TargetMode.External>、`targetUri`か絶対または相対 URI の形式に従い、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-231">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-232">"http://www.microsoft.com/page2.xml"外部ターゲット リソース「page2.xml」を参照する絶対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-232">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="95fa5-233">"images/picture1.jpg"は、外部の対象リソース"1.jpg"解決されますが、パッケージ自体の URI を参照する相対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-233">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="95fa5-234">`relationshipType` 必要があります、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]に従って作成される、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-234">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-235">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="95fa5-235">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="95fa5-236">パッケージ レベル リレーションシップ</span><span class="sxs-lookup"><span data-stu-id="95fa5-236">Package-level Relationship</span></span>|<span data-ttu-id="95fa5-237">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="95fa5-237">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="95fa5-238">コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-238">Core Properties</span></span>|<span data-ttu-id="95fa5-239">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア-プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-239">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="95fa5-240">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-240">Digital Signature</span></span>|<span data-ttu-id="95fa5-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="95fa5-242">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="95fa5-242">Digital Signature Certificate</span></span>|<span data-ttu-id="95fa5-243">http://schemas.openxmlformats.org/package/2006/relationships/digit 証明書の署名/al-</span><span class="sxs-lookup"><span data-stu-id="95fa5-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="95fa5-244">デジタル署名元</span><span class="sxs-lookup"><span data-stu-id="95fa5-244">Digital Signature Origin</span></span>|<span data-ttu-id="95fa5-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/元</span><span class="sxs-lookup"><span data-stu-id="95fa5-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="95fa5-246">サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-246">Thumbnail</span></span>|<span data-ttu-id="95fa5-247">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-247">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="95fa5-248">パッケージとパッケージ リレーションシップの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-248">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-249">次の例は、使用する方法を示しています。<xref:System.IO.Packaging.Package.CreateRelationship%2A>を作成する、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルートのドキュメント パーツ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-249">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="95fa5-250">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-250">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-251">
            <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-251">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-252">
            <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-252">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-253">
            <paramref name="targetMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-253">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-254">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-254">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-255">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-255">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="95fa5-256">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-256">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="95fa5-257">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-257">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="95fa5-258">リレーションシップのロールを一意に定義する URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-258">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="95fa5-259">一意の XML 識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-259">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-260">指定した URI、ターゲット モード、リレーションシップ型、および [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-260">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-261">指定したパーツへのパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-261">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-262">パッケージ レベル リレーションシップでは、パッケージと関連付けられているターゲット パーツまたはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-262">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="95fa5-263">パッケージ レベル リレーションシップには、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-263">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="95fa5-264">間、<xref:System.IO.Packaging.Package>パッケージ内のターゲット パーツにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-264">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="95fa5-265">間、<xref:System.IO.Packaging.Package>パッケージの外部にターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-265">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-266">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-266">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-267">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-267">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="95fa5-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 物理的に変わりませんターゲット パーツまたは任意の方法でリソース。</span><span class="sxs-lookup"><span data-stu-id="95fa5-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="95fa5-269">リレーションシップのターゲットは、別のリレーションシップをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-269">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="95fa5-270">`id` 有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="95fa5-270">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="95fa5-271">`id`型は、XML Schema Part 2 で規定されている名前付け規則に従う必要があります、xsd:ID: datatypes 』 の仕様 (を参照してください[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="95fa5-271">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="95fa5-272">場合`id`として指定されて`null`一意の ID が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-272">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="95fa5-273">`id`空で指定された文字列が無効です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-273">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="95fa5-274">場合`targetMode`として指定されて<xref:System.IO.Packaging.TargetMode.Internal>、`targetUri`に従って構成される相対 URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-275">内部の相対 URI でもかまいませんなどの文字をスラッシュ (「/」) で開始するか、絶対パス"/page1.xaml"または"/images/picture4.jpg"、またはなどの相対パス"../imagespicture1.jpg"パッケージのルートに対して (として「/」)、ベース URI を解決します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-275">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="95fa5-276">場合`targetMode`として指定されて<xref:System.IO.Packaging.TargetMode.External>、`targetUri`か絶対または相対 URI の形式に従い、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-276">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-277">"http://www.microsoft.com/page2.xml"外部ターゲット リソース「page2.xml」を参照する絶対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-277">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="95fa5-278">"images/picture1.jpg"は、外部の対象リソース"1.jpg"解決されますが、パッケージ自体の URI を参照する相対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-278">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="95fa5-279">`relationshipType` に従って形成される URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-279">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-280">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="95fa5-280">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="95fa5-281">パッケージ レベル リレーションシップ</span><span class="sxs-lookup"><span data-stu-id="95fa5-281">Package-level Relationship</span></span>|<span data-ttu-id="95fa5-282">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="95fa5-282">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="95fa5-283">コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-283">Core Properties</span></span>|<span data-ttu-id="95fa5-284">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア-プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-284">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="95fa5-285">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-285">Digital Signature</span></span>|<span data-ttu-id="95fa5-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="95fa5-287">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="95fa5-287">Digital Signature Certificate</span></span>|<span data-ttu-id="95fa5-288">http://schemas.openxmlformats.org/package/2006/relationships/digit 証明書の署名/al-</span><span class="sxs-lookup"><span data-stu-id="95fa5-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="95fa5-289">デジタル署名元</span><span class="sxs-lookup"><span data-stu-id="95fa5-289">Digital Signature Origin</span></span>|<span data-ttu-id="95fa5-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/元</span><span class="sxs-lookup"><span data-stu-id="95fa5-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="95fa5-291">サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-291">Thumbnail</span></span>|<span data-ttu-id="95fa5-292">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-292">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="95fa5-293">パッケージおよびパッケージ リレーションシップの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-293">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-294">次の例は、使用する方法を示しています。<xref:System.IO.Packaging.Package.CreateRelationship%2A>を作成する、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルートのドキュメント パーツ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-294">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="95fa5-295">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-295">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-296">
            <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-296">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-297">
            <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-297">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-298">
            <paramref name="targetMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-298">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-299">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-299">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-300">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-300">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="95fa5-301">
            <paramref name="id" /> が有効な XML 識別子ではないか、指定した <paramref name="id" /> を持つパーツが既にパッケージ内に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-301">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-302">削除するパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-302">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-303">指定した URI を持つパーツをパッケージから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-303">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-304">`partUri` 文字スラッシュ (「/」) で始まる絶対パスで構成される相対 URI である必要があります。</span><span class="sxs-lookup"><span data-stu-id="95fa5-304">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="95fa5-305">絶対パスを選択し、パッケージのルートに対する相対パスですに従って形式が、 [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) の一般的な構文の仕様。</span><span class="sxs-lookup"><span data-stu-id="95fa5-305">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="95fa5-306">"/page1.xaml"と"/images/picture4.jpg"有効なパーツ Uri の例を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-306">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="95fa5-307">場合、指定した部分に例外が発生しなかった`partUri`がパッケージ内にありません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-307">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="95fa5-308">(使用することができます、<xref:System.IO.Packaging.Package.PartExists%2A>メソッドを使用して、指定の一部かどうかを判断する`partUri`パッケージにします)。</span><span class="sxs-lookup"><span data-stu-id="95fa5-308">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="95fa5-309">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-309">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-310">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-310">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-311">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-311">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-312">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-312">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-313">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-313">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-314">
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 内部的に、派生クラスを呼び出す<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実際には、パーツを削除する方法、派生クラスで実装された物理形式に基づいています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-314">
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-315">削除する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-315">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-316">派生クラスでオーバーライドされると、指定した URI を持つパーツを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-316">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-317">既定で、<xref:System.IO.Packaging.ZipPackage>の抽象クラスの実装を派生<xref:System.IO.Packaging.Package>クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-317">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="95fa5-318">既定の操作で<xref:System.IO.Packaging.Package.DeletePart%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.DeletePartCore%2A>の<xref:System.IO.Packaging.ZipPackage>を実際に実行するクラスが派生クラスで実装された物理形式に基づいて操作を削除します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-318">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="95fa5-319">パッケージ モデルとパッケージ パーツの詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-319">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-320">派生クラス<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実装を呼び出して、<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />派生クラスで実装された物理形式に基づいて、指定したパーツへのメソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-320">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="95fa5-321">派生した<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実装では何も順序またはによって実行される操作について想定しないように注意して、<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-321">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="95fa5-322">削除する <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-322">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-323">パッケージ レベル リレーションシップを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-323">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-324">パッケージ レベル リレーションシップでは、パッケージと関連付けられているターゲット パーツまたはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-324">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="95fa5-325">パッケージ レベル リレーションシップには、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-325">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="95fa5-326">間、<xref:System.IO.Packaging.Package>パッケージ内のターゲット パーツにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-326">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="95fa5-327">間、<xref:System.IO.Packaging.Package>パッケージの外部にターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-327">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-328">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-328">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-329">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-329">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="95fa5-330">指定したリレーションシップの場合に例外が発生しなかった`id`がパッケージ内にありません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-330">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="95fa5-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 任意の方法で、ターゲット パーツを物理的に変更しません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="95fa5-332">パッケージのリレーションシップの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-332">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-333">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-333">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-334">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-334">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-335">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-335">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="95fa5-336">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-336">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="95fa5-337">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-337">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-338">すべてのパーツおよびリレーションシップの内容をフラッシュして保存し、パッケージを閉じ、すべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-338">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-339">すべての変更を保存正常かどうかを確認する<xref:System.IO.Packaging.Package.Dispose%2A>も終了し、フラッシュ、し、すべてのパーツとリレーションシップに含まれるパッケージを閉じます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-339">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="95fa5-340"><xref:System.IO.Packaging.Package>クラス、<xref:System.IO.Packaging.Package.Dispose%2A>と<xref:System.IO.Packaging.Package.Close%2A>同じ操作を実行 - を呼び出す必要はありません<xref:System.IO.Packaging.Package.Dispose%2A>を呼び出す場合<xref:System.IO.Packaging.Package.Close%2A>、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-340">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="95fa5-341"><xref:System.IO.Packaging.Package.Close%2A> <xref:System.IO.Packaging.Package.Dispose%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.Flush%2A>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-341"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="95fa5-342">割り当てし、非メモリ リソースを管理する派生クラスは、リソースを解放するには、このメソッドをオーバーライドする必要がありますと<xref:System.IO.Packaging.Package.Dispose%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-342">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="95fa5-343">派生クラスのオーバーライドを呼び出す必要もあります<xref:System.IO.Packaging.Package.Flush%2A>基底クラスと<xref:System.IO.Packaging.Package.Dispose%2A>基底クラスがクリーンアップされ、常に実行されているかどうかを確認するメソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-343">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95fa5-344">`using`ステートメント (異なる、`using`名前空間ディレクティブ) をお勧め<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>パッケージ。</span><span class="sxs-lookup"><span data-stu-id="95fa5-344">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="95fa5-345">[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)閉じてを使用してパッケージを破棄する方法を示しています、`using`ステートメント。</span><span class="sxs-lookup"><span data-stu-id="95fa5-345">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-346">パッケージのファイル アクセス設定を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-346">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fa5-347">
            <see cref="T:System.IO.FileAccess" /> 値、つまり <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、または <see cref="F:System.IO.FileAccess.ReadWrite" /> の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-347">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-348"><xref:System.IO.Packaging.Package.FileOpenAccess%2A>プロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-348">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="95fa5-349">ファイル アクセス設定がで指定された、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターを呼び出して、新しいパッケージを作成するとき、または、<xref:System.IO.Packaging.Package.Open%2A>既存のパッケージを開くときに呼び出します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-349">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-350">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-350">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-351">パッケージに含まれているすべてのパーツおよびリレーションシップの内容を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-351">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-352"><xref:System.IO.Packaging.Package.Flush%2A> 内部的に、派生クラスを呼び出す<xref:System.IO.Packaging.Package.FlushCore%2A>実際の形式に固有のフラッシュ操作を実行する実装。</span><span class="sxs-lookup"><span data-stu-id="95fa5-352"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="95fa5-353">派生クラスの<xref:System.IO.Packaging.Package.FlushCore%2A>メソッドが実際にパーツとリレーションシップのコンテンツを保存する特定の物理的な派生クラスの実装に責任を負います。</span><span class="sxs-lookup"><span data-stu-id="95fa5-353">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="95fa5-354">既定で、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-354">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="95fa5-355">既定の操作で<xref:System.IO.Packaging.Package.Flush%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.FlushCore%2A>を ZIP ファイルのパッケージのパーツとリレーションシップを保存します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-355">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="95fa5-356"><xref:System.IO.Packaging.Package.Flush%2A> によって自動的に呼び出されますが、<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-356"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="95fa5-357">ときに<xref:System.IO.Packaging.Package.Close%2A>または<xref:System.IO.Packaging.Package.Dispose%2A>呼びますを呼び出す必要はありません<xref:System.IO.Packaging.Package.Flush%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-357">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-358">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-358">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-359">パッケージは読み取り専用であり、変更することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-359">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-360">
              <see cref="M:System.IO.Packaging.Package.Flush" /> 内部的に、派生クラスを呼び出す<see cref="M:System.IO.Packaging.Package.FlushCore" />派生クラスで実装された物理形式に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-360">
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-361">派生クラスでオーバーライドされると、すべてのパーツとリレーションシップの内容を派生クラス ストアに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-361">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-362"><xref:System.IO.Packaging.Package.FlushCore%2A> によって呼び出される、<xref:System.IO.Packaging.Package.Flush%2A>実際のフラッシュ操作を実行する方法、派生クラスで実装された物理形式に基づいています。</span><span class="sxs-lookup"><span data-stu-id="95fa5-362"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-363">派生した<see cref="M:System.IO.Packaging.Package.FlushCore" />実装では、注文またはによって実行される操作を想定しないで、<see cref="M:System.IO.Packaging.Package.Flush" />メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-363">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-364">返すパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-364">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-365">指定した URI を持つパーツを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-365">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-366">指定した <paramref name="partUri" /> を持つパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-366">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-367"><xref:System.InvalidOperationException>場合、指定した部分にスローされる`partUri`存在しません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-367">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="95fa5-368"><xref:System.IO.Packaging.Package.PartExists%2A>メソッドの使用を確認できるかどうか`partUri`の既存のパーツを参照します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-368">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="95fa5-369">既定で、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-369">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="95fa5-370">既定の操作で<xref:System.IO.Packaging.Package.GetPart%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>クラスを ZIP ファイルから要求された部分を返します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-370">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="95fa5-371">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-371">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-372">次の例では、検索、取得、およびパッケージに含まれる部分を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-372">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="95fa5-373">サンプル全体については、次を参照してください。[読み取るパッケージ サンプル](https://go.microsoft.com/fwlink/?LinkID=160034)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-373">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-374">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-374">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-375">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-375">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95fa5-376">指定した <paramref name="partUri" /> を持つパーツが、パッケージ内に存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-376">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-377">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-377">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-378">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-378">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-379">
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 派生クラスを内部的に呼び出します<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />派生クラスで実装された物理形式に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-379">
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-380">取得するパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-380">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-381">派生クラスでオーバーライドされると、指定した URI によってアドレス指定されるパーツを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-381">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-382">要求されたパーツ。指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-382">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-383">既定で、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-383">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="95fa5-384">既定の操作で<xref:System.IO.Packaging.Package.GetPart%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルから一部を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="95fa5-384">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="95fa5-385">パッケージ モデルとパッケージ パーツの詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-385">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-386">派生クラス<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装を呼び出して、<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />にアクセスして、指定の一部を返したりするメソッドが派生クラスで実装された物理形式に基づきます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-386">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="95fa5-387">派生した<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装では何も順序またはによって実行される操作について想定しないように注意して、<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-387">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-388">パッケージに含まれているすべてのパーツのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-388">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-389">パッケージに含まれているすべての <see cref="T:System.IO.Packaging.PackagePart" /> 要素のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-389">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-390"><xref:System.IO.Packaging.Package.GetParts%2A> など、パッケージ内に含まれるすべての部分のコレクションを返します<xref:System.IO.Packaging.PackageRelationship>部分。</span><span class="sxs-lookup"><span data-stu-id="95fa5-390"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="95fa5-391"><xref:System.IO.Packaging.Package.GetParts%2A> 返すことは`null`。 ただし、パッケージにパーツが含まれていない場合は、返されるコレクションに要素がゼロが格納されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-391"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="95fa5-392">既定で、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-392">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="95fa5-393">既定の操作で<xref:System.IO.Packaging.Package.GetParts%2A>呼び出し、<xref:System.IO.Packaging.Package.GetPartsCore%2A>のメソッド、<xref:System.IO.Packaging.ZipPackage>クラスを ZIP ファイルから部分を返します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-393">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="95fa5-394">パッケージとパッケージ パーツの詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.1 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-394">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-395">次の例は、使用する方法を示します、<xref:System.IO.Packaging.Package.GetParts%2A>に含まれるパーツのコレクションを取得するメソッド、<xref:System.IO.Packaging.Package>します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-395">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="95fa5-396">完全なプログラムのソース コードを参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](https://go.microsoft.com/fwlink/?LinkID=159966)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-396">For the complete program source code, see [Creating a Package with a Digital Signature Sample](https://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-397">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-397">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-398">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-398">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-399">
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 派生クラスを内部的に呼び出します<see cref="M:System.IO.Packaging.Package.GetPartsCore" />派生クラスで実装された物理形式に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-399">
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-400">派生クラスでオーバーライドされると、パッケージ内のすべてのパーツの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-400">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-401">パッケージに含まれるすべてのパーツの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-401">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-402">派生クラス<xref:System.IO.Packaging.Package.GetPartsCore%2A>実装を呼び出して、<xref:System.IO.Packaging.Package.GetParts%2A>へのアクセスを構成要素の配列を返すメソッドが派生クラスで実装された物理形式に基づきます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-402">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="95fa5-403">既定で、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>クラスが提供され、使用します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-403">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="95fa5-404">既定の操作で<xref:System.IO.Packaging.Package.GetParts%2A>内部的に呼び出します<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルから部分を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="95fa5-404">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="95fa5-405">パッケージ モデルとパッケージ パーツの詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-405">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95fa5-406">派生した<see cref="M:System.IO.Packaging.Package.GetPartsCore" />実装では何も順序またはによって実行される操作について想定しないように注意して、<see cref="M:System.IO.Packaging.Package.GetParts" />メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95fa5-406">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="95fa5-407">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-407">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-408">指定した ID を持つパッケージ レベル リレーションシップを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-408">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-409">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-409">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-410">`id` 有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="95fa5-410">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="95fa5-411">`id`型は、XML Schema Part 2 で規定されている名前付け規則に従う必要があります、xsd:ID: datatypes 』 の仕様 (を参照してください[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="95fa5-411">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="95fa5-412">パッケージおよびパッケージ リレーションシップの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-412">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-413">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-413">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="95fa5-414">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-414">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95fa5-415">指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-415">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-416">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-416">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-417">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-417">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-418">すべてのパッケージ レベル リレーションシップのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-418">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-419">パッケージに含まれているすべてのパッケージ レベル リレーションシップのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-419">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> 返すことは`null`がパッケージにパッケージ レベル リレーションシップが含まれていない場合、返されるコレクションは 0 個の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="95fa5-421">パッケージ レベル リレーションシップでは、パッケージと関連付けられているターゲット パーツまたはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-421">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="95fa5-422">パッケージ レベル リレーションシップには、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-422">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="95fa5-423">間、<xref:System.IO.Packaging.Package>パッケージ内のターゲット パーツにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-423">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="95fa5-424">間、<xref:System.IO.Packaging.Package>パッケージの外部にターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-424">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="95fa5-425">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-425">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="95fa5-426">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="95fa5-426">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="95fa5-427">作成するか、リレーションシップの削除のプロセスは、ターゲット パーツまたは任意の方法でリソースを物理的に変更されません。</span><span class="sxs-lookup"><span data-stu-id="95fa5-427">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="95fa5-428">パッケージおよびパッケージ リレーションシップの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-428">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-429">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-429">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-430">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-430">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="95fa5-431">コレクションで照合を行い、結果を返す <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-431">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-432">指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するすべてのパッケージ レベル リレーションシップのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-432">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-433">指定した <paramref name="relationshipType" /> に一致するパッケージ レベル リレーションシップのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-433">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> 返すことは`null`、指定された一致するパッケージ レベル リレーションシップがない場合、返されるコレクションは 0 個の要素を含めることができますが`relationshipType`します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="95fa5-435">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="95fa5-435">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="95fa5-436">パッケージ レベル リレーションシップ</span><span class="sxs-lookup"><span data-stu-id="95fa5-436">Package-level Relationship</span></span>|<span data-ttu-id="95fa5-437">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="95fa5-437">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="95fa5-438">コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-438">Core Properties</span></span>|<span data-ttu-id="95fa5-439">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア-プロパティ</span><span class="sxs-lookup"><span data-stu-id="95fa5-439">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="95fa5-440">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-440">Digital Signature</span></span>|<span data-ttu-id="95fa5-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/署名</span><span class="sxs-lookup"><span data-stu-id="95fa5-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="95fa5-442">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="95fa5-442">Digital Signature Certificate</span></span>|<span data-ttu-id="95fa5-443">http://schemas.openxmlformats.org/package/2006/relationships/digit 証明書の署名/al-</span><span class="sxs-lookup"><span data-stu-id="95fa5-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="95fa5-444">デジタル署名元</span><span class="sxs-lookup"><span data-stu-id="95fa5-444">Digital Signature Origin</span></span>|<span data-ttu-id="95fa5-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al-署名/元</span><span class="sxs-lookup"><span data-stu-id="95fa5-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="95fa5-446">サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-446">Thumbnail</span></span>|<span data-ttu-id="95fa5-447">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/サムネイル</span><span class="sxs-lookup"><span data-stu-id="95fa5-447">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="95fa5-448">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-448">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-449">次の例では、パッケージに定義されているリレーションシップを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-449">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="95fa5-450">サンプル全体については、次を参照してください。[読み取るパッケージ サンプル](https://go.microsoft.com/fwlink/?LinkID=160034)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-450">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-451">
            <paramref name="relationshipType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-451">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-452">
            <paramref name="relationshipType" /> が空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-452">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-453">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-453">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-454">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-454">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-455">パッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-455">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-456"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-456"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-457">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-457">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-458">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-458">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="95fa5-459">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-459">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="95fa5-460">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-460">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-461">指定した IO ストリームでパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-461">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-462">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-462">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-463"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-463"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-464">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-464">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-465">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-465">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-466">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-466">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="95fa5-467">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-467">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-468">指定したパスとファイル名でパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-468">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-469">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-469">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-470"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-470"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-471">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドが既定の属性を持つパッケージを開いた<xref:System.IO.FileMode.OpenOrCreate>、 <xref:System.IO.FileAccess.ReadWrite>、および<xref:System.IO.FileShare.None>(をさまざまな属性を使用して、その他の Open メソッドのオーバー ロードのいずれかを指定)。</span><span class="sxs-lookup"><span data-stu-id="95fa5-471">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="95fa5-472">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-472">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-473">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-473">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="95fa5-474">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-474">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-475">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-475">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="95fa5-476">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-476">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="95fa5-477">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-477">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-478">指定した IO ストリームとファイル モードでパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-478">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-479">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-479">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-480"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-480"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-481">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-481">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-482">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-482">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-483">
            <paramref name="packageMode" /> の値が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-483">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-484">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-484">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="95fa5-485">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-485">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="95fa5-486">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-486">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-487">指定したファイル モードを使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-487">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-488">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-488">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-489"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-489"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-490">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドが既定の属性を持つパッケージを開いた<xref:System.IO.FileAccess.ReadWrite>と<xref:System.IO.FileShare.None>(をさまざまな属性を使用して、その他の Open メソッドのオーバー ロードのいずれかを指定)。</span><span class="sxs-lookup"><span data-stu-id="95fa5-490">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="95fa5-491">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-491">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-492">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-492">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="95fa5-493">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-493">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-494">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-494">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-495">
            <paramref name="packageMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-495">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="95fa5-496">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-496">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="95fa5-497">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-497">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="95fa5-498">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-498">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-499">指定した IO ストリーム、ファイル モード、およびファイル アクセス設定でパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-499">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-500">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-500">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-501"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-501"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-502">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-502">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-503">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-503">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-504">
            <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-504">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-505">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-505">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="95fa5-506">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-506">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="95fa5-507">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-507">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="95fa5-508">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-508">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-509">指定したファイル モードとファイル アクセス設定を使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-509">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-510">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-510">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-511"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-511"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-512">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドが、既定値は、パッケージを開いた<xref:System.IO.FileShare.None>属性 (別の属性の使用を指定する、<xref:System.IO.Packaging.Package.Open%2A>メソッドのオーバー ロード)。</span><span class="sxs-lookup"><span data-stu-id="95fa5-512">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="95fa5-513">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-513">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-514">次の例を開いて読み取る方法を示しています、<xref:System.IO.Packaging.Package>を格納している<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-514">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="95fa5-515">サンプル全体については、次を参照してください。[読み取るパッケージ サンプル](https://go.microsoft.com/fwlink/?LinkID=160034)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-515">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-516">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-516">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-517">
            <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-517">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="95fa5-518">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-518">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="95fa5-519">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-519">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="95fa5-520">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-520">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="95fa5-521">パッケージを開くときのファイル共有モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-521">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-522">指定したファイル モード、ファイル アクセス、およびファイル共有設定を使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-522">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-523">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-523">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-524"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="95fa5-524"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="95fa5-525">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-525">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fa5-526">次の例は、新たに作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="95fa5-526">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="95fa5-527">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](https://go.microsoft.com/fwlink/?LinkID=160055)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-527">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-528">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-528">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fa5-529">
            <paramref name="packageMode" />、<paramref name="packageAccess" />、または <paramref name="packageShare" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-529">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-530">パッケージのコア プロパティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-530">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fa5-531">パッケージのコア プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-531">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-532">コア パッケージ プロパティの詳細については、あるダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 3.1 を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-532">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-533">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-533">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="95fa5-534">チェックするパーツの <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-534">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-535">指定した URI を持つパーツがパッケージ内に存在するかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-535">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-536">指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-536">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-537">`partUri`スラッシュで始まる必要があります「/」は、パッケージのルートから絶対とします。</span><span class="sxs-lookup"><span data-stu-id="95fa5-537">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="95fa5-538">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-538">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-539">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-539">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fa5-540">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-540">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-541">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-541">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-542">パッケージは書き込み専用です (情報を読み取ることはできません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-542">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="95fa5-543">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-543">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fa5-544">指定した ID を持つパッケージ レベル リレーションシップがパッケージに含まれているかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-544">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fa5-545">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-545">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fa5-546">詳細については、ダウンロードできる、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255)します。</span><span class="sxs-lookup"><span data-stu-id="95fa5-546">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fa5-547">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-547">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="95fa5-548">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-548">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95fa5-549">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-549">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95fa5-550">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-550">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fa5-551">このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。アプリケーションで使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-551">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="95fa5-552">代わりに、タイプ セーフな <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> メソッドを使用してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fa5-552">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>