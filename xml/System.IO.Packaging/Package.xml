<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db72d34b5a4c159399029932c6bc75949e8c9313" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70590163" /></Metadata><TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="44f64-101">複数のデータ オブジェクトを格納できるコンテナーを表します。</span><span class="sxs-lookup"><span data-stu-id="44f64-101">Represents a container that can store multiple data objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-102"><xref:System.IO.Packaging.Package>は、移植性と効率的なアクセスのために定義された物理形式の1つのエンティティにオブジェクトを編成するために使用できる抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="44f64-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="44f64-103">ZIP ファイルは、 <xref:System.IO.Packaging.Package>のプライマリ物理形式です。</span><span class="sxs-lookup"><span data-stu-id="44f64-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="44f64-104">その<xref:System.IO.Packaging.Package>他の実装では、XML ドキュメント、データベース、Web サービスなどの物理形式を使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="44f64-105">ファイルシステムと同様に、 <xref:System.IO.Packaging.Package>に含まれる項目は、フォルダーおよびファイルの階層構造で参照されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="44f64-106">それ自体は抽象クラスですが<xref:System.IO.Packaging.ZipPackage> 、派生クラスは<xref:System.IO.Packaging.Package.Open%2A>メソッドによって既定値として使用されます。 <xref:System.IO.Packaging.Package></span><span class="sxs-lookup"><span data-stu-id="44f64-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-107">("Part") は、 <xref:System.IO.Packaging.Package>に格納されているオブジェクトを表す抽象クラスです。 <xref:System.IO.Packaging.PackagePart></span><span class="sxs-lookup"><span data-stu-id="44f64-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="44f64-108">( <xref:System.IO.Packaging.PackageRelationship> "Relationship") は、 <xref:System.IO.Packaging.PackagePart>ソース<xref:System.IO.Packaging.Package>オブジェクトとターゲットオブジェクトの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="44f64-109">は<xref:System.IO.Packaging.PackageRelationship> 、次の2つのいずれかの型にすることができます。</span><span class="sxs-lookup"><span data-stu-id="44f64-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="44f64-110">パッケージレベルのリレーションシップ ( <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>メソッドによって作成される) は、次の<xref:System.IO.Packaging.Package>いずれかに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="44f64-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="44f64-111">パッケージ内のターゲットパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="44f64-112">パッケージの外部のターゲットリソース。</span><span class="sxs-lookup"><span data-stu-id="44f64-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="44f64-113">( <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>メソッドによって作成された) パーツレベルリレーションシップは<xref:System.IO.Packaging.PackagePart> 、ソースを次のいずれかに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="44f64-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="44f64-114">パッケージ内の別のターゲットパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="44f64-115">パッケージの外部のターゲットリソース。</span><span class="sxs-lookup"><span data-stu-id="44f64-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-116">リレーションシップのソース<xref:System.IO.Packaging.Package>またはソース<xref:System.IO.Packaging.PackagePart>は、リレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-117">ソースオブジェクトが削除されると、ソースオブジェクトが所有するすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="44f64-118">リレーションシップを作成または削除するプロセスでは、ソースオブジェクトまたはターゲットオブジェクトのいずれも物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="44f64-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("デジタル署名") は、 <xref:System.IO.Packaging.Package>に含まれるデジタル署名を表すパーツおよびリレーションシップの構成です。</span><span class="sxs-lookup"><span data-stu-id="44f64-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="44f64-120">デジタル署名は、発信者を識別し、に<xref:System.IO.Packaging.Package>含まれている署名済みのパーツおよびリレーションシップが変更されていないことを検証します。</span><span class="sxs-lookup"><span data-stu-id="44f64-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="44f64-121">パッケージは、デジタル Rights Management (DRM) もサポートしており、 <xref:System.IO.Packaging.Package>承認されたユーザーに付与された特定のアクセス権を使用して内のコンテンツ要素を暗号化することができます。</span><span class="sxs-lookup"><span data-stu-id="44f64-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="44f64-122"><xref:System.IO.Packaging.Package>アーキテクチャに基づいて<xref:System.Windows.Xps.Packaging.XpsDocument> 、は open [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761)に基づくドキュメントを格納するために設計されたパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="44f64-123">この .NET Framework は、既定では、標準の ZIP ファイルを使用して、ページとドキュメントのコンテンツ、リソース、および関係を格納するためにパッケージを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f64-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="44f64-124">すべての ZIP ファイルと同様に、アプリケーションは<xref:System.IO.Packaging>クラスを使用して、1つの効率的なコンテナー内の任意の型または数のデータファイルを格納し、必要に応じて保護することができます。</span><span class="sxs-lookup"><span data-stu-id="44f64-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="44f64-125">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-126">次の例は、を<xref:System.IO.Packaging.Package>作成するための基本的な手順を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="44f64-127">この例では、ドキュメントの一部として表示されるグラフィックイメージと共に、ドキュメントを含むパッケージが作成されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="44f64-128">(これは、外部イメージファイルを参照する\<IMG > タグが HTML ファイルに含まれている場合と似ています)。 パッケージ<xref:System.IO.Packaging.PackageRelationship>には、2つの要素も含まれています。</span><span class="sxs-lookup"><span data-stu-id="44f64-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="44f64-129">1つ目の "パッケージレベル" リレーションシップは、ドキュメントパーツをパッケージのルート要素として定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="44f64-130">2つ目の "パーツレベル" リレーションシップは、ドキュメントパーツ (パーツレベルリレーションシップの "ソース") とイメージパーツ (パーツレベルリレーションシップの "ターゲット") の間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="44f64-131">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-131">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255"><span data-ttu-id="44f64-132">Open パッケージング規則 (OPC) の仕様</span><span class="sxs-lookup"><span data-stu-id="44f64-132">Open Packaging Conventions (OPC) Specification</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494"><span data-ttu-id="44f64-133">オープンパッケージング規則のデジタル署名フレームワーク</span><span class="sxs-lookup"><span data-stu-id="44f64-133">Digital Signing Framework of the Open Packaging Conventions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44f64-134"><see cref="T:System.IO.Packaging.Package" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess"><span data-ttu-id="44f64-135">パッケージのファイル IO アクセス許可。</span><span class="sxs-lookup"><span data-stu-id="44f64-135">The file IO permissions for the package.</span></span></param>
        <summary><span data-ttu-id="44f64-136">指定した <see cref="T:System.IO.Packaging.Package" /> を使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-136">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-137"><xref:System.IO.Packaging.Package.%23ctor%2A>は、 <xref:System.IO.Packaging.Package>抽象基本クラスのプロテクトコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="44f64-137"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="44f64-138">派生クラスで呼び出されると、コンストラクター <xref:System.IO.Packaging.Package.%23ctor%2A>は派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-138">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-139"><paramref name="openFileAccess" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-139">The value for <paramref name="openFileAccess" /> is not valid.</span></span></exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="streaming" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="openFileAccess"><span data-ttu-id="44f64-140">パッケージのファイル IO アクセス許可。</span><span class="sxs-lookup"><span data-stu-id="44f64-140">The file IO permissions for the package.</span></span></param>
        <param name="streaming"><span data-ttu-id="44f64-141">パッケージをストリーミング用に開く場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-141"><see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="44f64-142">指定した <see cref="T:System.IO.Packaging.Package" /> とストリーミング オプションを使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-142">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-143"><xref:System.IO.Packaging.Package.%23ctor%2A>は、 <xref:System.IO.Packaging.Package>抽象基本の抽象基本クラスのプロテクトコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="44f64-143"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="44f64-144">派生クラスで呼び出されると、コンストラクター <xref:System.IO.Packaging.Package.%23ctor%2A>は派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-144">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-145"><paramref name="openFileAccess" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-145">The value for <paramref name="openFileAccess" /> is not valid.</span></span></exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-146">パッケージと、基になるすべてのパーツ ストリームを保存して閉じます。</span><span class="sxs-lookup"><span data-stu-id="44f64-146">Saves and closes the package plus all underlying part streams.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-147"><xref:System.IO.Packaging.Package.Close%2A> <xref:System.IO.Packaging.Package.Dispose%2A> <xref:System.IO.Packaging.Package.Dispose%2A>クラスに対して同じ操作を実行します。を呼び出した場合、またはその逆の場合は、を呼び出す必要はありません。 <xref:System.IO.Packaging.Package.Close%2A> <xref:System.IO.Packaging.Package></span><span class="sxs-lookup"><span data-stu-id="44f64-147">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="44f64-148"><xref:System.IO.Packaging.Package.Close%2A>および<xref:System.IO.Packaging.Package.Dispose%2A>は、 <xref:System.IO.Packaging.Package.Flush%2A>内部でを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f64-148"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44f64-149">および`using`  `using` パッケージには <xref:System.IO.Packaging.Package.Close%2A>  、ステートメント (名前空間ディレクティブとは異なります) をお勧めします。 <xref:System.IO.Packaging.Package.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="44f64-149">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="44f64-150">パッケージ[サンプルの作成](https://go.microsoft.com/fwlink/?LinkID=160055)と[パッケージの読み取りサンプル](https://go.microsoft.com/fwlink/?LinkID=160034)は、 `using`ステートメントを使用してパッケージを終了および破棄する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-150">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44f64-151">新しいパッケージ パーツを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-151">Creates a new package part.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-152"><xref:System.IO.Packaging.Package.CreatePart%2A>新しいパーツの<xref:System.IO.Stream>空のを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-152"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="44f64-153"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パートに関連付けられているストリームインスタンスへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-153">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="44f64-154">パッケージパーツの詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.1 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-154">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-155">次の例は、新しい<xref:System.IO.Packaging.PackagePart>を作成し、その部分にデータを格納する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-155">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="44f64-156">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-156">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-157">
            <see cref="Overload:System.IO.Packaging.Package.CreatePart" />は、派生クラスに<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />実装された物理形式に基づいて実際にパートを作成するために、派生クラスのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f64-157">
            <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-158">新しいパーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-158">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span></span></param>
        <param name="contentType"><span data-ttu-id="44f64-159">データ ストリームのコンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="44f64-159">The content type of the data stream.</span></span></param>
        <summary><span data-ttu-id="44f64-160">指定した URI とコンテンツ タイプを使用して、新しい非圧縮のパーツを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-160">Creates a new uncompressed part with a given URI and content type.</span></span></summary>
        <returns><span data-ttu-id="44f64-161">新規作成されたパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-161">The new created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-162"><xref:System.IO.Packaging.Package.CreatePart%2A>新しいパーツの<xref:System.IO.Stream>空のを初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f64-162"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="44f64-163"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パートに関連付けられているストリームインスタンスへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-163">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="44f64-164">部分<xref:System.IO.Packaging.PackagePart.CompressionOption%2A> は <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-164">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="44f64-165">パッケージパーツの詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様のセクション1.1 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-165">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-166">次の例は、新しい<xref:System.IO.Packaging.PackagePart>を作成し、その部分にデータを格納する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-166">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="44f64-167">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-167">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-168"><paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-168"><paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-169"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-169"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44f64-170">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span><span class="sxs-lookup"><span data-stu-id="44f64-170">A part with the specified <paramref name="partUri" /> is already present in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-171">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-171">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-172">パッケージは読み取り専用です (新しいパーツを追加できません)。</span><span class="sxs-lookup"><span data-stu-id="44f64-172">The package is read-only (a new part cannot be added).</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-173">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />は、派生クラスに実装<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />されている物理形式に基づいて実際にパートを作成するために、派生クラスのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f64-173">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-174">新しいパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-174">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span></span></param>
        <param name="contentType"><span data-ttu-id="44f64-175">データ ストリームのコンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="44f64-175">The content type of the data stream.</span></span></param>
        <param name="compressionOption"><span data-ttu-id="44f64-176">データ ストリームの圧縮オプション。<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> または <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 圧縮。</span><span class="sxs-lookup"><span data-stu-id="44f64-176">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span></span></param>
        <summary><span data-ttu-id="44f64-177">指定した URI、コンテンツ タイプ、および圧縮オプションを使用して、新しいパーツを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-177">Creates a new part with a given URI, content type, and compression option.</span></span></summary>
        <returns><span data-ttu-id="44f64-178">新規作成されたパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-178">The new created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-179">既定<xref:System.IO.Packaging.ZipPackage>の派生クラスでは、 <xref:System.IO.Packaging.Package.CreatePart%2A>メソッドは2つ`compressionOption`の値<xref:System.IO.Packaging.CompressionOption.NotCompressed> ( <xref:System.IO.Packaging.CompressionOption.Normal>圧縮) のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="44f64-179">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="44f64-180">、 <xref:System.IO.Packaging.CompressionOption> <xref:System.IO.Packaging.CompressionOption.Maximum> <xref:System.IO.Packaging.CompressionOption.SuperFast> 、またはのその他<xref:System.IO.Packaging.CompressionOption.Normal>の値は圧縮を使用します。 <xref:System.IO.Packaging.CompressionOption.Fast></span><span class="sxs-lookup"><span data-stu-id="44f64-180">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="44f64-181"><xref:System.IO.Packaging.Package.CreatePart%2A>新しいパーツに<xref:System.IO.Stream>空のを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-181"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="44f64-182"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>メソッドを使用して、パートに関連付けられているストリームインスタンスへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-182">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="44f64-183">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-183">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-184">次の例は、新しい<xref:System.IO.Packaging.PackagePart>を作成し、その部分にデータを格納する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-184">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="44f64-185">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-185">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-186"><paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-186"><paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-187"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-187"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44f64-188">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span><span class="sxs-lookup"><span data-stu-id="44f64-188">A part with the specified <paramref name="partUri" /> is already present in the package.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-189"><paramref name="compressionOption" /> 値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-189">The <paramref name="compressionOption" /> value is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-190">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-190">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-191">パッケージは読み取り専用です (新しいパーツを追加できません)。</span><span class="sxs-lookup"><span data-stu-id="44f64-191">The package is read-only (a new part cannot be added).</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-192">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />は、派生クラスに実装<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />されている物理形式に基づいて実際にパートを作成するために、派生クラスのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f64-192">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-193">作成されるパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-193">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span></span></param>
        <param name="contentType"><span data-ttu-id="44f64-194">データ ストリームのコンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="44f64-194">The content type of the data stream.</span></span></param>
        <param name="compressionOption"><span data-ttu-id="44f64-195">データ ストリームの圧縮オプション。</span><span class="sxs-lookup"><span data-stu-id="44f64-195">The compression option for the data stream.</span></span></param>
        <summary><span data-ttu-id="44f64-196">派生クラスでオーバーライドされると、新しいパーツをパッケージ内に作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-196">When overridden in a derived class, creates a new part in the package.</span></span></summary>
        <returns><span data-ttu-id="44f64-197">作成されたパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-197">The created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-198">派生メソッドは、派生クラスで<xref:System.IO.Packaging.Package.CreatePart%2A>実装された物理形式に基づいてパーツを作成するために、メソッドによって呼び出されます。 <xref:System.IO.Packaging.Package.CreatePartCore%2A></span><span class="sxs-lookup"><span data-stu-id="44f64-198">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="44f64-199">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>クラスの派生クラスの実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-199">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="44f64-200">既定の操作では<xref:System.IO.Packaging.Package.CreatePart%2A> 、 <xref:System.IO.Packaging.ZipPackage>クラス<xref:System.IO.Packaging.Package.CreatePartCore%2A>の内部的にを呼び出して、ZIP ファイルに新しい部分を作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-200">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="44f64-201">既定<xref:System.IO.Packaging.ZipPackage>の派生クラスでは、 <xref:System.IO.Packaging.Package.CreatePartCore%2A>メソッドは2つ`compressionOption`の値<xref:System.IO.Packaging.CompressionOption.NotCompressed> ( <xref:System.IO.Packaging.CompressionOption.Normal>圧縮) のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="44f64-201">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="44f64-202">、 <xref:System.IO.Packaging.CompressionOption> <xref:System.IO.Packaging.CompressionOption.Maximum> <xref:System.IO.Packaging.CompressionOption.SuperFast> 、またはのその他<xref:System.IO.Packaging.CompressionOption.Normal>の値は圧縮を使用します。 <xref:System.IO.Packaging.CompressionOption.Fast></span><span class="sxs-lookup"><span data-stu-id="44f64-202">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="44f64-203">パッケージモデルとパッケージパーツの詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様の第1章を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-203">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-204">派生<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />実装では、それを呼び出す<see cref="Overload:System.IO.Packaging.Package.CreatePart" />メソッドによって実行される順序や操作についての仮定を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-204">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44f64-205">指定したパーツへのパッケージ レベル リレーションシップを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-205">Creates a package-level relationship to a given part.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-206">パッケージレベルのリレーションシップは、パッケージと、関連付けられているターゲットパーツまたはリソースとの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-206">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="44f64-207">パッケージレベルのリレーションシップには、2つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-207">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="44f64-208">からパッケージ内のターゲット<xref:System.IO.Packaging.PackagePart> への間。 <xref:System.IO.Packaging.Package></span><span class="sxs-lookup"><span data-stu-id="44f64-208">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="44f64-209">パッケージ外部<xref:System.IO.Packaging.Package>のターゲットリソースへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-209">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-210">パッケージリレーションシップでは、パッケージはリレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-210">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-211">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-211">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="44f64-212">リレーションシップを作成または削除するプロセスでは、ターゲットのパーツやリソースが物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-212">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="44f64-213">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-213">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-214">次の例は、 <xref:System.IO.Packaging.PackageRelationship> <xref:System.IO.Packaging.Package>とルートドキュメントパーツの間にを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-214">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="44f64-215">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-215">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri"><span data-ttu-id="44f64-216">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-216">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span></span></param>
        <param name="targetMode"><span data-ttu-id="44f64-217">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-217">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="44f64-218">リレーションシップのロールを一意に定義する URI。</span><span class="sxs-lookup"><span data-stu-id="44f64-218">A URI that uniquely defines the role of the relationship.</span></span></param>
        <summary><span data-ttu-id="44f64-219">指定した URI、ターゲット モード、およびリレーションシップ型を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-219">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span></span></summary>
        <returns><span data-ttu-id="44f64-220">指定したパーツへのパッケージ レベル リレーションシップ。</span><span class="sxs-lookup"><span data-stu-id="44f64-220">The package-level relationship to the specified part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-221">パッケージレベルのリレーションシップは、パッケージと、関連付けられているターゲットパーツまたはリソースとの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-221">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="44f64-222">パッケージレベルのリレーションシップには、2つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-222">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="44f64-223">パッケージ内<xref:System.IO.Packaging.Package>のターゲットパーツへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-223">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="44f64-224">パッケージ外部<xref:System.IO.Packaging.Package>のターゲットリソースへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-224">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-225">パッケージリレーションシップでは、パッケージはリレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-225">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-226">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-226">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="44f64-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A>では、ターゲットのパーツやリソースが物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="44f64-228">リレーションシップのターゲットを別のリレーションシップにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="44f64-228">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="44f64-229">が`targetMode`として<xref:System.IO.Packaging.TargetMode.Internal>指定`targetUri`されている場合、は[RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) のジェネリック構文仕様に従って形成される相対 URI である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="44f64-230">内部相対 URI には、スラッシュ ("/") 文字で始まる絶対パス ("/page1.3 xaml" や "/images/picture4.jpg" など)、または "." などの相対パスを指定できます。/imagespicture1.jpg "は、パッケージルート ("/") に対してベース URI として解決されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-230">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="44f64-231">を`targetMode`として<xref:System.IO.Packaging.TargetMode.External>指定`targetUri`した場合、は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) のジェネリック構文仕様に従って形成された絶対 URI または相対 URI のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="44f64-231">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span> <span data-ttu-id="44f64-232">`http://www.microsoft.com/page2.xml`は、外部ターゲットリソース "page2" を参照する絶対 URI の例です。</span><span class="sxs-lookup"><span data-stu-id="44f64-232">`http://www.microsoft.com/page2.xml` is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="44f64-233">"images/picture1" は、外部ターゲットリソース "1. .jpg" も参照し、パッケージ自体の URI に対して解決される相対 URI の例です。</span><span class="sxs-lookup"><span data-stu-id="44f64-233">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="44f64-234">`relationshipType`は、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) 汎用構文仕様に従って形成されるである必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-234">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="44f64-235">次の表は、Open パッケージング規則`relationshipType` (OPC) 仕様で定義されているパッケージレベルの uri を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-235">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="44f64-236">パッケージレベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="44f64-236">Package-level Relationship</span></span>|<span data-ttu-id="44f64-237">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="44f64-237">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="44f64-238">コアプロパティ</span><span class="sxs-lookup"><span data-stu-id="44f64-238">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="44f64-239">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="44f64-239">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="44f64-240">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="44f64-240">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="44f64-241">デジタル署名の配信元</span><span class="sxs-lookup"><span data-stu-id="44f64-241">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="44f64-242">画像</span><span class="sxs-lookup"><span data-stu-id="44f64-242">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="44f64-243">パッケージとパッケージの関係の詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.3 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-243">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-244">次の例は、を使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>し<xref:System.IO.Packaging.Package>て、 <xref:System.IO.Packaging.PackageRelationship>とルートドキュメントパーツの間にを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-244">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="44f64-245">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-245">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-246"><paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-246"><paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-247"><paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span><span class="sxs-lookup"><span data-stu-id="44f64-247">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-248"><paramref name="targetMode" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-248">The value for <paramref name="targetMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-249">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-249">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-250">パッケージは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-250">The package is read-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri"><span data-ttu-id="44f64-251">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-251">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span></span></param>
        <param name="targetMode"><span data-ttu-id="44f64-252">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-252">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="44f64-253">リレーションシップのロールを一意に定義する URI。</span><span class="sxs-lookup"><span data-stu-id="44f64-253">A URI that uniquely defines the role of the relationship.</span></span></param>
        <param name="id"><span data-ttu-id="44f64-254">一意の XML 識別子。</span><span class="sxs-lookup"><span data-stu-id="44f64-254">A unique XML identifier.</span></span></param>
        <summary><span data-ttu-id="44f64-255">指定した URI、ターゲット モード、リレーションシップ型、および [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span><span class="sxs-lookup"><span data-stu-id="44f64-255">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span></span></summary>
        <returns><span data-ttu-id="44f64-256">指定したパーツへのパッケージ レベル リレーションシップ。</span><span class="sxs-lookup"><span data-stu-id="44f64-256">The package-level relationship to the specified part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-257">パッケージレベルのリレーションシップは、パッケージと、関連付けられているターゲットパーツまたはリソースとの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-257">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="44f64-258">パッケージレベルのリレーションシップには、2つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-258">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="44f64-259">パッケージ内<xref:System.IO.Packaging.Package>のターゲットパーツへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-259">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="44f64-260">パッケージ外部<xref:System.IO.Packaging.Package>のターゲットリソースへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-260">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-261">パッケージリレーションシップでは、パッケージはリレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-261">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-262">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-262">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="44f64-263"><xref:System.IO.Packaging.Package.CreateRelationship%2A>では、ターゲットのパーツやリソースが物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-263"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="44f64-264">リレーションシップのターゲットを別のリレーションシップにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="44f64-264">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="44f64-265">`id`有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-265">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="44f64-266">型は xsd: ID で、XML スキーマパート 2: データ型の仕様に規定されている名前付け[https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)規則に従う必要があります (「」を参照してください)。 `id`</span><span class="sxs-lookup"><span data-stu-id="44f64-266">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="44f64-267">が`id`指定され`null`ている場合は、一意の ID が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-267">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="44f64-268">空の文字列によって指定されたが無効です。 `id`</span><span class="sxs-lookup"><span data-stu-id="44f64-268">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="44f64-269">が`targetMode`として<xref:System.IO.Packaging.TargetMode.Internal>指定`targetUri`されている場合、は[RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) のジェネリック構文仕様に従って形成される相対 URI である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-269">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="44f64-270">内部相対 URI には、スラッシュ ("/") 文字で始まる絶対パス ("/page1.3 xaml" や "/images/picture4.jpg" など)、または "." などの相対パスを指定できます。/imagespicture1.jpg "は、パッケージルート ("/") に対してベース URI として解決されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-270">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="44f64-271">を`targetMode`として<xref:System.IO.Packaging.TargetMode.External>指定`targetUri`した場合、は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) のジェネリック構文仕様に従って形成された絶対 URI または相対 URI のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="44f64-271">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span> <span data-ttu-id="44f64-272">`http://www.microsoft.com/page2.xml`は、外部ターゲットリソース "page2" を参照する絶対 URI の例です。</span><span class="sxs-lookup"><span data-stu-id="44f64-272">`http://www.microsoft.com/page2.xml` is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="44f64-273">"images/picture1" は、外部ターゲットリソース "1. .jpg" も参照し、パッケージ自体の URI に対して解決される相対 URI の例です。</span><span class="sxs-lookup"><span data-stu-id="44f64-273">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="44f64-274">`relationshipType`は、 [RFC 3986](https://tools.ietf.org/html/rfc3986) UNIFORM RESOURCE IDENTIFIER (Uri) 汎用構文仕様に従って形成された uri である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-274">`relationshipType` must be a URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="44f64-275">次の表は、Open パッケージング規則`relationshipType` (OPC) 仕様で定義されているパッケージレベルの uri を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-275">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="44f64-276">パッケージレベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="44f64-276">Package-level Relationship</span></span>|<span data-ttu-id="44f64-277">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="44f64-277">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="44f64-278">コアプロパティ</span><span class="sxs-lookup"><span data-stu-id="44f64-278">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="44f64-279">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="44f64-279">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="44f64-280">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="44f64-280">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="44f64-281">デジタル署名の配信元</span><span class="sxs-lookup"><span data-stu-id="44f64-281">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="44f64-282">画像</span><span class="sxs-lookup"><span data-stu-id="44f64-282">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="44f64-283">パッケージとパッケージの関係の詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.3 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-283">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-284">次の例は、を使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>し<xref:System.IO.Packaging.Package>て、 <xref:System.IO.Packaging.PackageRelationship>とルートドキュメントパーツの間にを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-284">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="44f64-285">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-285">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-286"><paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-286"><paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-287"><paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span><span class="sxs-lookup"><span data-stu-id="44f64-287">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-288"><paramref name="targetMode" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-288">The value for <paramref name="targetMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-289">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-289">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-290">パッケージは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-290">The package is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="44f64-291"><paramref name="id" /> が有効な XML 識別子ではないか、指定した <paramref name="id" /> を持つパーツが既にパッケージ内に存在します。</span><span class="sxs-lookup"><span data-stu-id="44f64-291"><paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-292">削除するパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-292">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span></span></param>
        <summary><span data-ttu-id="44f64-293">指定した URI を持つパーツをパッケージから削除します。</span><span class="sxs-lookup"><span data-stu-id="44f64-293">Deletes a part with a given URI from the package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-294">`partUri`は、スラッシュ ("/") 文字で始まる絶対パスで構成される相対 URI である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-294">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="44f64-295">絶対パスはパッケージルートに対する相対パスであり、 [RFC 3986](https://tools.ietf.org/html/rfc3986) UNIFORM RESOURCE IDENTIFIER (URI) 汎用構文仕様に従って形成されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-295">The absolute path is relative to the package root and is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="44f64-296">"/page1. xaml" と "/images/picture4.jpg" は、有効な部分 Uri の例です。</span><span class="sxs-lookup"><span data-stu-id="44f64-296">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="44f64-297">指定`partUri`したを持つパーツがパッケージ内に存在しない場合、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="44f64-297">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="44f64-298">( <xref:System.IO.Packaging.Package.PartExists%2A>メソッドを使用して、指定`partUri`したを持つパーツがパッケージ内に存在するかどうかを確認できます)。</span><span class="sxs-lookup"><span data-stu-id="44f64-298">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="44f64-299">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-299">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-300"><paramref name="partUri" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-300"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-301"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-301"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-302">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-302">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-303">パッケージは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-303">The package is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-304">
            <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />は、派生クラスに実装<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />されている物理形式に基づいて、実際には派生クラスのメソッドを呼び出して、実際にその部分を削除します。</span><span class="sxs-lookup"><span data-stu-id="44f64-304">
            <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-305">削除する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-305">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span></span></param>
        <summary><span data-ttu-id="44f64-306">派生クラスでオーバーライドされると、指定した URI を持つパーツを削除します。</span><span class="sxs-lookup"><span data-stu-id="44f64-306">When overridden in a derived class, deletes a part with a given URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-307">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>クラスの派生クラスの実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-307">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="44f64-308">既定の操作では<xref:System.IO.Packaging.Package.DeletePart%2A> 、派生クラスで<xref:System.IO.Packaging.ZipPackage>実装された物理形式に基づいて実際の削除操作を実行するために、クラスの内部的にを呼び出し<xref:System.IO.Packaging.Package.DeletePartCore%2A>ます。</span><span class="sxs-lookup"><span data-stu-id="44f64-308">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="44f64-309">パッケージモデルとパッケージパーツの詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様の第1章を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-309">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-310">派生クラス<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />の実装は、派生クラス<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />で実装された物理形式に基づいて、メソッドによって指定されたパーツに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-310">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span></span>  
  
<span data-ttu-id="44f64-311">派生<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実装では、それを呼び出す<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />メソッドによって実行される順序や操作についての仮定を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-311">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="44f64-312">削除する <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-312">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span></span></param>
        <summary><span data-ttu-id="44f64-313">パッケージ レベル リレーションシップを削除します。</span><span class="sxs-lookup"><span data-stu-id="44f64-313">Deletes a package-level relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-314">パッケージレベルのリレーションシップは、パッケージと、関連付けられているターゲットパーツまたはリソースとの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-314">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="44f64-315">パッケージレベルのリレーションシップには、2つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-315">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="44f64-316">パッケージ内<xref:System.IO.Packaging.Package>のターゲットパーツへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-316">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="44f64-317">パッケージ外部<xref:System.IO.Packaging.Package>のターゲットリソースへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-317">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-318">パッケージリレーションシップでは、パッケージはリレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-318">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-319">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-319">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="44f64-320">指定`id`したとのリレーションシップがパッケージ内に存在しない場合、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="44f64-320">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="44f64-321"><xref:System.IO.Packaging.Package.DeleteRelationship%2A>では、ターゲットパーツが物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-321"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="44f64-322">パッケージリレーションシップの詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.3 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-322">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-323"><paramref name="id" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-323"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-324">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-324">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-325">パッケージは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-325">The package is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="44f64-326"><paramref name="id" /> が有効な XML 識別子でありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-326"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="44f64-327">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-327"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="44f64-328">すべてのパーツおよびリレーションシップの内容をフラッシュして保存し、パッケージを閉じ、すべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="44f64-328">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-329">すべての変更が正しく保存されている<xref:System.IO.Packaging.Package.Dispose%2A>ことを確認するために、は、パッケージに含まれているすべてのパーツおよびリレーションシップを終了し、フラッシュし、閉じます。</span><span class="sxs-lookup"><span data-stu-id="44f64-329">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="44f64-330"><xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.Package.Close%2A> <xref:System.IO.Packaging.Package.Dispose%2A>クラスの場合、同じ操作を実行します。を呼び出す場合、またはその逆の場合は、を呼び出す必要はありません。 <xref:System.IO.Packaging.Package.Dispose%2A>  <xref:System.IO.Packaging.Package.Close%2A></span><span class="sxs-lookup"><span data-stu-id="44f64-330">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="44f64-331"><xref:System.IO.Packaging.Package.Close%2A>および<xref:System.IO.Packaging.Package.Dispose%2A>は、 <xref:System.IO.Packaging.Package.Flush%2A>内部でを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f64-331"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="44f64-332">非メモリリソースを割り当てて管理する派生クラスでは、が呼び出されたとき<xref:System.IO.Packaging.Package.Dispose%2A>に、このメソッドをオーバーライドしてリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-332">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="44f64-333">派生クラスのオーバーライドでも、 <xref:System.IO.Packaging.Package.Flush%2A>および基底クラス<xref:System.IO.Packaging.Package.Dispose%2A>のメソッドを呼び出して、基本クラスのクリーンアップが常に実行されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-333">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44f64-334">および`using`  `using` パッケージには <xref:System.IO.Packaging.Package.Close%2A>  、ステートメント (名前空間ディレクティブとは異なります) をお勧めします。 <xref:System.IO.Packaging.Package.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="44f64-334">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="44f64-335">[パッケージの記述サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)は、 `using`ステートメントを使用してパッケージを終了および破棄する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-335">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f64-336">パッケージのファイル アクセス設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="44f64-336">Gets the file access setting for the package.</span></span></summary>
        <value><span data-ttu-id="44f64-337"><see cref="T:System.IO.FileAccess" /> 値、つまり <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、または <see cref="F:System.IO.FileAccess.ReadWrite" /> の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="44f64-337">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-338"><xref:System.IO.Packaging.Package.FileOpenAccess%2A>プロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-338">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="44f64-339">ファイルアクセス設定は、新しいパッケージを<xref:System.IO.Packaging.Package.%23ctor%2A>作成するときにコンストラクター呼び出しで指定されるか、 <xref:System.IO.Packaging.Package.Open%2A>または既存のパッケージを開いたときに呼び出しで指定されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-339">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-340">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-340">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-341">パッケージに含まれているすべてのパーツおよびリレーションシップの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="44f64-341">Saves the contents of all parts and relationships that are contained in the package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-342"><xref:System.IO.Packaging.Package.Flush%2A>内部的には、派生<xref:System.IO.Packaging.Package.FlushCore%2A>クラスの実装を呼び出して、実際の形式固有のフラッシュ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="44f64-342"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implementation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="44f64-343">派生クラスの<xref:System.IO.Packaging.Package.FlushCore%2A>メソッドは、実際には、特定の物理派生クラスの実装にパーツおよびリレーションシップの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="44f64-343">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="44f64-344">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>基本クラスの派生実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-344">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="44f64-345">既定の操作では<xref:System.IO.Packaging.Package.Flush%2A> 、を<xref:System.IO.Packaging.Package.FlushCore%2A>呼び出して、パーツおよびリレーションシップを ZIP ファイルパッケージに保存します。</span><span class="sxs-lookup"><span data-stu-id="44f64-345">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="44f64-346"><xref:System.IO.Packaging.Package.Flush%2A>は、メソッド<xref:System.IO.Packaging.Package.Close%2A>および<xref:System.IO.Packaging.Package.Dispose%2A>メソッドによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-346"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="44f64-347"><xref:System.IO.Packaging.Package.Flush%2A>また<xref:System.IO.Packaging.Package.Close%2A> はが呼び出されたときに、を個別に呼び出す必要はありません。 <xref:System.IO.Packaging.Package.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="44f64-347">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-348">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-348">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-349">パッケージは読み取り専用であり、変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="44f64-349">The package is read-only and cannot be modified.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-350">
            <see cref="M:System.IO.Packaging.Package.Flush" />は、派生クラスの<see cref="M:System.IO.Packaging.Package.FlushCore" />メソッドを内部的に呼び出し、派生クラスで実装された物理形式に基づいて、実際にその部分をフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="44f64-350">
            <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-351">派生クラスでオーバーライドされると、すべてのパーツとリレーションシップの内容を派生クラス ストアに保存します。</span><span class="sxs-lookup"><span data-stu-id="44f64-351">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-352"><xref:System.IO.Packaging.Package.FlushCore%2A>は、派生クラス<xref:System.IO.Packaging.Package.Flush%2A>で実装された物理形式に基づいて実際のフラッシュ操作を実行するために、メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-352"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-353">派生<see cref="M:System.IO.Packaging.Package.FlushCore" />実装では、それを呼び出す<see cref="M:System.IO.Packaging.Package.Flush" />メソッドによって実行される順序や操作について、想定を行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f64-353">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-354">返すパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-354">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span></span></param>
        <summary><span data-ttu-id="44f64-355">指定した URI を持つパーツを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-355">Returns the part with a given URI.</span></span></summary>
        <returns><span data-ttu-id="44f64-356">指定した <paramref name="partUri" /> を持つパーツ。</span><span class="sxs-lookup"><span data-stu-id="44f64-356">The part with the specified <paramref name="partUri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-357"><xref:System.InvalidOperationException> 指定 `partUri` したを持つパーツが存在しない場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-357">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="44f64-358">メソッド<xref:System.IO.Packaging.Package.PartExists%2A>は、が既存のパーツを`partUri`参照するかどうかを判断するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-358">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="44f64-359">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>基本クラスの派生実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-359">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="44f64-360">既定の操作では<xref:System.IO.Packaging.Package.GetPart%2A> 、 <xref:System.IO.Packaging.ZipPackage>クラス<xref:System.IO.Packaging.Package.GetPartCore%2A>の内部的にを呼び出して、要求されたパーツを ZIP ファイルから返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-360">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="44f64-361">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-361">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-362">次の例では、パッケージに含まれている部分を検索、取得、および読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-362">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="44f64-363">完全なサンプルについては、「[パッケージサンプルの読み取り](https://go.microsoft.com/fwlink/?LinkID=160034)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-363">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-364"><paramref name="partUri" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-364"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-365"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-365"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44f64-366">指定した <paramref name="partUri" /> を持つパーツが、パッケージ内に存在しません。</span><span class="sxs-lookup"><span data-stu-id="44f64-366">A part with the specified <paramref name="partUri" /> is not in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-367">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-367">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-368">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-368">The package is write-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-369">
            <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />は、派生クラスに<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装された物理形式に基づいて、実際には派生クラスのメソッドを呼び出して、実際にその部分をフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="44f64-369">
            <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-370">取得するパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="44f64-370">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span></span></param>
        <summary><span data-ttu-id="44f64-371">派生クラスでオーバーライドされると、指定した URI によってアドレス指定されるパーツを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-371">When overridden in a derived class, returns the part addressed by a given URI.</span></span></summary>
        <returns><span data-ttu-id="44f64-372">要求されたパーツ。指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-372">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-373">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>クラスの派生実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-373">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="44f64-374">既定の操作では<xref:System.IO.Packaging.Package.GetPart%2A> 、クラス<xref:System.IO.Packaging.Package.GetPartCore%2A>の内部<xref:System.IO.Packaging.ZipPackage>的にを呼び出して、ZIP ファイルからパーツを取得します。</span><span class="sxs-lookup"><span data-stu-id="44f64-374">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="44f64-375">パッケージモデルとパッケージパーツの詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様の第1章を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-375">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-376">派生クラス<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />の実装は、派生クラス<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />で実装された物理形式に基づいて、指定したパーツにアクセスして返すために、メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-376">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span></span>  
  
<span data-ttu-id="44f64-377">派生<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装では、それを呼び出す<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />メソッドによって実行される順序や操作についての仮定を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-377">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-378">パッケージに含まれているすべてのパーツのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-378">Returns a collection of all the parts in the package.</span></span></summary>
        <returns><span data-ttu-id="44f64-379">パッケージに含まれているすべての <see cref="T:System.IO.Packaging.PackagePart" /> 要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="44f64-379">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-380"><xref:System.IO.Packaging.Package.GetParts%2A>パーツを含む<xref:System.IO.Packaging.PackageRelationship>パッケージに含まれるすべての部分のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-380"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="44f64-381"><xref:System.IO.Packaging.Package.GetParts%2A>はを返し`null`ません。ただし、パッケージにパーツが含まれていない場合、返されるコレクションには0個の要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="44f64-381"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="44f64-382">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>基本クラスの派生実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-382">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="44f64-383">既定の操作では<xref:System.IO.Packaging.Package.GetParts%2A> 、は<xref:System.IO.Packaging.Package.GetPartsCore%2A> 、 <xref:System.IO.Packaging.ZipPackage>クラスのメソッドを呼び出して、ZIP ファイルからパーツを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-383">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="44f64-384">パッケージとパッケージパーツの詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.1 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-384">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-385">次の例は、 <xref:System.IO.Packaging.Package.GetParts%2A>メソッドを使用して、 <xref:System.IO.Packaging.Package>に格納されている部分のコレクションを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-385">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="44f64-386">プログラムの完全なソースコードについては、「[デジタル署名のサンプルを使用](https://go.microsoft.com/fwlink/?LinkID=159966)したパッケージの作成」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-386">For the complete program source code, see [Creating a Package with a Digital Signature Sample](https://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-387">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-387">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-388">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-388">The package is write-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-389">
            <see cref="M:System.IO.Packaging.Package.GetParts" />は、派生クラスに<see cref="M:System.IO.Packaging.Package.GetPartsCore" />実装された物理形式に基づいて、実際には派生クラスのメソッドを呼び出して、実際にその部分をフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="44f64-389">
            <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-390">派生クラスでオーバーライドされると、パッケージ内のすべてのパーツの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-390">When overridden in a derived class, returns an array of all the parts in the package.</span></span></summary>
        <returns><span data-ttu-id="44f64-391">パッケージに含まれるすべてのパーツの配列。</span><span class="sxs-lookup"><span data-stu-id="44f64-391">An array of all the parts that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-392">派生クラス<xref:System.IO.Packaging.Package.GetPartsCore%2A>の実装は、派生クラス<xref:System.IO.Packaging.Package.GetParts%2A>で実装された物理形式に基づいてパーツの配列にアクセスして返すために、メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-392">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="44f64-393">既定では、 <xref:System.IO.Packaging.ZipPackage>抽象<xref:System.IO.Packaging.Package>クラスの派生実装が提供され、使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-393">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="44f64-394">既定の操作では<xref:System.IO.Packaging.Package.GetParts%2A> 、内部<xref:System.IO.Packaging.Package.GetPartCore%2A>的に<xref:System.IO.Packaging.ZipPackage>クラスを呼び出して、ZIP ファイルからパーツを取得します。</span><span class="sxs-lookup"><span data-stu-id="44f64-394">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="44f64-395">パッケージモデルとパッケージパーツの詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様の第1章を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-395">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f64-396">派生<see cref="M:System.IO.Packaging.Package.GetPartsCore" />実装では、それを呼び出す<see cref="M:System.IO.Packaging.Package.GetParts" />メソッドによって実行される順序や操作についての仮定を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-396">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="44f64-397">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-397">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span></span></param>
        <summary><span data-ttu-id="44f64-398">指定した ID を持つパッケージ レベル リレーションシップを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-398">Returns the package-level relationship with a given identifier.</span></span></summary>
        <returns><span data-ttu-id="44f64-399">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップ。</span><span class="sxs-lookup"><span data-stu-id="44f64-399">The package-level relationship with the specified <paramref name="id" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-400">`id`有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-400">`id` must be a valid XML identifier.</span></span> <span data-ttu-id="44f64-401">型は xsd: ID であり、 [「XML スキーマパート 2: データ型の仕様」の twiliojava-3.3.8-with-dependencies のセクション](https://www.w3.org/TR/xmlschema-2/#ID)で規定されている名前付け規則に従う必要があります。 `id`</span><span class="sxs-lookup"><span data-stu-id="44f64-401">The `id` type is xsd:ID and must follow the naming conventions prescribed in the [section 3.3.8 of the XML Schema Part 2: Datatypes specification](https://www.w3.org/TR/xmlschema-2/#ID).</span></span>  
  
 <span data-ttu-id="44f64-402">パッケージとパッケージの関係の詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.3 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-402">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-403"><paramref name="id" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-403"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="44f64-404"><paramref name="id" /> が有効な XML 識別子でありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-404"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44f64-405">指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</span><span class="sxs-lookup"><span data-stu-id="44f64-405">A relationship with the specified <paramref name="id" /> is not in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-406">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-406">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-407">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-407">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-408">すべてのパッケージ レベル リレーションシップのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-408">Returns a collection of all the package-level relationships.</span></span></summary>
        <returns><span data-ttu-id="44f64-409">パッケージに含まれているすべてのパッケージ レベル リレーションシップのコレクション。</span><span class="sxs-lookup"><span data-stu-id="44f64-409">A collection of all the package-level relationships that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-410"><xref:System.IO.Packaging.Package.GetRelationships%2A>はを返し`null`ません。ただし、パッケージにパッケージレベルのリレーションシップが含まれていない場合、返されるコレクションには0個の要素が含まれる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-410"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="44f64-411">パッケージレベルのリレーションシップは、パッケージと、関連付けられているターゲットパーツまたはリソースとの間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="44f64-411">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="44f64-412">パッケージレベルのリレーションシップには、2つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f64-412">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="44f64-413">パッケージ内<xref:System.IO.Packaging.Package>のターゲットパーツへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-413">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="44f64-414">パッケージ外部<xref:System.IO.Packaging.Package>のターゲットリソースへの。</span><span class="sxs-lookup"><span data-stu-id="44f64-414">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="44f64-415">パッケージリレーションシップでは、パッケージはリレーションシップの "所有者" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="44f64-415">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="44f64-416">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="44f64-416">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="44f64-417">リレーションシップを作成または削除するプロセスでは、ターゲットのパーツやリソースが物理的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-417">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="44f64-418">パッケージとパッケージの関係の詳細については、「」のダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>に使用できる Open パッケージング規則 (OPC) 仕様のセクション1.3 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-418">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-419">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-419">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-420">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-420">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType"><span data-ttu-id="44f64-421">コレクションで照合を行い、結果を返す <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-421">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span></span></param>
        <summary><span data-ttu-id="44f64-422">指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するすべてのパッケージ レベル リレーションシップのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="44f64-422">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span></span></summary>
        <returns><span data-ttu-id="44f64-423">指定した <paramref name="relationshipType" /> に一致するパッケージ レベル リレーションシップのコレクション。</span><span class="sxs-lookup"><span data-stu-id="44f64-423">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-424"><xref:System.IO.Packaging.Package.GetRelationships%2A>はを返し`null`ません。ただし、指定`relationshipType`したに一致するパッケージレベルのリレーションシップがない場合、返されるコレクションには0個の要素が含まれる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-424"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="44f64-425">次の表は、Open パッケージング規則`relationshipType` (OPC) 仕様で定義されているパッケージレベルの uri を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-425">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="44f64-426">パッケージレベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="44f64-426">Package-level Relationship</span></span>|<span data-ttu-id="44f64-427">リレーションシップの種類の URI</span><span class="sxs-lookup"><span data-stu-id="44f64-427">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="44f64-428">コアプロパティ</span><span class="sxs-lookup"><span data-stu-id="44f64-428">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="44f64-429">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="44f64-429">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="44f64-430">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="44f64-430">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="44f64-431">デジタル署名の配信元</span><span class="sxs-lookup"><span data-stu-id="44f64-431">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="44f64-432">画像</span><span class="sxs-lookup"><span data-stu-id="44f64-432">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="44f64-433">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-433">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-434">次の例では、パッケージに定義されているリレーションシップを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-434">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="44f64-435">完全なサンプルについては、「[パッケージサンプルの読み取り](https://go.microsoft.com/fwlink/?LinkID=160034)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-435">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-436"><paramref name="relationshipType" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-436"><paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-437"><paramref name="relationshipType" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="44f64-437"><paramref name="relationshipType" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-438">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-438">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-439">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-439">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44f64-440">パッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-440">Opens a package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-441"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-441"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-442">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-442">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-443">次の例は、 <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>および<xref:System.IO.Packaging.PackagePart>要素を格納されたデータと共に含む新しいを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-443">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="44f64-444">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-444">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="44f64-445">パッケージを開く IO ストリーム。</span><span class="sxs-lookup"><span data-stu-id="44f64-445">The IO stream on which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-446">指定した IO ストリームでパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-446">Opens a package on a given IO stream.</span></span></summary>
        <returns><span data-ttu-id="44f64-447">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-447">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-448"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-448"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-449">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-449">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-450"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-450"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-451">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-451">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="44f64-452">パッケージのパスおよびファイル名。</span><span class="sxs-lookup"><span data-stu-id="44f64-452">The path and file name of the package.</span></span></param>
        <summary><span data-ttu-id="44f64-453">指定したパスとファイル名でパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-453">Opens a package at a given path and file name.</span></span></summary>
        <returns><span data-ttu-id="44f64-454">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-454">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-455"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-455"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-456">この<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定の属性<xref:System.IO.FileMode.OpenOrCreate>、 <xref:System.IO.FileAccess.ReadWrite>、および<xref:System.IO.FileShare.None>を使用してパッケージを開きます (異なる属性を指定するには、他の Open メソッドオーバーロードのいずれかを使用します)。</span><span class="sxs-lookup"><span data-stu-id="44f64-456">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="44f64-457">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-457">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-458">次の例は、 <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>および<xref:System.IO.Packaging.PackagePart>要素を格納されたデータと共に含む新しいを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-458">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="44f64-459">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-459">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-460"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-460"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="44f64-461">パッケージを開く IO ストリーム。</span><span class="sxs-lookup"><span data-stu-id="44f64-461">The IO stream on which to open the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="44f64-462">パッケージを開くときのファイル モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-462">The file mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-463">指定した IO ストリームとファイル モードでパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-463">Opens a package with a given IO stream and file mode.</span></span></summary>
        <returns><span data-ttu-id="44f64-464">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-464">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-465"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-465"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-466">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-466">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-467"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-467"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-468"><paramref name="packageMode" /> の値が無効です。</span><span class="sxs-lookup"><span data-stu-id="44f64-468"><paramref name="packageMode" /> value is not valid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-469">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-469">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="44f64-470">パッケージのパスおよびファイル名。</span><span class="sxs-lookup"><span data-stu-id="44f64-470">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="44f64-471">パッケージを開くときのファイル モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-471">The file mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-472">指定したファイル モードを使用して、指定したパスにあるパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-472">Opens a package at a given path using a given file mode.</span></span></summary>
        <returns><span data-ttu-id="44f64-473">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-473">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-474"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-474"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-475">この<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定の属性<xref:System.IO.FileAccess.ReadWrite>を使用<xref:System.IO.FileShare.None>してパッケージを開きます (異なる属性を指定するには、Open メソッドの他のオーバーロードのいずれかを使用します)。</span><span class="sxs-lookup"><span data-stu-id="44f64-475">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="44f64-476">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-476">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-477">次の例は、 <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>および<xref:System.IO.Packaging.PackagePart>要素を格納されたデータと共に含む新しいを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-477">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="44f64-478">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-478">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-479"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-479"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-480"><paramref name="packageMode" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-480">Value for <paramref name="packageMode" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="44f64-481">パッケージを開く IO ストリーム。</span><span class="sxs-lookup"><span data-stu-id="44f64-481">The IO stream on which to open the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="44f64-482">パッケージを開くときのファイル モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-482">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="44f64-483">パッケージを開くときのファイル アクセス。</span><span class="sxs-lookup"><span data-stu-id="44f64-483">The file access in which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-484">指定した IO ストリーム、ファイル モード、およびファイル アクセス設定でパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-484">Opens a package with a given IO stream, file mode, and file access setting.</span></span></summary>
        <returns><span data-ttu-id="44f64-485">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-485">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-486"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-486"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-487">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-487">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-488"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-488"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-489"><paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-489">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-490">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-490">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="44f64-491">パッケージのパスおよびファイル名。</span><span class="sxs-lookup"><span data-stu-id="44f64-491">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="44f64-492">パッケージを開くときのファイル モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-492">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="44f64-493">パッケージを開くときのファイル アクセス。</span><span class="sxs-lookup"><span data-stu-id="44f64-493">The file access in which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-494">指定したファイル モードとファイル アクセス設定を使用して、指定したパスにあるパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-494">Opens a package at a given path using a given file mode and file access setting.</span></span></summary>
        <returns><span data-ttu-id="44f64-495">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-495">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-496"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-496"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-497">この<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定<xref:System.IO.FileShare.None>の属性を使用してパッケージを開きます (別<xref:System.IO.Packaging.Package.Open%2A>の属性を指定するには、メソッドのオーバーロードを使用します)。</span><span class="sxs-lookup"><span data-stu-id="44f64-497">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="44f64-498">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-498">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-499">次の例は、 <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>要素を格納しているを開いて、格納されたデータと共に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-499">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="44f64-500">完全なサンプルについては、「[パッケージサンプルの読み取り](https://go.microsoft.com/fwlink/?LinkID=160034)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-500">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-501"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="44f64-501"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-502"><paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-502">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="44f64-503">パッケージのパスおよびファイル名。</span><span class="sxs-lookup"><span data-stu-id="44f64-503">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="44f64-504">パッケージを開くときのファイル モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-504">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="44f64-505">パッケージを開くときのファイル アクセス。</span><span class="sxs-lookup"><span data-stu-id="44f64-505">The file access in which to open the package.</span></span></param>
        <param name="packageShare"><span data-ttu-id="44f64-506">パッケージを開くときのファイル共有モード。</span><span class="sxs-lookup"><span data-stu-id="44f64-506">The file sharing mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="44f64-507">指定したファイル モード、ファイル アクセス、およびファイル共有設定を使用して、指定したパスにあるパッケージを開きます。</span><span class="sxs-lookup"><span data-stu-id="44f64-507">Opens a package at a given path using a given file mode, file access, and file share setting.</span></span></summary>
        <returns><span data-ttu-id="44f64-508">開かれたパッケージ。</span><span class="sxs-lookup"><span data-stu-id="44f64-508">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-509"><xref:System.IO.Packaging.ZipPackage>は、 <xref:System.IO.Packaging.Package.Open%2A>メソッドによって使用される既定のパッケージの種類です。</span><span class="sxs-lookup"><span data-stu-id="44f64-509"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="44f64-510">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-510">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f64-511">次の例は、 <xref:System.IO.Packaging.Package> <xref:System.IO.Packaging.PackageRelationship>および<xref:System.IO.Packaging.PackagePart>要素を格納されたデータと共に含む新しいを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f64-511">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="44f64-512">完全なサンプルについては、「[パッケージの作成サンプル](https://go.microsoft.com/fwlink/?LinkID=160055)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-512">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-513"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-513"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="44f64-514"><paramref name="packageMode" />、<paramref name="packageAccess" />、または <paramref name="packageShare" /> の値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-514">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f64-515">パッケージのコア プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="44f64-515">Gets the core properties of the package.</span></span></summary>
        <value><span data-ttu-id="44f64-516">パッケージのコア プロパティ。</span><span class="sxs-lookup"><span data-stu-id="44f64-516">The core properties of the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-517">コアパッケージのプロパティの詳細については、「」でダウンロード<https://go.microsoft.com/fwlink/?LinkID=71255>できる Open パッケージング規則 (OPC) 仕様のセクション3.1 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-517">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-518">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-518">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="44f64-519">チェックするパーツの <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-519">The <see cref="T:System.Uri" /> of the part to check for.</span></span></param>
        <summary><span data-ttu-id="44f64-520">指定した URI を持つパーツがパッケージ内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-520">Indicates whether a part with a given URI is in the package.</span></span></summary>
        <returns><span data-ttu-id="44f64-521">指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-521"><see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-522">は`partUri` 、スラッシュ (/) で始まり、パッケージのルートからの絶対パスである必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f64-522">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="44f64-523">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-523">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-524"><paramref name="partUri" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-524"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="44f64-525"><paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-525"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-526">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-526">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-527">パッケージは書き込み専用です (情報を読み取ることはできません)。</span><span class="sxs-lookup"><span data-stu-id="44f64-527">The package is write-only (information cannot be read).</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="44f64-528">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-528">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span></span></param>
        <summary><span data-ttu-id="44f64-529">指定した ID を持つパッケージ レベル リレーションシップがパッケージに含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="44f64-529">Indicates whether a package-level relationship with a given ID is contained in the package.</span></span></summary>
        <returns><span data-ttu-id="44f64-530">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44f64-530"><see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f64-531">詳細については、で<https://go.microsoft.com/fwlink/?LinkID=71255>ダウンロードできる Open パッケージング規則 (OPC) 仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f64-531">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f64-532"><paramref name="id" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="44f64-532"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="44f64-533"><paramref name="id" /> が有効な XML 識別子でありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-533"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="44f64-534">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span><span class="sxs-lookup"><span data-stu-id="44f64-534">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="44f64-535">パッケージは書き込み専用です。</span><span class="sxs-lookup"><span data-stu-id="44f64-535">The package is write-only.</span></span></exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f64-536">このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。アプリケーションで使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="44f64-536">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span></span>  <span data-ttu-id="44f64-537">代わりに、タイプ セーフ <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f64-537">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
