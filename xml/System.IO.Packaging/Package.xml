<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4acc6f21ec13023541c348107a406f31ce5dea82" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="dd25e-101">複数のデータ オブジェクトを格納可能なコンテナーを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd25e-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-102"><xref:System.IO.Packaging.Package> 移植性と効率的にアクセスする場合は、定義されている物理形式の 1 つのエンティティにオブジェクトを整理するために使用する抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="dd25e-103">ZIP ファイルは、プライマリの物理フォーマットを<xref:System.IO.Packaging.Package>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="dd25e-104">その他の<xref:System.IO.Packaging.Package>実装が XML ドキュメント、データベースなどその他の物理形式を使用してまたは Web サービス可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dd25e-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="dd25e-105">ファイル システムのような項目が含まれている、<xref:System.IO.Packaging.Package>フォルダーおよびファイルの階層構造で参照されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="dd25e-106"><xref:System.IO.Packaging.Package>自体が抽象クラスで、<xref:System.IO.Packaging.ZipPackage>派生クラスによって既定として使用される、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-107">A <xref:System.IO.Packaging.PackagePart> (「部分」) に格納されているオブジェクトを表す抽象クラスであり、<xref:System.IO.Packaging.Package>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="dd25e-108">A <xref:System.IO.Packaging.PackageRelationship> (「リレーションシップ」)、ソースとの間の関連付けを定義する<xref:System.IO.Packaging.Package>または<xref:System.IO.Packaging.PackagePart>と、ターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dd25e-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="dd25e-109">A<xref:System.IO.Packaging.PackageRelationship>それぞれできる 2 つの形式のいずれかの 2 種類のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="dd25e-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="dd25e-110">パッケージ レベルの関係 (によって作成された、<xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>メソッド) が関連する、<xref:System.IO.Packaging.Package>いずれかに。</span><span class="sxs-lookup"><span data-stu-id="dd25e-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="dd25e-111">パッケージ内のターゲット パーツです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="dd25e-112">パッケージの外部のターゲット リソースです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="dd25e-113">パーツ レベルのリレーションシップ (によって作成された、<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>メソッド) が関連するソース<xref:System.IO.Packaging.PackagePart>いずれかに。</span><span class="sxs-lookup"><span data-stu-id="dd25e-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="dd25e-114">パッケージ内の別のターゲット部分。</span><span class="sxs-lookup"><span data-stu-id="dd25e-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="dd25e-115">パッケージの外部のターゲット リソースです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-116">リレーションシップのソース<xref:System.IO.Packaging.Package>またはソース<xref:System.IO.Packaging.PackagePart>リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-117">ソース オブジェクトが削除されると、ソース オブジェクトによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="dd25e-118">作成するか、リレーションシップの削除のプロセスが任意の方法でソースまたはターゲットのいずれかのオブジェクトを物理的に変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="dd25e-119">A<xref:System.IO.Packaging.PackageDigitalSignature>パーツおよびリレーションシップに含まれているデジタル署名を表すの合成である (「デジタル署名」)、<xref:System.IO.Packaging.Package>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="dd25e-120">デジタル署名が、発信元を識別し、署名済みパーツとリレーションシップに含まれることを検証、<xref:System.IO.Packaging.Package>変更されていません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="dd25e-121">パッケージにはデジタル著作権管理 (DRM) でのコンテンツの要素をサポートも、<xref:System.IO.Packaging.Package>承認されたユーザーに付与された特定のアクセス権を持つ暗号化します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="dd25e-122">に基づいて、 <xref:System.IO.Packaging.Package> 、アーキテクチャ、<xref:System.Windows.Xps.Packaging.XpsDocument>開くに基づいてドキュメントを格納するために設計されたパッケージの種類は、 [XPS XML Paper Specification ()](http://go.microsoft.com/fwlink/?LinkID=65761)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 [!INCLUDE[TLA#tla_avalonwinfx](~/includes/tlasharptla-avalonwinfx-md.md)]<span data-ttu-id="dd25e-123"> パッケージを使用して、コンテンツ、リソース、およびページおよび既定では、標準の ZIP ファイルを使用してドキュメントのリレーションシップを格納します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-123"> uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="dd25e-124">ZIP ファイルとアプリケーションで使用できるよう、<xref:System.IO.Packaging>クラスを格納し、必要に応じて任意の 1 つの効率的なアクセス コンテナー内のデータ ファイルの数または種類を保護します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="dd25e-125">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-126">次の例を作成するための基本的な手順を示しています、<xref:System.IO.Packaging.Package>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="dd25e-127">この例では、ドキュメントの一部として表示される画像と共にドキュメントを格納するパッケージが作成されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="dd25e-128">(これは、HTML ファイルに場合と同様に、 \<IMG > 外部画像ファイルを参照しているタグです)。2 つ<xref:System.IO.Packaging.PackageRelationship>要素は、パッケージにも含まれます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="dd25e-129">「パッケージ レベル」のリレーションシップでは、1 つ目は、パッケージのルート要素としてドキュメント パーツを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="dd25e-130">2 番目の「一部レベル」関係では、ドキュメントの一部 (一部レベルのリレーションシップの「ソース」) とイメージの一部 (部分レベルのリレーションシップの"target") の間の関連付けを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="dd25e-131">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-131">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-132">
            <see cref="T:System.IO.Packaging.Package" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-132">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="dd25e-133">パッケージのファイル IO アクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-133">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-134">指定した <see cref="T:System.IO.Packaging.Package" /> を使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-135"><xref:System.IO.Packaging.Package.%23ctor%2A> protected コンス トラクターは、<xref:System.IO.Packaging.Package>抽象基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-135"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="dd25e-136">派生クラスで呼び出されると、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターは、派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-136">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-137">
            <paramref name="openFileAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-137">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="dd25e-138">パッケージのファイル IO アクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-138">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="dd25e-139">パッケージをストリーミング用に開く場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-139">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-140">指定した <see cref="T:System.IO.Packaging.Package" /> とストリーミング オプションを使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-140">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-141"><xref:System.IO.Packaging.Package.%23ctor%2A> protected コンス トラクターは、<xref:System.IO.Packaging.Package>抽象基本抽象基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-141"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="dd25e-142">派生クラスで呼び出されると、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターは、派生クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-142">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-143">
            <paramref name="openFileAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-143">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-144">パッケージと、基になるすべてのパーツ ストリームを保存して閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-144">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-145"><xref:System.IO.Packaging.Package>クラス<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>同じ操作を実行: を呼び出す必要はありません<xref:System.IO.Packaging.Package.Dispose%2A>を呼び出す場合<xref:System.IO.Packaging.Package.Close%2A>、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-145">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="dd25e-146"><xref:System.IO.Packaging.Package.Close%2A> および<xref:System.IO.Packaging.Package.Dispose%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.Flush%2A>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-146"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd25e-147">`using`ステートメント (異なる、`using`名前空間ディレクティブ) することをお勧め<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>パッケージです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-147">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="dd25e-148">[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)と[パッケージ サンプルの読み取り](http://go.microsoft.com/fwlink/?LinkID=160034)を閉じてを使用してパッケージを破棄する方法を示して、`using`ステートメントです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-148">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-149">新しいパッケージ パーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-149">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-150"><xref:System.IO.Packaging.Package.CreatePart%2A> 空の初期化<xref:System.IO.Stream>パートが新しいためです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-150"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="dd25e-151"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>パートに関連付けられているストリームのインスタンスへの参照を取得するメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-151">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="dd25e-152">パッケージ パーツの詳細についてを参照してください 1.1 のダウンロード可能な Open Packaging Conventions (OPC) 仕様で[ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-152">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-153">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-153">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="dd25e-154">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-154">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-155">
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 派生クラスを呼び出し、内部的に<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />物理フォーマットを派生クラスで実装に基づいて、メソッドを実際には、パーツを作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-155">
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-156">新しいパーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-156">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="dd25e-157">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-157">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-158">指定した URI とコンテンツ タイプを使用して、新しい非圧縮のパーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-158">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-159">新規作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-159">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-160"><xref:System.IO.Packaging.Package.CreatePart%2A> 空の初期化<xref:System.IO.Stream>パートが新しいためです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-160"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="dd25e-161"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>パートに関連付けられているストリームのインスタンスへの参照を取得するメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-161">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="dd25e-162">部品<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>は<xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-162">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dd25e-163">パッケージ パーツの追加については、セクションを参照して 1.1 ダウンロード可能な Open Packaging Conventions (OPC) 仕様で[ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-163">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-164">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-164">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="dd25e-165">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-165">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-166">
            <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-166">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-167">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-167">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dd25e-168">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-168">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-169">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-169">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-170">パッケージは読み取り専用です (新しいパーツを追加できません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-170">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-171">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 内部的に、派生クラスを呼び出して<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />物理フォーマットを派生クラスで実装に基づいて、メソッドを実際には、パーツを作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-171">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-172">新しいパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-172">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="dd25e-173">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-173">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="dd25e-174">データ ストリームの圧縮オプション。<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> または <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 圧縮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-174">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-175">指定した URI、コンテンツ タイプ、および圧縮オプションを使用して、新しいパーツを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-175">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-176">新規作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-176">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-177">既定の<xref:System.IO.Packaging.ZipPackage>派生クラスに、<xref:System.IO.Packaging.Package.CreatePart%2A>メソッドのみをサポートしている 2 つ`compressionOption`値、<xref:System.IO.Packaging.CompressionOption.NotCompressed>または<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-177">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="dd25e-178">その他の<xref:System.IO.Packaging.CompressionOption>の値<xref:System.IO.Packaging.CompressionOption.Maximum>、 <xref:System.IO.Packaging.CompressionOption.Fast>、または<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-178">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="dd25e-179"><xref:System.IO.Packaging.Package.CreatePart%2A> 空の作成<xref:System.IO.Stream>の新しい要素をします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-179"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="dd25e-180"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>パートに関連付けられているストリームのインスタンスへの参照を取得するメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-180">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="dd25e-181">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-181">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-182">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.PackagePart>部にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-182">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="dd25e-183">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-183">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-184">
            <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-184">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-185">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-185">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dd25e-186">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-186">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-187">
            <paramref name="compressionOption" /> 値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-187">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-188">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-188">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-189">パッケージは読み取り専用です (新しいパーツを追加できません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-189">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-190">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 内部的に、派生クラスを呼び出して<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />物理フォーマットを派生クラスで実装に基づいて、メソッドを実際には、パーツを作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-190">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-191">作成されるパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-191">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="dd25e-192">データ ストリームのコンテンツ タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-192">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="dd25e-193">データ ストリームの圧縮オプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-193">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-194">派生クラスでオーバーライドされると、新しいパーツをパッケージ内に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-194">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-195">作成されたパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-195">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-196">派生した<xref:System.IO.Packaging.Package.CreatePartCore%2A>メソッドによって呼び出されます、<xref:System.IO.Packaging.Package.CreatePart%2A>パーツを作成する方法、派生クラスで実装されている物理フォーマットを基にします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-196">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="dd25e-197">既定では、<xref:System.IO.Packaging.ZipPackage>の抽象クラスの実装を派生<xref:System.IO.Packaging.Package>クラスが提供される、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-197">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="dd25e-198">既定の操作で<xref:System.IO.Packaging.Package.CreatePart%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.CreatePartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルに新しいパートを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="dd25e-198">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="dd25e-199">既定の<xref:System.IO.Packaging.ZipPackage>派生クラスに、<xref:System.IO.Packaging.Package.CreatePartCore%2A>メソッドのみをサポートしている 2 つ`compressionOption`値、<xref:System.IO.Packaging.CompressionOption.NotCompressed>または<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-199">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="dd25e-200">その他の<xref:System.IO.Packaging.CompressionOption>の値<xref:System.IO.Packaging.CompressionOption.Maximum>、 <xref:System.IO.Packaging.CompressionOption.Fast>、または<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>圧縮します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-200">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="dd25e-201">パッケージのモデルとパッケージ パーツの詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-201">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-202">派生した<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />実装することは避けて推測で処理順序で実行される操作、<see cref="Overload:System.IO.Packaging.Package.CreatePart" />メソッドを呼び出すことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-202">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-203">指定したパーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-203">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-204">パッケージ レベルのリレーションシップでは、パッケージと関連付けられているターゲット部品またはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-204">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="dd25e-205">パッケージ レベルのリレーションシップは、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-205">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="dd25e-206">間、<xref:System.IO.Packaging.Package>をターゲット<xref:System.IO.Packaging.PackagePart>パッケージ内です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-206">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="dd25e-207">間、<xref:System.IO.Packaging.Package>パッケージの外部のターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-207">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-208">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-208">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-209">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-209">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="dd25e-210">作成するか、リレーションシップの削除のプロセスも物理的に、ターゲットのパーツまたは任意の方法でリソースは変更されません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-210">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="dd25e-211">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-211">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-212">次の例を作成、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルート ドキュメントの一部です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-212">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="dd25e-213">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-213">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="dd25e-214">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-214">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="dd25e-215">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-215">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="dd25e-216">リレーションシップのロールを一意に定義する URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-216">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-217">指定した URI、ターゲット モード、およびリレーションシップ型を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-217">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-218">指定したパーツへのパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-218">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-219">パッケージ レベルのリレーションシップでは、パッケージと関連付けられているターゲット部品またはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-219">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="dd25e-220">パッケージ レベルのリレーションシップは、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-220">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="dd25e-221">間、<xref:System.IO.Packaging.Package>パッケージではパーツをターゲットにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-221">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="dd25e-222">間、<xref:System.IO.Packaging.Package>パッケージの外部のターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-222">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-223">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-223">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-224">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-224">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="dd25e-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 物理的に変わらないターゲット パーツまたは任意の方法でリソース。</span><span class="sxs-lookup"><span data-stu-id="dd25e-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="dd25e-226">リレーションシップのターゲットは、別のリレーションシップをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-226">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="dd25e-227">場合`targetMode`として指定された<xref:System.IO.Packaging.TargetMode.Internal>、`targetUri`に従って形成される相対 URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-227">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-228">内部の相対 URI か、絶対パスを指定できますなどの文字をスラッシュ (「/」) で起動"/page1.xaml"または"/images/picture4.jpg"、またはなどの相対パス"../imagespicture1.jpg"パッケージのルートに対して (「/」) として、ベース URI を解決します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-228">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="dd25e-229">場合`targetMode`として指定された<xref:System.IO.Packaging.TargetMode.External>、`targetUri`は、絶対または相対 URI の形式に従って、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-230">"http://www.microsoft.com/page2.xml"外部の対象リソース「page2.xml」を参照する絶対 URI の例に示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-230">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="dd25e-231">"images/picture1.jpg"は、外部の対象リソース"1.jpg"が解決される、に対して、パッケージ自体の URI を参照する相対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-231">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="dd25e-232">`relationshipType` 必要があります、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]に従って形式ですが、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-232">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-233">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="dd25e-233">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="dd25e-234">パッケージ レベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="dd25e-234">Package-level Relationship</span></span>|<span data-ttu-id="dd25e-235">リレーションシップ型の URI</span><span class="sxs-lookup"><span data-stu-id="dd25e-235">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="dd25e-236">主要プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-236">Core Properties</span></span>|<span data-ttu-id="dd25e-237">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-237">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="dd25e-238">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-238">Digital Signature</span></span>|<span data-ttu-id="dd25e-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="dd25e-240">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-240">Digital Signature Certificate</span></span>|<span data-ttu-id="dd25e-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="dd25e-242">デジタル署名の発行元</span><span class="sxs-lookup"><span data-stu-id="dd25e-242">Digital Signature Origin</span></span>|<span data-ttu-id="dd25e-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/オリジン</span><span class="sxs-lookup"><span data-stu-id="dd25e-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="dd25e-244">縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-244">Thumbnail</span></span>|<span data-ttu-id="dd25e-245">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-245">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="dd25e-246">パッケージとパッケージ リレーションシップの詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-246">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-247">次の例は、使用する方法を示しています。<xref:System.IO.Packaging.Package.CreateRelationship%2A>を作成する、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルート ドキュメントの一部です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-247">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="dd25e-248">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-248">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-249">
            <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-249">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-250">
            <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-250">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-251">
            <paramref name="targetMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-251">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-252">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-252">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-253">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-253">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="dd25e-254">ターゲット パーツの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-254">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="dd25e-255">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-255">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="dd25e-256">リレーションシップのロールを一意に定義する URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-256">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="dd25e-257">一意の XML 識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-257">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-258">指定した URI、ターゲット モード、リレーションシップ型、および [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-258">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-259">指定したパーツへのパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-259">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-260">パッケージ レベルのリレーションシップでは、パッケージと関連付けられているターゲット部品またはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-260">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="dd25e-261">パッケージ レベルのリレーションシップは、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-261">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="dd25e-262">間、<xref:System.IO.Packaging.Package>パッケージではパーツをターゲットにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-262">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="dd25e-263">間、<xref:System.IO.Packaging.Package>パッケージの外部のターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-263">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-264">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-264">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-265">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-265">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="dd25e-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 物理的に変わらないターゲット パーツまたは任意の方法でリソース。</span><span class="sxs-lookup"><span data-stu-id="dd25e-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="dd25e-267">リレーションシップのターゲットは、別のリレーションシップをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-267">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="dd25e-268">`id` 有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd25e-268">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="dd25e-269">`id`型は、XML スキーマ第 2 部に規定された名前付け規則に従う必要があります、xsd:ID: データ型の仕様 (を参照してください[ http://www.w3.org/TR/xmlschema-2/#ID ](http://www.w3.org/TR/xmlschema-2/))。</span><span class="sxs-lookup"><span data-stu-id="dd25e-269">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).</span></span>  
  
 <span data-ttu-id="dd25e-270">場合`id`として指定された`null`一意の ID を自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-270">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="dd25e-271">`id`空で指定された文字列が無効です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-271">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="dd25e-272">場合`targetMode`として指定された<xref:System.IO.Packaging.TargetMode.Internal>、`targetUri`に従って形成される相対 URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-272">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-273">内部の相対 URI か、絶対パスを指定できますなどの文字をスラッシュ (「/」) で起動"/page1.xaml"または"/images/picture4.jpg"、またはなどの相対パス"../imagespicture1.jpg"パッケージのルートに対して (「/」) として、ベース URI を解決します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-273">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="dd25e-274">場合`targetMode`として指定された<xref:System.IO.Packaging.TargetMode.External>、`targetUri`は、絶対または相対 URI の形式に従って、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-275">"http://www.microsoft.com/page2.xml"外部の対象リソース「page2.xml」を参照する絶対 URI の例に示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-275">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="dd25e-276">"images/picture1.jpg"は、外部の対象リソース"1.jpg"が解決される、に対して、パッケージ自体の URI を参照する相対 URI の例を示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-276">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="dd25e-277">`relationshipType` に従って形成される URI である必要があります、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-277">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-278">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="dd25e-278">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="dd25e-279">パッケージ レベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="dd25e-279">Package-level Relationship</span></span>|<span data-ttu-id="dd25e-280">リレーションシップ型の URI</span><span class="sxs-lookup"><span data-stu-id="dd25e-280">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="dd25e-281">主要プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-281">Core Properties</span></span>|<span data-ttu-id="dd25e-282">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-282">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="dd25e-283">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-283">Digital Signature</span></span>|<span data-ttu-id="dd25e-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="dd25e-285">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-285">Digital Signature Certificate</span></span>|<span data-ttu-id="dd25e-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="dd25e-287">デジタル署名の発行元</span><span class="sxs-lookup"><span data-stu-id="dd25e-287">Digital Signature Origin</span></span>|<span data-ttu-id="dd25e-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/オリジン</span><span class="sxs-lookup"><span data-stu-id="dd25e-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="dd25e-289">縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-289">Thumbnail</span></span>|<span data-ttu-id="dd25e-290">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-290">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="dd25e-291">パッケージとパッケージ リレーションシップに関する詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-291">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-292">次の例は、使用する方法を示しています。<xref:System.IO.Packaging.Package.CreateRelationship%2A>を作成する、<xref:System.IO.Packaging.PackageRelationship>間、<xref:System.IO.Packaging.Package>とルート ドキュメントの一部です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-292">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="dd25e-293">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-293">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-294">
            <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-294">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-295">
            <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-295">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-296">
            <paramref name="targetMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-296">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-297">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-297">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-298">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-298">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="dd25e-299">
            <paramref name="id" /> が有効な XML 識別子ではないか、指定した <paramref name="id" /> を持つパーツが既にパッケージ内に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-299">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-300">削除するパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-300">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-301">指定した URI を持つパーツをパッケージから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-301">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-302">`partUri` 文字、スラッシュ (「/」) で始まる絶対パスで構成される相対 URI である必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd25e-302">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="dd25e-303">絶対パスはパッケージのルートに対する相対とに従っての形式が、 [RFC 3986](http://tools.ietf.org/html/rfc3986) (Uniform Resource Identifier) の一般的な構文の仕様です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-303">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="dd25e-304">"/page1.xaml"と"/images/picture4.jpg"有効なパーツ Uri の例を示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-304">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="dd25e-305">場合、指定した部分に例外が発生しなかった`partUri`がパッケージ内にありません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-305">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="dd25e-306">(使用することができます、<xref:System.IO.Packaging.Package.PartExists%2A>と指定した一部かどうかを調べます`partUri`パッケージにします)。</span><span class="sxs-lookup"><span data-stu-id="dd25e-306">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="dd25e-307">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-307">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-308">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-308">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-309">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-309">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-310">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-310">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-311">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-311">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-312">
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 内部的に、派生クラスを呼び出して<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実際には、パーツを削除するメソッドを形式に基づく、物理的な派生クラスで実装します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-312">
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-313">削除する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-313">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-314">派生クラスでオーバーライドされると、指定した URI を持つパーツを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-314">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-315">既定では、<xref:System.IO.Packaging.ZipPackage>の抽象クラスの実装を派生<xref:System.IO.Packaging.Package>クラスが提供される、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-315">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="dd25e-316">既定の操作で<xref:System.IO.Packaging.Package.DeletePart%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.DeletePartCore%2A>の<xref:System.IO.Packaging.ZipPackage>を実際に実行するクラスが派生クラスで実装されている物理的な形式に基づく操作を削除します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-316">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="dd25e-317">パッケージのモデルとパッケージ パーツの詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-317">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-318">派生クラス<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実装が呼び出される、<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />物理フォーマットを派生クラスで実装に基づいて、指定された部分にメソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-318">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="dd25e-319">派生した<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />実装することは避けて推測で処理順序で実行される操作、<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />メソッドを呼び出すことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-319">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="dd25e-320">削除する <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-320">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-321">パッケージ レベル リレーションシップを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-321">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-322">パッケージ レベルのリレーションシップでは、パッケージと関連付けられているターゲット部品またはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-322">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="dd25e-323">パッケージ レベルのリレーションシップは、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-323">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="dd25e-324">間、<xref:System.IO.Packaging.Package>パッケージではパーツをターゲットにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-324">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="dd25e-325">間、<xref:System.IO.Packaging.Package>パッケージの外部のターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-325">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-326">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-326">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-327">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-327">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="dd25e-328">場合、指定されたリレーションシップに例外が発生しなかった`id`がパッケージ内にありません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-328">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="dd25e-329"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 任意の方法でターゲット部分は物理的に変更しません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-329"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="dd25e-330">パッケージのリレーションシップの詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-330">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-331">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-331">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-332">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-332">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-333">パッケージは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-333">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="dd25e-334">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-334">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="dd25e-335">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-335">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-336">すべてのパーツおよびリレーションシップの内容をフラッシュして保存し、パッケージを閉じ、すべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-336">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-337">、すべての変更は正しく保存されるようにする<xref:System.IO.Packaging.Package.Dispose%2A>も終了し、フラッシュ、し、すべてのパーツとパッケージに含まれているリレーションシップを閉じます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-337">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="dd25e-338"><xref:System.IO.Packaging.Package>クラス、<xref:System.IO.Packaging.Package.Dispose%2A>と<xref:System.IO.Packaging.Package.Close%2A>、同じ操作を実行します - を呼び出す必要はありません<xref:System.IO.Packaging.Package.Dispose%2A>を呼び出す場合<xref:System.IO.Packaging.Package.Close%2A>、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-338">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="dd25e-339"><xref:System.IO.Packaging.Package.Close%2A> および<xref:System.IO.Packaging.Package.Dispose%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.Flush%2A>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-339"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="dd25e-340">割り当てし、非メモリ リソースを管理する派生クラスは、リソースを解放するには、このメソッドをオーバーライドする必要がありますと<xref:System.IO.Packaging.Package.Dispose%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-340">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="dd25e-341">派生クラスのオーバーライドを呼び出す必要もあります<xref:System.IO.Packaging.Package.Flush%2A>基底クラスと<xref:System.IO.Packaging.Package.Dispose%2A>基底クラスがクリーンアップされ、常に実行されているかどうかを確認するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dd25e-341">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd25e-342">`using`ステートメント (異なる、`using`名前空間ディレクティブ) することをお勧め<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>パッケージです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-342">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="dd25e-343">[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)を閉じてを使用してパッケージを破棄する方法を示しています、`using`ステートメントです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-343">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-344">パッケージのファイル アクセス設定を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-344">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd25e-345">
            <see cref="T:System.IO.FileAccess" /> 値、つまり <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、または <see cref="F:System.IO.FileAccess.ReadWrite" /> の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-345">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-346"><xref:System.IO.Packaging.Package.FileOpenAccess%2A>プロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-346">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="dd25e-347">ファイル アクセスの設定がで指定された、<xref:System.IO.Packaging.Package.%23ctor%2A>コンス トラクターを呼び出すまたは新しいパッケージを作成する場合に、<xref:System.IO.Packaging.Package.Open%2A>既存のパッケージを開くときに呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-347">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-348">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-348">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-349">パッケージに含まれているすべてのパーツおよびリレーションシップの内容を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-349">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-350"><xref:System.IO.Packaging.Package.Flush%2A> 内部的に、派生クラスを呼び出して<xref:System.IO.Packaging.Package.FlushCore%2A>の実際のファイル形式に固有のフラッシュ操作を実行する実装。</span><span class="sxs-lookup"><span data-stu-id="dd25e-350"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="dd25e-351">派生クラスの<xref:System.IO.Packaging.Package.FlushCore%2A>メソッドは、実際には、特定の物理的な派生クラスの実装をパーツとリレーションシップのコンテンツを保存するために行います。</span><span class="sxs-lookup"><span data-stu-id="dd25e-351">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="dd25e-352">既定では、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-352">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="dd25e-353">既定の操作で<xref:System.IO.Packaging.Package.Flush%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.FlushCore%2A>を ZIP ファイルのパッケージ内のパーツとリレーションシップを保存します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-353">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="dd25e-354"><xref:System.IO.Packaging.Package.Flush%2A> によって自動的に呼び出されますが、<xref:System.IO.Packaging.Package.Close%2A>と<xref:System.IO.Packaging.Package.Dispose%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-354"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="dd25e-355">ときに<xref:System.IO.Packaging.Package.Close%2A>または<xref:System.IO.Packaging.Package.Dispose%2A>が呼び出された呼び出しする必要はありません<xref:System.IO.Packaging.Package.Flush%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-355">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-356">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-356">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-357">パッケージは読み取り専用であり、変更することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-357">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-358">
              <see cref="M:System.IO.Packaging.Package.Flush" /> 内部的に、派生クラスを呼び出して<see cref="M:System.IO.Packaging.Package.FlushCore" />物理フォーマットを派生クラスで実装に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-358">
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-359">派生クラスでオーバーライドされると、すべてのパーツとリレーションシップの内容を派生クラス ストアに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-359">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-360"><xref:System.IO.Packaging.Package.FlushCore%2A> によって呼び出される、<xref:System.IO.Packaging.Package.Flush%2A>の実際のフラッシュ操作を実行するメソッドを形式に基づく、物理的な派生クラスで実装します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-360"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-361">派生した<see cref="M:System.IO.Packaging.Package.FlushCore" />実装は注文またはによって実行される操作について、推測に基づいてにしないように、<see cref="M:System.IO.Packaging.Package.Flush" />メソッドを呼び出すことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-361">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-362">返すパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-362">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-363">指定した URI を持つパーツを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-363">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-364">指定した <paramref name="partUri" /> を持つパーツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-364">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-365"><xref:System.InvalidOperationException>がスローされる場合に、指定した部分`partUri`存在しません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-365">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="dd25e-366"><xref:System.IO.Packaging.Package.PartExists%2A>を決定するメソッドを使用できるかどうか`partUri`既存のパーツを参照します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-366">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="dd25e-367">既定では、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-367">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="dd25e-368">既定の操作で<xref:System.IO.Packaging.Package.GetPart%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルからの要求の一部を返すためにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-368">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="dd25e-369">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-369">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-370">次の例では、検索、取得、およびパッケージに含まれている部分を読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dd25e-370">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="dd25e-371">サンプル全体については、次を参照してください。[パッケージ サンプルの読み取り](http://go.microsoft.com/fwlink/?LinkID=160034)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-371">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-372">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-372">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-373">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-373">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dd25e-374">指定した <paramref name="partUri" /> を持つパーツが、パッケージ内に存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-374">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-375">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-375">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-376">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-376">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-377">
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 派生クラスを呼び出し、内部的に<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />物理フォーマットを派生クラスで実装に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-377">
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-378">取得するパーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-378">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-379">派生クラスでオーバーライドされると、指定した URI によってアドレス指定されるパーツを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-379">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-380">要求されたパーツ。指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-380">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-381">既定では、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>クラスが提供される、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-381">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="dd25e-382">既定の操作で<xref:System.IO.Packaging.Package.GetPart%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルから一部を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="dd25e-382">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="dd25e-383">パッケージのモデルとパッケージ パーツの詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-383">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-384">派生クラス<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装が呼び出される、<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />メソッドにアクセスして、指定の一部を返したりする形式に基づく、物理的な派生クラスで実装します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-384">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="dd25e-385">派生した<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />実装することは避けて推測で処理順序で実行される操作、<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />メソッドを呼び出すことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-385">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-386">パッケージに含まれているすべてのパーツのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-386">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-387">パッケージに含まれているすべての <see cref="T:System.IO.Packaging.PackagePart" /> 要素のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-387">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-388"><xref:System.IO.Packaging.Package.GetParts%2A> など、パッケージに含まれているすべての部分のコレクションを返します<xref:System.IO.Packaging.PackageRelationship>部分。</span><span class="sxs-lookup"><span data-stu-id="dd25e-388"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="dd25e-389"><xref:System.IO.Packaging.Package.GetParts%2A> 返すことは`null`。 ただし、パッケージに部分が含まれていない場合、返されるコレクションは要素がゼロには。</span><span class="sxs-lookup"><span data-stu-id="dd25e-389"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="dd25e-390">既定では、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>基底クラスが提供され、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-390">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="dd25e-391">既定の操作で<xref:System.IO.Packaging.Package.GetParts%2A>呼び出し、<xref:System.IO.Packaging.Package.GetPartsCore%2A>のメソッド、 <xref:System.IO.Packaging.ZipPackage> ZIP ファイルからの部分を返すためにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-391">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="dd25e-392">パッケージとパッケージ パーツの詳細についてを参照してください 1.1 のダウンロード可能な Open Packaging Conventions (OPC) 仕様で[ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-392">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-393">次の例を使用する方法を示しています、<xref:System.IO.Packaging.Package.GetParts%2A>に含まれるパーツのコレクションを取得するメソッド、<xref:System.IO.Packaging.Package>です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-393">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="dd25e-394">完全なプログラム ソース コードでは、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-394">For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-395">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-395">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-396">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-396">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-397">
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 派生クラスを呼び出し、内部的に<see cref="M:System.IO.Packaging.Package.GetPartsCore" />物理フォーマットを派生クラスで実装に基づいて、実際には、一部をフラッシュします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-397">
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-398">派生クラスでオーバーライドされると、パッケージ内のすべてのパーツの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-398">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-399">パッケージに含まれるすべてのパーツの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-399">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-400">派生クラス<xref:System.IO.Packaging.Package.GetPartsCore%2A>実装が呼び出される、<xref:System.IO.Packaging.Package.GetParts%2A>メソッドにアクセスし、構成要素の配列を返す形式に基づく、物理的な派生クラスで実装します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-400">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="dd25e-401">既定では、<xref:System.IO.Packaging.ZipPackage>抽象の実装を派生<xref:System.IO.Packaging.Package>クラスが提供される、使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-401">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="dd25e-402">既定の操作で<xref:System.IO.Packaging.Package.GetParts%2A>内部的に呼び出す<xref:System.IO.Packaging.Package.GetPartCore%2A>の<xref:System.IO.Packaging.ZipPackage>ZIP ファイルからの部分を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="dd25e-402">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="dd25e-403">パッケージのモデルとパッケージ パーツの詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様の第 1 章を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-403">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dd25e-404">派生した<see cref="M:System.IO.Packaging.Package.GetPartsCore" />実装することは避けて推測で処理順序で実行される操作、<see cref="M:System.IO.Packaging.Package.GetParts" />メソッドを呼び出すことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="dd25e-404">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="dd25e-405">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-405">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-406">指定した ID を持つパッケージ レベル リレーションシップを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-406">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-407">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-407">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-408">`id` 有効な XML 識別子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd25e-408">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="dd25e-409">`id`型は、XML スキーマ第 2 部に規定された名前付け規則に従う必要があります、xsd:ID: データ型の仕様 (を参照してください[ http://www.w3.org/TR/xmlschema-2/#ID ](http://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="dd25e-409">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="dd25e-410">パッケージとパッケージ リレーションシップに関する詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-410">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-411">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-411">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="dd25e-412">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-412">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dd25e-413">指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-413">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-414">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-414">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-415">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-415">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-416">すべてのパッケージ レベル リレーションシップのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-416">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-417">パッケージに含まれているすべてのパッケージ レベル リレーションシップのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-417">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-418"><xref:System.IO.Packaging.Package.GetRelationships%2A> 返すことは`null`; が、返されるコレクションが、パッケージにパッケージ レベルのリレーションシップが含まれていない場合に 0 個の要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-418"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="dd25e-419">パッケージ レベルのリレーションシップでは、パッケージと関連付けられているターゲット部品またはリソース間のアソシエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-419">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="dd25e-420">パッケージ レベルのリレーションシップは、2 つの形式のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-420">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="dd25e-421">間、<xref:System.IO.Packaging.Package>パッケージではパーツをターゲットにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-421">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="dd25e-422">間、<xref:System.IO.Packaging.Package>パッケージの外部のターゲット リソースにします。</span><span class="sxs-lookup"><span data-stu-id="dd25e-422">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="dd25e-423">パッケージのリレーションシップでは、パッケージが、リレーションシップの「所有者」と見なされます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-423">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="dd25e-424">パッケージが削除されると、パッケージによって所有されているすべてのリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="dd25e-424">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="dd25e-425">作成するか、リレーションシップの削除のプロセスも物理的に、ターゲットのパーツまたは任意の方法でリソースは変更されません。</span><span class="sxs-lookup"><span data-stu-id="dd25e-425">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="dd25e-426">パッケージとパッケージ リレーションシップに関する詳細についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-426">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-427">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-427">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-428">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-428">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="dd25e-429">コレクションで照合を行い、結果を返す <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-429">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-430">指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するすべてのパッケージ レベル リレーションシップのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-430">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-431">指定した <paramref name="relationshipType" /> に一致するパッケージ レベル リレーションシップのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-431">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-432"><xref:System.IO.Packaging.Package.GetRelationships%2A> 返すことは`null`以外の場合は、返されるコレクションが、指定された一致するパッケージ レベルのリレーションシップが存在しない場合に 0 個の要素が含まれますが、`relationshipType`です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-432"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="dd25e-433">次の表は、パッケージ レベル`relationshipType`Open Packaging Conventions (OPC) 仕様で定義されている Uri。</span><span class="sxs-lookup"><span data-stu-id="dd25e-433">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="dd25e-434">パッケージ レベルのリレーションシップ</span><span class="sxs-lookup"><span data-stu-id="dd25e-434">Package-level Relationship</span></span>|<span data-ttu-id="dd25e-435">リレーションシップ型の URI</span><span class="sxs-lookup"><span data-stu-id="dd25e-435">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="dd25e-436">主要プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-436">Core Properties</span></span>|<span data-ttu-id="dd25e-437">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/コア プロパティ</span><span class="sxs-lookup"><span data-stu-id="dd25e-437">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="dd25e-438">デジタル署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-438">Digital Signature</span></span>|<span data-ttu-id="dd25e-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/署名</span><span class="sxs-lookup"><span data-stu-id="dd25e-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="dd25e-440">デジタル署名証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-440">Digital Signature Certificate</span></span>|<span data-ttu-id="dd25e-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/証明書</span><span class="sxs-lookup"><span data-stu-id="dd25e-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="dd25e-442">デジタル署名の発行元</span><span class="sxs-lookup"><span data-stu-id="dd25e-442">Digital Signature Origin</span></span>|<span data-ttu-id="dd25e-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al 署名/オリジン</span><span class="sxs-lookup"><span data-stu-id="dd25e-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="dd25e-444">縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-444">Thumbnail</span></span>|<span data-ttu-id="dd25e-445">http://schemas.openxmlformats.org/package/2006/relationships/meta データ/縮小表示</span><span class="sxs-lookup"><span data-stu-id="dd25e-445">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="dd25e-446">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-446">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-447">次の例では、パッケージに定義されているリレーションシップを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-447">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="dd25e-448">サンプル全体については、次を参照してください。[パッケージ サンプルの読み取り](http://go.microsoft.com/fwlink/?LinkID=160034)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-448">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-449">
            <paramref name="relationshipType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-449">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-450">
            <paramref name="relationshipType" /> が空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-450">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-451">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-451">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-452">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-452">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-453">パッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-453">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-454"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-454"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-455">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-455">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-456">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-456">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="dd25e-457">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-457">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="dd25e-458">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-458">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-459">指定した IO ストリームでパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-459">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-460">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-460">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-461"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-461"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-462">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-462">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-463">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-463">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-464">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-464">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="dd25e-465">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-465">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-466">指定したパスとファイル名でパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-466">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-467">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-467">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-468"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-468"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-469">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定の属性を持つパッケージを開きます<xref:System.IO.FileMode.OpenOrCreate>、 <xref:System.IO.FileAccess.ReadWrite>、および<xref:System.IO.FileShare.None>(をさまざまな属性を使用して、他の Open メソッドのオーバー ロードのいずれかを指定)。</span><span class="sxs-lookup"><span data-stu-id="dd25e-469">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="dd25e-470">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-470">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-471">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-471">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="dd25e-472">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-472">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-473">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-473">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="dd25e-474">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-474">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="dd25e-475">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-475">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-476">指定した IO ストリームとファイル モードでパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-476">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-477">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-477">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-478"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-478"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-479">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-479">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-480">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-480">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-481">
            <paramref name="packageMode" /> の値が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-481">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-482">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-482">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="dd25e-483">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-483">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="dd25e-484">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-484">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-485">指定したファイル モードを使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-485">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-486">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-486">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-487"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-487"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-488">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定の属性を持つパッケージを開きます<xref:System.IO.FileAccess.ReadWrite>と<xref:System.IO.FileShare.None>(をさまざまな属性を使用して、他の Open メソッドのオーバー ロードのいずれかを指定)。</span><span class="sxs-lookup"><span data-stu-id="dd25e-488">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="dd25e-489">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-489">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-490">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-490">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="dd25e-491">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-491">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-492">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-492">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-493">
            <paramref name="packageMode" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-493">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="dd25e-494">パッケージを開く IO ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-494">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="dd25e-495">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-495">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="dd25e-496">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-496">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-497">指定した IO ストリーム、ファイル モード、およびファイル アクセス設定でパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-497">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-498">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-498">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-499"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-499"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-500">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-500">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-501">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-501">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-502">
            <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-502">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-503">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-503">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="dd25e-504">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-504">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="dd25e-505">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-505">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="dd25e-506">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-506">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-507">指定したファイル モードとファイル アクセス設定を使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-507">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-508">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-508">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-509"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-509"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-510">これは、<xref:System.IO.Packaging.Package.Open%2A>メソッドは、既定値は、パッケージを開きます<xref:System.IO.FileShare.None>属性 (別の属性の使用を指定する、<xref:System.IO.Packaging.Package.Open%2A>メソッドのオーバー ロード)。</span><span class="sxs-lookup"><span data-stu-id="dd25e-510">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="dd25e-511">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-511">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-512">次の例を開いたり読み取ったりする方法を示しています、<xref:System.IO.Packaging.Package>を格納している<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-512">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="dd25e-513">サンプル全体については、次を参照してください。[パッケージ サンプルの読み取り](http://go.microsoft.com/fwlink/?LinkID=160034)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-513">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-514">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-514">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-515">
            <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-515">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="dd25e-516">パッケージのパスおよびファイル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-516">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="dd25e-517">パッケージを開くときのファイル モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-517">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="dd25e-518">パッケージを開くときのファイル アクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-518">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="dd25e-519">パッケージを開くときのファイル共有モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-519">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-520">指定したファイル モード、ファイル アクセス、およびファイル共有設定を使用して、指定したパスにあるパッケージを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-520">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-521">開かれたパッケージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-521">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-522"><xref:System.IO.Packaging.ZipPackage> によって使用される既定のパッケージの種類には、<xref:System.IO.Packaging.Package.Open%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dd25e-522"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="dd25e-523">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-523">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd25e-524">次の例は、新しいを作成する方法を示しています。<xref:System.IO.Packaging.Package>を組み込んだ<xref:System.IO.Packaging.PackageRelationship>と<xref:System.IO.Packaging.PackagePart>と共に格納されているデータ要素です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-524">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="dd25e-525">サンプル全体については、次を参照してください。[パッケージ サンプルの書き込み](http://go.microsoft.com/fwlink/?LinkID=160055)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-525">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-526">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-526">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dd25e-527">
            <paramref name="packageMode" />、<paramref name="packageAccess" />、または <paramref name="packageShare" /> の値が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-527">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-528">パッケージのコア プロパティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-528">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd25e-529">パッケージのコア プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-529">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-530">主要パッケージ プロパティの追加についてを参照してくださいでダウンロード可能な Open Packaging Conventions (OPC) 仕様のセクション 3.1 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-530">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-531">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-531">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="dd25e-532">チェックするパーツの <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-532">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-533">指定した URI を持つパーツがパッケージ内に存在するかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-533">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-534">指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-534">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-535">`partUri`スラッシュ文字で始まる必要があります「/」パッケージのルートからの絶対を指定します。</span><span class="sxs-lookup"><span data-stu-id="dd25e-535">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="dd25e-536">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-536">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-537">
            <paramref name="partUri" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-537">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dd25e-538">
            <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-538">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-539">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-539">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-540">パッケージは書き込み専用です (情報を読み取ることはできません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-540">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="dd25e-541">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-541">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd25e-542">指定した ID を持つパッケージ レベル リレーションシップがパッケージに含まれているかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-542">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd25e-543">指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-543">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd25e-544">詳細については、ダウンロード、Open Packaging Conventions (OPC) 仕様を参照してください。 [ http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)です。</span><span class="sxs-lookup"><span data-stu-id="dd25e-544">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dd25e-545">
            <paramref name="id" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-545">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="dd25e-546">
            <paramref name="id" /> が有効な XML 識別子でありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-546">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dd25e-547">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-547">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="dd25e-548">パッケージは書き込み専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-548">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd25e-549">このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。アプリケーションで使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-549">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="dd25e-550">代わりに、タイプ セーフ <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> メソッドを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd25e-550">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>