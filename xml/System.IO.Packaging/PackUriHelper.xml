<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d281434774845f55f818257f013ac811314dd35" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996876" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パック URI オブジェクトを作成および解析するユーティリティ メソッドを提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">最初のパック URI。</param>
        <param name="secondPackUri">2 番目のパック URI。</param>
        <summary>2 つのパック URI が同等であるかどうかを示す値を返します。</summary>
        <returns><paramref name="firstPackUri" /> と <paramref name="secondPackUri" /> との間のリレーションシップを示す符号付き整数。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 説明 
 </description></listheader><item><term> 0 より小さい 
 </term><description><paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> より小さい値です。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> と同じです。  
  
 </description></item><item><term> 0 より大きい 
 </term><description><paramref name="firstPackUri" /> が <paramref name="secondPackUri" /> より大きくなっています。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 両方`firstPackUri`と`secondPackUri`は`null`、 <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 0 を返します。 パック Uri を比較するときに null の URI は常に null 以外の URI よりも小さいです。    場合、`firstPackUri`と`secondPackUri`は両方の絶対パック Uri、<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A>比較を実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が絶対 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ではありません。  
  
- または - 
<paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が "pack://" スキームで始まっていません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]最初の<see cref="T:System.IO.Packaging.PackagePart" />します。</param>
        <param name="secondPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 、2 つ目の<see cref="T:System.IO.Packaging.PackagePart" />します。</param>
        <summary>2 つのパッケージ パーツの [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] が同等であるかどうかを示す値を返します。</summary>
        <returns>間のリレーションシップを示す値<paramref name="firstPartUri" />と<paramref name="secondPartUri" />します。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 説明 
 </description></listheader><item><term> 0 より小さい 
 </term><description><paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> より小さい値です。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> と同じです。  
  
 </description></item><item><term> 0 より大きい 
 </term><description><paramref name="firstPartUri" /> が <paramref name="secondPartUri" /> より大きくなっています。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 両方`firstPartUri`と`secondPartUri`は`null`、 <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 0 を返します。 比較するときに<xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)]、null[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]は常に null 以外のよりも小さい[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。 場合、`firstPartUri`と`secondPartUri`はどちらも相対<xref:System.IO.Packaging.PackagePart>Uri、<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A>比較を実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> または<paramref name="secondPartUri" />有効な一部でない[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]構文。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいパック URI を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表のサンプル ケースを示しています、<xref:System.IO.Packaging.PackUriHelper.Create%2A>メソッド。  
  
|`packageUri`|`partUri`|`fragment`|返されたパック URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:、および www.proseware.com、mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:、および www.proseware.com、mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:、および www.proseware.com、packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:、および www.proseware.com、mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:、および ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:、d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順がのスラッシュ (/) 文字を置き換えるには、`packageUri`をコンマ (,) です。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列変換の例」と付録 B.3「Pack URI を作成する」でダウンロード可能な Open Packaging Conventions 仕様[仕様ライセンスのダウンロードと](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">参照先の <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <summary>パッケージを指す新しいパック URI を作成します。</summary>
        <returns>指定された <paramref name="packageUri" /> によって参照されている <see cref="T:System.IO.Packaging.Package" /> のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` として指定されていない可能性があります`null`または空です。  
  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.Create%2A>します。  
  
|`packageUri`|返されたパック URI|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|pack://http:、および www.proseware.com、mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|pack://file:、d:,packages,mypackage2.pkg|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順がのスラッシュ (/) 文字を置き換えるには、`packageUri`をコンマ (,) です。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列変換の例」と付録 B.3「Pack URI を作成する」でダウンロード可能な Open Packaging Conventions 仕様[仕様ライセンスのダウンロードと](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackUriHelper.Create%2A>パッケージのパッケージを参照する URI を定義するメソッド。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri"><see cref="T:System.IO.Packaging.Package" /> の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] およびパッケージ内にあるパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] が指定されている場合に、パック URI を作成します。</summary>
        <returns>指定された <see cref="T:System.IO.Packaging.PackagePart" /> のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` null または空としてしない指定できます。  
  
 場合`partUri`は`null`、返されたパッケージの URI が、パッケージを指します。  
  
 次の表のサンプル ケースを示しています、<xref:System.IO.Packaging.PackUriHelper.Create%2A>メソッド。  
  
|`packageUri`|`partUri`|返されたパック URI|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|pack://http:、および www.proseware.com、mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|pack://http:、および www.proseware.com、mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|pack://http:、および www.proseware.com、mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|pack://http:、および www.proseware.com、mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|pack://http:、および www.proseware.com、mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack://ftp:、および ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:、d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順がのスラッシュ (/) 文字を置き換えるには、`packageUri`をコンマ (,) です。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列変換の例」と付録 B.3「Pack URI を作成する」でダウンロード可能な Open Packaging Conventions 仕様[仕様ライセンスのダウンロードと](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>パッケージのパッケージを参照する URI を定義するメソッド。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。  
  
- または - 
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri"><see cref="T:System.IO.Packaging.Package" /> の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <param name="fragment">パッケージ パーツ内の要素を識別する「#」参照。</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、パッケージ内にあるパーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、および追加する "#" フラグメントが指定されている場合に、パック URI を作成します。</summary>
        <returns>指定したパッケージ、パッケージ パーツ、およびフラグメントを識別するパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` として指定されていない可能性があります`null`または空です。  
  
 場合`partUri`は`null`、返されたパッケージの URI が、パッケージを指します。  
  
 `fragment` 空の文字列にすることはできませんが、として指定できます`null`します。  として指定されていない場合`null`、`fragment`文字列は、'#' 文字で始める必要があります。  構文の詳細については`fragment`参照、参照セクション 3.5"Fragment"の[RFC 3986](https://www.ietf.org/rfc/rfc3986.txt)します。  
  
 次の表のサンプル ケースを示しています、<xref:System.IO.Packaging.PackUriHelper.Create%2A>メソッド。  
  
|`packageUri`|`partUri`|`fragment`|返されたパック URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:、および www.proseware.com、mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:、および www.proseware.com、mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:、および www.proseware.com、mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:、および www.proseware.com、packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:、および www.proseware.com、mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:、および ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:、d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順がのスラッシュ (/) 文字を置き換えるには、`packageUri`をコンマ (,) です。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列変換の例」と付録 B.3「Pack URI を作成する」でダウンロード可能な Open Packaging Conventions 仕様[仕様ライセンスのダウンロードと](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>パッケージのパッケージを参照する URI を定義するメソッド。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> は絶対 URI ではありません。  
  
- または - 
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。  
  
- または - 
 <paramref name="fragment" /> は空であるか、または「#」で始まっています。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI、<see cref="T:System.IO.Packaging.PackagePart" />パッケージ内で。</param>
        <summary>作成、書式設定された<see cref="T:System.IO.Packaging.PackagePart" />URI。</summary>
        <returns>書式設定された<see cref="T:System.IO.Packaging.PackagePart" />URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の<xref:System.IO.Packaging.PackagePart>から常に参照されますが、<xref:System.IO.Packaging.Package>ルート。  
  
 返された<xref:System.IO.Packaging.PackagePart>URI は絶対パスで始まる常に「/」で定義されている構文に準拠していると、 [Open Packaging 規則仕様](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>します。  
  
|`partUri`|返されるパーツ URI|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>の相対 Uri を定義するメソッド<xref:System.IO.Packaging.PackagePart>要素。  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">パッケージ サンプルの記述</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 絶対<see cref="T:System.Uri" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="T:System.IO.Packaging.PackagePart" />を正規化する URI。</param>
        <summary>指定の正規化形式を返します<see cref="T:System.IO.Packaging.PackagePart" />URI。</summary>
        <returns>正規化された形式の指定された<paramref name="partUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> 正規化`partUri`を大文字に大文字変換によって (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) 結果を返すとします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 有効なが<see cref="T:System.Uri" />構文。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.Package" /> のURI を返すパック URI。</param>
        <summary>指定したパッケージの URI のパッケージ全体を指す内部 URI を返します。</summary>
        <returns>指定した <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.Package" /> の URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>します。  
  
|`packUri`|返されるパッケージ URI|  
|---------------|--------------------------|  
|pack://http:、および www.proseware.com、mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|pack://http:、および www.proseware.com、packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|pack://http:、および www.proseware.com、mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|pack://file:、d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> 絶対<see cref="T:System.Uri" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.PackagePart" /> URI を返す元のパック URI。</param>
        <summary>指定されたパック URI 内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI を返します。</summary>
        <returns>指定された <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> の URI、または <paramref name="packUri" /> が <see cref="T:System.IO.Packaging.PackagePart" /> の代わりのパッケージをポイントする場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された<xref:System.IO.Packaging.PackagePart>URI は、パッケージのルートを基準があり、常に語句で始まる絶対パスは、「/」で定義されている構文に準拠していると、 [Open Packaging 規則仕様](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>します。  
  
|`packUri`|返されるパーツ URI|  
|---------------|-----------------------|  
|pack://http:、および www.proseware.com、mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|pack://http:、および www.proseware.com、packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  
|pack://http:、および www.proseware.com、mypackage.pkg|null|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  
|pack://file:、d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" />の<see cref="T:System.IO.Packaging.PackagePart" />を関連付けられている URI を返す<see cref="T:System.IO.Packaging.PackageRelationship" />します。</param>
        <summary>指定した <see cref="T:System.IO.Packaging.PackagePart" /> に関連付けられているリレーションシップ パーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を返します。</summary>
        <returns>URI、<see cref="T:System.IO.Packaging.PackageRelationship" />パーツに関連付けられている、<see cref="T:System.IO.Packaging.PackagePart" />で識別される<paramref name="partUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` いずれかを識別する必要があります、 <xref:System.IO.Packaging.Package> (「/」) または<xref:System.IO.Packaging.PackagePart>でない、<xref:System.IO.Packaging.PackageRelationship>部分。  
  
 詳細については<xref:System.IO.Packaging.PackageRelationship>パーツは、ダウンロードできるオープン パッケージ規則仕様のセクション 9.3「リレーションシップ」を参照してください[仕様書、およびライセンス ダウンロード](https://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## Examples  
 [WPF におけるパッケージの URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Open Packaging 規則仕様](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> パッケージ パーツ URI の構文が正しくありません。  
  
- または - 
 <paramref name="partUri" /> 絶対 URI です。  
  
- または - 
 <paramref name="partUri" /> リレーションシップ パーツを参照します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]ソース パーツの。</param>
        <param name="targetPartUri">ターゲット パーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <summary>指定した 2 つの <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] の間における相対 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を返します。</summary>
        <returns>相対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]から<paramref name="sourcePartUri" />に<paramref name="targetPartUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>します。  
  
|`sourcePartUri`|`targetPartUri`|相対 URI が返されます|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> または <paramref name="targetPartUri" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
        <exception cref="T:System.ArgumentException">いずれか、<paramref name="sourcePartUri" />または<paramref name="targetPartUri" />はありませんが、有効な<see cref="T:System.Uri" />構文。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]を返すリレーションシップ パーツの<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />から。</param>
        <summary>返します、<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />から、<see cref="T:System.IO.Packaging.PackageRelationship" />と指定した[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。</summary>
        <returns><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />の<see cref="T:System.IO.Packaging.PackagePart" />指定したリレーションシップから<paramref name="relationshipPartUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>リレーションシップ パーツのプロパティは、いずれかを識別する必要があります、 <xref:System.IO.Packaging.PackagePart.Package%2A> (「/」) または<xref:System.IO.Packaging.PackagePart>でない、<xref:System.IO.Packaging.PackageRelationship>します。  
  
 たとえば場合、パッケージ パーツ"/files/document.xaml"リレーションシップ パーツのソースの所有者は、"/files/_rels/document.xaml.rels"を呼び出すと、<xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A>で、`relationshipPartUri`のパラメーター"/files/_rels/document.xaml.rels"、を返します<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>の"/files/document.xaml"。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> 絶対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。  
  
- または - 
 <paramref name="relationshipPartUri" /> 構文は無効です、<see cref="T:System.IO.Packaging.PackagePart" />します。  
  
- または - 
 <paramref name="relationshipPartUri" /> リレーションシップ パーツを参照していません。  
  
- または - 
リレーションシップ パーツの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> が別のリレーションシップ パーツを参照しています (無効)。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]をチェックする、<see cref="T:System.IO.Packaging.PackageRelationship" />部分。</param>
        <summary>示す値を返します、指定したかどうか[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]は、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の<see cref="T:System.IO.Packaging.PackageRelationship" />部分。</summary>
        <returns><see langword="true" /> 場合<paramref name="partUri" />識別、<see cref="T:System.IO.Packaging.PackageRelationship" />一部。 そうしないと、<see langword="false" />します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 絶対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。  
  
- または - 
 <paramref name="partUri" /> 無効なの<see cref="T:System.IO.Packaging.PackagePart" />構文。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">ソース パーツの URI または指定するのには、「/」、<see cref="T:System.IO.Packaging.Package" />ルート。</param>
        <param name="targetUri">ターゲット パーツへの相対 URI。</param>
        <summary>ソース パーツ URI を指定された URI の一部と URI と相対パスに戻りますターゲット パーツ。</summary>
        <returns>ターゲット パーツの URI は、指定された間解決<paramref name="SourcePartUri" />と<paramref name="targetUri" />パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表のサンプル ケースを示しています。<xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>します。  
  
|`sourcePartUri`|`targetUri`|返された URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> メソッドを使用する方法の例を次に示します。  サンプル全体については、次を参照してください。[読み取るパッケージ サンプル](https://go.microsoft.com/fwlink/?LinkID=160034)します。  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> または <paramref name="targetUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> 有効なパーツ URI ではありません。  
  
- または - 
 <paramref name="targetUri" /> 有効な相対 URI ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 規則仕様</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パック URI スキーム名 "pack" を定義します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>