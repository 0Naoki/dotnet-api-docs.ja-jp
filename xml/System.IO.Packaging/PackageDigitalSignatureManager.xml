<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="177440c13bdfc7f781c8c5fce675e115c30eff0b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <TypeSignature Language="F#" Value="type PackageDigitalSignatureManager = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.IO.Packaging.Package" /> でデジタル署名を作成し検証するためのユーティリティ クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager> デジタル署名は、クラスし、と共にデジタル署名を使用して一般的なタスクを実行するためのユーティリティ クラスを提供します。 .NET Framework のアーキテクチャに基づいて<xref:System.IO.Packaging.Package>要素。  
  
 パッケージのデジタル署名の詳細についてで使用可能な Open Packaging Conventions のデジタル署名フレームワーク MSDN の記事を参照してください。 [ http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494)します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackageDigitalSignatureManager>します。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackageDigitalSignatureManager : System.IO.Packaging.Package -&gt; System.IO.Packaging.PackageDigitalSignatureManager" Usage="new System.IO.Packaging.PackageDigitalSignatureManager package" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">この署名マネージャーに関連付けられたパッケージ。</param>
        <summary>指定した <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> で使用する <see cref="T:System.IO.Packaging.Package" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 署名マネージャーに関連付けられたターゲット パッケージは、初期化中に設定されています。 プロパティを設定した後は、署名マネージャーに関連付けられているパッケージを変更できません。 必要に応じて manager パッケージごとに新しい署名を作成します。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用する方法を示しています。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateOption : System.IO.Packaging.CertificateEmbeddingOption with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージの各パートにデジタル署名するために <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> メソッドで使われる X.509 証明書の埋め込みオプションを取得または設定します。</summary>
        <value>
          <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、パーツにデジタル署名するときに、署名者の X.509 証明書を格納する場所を指定します。  
  
   
  
## Examples  
 次の例では、パッケージ内のパーツにデジタル署名するための準備でこのプロパティを設定する方法を示します。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パッケージ内の署名に、指定した X.509 証明書で副署します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberSignature Language="F#" Value="member this.Countersign : unit -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザーが選択した X.509 証明書を使用して、パッケージのすべての署名に副署名します。</summary>
        <returns>副署名として追加された署名。証明書が見つからない場合またはユーザーが証明書選択ダイアログをキャンセルした場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しで X.509 証明書が指定されていない場合、このメソッドは、署名に使用する証明書を選択するユーザーに求める証明書の選択 ダイアログ ボックスを開きます。  
  
 ウィンドウ ハンドルを設定、<xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>プロパティを呼び出す前に<xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A>証明書の選択 ダイアログを指定されたウィンドウをモーダルにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">副署名として追加する X.509 証明書。</param>
        <summary>パッケージ内のすべての署名に、指定した X.509 証明書で副署名します。</summary>
        <returns>副署名として追加された署名。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> は <see langword="null" /> です</exception>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign (certificate, signatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">指定した各<c>署名</c>に副署名するための X.509 証明書。</param>
        <param name="signatures">副署名の対象となる署名の一覧。</param>
        <summary>指定した X.509 証明書を使用して、署名の一覧に副署名します。</summary>
        <returns>各 <paramref name="signatures" /> に副署名するために使用するデジタル署名。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> パラメーター、<paramref name="signatures" /> パラメーターのいずれかが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">パッケージには、署名された <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトが含まれていません。</exception>
        <exception cref="T:System.ArgumentException">パッケージには、<see cref="T:System.IO.Packaging.PackageDigitalSignature" /> パーツが含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultHashAlgorithm : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>署名の作成および検証に使用される既定のハッシュ アルゴリズムを識別する [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 文字列を取得します。</summary>
        <value>署名の作成および検証に使用される既定のハッシュ アルゴリズムを識別する [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 標準の既定のハッシュ アルゴリズム<xref:System.IO.Packaging.PackageDigitalSignatureManager>クラスは<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)])。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>プロパティを取得または設定の実際のハッシュ アルゴリズムがこれを作成し、署名の検証に使用されます。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>をリセットするプロパティが通常使用、<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>一時の変更後に既定に戻すプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.GetSignature : Uri -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.GetSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">返されるデジタル署名の [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <summary>指定した署名の[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] に対するデジタル署名を返します。</summary>
        <returns>指定した <paramref name="signatureUri" /> のデジタル署名。指定した <paramref name="signatureUri" /> の署名が見つからない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>署名を作成および検証するために使用される <see cref="T:System.Security.Cryptography.HashAlgorithm" /> インスタンスの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 識別子を取得または設定します。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の識別子、<see cref="T:System.Security.Cryptography.HashAlgorithm" />インスタンスを作成し、署名を確認するために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 標準のデジタル署名マネージャーの既定のハッシュ アルゴリズム識別子は<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>(<xref:System.Security.Cryptography.SHA1>— セキュア ハッシュ アルゴリズム バージョン 1.0)。  
  
 セットは、それ以外の場合、このプロパティが明示的と同じ値を取得しない限り、<xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>します。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>プロパティが既定値から変更されません一般的です。 異なる正常を使用する署名の場合にのみ、アクセス可能なこのプロパティを変更する必要があります<xref:System.Security.Cryptography.HashAlgorithm>が発生しました。  異なるハッシュ アルゴリズムを使用して署名を使用し終わったら、呼び出す<xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>をリセットする、<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>プロパティを default に戻ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定する [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の文字列が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">設定する [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の文字列が空です。</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberSignature Language="F#" Value="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " Usage="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> で無効な署名が見つかった場合に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージに署名が含まれているかどうかを示す値を取得します。</summary>
        <value>パッケージに署名が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>プロパティは、署名の検証を行いません。 署名が存在する場合と<xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>は`true`、1 つ以上の署名は有効なできない可能性があります。  呼び出す<xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>署名が有効なし、変更されていないことを確認します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A>パッケージにデジタル署名が含まれるかどうかを決定するプロパティ。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>証明書選択ダイアログ ボックスを表示する親ウィンドウへのハンドルを取得または設定します。</summary>
        <value>証明書選択ダイアログ ボックスを表示するために使用する親ウィンドウのハンドル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合にのみ、証明書の選択 ダイアログ ボックスが表示されます、<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>呼び出しに証明書が含まれていません。 証明書が指定されていない場合<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>の署名に使用する証明書を選択できる証明書の選択 ダイアログ ボックスが表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllSignatures : unit -&gt; unit" Usage="packageDigitalSignatureManager.RemoveAllSignatures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パッケージからすべてのデジタル署名を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドには、パッケージからのすべての X.509 証明書も削除されます。  すべての署名と証明書を削除した後<xref:System.IO.Packaging.Package.Flush%2A>ストアへのすべての変更を確定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveSignature : Uri -&gt; unit" Usage="packageDigitalSignatureManager.RemoveSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">削除する [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の <see cref="T:System.IO.Packaging.PackageDigitalSignature" />。</param>
        <summary>指定した署名の[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] と共にデジタル署名を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、他のデジタル署名で参照されていない場合にも関連付けられている X.509 証明書を削除します。  
  
 署名を削除した後<xref:System.IO.Packaging.Package.Flush%2A>ストアへの変更を保持します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した X.509 証明書を使用して、パッケージ パーツの一覧に署名します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、内のパーツの一覧にデジタル署名する手順を示します、<xref:System.IO.Packaging.Package>します。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign parts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> 要素の[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] の一覧。</param>
        <summary>X.509 証明書をユーザーに要求するプロンプトを表示します。この証明書を使用して、指定されたパッケージ パーツの一覧にデジタル署名します。</summary>
        <returns>
          <paramref name="parts" /> の一覧に署名するために使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 証明書の選択 ダイアログを特定のウィンドウをモーダルさせるには、設定、<xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>プロパティを呼び出す前に<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>します。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> 既定の証明書ストアが含まれていない場合、証明書を求めるされませんされます。  
  
   
  
## Examples  
 次の例では、パッケージ パーツの一覧にデジタル署名する方法を示します。  サンプル全体については、次を参照してください。、[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> 要素の[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] の一覧。</param>
        <param name="certificate">指定された<c>パーツ</c>のそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <summary>指定された X.509 証明書を使用してパッケージ パーツの一覧を署名します。</summary>
        <returns>
          <paramref name="parts" /> に関する指定の一覧に署名するためのデジタル署名。証明書が見つからない場合、またはユーザーが証明書選択ダイアログ ボックスで [キャンセル] をクリックした場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、内のパーツの一覧にデジタル署名する方法を示しています、<xref:System.IO.Packaging.Package>します。  完全な例では、次を参照してください。、[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトの [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <summary>指定した X.509 証明書を使用して、パッケージ パーツとパッケージ リレーションシップの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素の署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 間`parts`と`relationshipSelectors`少なくとも 1 つの要素に署名する必要があります。  
  
   
  
## Examples  
 次の例では、パッケージ パーツの一覧にデジタル署名する方法を示します。  サンプル全体については、次を参照してください。、[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" /> または <paramref name="relationshipSelectors" /> のいずれによっても、署名するオブジェクトは指定されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトの [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <param name="signatureId">署名に関連付ける識別文字列。</param>
        <summary>指定した X.509 証明書と [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] を使用して、パッケージ パーツとパッケージ リレーションシップの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素の署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `parts`リストを空にすることまたは`null`場合`relationshipSelectors`を少なくとも 1 つのエントリが含まれています。  
  
 `relationshipSelectors`リストを空にすることまたは`null`場合`parts`を少なくとも 1 つのエントリが含まれています。  
  
 間、`parts`一覧と`relationshipSelectors`少なくとも 1 つの要素に署名する必要があります。  
  
   
  
## Examples  
 次の例では、パッケージ パーツの一覧にデジタル署名する方法を示します。  サンプル全体については、次を参照してください。、[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" />、<paramref name="relationshipSelectors" /> のいずれによっても、署名する要素は指定されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string * seq&lt;System.Security.Cryptography.Xml.DataObject&gt; * seq&lt;System.Security.Cryptography.Xml.Reference&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId, signatureObjects, objectReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトの [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <param name="signatureId">署名に関連付ける識別文字列。</param>
        <param name="signatureObjects">署名するカスタム データ オブジェクトの一覧。</param>
        <param name="objectReferences">署名するカスタム オブジェクトへの参照の一覧。</param>
        <summary>指定した X.509 証明書および署名の [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] を使用して、パッケージ パーツ、パッケージ リレーションシップ、またはカスタム オブジェクトの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素の署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 少なくとも 1 つの要素にサインインする必要があります`parts`、 `relationshipSelectors`、 `signatureObjects`、または`objectReferences`します。  
  
> [!NOTE]
>  条件`Object`、 `Manifest`、 `Reference`、 `SignatureProperties`、および`Transform`要素の型と W3C XML 署名の構文と処理の仕様で定義されているタグを参照して 2 つの注釈を次のようには、「 [ https://www.w3.org/TR/xmldsig-core/](https://www.w3.org/TR/xmldsig-core/).  
  
 このおよびその他の<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>メソッドのオーバー ロードを使用して、現在<xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A>を定義するディクショナリ、`Transform`パッケージ パーツに基づいて適用<xref:System.IO.Packaging.PackagePart.ContentType%2A>します。  Microsoft Open Packaging Conventions (OPC) 仕様現在は、2 つだけ有効な`Transform`アルゴリズム: C14 と C14N します。  W3C XML 署名の構文と処理の標準を空にすることはできません`Manifest`タグ。  Open Packaging Conventions 仕様では、また、 <xref:System.IO.Packaging.Package>-特定`Object`両方を含むタグ`Manifest`と`SignatureProperties`タグ。  各`Manifest`さらにタグ 1 つ以上含めることも`Reference`タグ。  これらのタグは、各シグネチャが少なくとも 1 つにサインインする必要があります<xref:System.IO.Packaging.PackagePart>(空でない部分タグ) または<xref:System.IO.Packaging.PackageRelationship>(空でない`relationshipSelectors`) の署名にのみ、署名が必要な場合でも`signatureObjects`または`objectReferences`します。  
  
 これは、<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>メソッドは無視、<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>プロパティに関連付けられた各<xref:System.Security.Cryptography.Xml.Reference>で定義されている`objectReferences`します。  
  
 これは、<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>オーバー ロードの生成のサポートを提供する[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]カスタムを必要とする署名`Object`タグ。  指定されたいずれかの`Object`に署名するには、タグ、対応する`Reference`でタグを指定する必要があります、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]を指定する、`Object`ローカル フラグメント構文内のタグ。  たとえば場合、`Object`タグに ID の URI である"myObject"は、`Reference`タグ"#myObject"になります。  符号なしオブジェクト、いいえ`Reference`が必要です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" />、<paramref name="relationshipSelectors" />、<paramref name="signatureObjects" />、または<paramref name="objectReferences" /> のいずれによっても、署名する要素は指定されません。</exception>
        <exception cref="T:System.InvalidOperationException">署名されているパーツの <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> が、空、<see langword="null" />、または定義されていない <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> を参照しています。</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="signatureId" /> は <see langword="null" /> ではありません。また、有効な [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] スキーマ ID (先頭が数値で始まるなど) でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOrigin : Uri" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>署名元パーツの[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] を取得します。</summary>
        <value>署名元パーツの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]名前が正式に定義されていないために、パッケージによって異なることができます。 このプロパティによって返される値がどのような配信元が既に現在の存在を反映この実装は、同じ既定値を使用して一般に、<xref:System.IO.Packaging.Package>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOriginRelationshipType : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定の署名元のリレーションシップの種類を取得します。</summary>
        <value>既定の署名元のリレーションシップの種類。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signatures : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージに含まれるすべての署名のコレクションを取得します。</summary>
        <value>すべての <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> オブジェクトのコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeFormat : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>署名の <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> の作成に使用される日時形式を取得または設定します。</summary>
        <value>署名の <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> の作成に使用される日時形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の<xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A>"YYYY MM DDThh:mm:ss.sTZD"です。  
  
 日付/時刻書式で「W3C の日付と時刻の形式」の仕様の構文に従います[ http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html)します。 次に示すコンポーネントは、存在して、構文と定義されている区切り記号を使用する必要があります。  
  
|TimeFormat|説明|例|  
|----------------|-----------------|-------------|  
|YYYY|Year|2005|  
|YYYY MM|年と月|2005-07|  
|YYYY-MM-DD|完了日|2005-07-28|  
|YYYY、MM-DDThh:mmTZD|完全な日付と時間および分|2005-07-28T19:20-01:00|  
|YYYY、MM-DDThh:mm:ssTZD|完全な日付と時間、分、および秒|2005-07-28T19:20:45-01:00|  
|YYYY-MM-DDThh:mm:ss.sTZD|完全な日付と時間、分、および秒小数を含む|2005-07-28T19:20:45.75-01:00|  
  
 それぞれの文字について以下に説明します。  
  
|||  
|-|-|  
|YYYY|4 桁の年 (たとえば、2005 年)|  
|MM|2 桁の月 (01 年 1 月 =)|  
|DD|2 桁の日にち (01 ~ 31)|  
|から|2 桁の時 (00 ~ 23、24 時間)|  
|mm|2 桁の分 (00 ~ 59)|  
|ss|2 桁の秒 (00 ~ 59)|  
|s|秒の小数を表す 1 つ以上の数字|  
|TZD|タイム ゾーン指定子 (Z または + hh:mm または - hh: mm)|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformMapping : System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定義された各 <see cref="P:System.IO.Packaging.PackagePart.ContentType" />、および関連する [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" />  識別子を含むディクショナリを取得します。</summary>
        <value>定義された各を含むディクショナリ<see cref="P:System.IO.Packaging.PackagePart.ContentType" />とそれに関連付けられた[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]<see cref="T:System.Security.Cryptography.Xml.Transform" />します。<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 識別子を含むディクショナリを取得します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サインイン操作中にコンテンツの種類ごとに関連付けられている変換アルゴリズムは、前に適用される、<xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>を実行します。  
  
 既定のコンテンツと変換のマッピングは次のとおりです。  
  
|Content|ContentType|変換アルゴリズムの識別子|  
|-------------|-----------------|------------------------------------|  
|Relationship|"application/vnd.openxmlformats-package.relationships+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|デジタル署名|"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="static member VerifyCertificate : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" Usage="System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">検証する X.509 証明書。</param>
        <summary>指定された X.509 証明書を検証します。</summary>
        <returns>証明書が正しく検証された場合は <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (値 0)。それ以外の場合は、エラー フラグのビットごとの列挙体。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberSignature Language="F#" Value="member this.VerifySignatures : bool -&gt; System.IO.Packaging.VerifyResult" Usage="packageDigitalSignatureManager.VerifySignatures exitOnFailure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">最初の失敗で終了する場合は <see langword="true" />。続行してすべての署名をチェックする場合は <see langword="false" />。</param>
        <summary>パッケージ内にあるすべての署名済みパーツの署名を検証します。</summary>
        <returns>すべての署名が正しく検証された場合は <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (値 0)。それ以外の場合は、エラーを識別する列挙体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デジタル署名だけを確認します。関連する X.509 証明書は検証されません。  <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>メソッドを使用して、X.509 証明書を確認します。  
  
   
  
## Examples  
 次の例では、このメソッドを使用して、パッケージ内のすべての署名部分を検証する方法を示します。  サンプル全体については、次を参照してください。[デジタル署名のサンプルを使用してパッケージを作成する](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>