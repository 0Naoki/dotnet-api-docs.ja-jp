<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedPackageEnvelope.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d13de0354f15e43fe6e836cca6df2e57f369e866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13de0354f15e43fe6e836cca6df2e57f369e866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">暗号化されたパッケージを含む OLE 複合ファイルを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> has no public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> パブリック コンス トラクターがありません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>An <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> is created by use of the static <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 、静的なを使用して作成された<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>、または<ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">暗号化されたパッケージとそれを保持する OLE 複合ファイルを閉じます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>The following example shows how to use this method to close an <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">次の例は、このメソッドを使用して、終了する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を作成して返します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">ファイルを作成するストリーム。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">複合ファイルに埋め込まれている公開ライセンス。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> on the specified stream.</source>
          <target state="translated">指定したストリームに <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を作成して返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新しく作成された <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">現在のユーザーは、新しいファイルに読み取り/書き込みアクセス権を持っています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> が読み取り/書き込みアクセスを提供しません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 複合ファイルの名前。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">複合ファイルに埋め込まれている公開ライセンス。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and gives it the specified file name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を作成して返し、指定したファイル名を割り当てます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新しく作成された <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">指定した名前のファイルが既に存在する場合は上書きされます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">現在のユーザーは、ファイルに読み取り/書き込みアクセス権を持っています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses an existing unencrypted package as the source of its content.</source>
          <target state="translated">既存の暗号化されていないパッケージをコンテンツのソースとして使用する <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を作成して返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>をインスタンス化するメソッド、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">ファイルを作成するストリーム。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">暗号化されていない、既存のパッケージを表すストリーム。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">複合ファイルに埋め込まれている公開ライセンス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">指定した暗号化されていないパッケージをコンテンツとして使用する <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を (指定したストリームに) 作成して返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新しく作成された <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">現在のユーザーは、新しいファイルに読み取り/書き込みアクセス権を持っています。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>をインスタンス化するメソッド、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> または <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> が読み取り/書き込みアクセスを提供しません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 複合ファイルの名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">暗号化されていない、既存のパッケージを表すストリーム。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">複合ファイルに埋め込まれている公開ライセンス。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">現在のユーザーが暗号化されたコンテンツで実行できる操作を決定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">指定した暗号化されていないパッケージをコンテンツとして使用する <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> を作成して返し、指定したファイル名を割り当てます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新しく作成された <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">指定した名前のファイルが既に存在する場合は上書きされます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">現在のユーザーは、ファイルに読み取り/書き込みアクセス権を持っています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>をインスタンス化するメソッド、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> または <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> when finished with a <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>の使用が終わったら、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> オブジェクトの <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">読み取り、書き込み、または読み書き両方のうち、どのアクセス権を使用してファイルが開かれたかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> value that was used to open the file.</source>
          <target state="translated">ファイルを開くために使用された <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
          <source>Flush the stream for both the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and its package content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> およびそのパッケージ コンテンツ両方のストリームをフラッシュします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>Gets the encrypted package inside the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 内部の暗号化されたパッケージを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> in the envelope.</source>
          <target state="translated">エンベロープ内の <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</source>
          <target state="translated">ファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルかどうかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>The stream that is tested.</source>
          <target state="translated">テストされるストリーム。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">指定したストリームが、暗号化されたパッケージ ストリームを含む OLE 複合ファイルかどうかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したストリームが、暗号化されたパッケージ ストリームを含む OLE 複合ファイルである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The file that is tested.</source>
          <target state="translated">テストされるファイル。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">指定したファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルかどうかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したファイルが、暗号化されたパッケージ ストリームを含んだ OLE 複合ファイルである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The following example shows how to use this method to test for encryption.</source>
          <target state="translated">次の例では、このメソッドを使用して暗号化をテストする方法を示します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Opens the encrypted package in an OLE compound file.</source>
          <target state="translated">OLE 複合ファイル内の暗号化されたパッケージを開きます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">暗号化されたパッケージを含むストリーム。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">指定したストリーム内の暗号化されたパッケージを開きます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">開いている <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">ストリームには、暗号化されたパッケージが必要です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">暗号化されたパッケージを含むファイル。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">読み取り専用かつ非共有として指定されたファイル内の暗号化されたパッケージを開きます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">開いている <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">ファイルには、暗号化されたパッケージが必要です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">開かれたファイルは読み取り専用共有されていません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">暗号化されたパッケージを含むファイル。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The type of access.</source>
          <target state="translated">アクセスの種類。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">非共有として指定され、特定のアクセス権が必要なファイル内の暗号化されたパッケージを開きます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">開いている <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">ファイルには、暗号化されたパッケージが必要です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The opened file is unshared.</source>
          <target state="translated">開かれたファイルでは、共有します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">暗号化されたパッケージを含むファイル。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of access.</source>
          <target state="translated">アクセスの種類。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of sharing.</source>
          <target state="translated">共有の種類。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">指定したファイル内の暗号化されたパッケージを開き、特定のアクセス権と共有を割り当てます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">開いている <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">ファイルには、暗号化されたパッケージが必要です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">権限管理ドキュメントのコア パッケージ プロパティ (タイトルやサブジェクト名など) を取得します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> for the package.</source>
          <target state="translated">パッケージの <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">これらのコア プロパティは、標準的な OLE プロパティ ストリーム (\005SummaryInformation および \005DocumentSummaryInformation) に格納されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">主要プロパティは、パッケージ自体にも格納されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">プロパティの同期の 2 つのセットを保持するアプリケーションの役割です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>Gets the rights management information stored in the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>; specifically, the <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> に格納されている権限管理情報を取得します。主に対象となるのは、権限管理のために保護されているパッケージが組み込まれた OLE 複合ファイルに格納されている、<ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> および <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> for the package.</source>
          <target state="translated">パッケージの <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The following example shows how to obtain <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> for an encrypted package by use the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、取得する方法を示します<ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph>を使用して暗号化されたパッケージを<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">暗号化されたパッケージの外部にある複合ファイル ストリームへアクセスするためのオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated">暗号化されたパッケージの外部にある OLE 複合ファイル内のストリームを表す <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>