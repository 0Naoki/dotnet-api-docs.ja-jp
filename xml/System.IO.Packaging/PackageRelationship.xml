<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98248d6cc49764310740d64be030b1010edca69a" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67724775" /></Metadata><TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an association between a source <see cref="T:System.IO.Packaging.Package" /> or <see cref="T:System.IO.Packaging.PackagePart" />, and a target object which can be a <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.IO.Packaging.PackageRelationship>間のアソシエーションを定義、*ソース*<xref:System.IO.Packaging.Package>または<xref:System.IO.Packaging.PackagePart>を*ターゲット*<xref:System.IO.Packaging.PackagePart>または外部のリソース。  ソース オブジェクトは、リレーションシップの「所有者」と見なされます。  
  
 <xref:System.IO.Packaging.PackageRelationship>クラスには、パブリック コンス トラクターがありません。 代わりに、2 つの Create メソッドを使用します。  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|"パッケージ"レベルのリレーションシップを作成します-指定したパーツまたは外部のリソースへのパッケージから。|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|"パーツ"レベルのリレーションシップを作成します-別の部分に 1 つの部分からまたは外部のリソース。|  
  
 ソース パッケージまたはパーツがで識別される、<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>リレーションシップのプロパティ。  ターゲット パーツまたは外部のリソースがで識別される、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>リレーションシップのプロパティ。  
  
 リレーションシップを作成、削除する何らかの方法でソースまたはターゲット オブジェクトは影響しません。  
  
 ソース オブジェクトが削除された場合、オブジェクトによって所有されているすべてのリレーションシップも削除されます。  
  
 リレーションシップは、ドキュメントおよびドキュメント間の両方のナビゲーションを有効にします。  リレーションシップ リンクなどのドキュメント オブジェクト モデル サービスをサポートしても、<xref:System.Printing.PrintTicket>印刷時に特定のドキュメント要素にします。  
  
 詳細については<xref:System.IO.Packaging.PackageRelationship>要素のセクション 1.3「リレーションシップ」を参照してください、 *Open Packaging Conventions*仕様からダウンロードできます<https://go.microsoft.com/fwlink/?LinkID=71255>します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a string that identifies the relationship.</summary>
        <value>リレーションシップを識別する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>によって所有されているすべてのリレーションシップの一意プロパティの文字列では、<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>パッケージまたはパーツ。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>への呼び出しで指定された、**パッケージ**します。<xref:System.IO.Packaging.Package.CreateRelationship%2A> または**PackagePart**します。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> リレーションシップを作成するメソッド。  リレーションシップを作成した後、<xref:System.IO.Packaging.PackageRelationship.Id%2A>変更ことはできません。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>プロパティ文字列が有効な XML 識別子。 <xref:System.IO.Packaging.PackageRelationship.Id%2A>型 xsd:ID ありで規定されている名前付け規則に従う必要があります、 *XML Schema Part 2。データ型*仕様 (を参照してください[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.IO.Packaging.Package" /> that contains this relationship.</summary>
        <value>このパッケージは、このリレーションシップが含まれます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については<xref:System.IO.Packaging.Package>要素を参照してください、 *Open Packaging Conventions*で<https://docs.microsoft.com/en-us/previous-versions/windows/hardware/design/dn614032(v=vs.85)#open-packaging-conventions-and-open-xml-markup-compatibility>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the qualified type name of the relationship.</summary>
        <value>リレーションシップの修飾型名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>への呼び出しで指定された、**パッケージ**します。<xref:System.IO.Packaging.Package.CreateRelationship%2A> または**PackagePart**します。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> リレーションシップを作成するメソッド。  リレーションシップを作成した後、<xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>変更ことはできません。  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> URI のような構文で定義されているし、リレーションシップのロールを識別します。 たとえば、 `"http://schemas.microsoft.com/xps/2005/06/required-resource"` 「必須のリソースです。」であるターゲット パーツへのリレーションシップを識別します。  
  
 **パッケージ全体のリレーションシップの種類**  
  
|説明|リレーションシップの種類|  
|-----------------|-----------------------|  
|コア プロパティ|`http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties`|  
|デジタル署名|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature`|  
|デジタル署名証明書|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate`|  
|デジタル署名元|`http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin`|  
|サムネイル|`http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail`|  
  
 パッケージのリレーションシップの詳細については、型には第 3 章と「付録 I のを参照してください、 *Open Packaging Conventions*仕様からダウンロードできます<https://go.microsoft.com/fwlink/?LinkID=71255>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the package or part that owns the relationship.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の<see cref="T:System.IO.Packaging.Package" />または<see cref="T:System.IO.Packaging.PackagePart" />リレーションシップを所有しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リレーションシップを所有している場合、 <xref:System.IO.Packaging.Package>、<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>の URI を返します「/」。  
  
 リレーションシップを所有している場合、 <xref:System.IO.Packaging.PackagePart>、<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>パーツの URI を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the target of the relationship is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value><see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> が <see cref="T:System.IO.Packaging.Package" /> の <see cref="F:System.IO.Packaging.TargetMode.Internal" /> のリソースと <see cref="F:System.IO.Packaging.TargetMode.External" /> のリソースのどちらを参照するかを示す列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>への呼び出しで指定された、**パッケージ**します。<xref:System.IO.Packaging.Package.CreateRelationship%2A> または**PackagePart**します。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> リレーションシップを作成するメソッド。 リレーションシップを作成した後、<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>変更ことはできません。  
  
 ときに<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>は<xref:System.IO.Packaging.TargetMode.Internal>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相対参照である必要があります。  パッケージ レベル リレーションシップでは、相対参照の<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>を所有し、リレーションシップが含まれているソース パッケージのパック URI に対して相対的に解決されます。  (ソース パッケージ パック URI の例:"pack://http:、および www.adatum.com、files,datapak.package/"です)。パーツ レベル リレーションシップの場合、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>はリレーションシップを所有するソースの一部を基準として解決 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>に対して相対的に解釈されます<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 ときに<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>は<xref:System.IO.Packaging.TargetMode.External>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相対パスまたは完全修飾 URI のいずれかにすることができます。  場合、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>は相対参照では、参照の位置を基準として解釈されます、<xref:System.IO.Packaging.Package>このリレーションシップを格納しています。  
  
 詳細については<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>の 1.3.3 セクションの「関係マークアップ」を参照してください、 *Open Packaging Conventions*仕様からダウンロードできます<https://go.microsoft.com/fwlink/?LinkID=71255>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target resource of the relationship.</summary>
        <value>ターゲット リソースの [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>への呼び出しで指定された、**パッケージ**します。<xref:System.IO.Packaging.Package.CreateRelationship%2A> または**PackagePart**します。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> リレーションシップを作成するメソッド。 リレーションシップを作成した後、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>変更ことはできません。  
  
 ときに<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>は<xref:System.IO.Packaging.TargetMode.Internal>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相対参照である必要があります。  パッケージ レベル リレーションシップでは、相対参照の<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>を所有し、リレーションシップが含まれているソース パッケージのパック URI に対して相対的に解決されます。  (ソース パッケージ パック URI の例:"pack://http:、および www.adatum.com、files,datapak.package/"です)。パーツ レベル リレーションシップの場合、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>はリレーションシップを所有するソースの一部を基準として解決 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>に対して相対的に解釈されます<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 ときに<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>は<xref:System.IO.Packaging.TargetMode.External>、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>相対パスまたは完全修飾 URI のいずれかにすることができます。  場合、<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>は相対参照では、参照の位置を基準として解釈されます、<xref:System.IO.Packaging.Package>このリレーションシップを格納しています。  
  
 詳細については<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>の 1.3.3 セクションの「関係マークアップ」を参照してください、 *Open Packaging Conventions*仕様からダウンロードできます<https://go.microsoft.com/fwlink/?LinkID=71255>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>
