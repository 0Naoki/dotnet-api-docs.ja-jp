<Type Name="RootedPathValidator" FullName="System.Xml.Serialization.Configuration.RootedPathValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d21a49f363d18db28ea6fb7469652779366c30b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootedPathValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Configuration.RootedPathValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RootedPathValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootedPathValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type RootedPathValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="65708-101">
        <c>tempFilesLocation</c> 構成スイッチの使用を制御する規則を検証します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="65708-101">Validates the rules governing the use of the <c>tempFilesLocation</c> configuration switch.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65708-102">追加するときに、 `WebReference` Web サービスにオブジェクト、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]ファイルは、Web サービスの検出プロセスによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="65708-102">When adding a `WebReference` object to a Web service in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], files are created by the Web service discovery process.</span></span>  
  
 <span data-ttu-id="65708-103">Web サービス クライアントを追加することで、Web サービス記述言語 (WSDL) ドキュメントを検索する場所の説明、`WebReference`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="65708-103">Web service clients learn where to find the Web service description (WSDL) document by adding a `WebReference` object.</span></span> <span data-ttu-id="65708-104">Web サービス クライアント、検出されたドキュメントをディスクに保存を使用して、`WriteAll`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="65708-104">The Web service clients then save the discovered documents to the disk by using the `WriteAll` method.</span></span> <span data-ttu-id="65708-105">たとえば、検出されたドキュメントには、スキーマの .xsd ファイルまたはサービスの説明があります。</span><span class="sxs-lookup"><span data-stu-id="65708-105">For example, the discovered documents may be .xsd schema files or service descriptions.</span></span> <span data-ttu-id="65708-106">プロセスの最後に、クライアントは、ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="65708-106">At the end of the process, the client deletes the files.</span></span> <span data-ttu-id="65708-107">使用して、一時フォルダー内のファイルの既定の場所を変更することができます、`tempFilesLocation`に切り替え、 `<xmlSerializer>` Machine.config 構成ファイルの次の例のようにで指定された要素。</span><span class="sxs-lookup"><span data-stu-id="65708-107">You can change the default location of the files in the temporary folder by using the `tempFilesLocation` switch in the `<xmlSerializer>` element, specified in the Machine.config configuration file, as in the following example.</span></span>  
  
```  
<configuration>  
  <system.web>  
  <system.xml.serialization>  
    <xmlSerializer tempFilesLocation=".."/>  
  </system.xml.serialization>  
</configuration>  
```  
  
 <span data-ttu-id="65708-108">値`tempFilesLocation`絶対パスである必要があります。</span><span class="sxs-lookup"><span data-stu-id="65708-108">The value of `tempFilesLocation` must be an absolute path.</span></span> <span data-ttu-id="65708-109">指定されたパスが絶対、ない場合、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]が生成されます、<xref:System.Configuration.ConfigurationErrorsException>構成セクションを参照する場合は例外です。</span><span class="sxs-lookup"><span data-stu-id="65708-109">If the path specified is not absolute, the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] generates a <xref:System.Configuration.ConfigurationErrorsException> exception when the configuration section is referenced.</span></span>  
  
 <span data-ttu-id="65708-110">先頭および末尾の空白を削除するプロパティの値が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="65708-110">The value of the property is truncated to remove leading and trailing white spaces.</span></span>  
  
 <span data-ttu-id="65708-111">場合の値、`tempFilesLocation`プロパティが空白文字で構成される、既定 %TMP% 場所が、コンパイルに使用されます。</span><span class="sxs-lookup"><span data-stu-id="65708-111">If value of the `tempFilesLocation` property is composed of white space, the default %TMP% location is used for the compilation.</span></span> <span data-ttu-id="65708-112">ない場合、同じ既定の動作が発生した`tempFilesLocation`スイッチを指定します。</span><span class="sxs-lookup"><span data-stu-id="65708-112">The same default behavior occurs when no `tempFilesLocation` switch is specified.</span></span>  
  
 <span data-ttu-id="65708-113"><xref:System.Xml.Serialization.XmlSerializer>パスが存在するかどうかはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="65708-113">The <xref:System.Xml.Serialization.XmlSerializer> does not check to see whether the path exists.</span></span> <span data-ttu-id="65708-114">いない場合、<xref:System.IO.DirectoryNotFoundException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="65708-114">If it does not, a <xref:System.IO.DirectoryNotFoundException> is generated.</span></span> <span data-ttu-id="65708-115">これは既定の動作と同じ、 `XmlSerializer` TMP パスが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="65708-115">This is identical to the default behavior of the `XmlSerializer` if the %TMP% path does not exist.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootedPathValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootedPathValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65708-116">
            <see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="rootedPathValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65708-117">オブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-117">The type of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65708-118">オブジェクトの型を検証できるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-118">Determines whether the type of the object can be validated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65708-119">
            <paramref name="type" /> パラメーターが有効な <see langword="true" /> オブジェクトと一致する場合は <see langword="XMLSerializer" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-119">
              <see langword="true" /> if the <paramref name="type" /> parameter matches a valid <see langword="XMLSerializer" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="rootedPathValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="65708-120">オブジェクトの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-120">The value of an object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65708-121">オブジェクトの値が有効かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65708-121">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65708-122">`XmlSerializer`を検証するオブジェクトのパラメーターとして渡されます、`Validate`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="65708-122">The `XmlSerializer` object to validate is passed as a parameter of the `Validate` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>