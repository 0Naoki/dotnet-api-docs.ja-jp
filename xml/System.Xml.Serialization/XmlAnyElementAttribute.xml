<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3035eb34b5613aebeda351e5208013371cfe716a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58723907" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>メンバー (<see cref="T:System.Xml.XmlElement" /> オブジェクトまたは <see cref="T:System.Xml.XmlNode" /> オブジェクトの配列を返すフィールド) に、シリアル化または逆シリアル化対象のオブジェクト内に対応するメンバーがない任意の XML 要素を表すオブジェクトを含めるように指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  ポータブル クラス ライブラリで作業するときなど、Silverlight、Windows Phone や Windows ストア アプリ プロジェクトを使用している .NET Framework 4.0.3 以上を使用して、<xref:System.Xml.Linq.XElement>または<xref:System.Xml.Linq.XNode>の代わりに<xref:System.Xml.XmlElement>と<xref:System.Xml.XmlNode>します。  
  
 使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>など、ドキュメントの一部として送信されるメタデータの XML ドキュメントの一部として送信されることができます (XML 要素) として任意のデータを格納します。  
  
 適用、<xref:System.Xml.Serialization.XmlAnyElementAttribute>の配列を返すフィールドに<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクト。 オブジェクトがされているかどうかに応じて、2 つの方法で、そのフィールドを使用できるシリアル化または逆シリアル化します。 シリアル化すると、XML 要素またはノードとして、なしに対応するメンバー (メンバー) オブジェクトのシリアル化される含まれていても、オブジェクトが生成されます。 指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティ値の属性を適用するときにすべて<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトの配列に挿入される必要があります、同じ要素名と既定の名前空間、または例外がスローされます。 設定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの値に設定する必要がありますが、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティも、および<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは同じ名前と名前空間の値にも必要です。 ない場合は<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値が指定されて、<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは、任意の要素の名前を持つことができます。  
  
 呼び出すと、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>のメソッド、<xref:System.Xml.Serialization.XmlSerializer>クラスを逆シリアル化されるオブジェクトに対応するメンバーを持たないすべての要素が配列で収集されます。 逆シリアル化後のコレクションを反復処理する<xref:System.Xml.XmlElement>項目のデータを処理します。 指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、その名前を持つ XML 要素のみが含まれています。 指定しない場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、クラスに対応するメンバーを持たないすべての要素が含まれます。 クラスに属性を適用する 1 つ以上のフィールドが含まれている場合は、使用、 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>、または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ配列の内容を区別するためにします。 かどうか (複数のフィールド) を持つこのようなクラスにはも設定差別化されたプロパティ値を持たない 1 つのフィールドが含まれます (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) この配列には逆シリアル化中には、既に含まれていない不明な XML 要素が含まれていますその他の配列。 クラスには、差別化していない 1 つ以上のフィールドが含まれている場合<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>、または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>値セットを逆シリアル化時の動作は指定されていません。  
  
 適用することも、<xref:System.Xml.Serialization.XmlAnyElementAttribute>を 1 つを返すフィールドを<xref:System.Xml.XmlElement>オブジェクト。 これを行う場合のメソッドとプロパティを使用する必要があります、<xref:System.Xml.XmlElement>クラスを再帰的には、不明な要素を反復処理します。  
  
 複数のインスタンスを適用することができます、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスにメンバーが、各インスタンスがあります明確な<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティの値。 または、同じ<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティを個別に、各インスタンスに対して設定されて<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>インスタンスごとにプロパティ値を設定する必要があります。  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode>と<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>のイベント、<xref:System.Xml.Serialization.XmlSerializer>を適用する場合は発生しません、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスのメンバーにします。  
  
> [!NOTE]
>  語を使用できます`XmlAnyElement`代わりに、コードで<xref:System.Xml.Serialization.XmlAnyElementAttribute>します。  
  
 属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。  
  
   
  
## Examples  
 次の例では、適用、<xref:System.Xml.Serialization.XmlAnyElementAttribute>という名前のフィールドに`AllElements`の配列を返す<xref:System.Xml.XmlElement>オブジェクト。  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML シリアル化の概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。 シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</param>
        <summary><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。 シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</param>
        <param name="ns">XML 要素の XML 名前空間。</param>
        <summary><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名とその XML 名前空間を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。 シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 要素名を取得または設定します。</summary>
        <value>XML 要素の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティ値の属性を適用するときにすべて<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトの配列に挿入される必要があります、同じ要素名と既定の名前空間、または例外がスローされます。 設定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの値に設定する必要がありますが、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティも、および<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは同じ名前と名前空間の値にも必要です。 ない場合は<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値が指定されて、<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは、任意の要素の名前を持つことができます。  
  
 呼び出すと、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>のメソッド、<xref:System.Xml.Serialization.XmlSerializer>クラスを逆シリアル化されるオブジェクトに対応するメンバーを持たないすべての属性が配列で収集されます。 指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、その名前を持つ XML 要素のみが含まれています。 指定しない場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、クラスに対応するメンバーを持たないすべての要素が含まれます。 クラスに属性を適用する 1 つ以上のフィールドが含まれている場合は、使用、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ配列の内容を区別するためにします。 かどうか (複数のフィールド) を持つこのようなクラスにはも設定差別化されたプロパティ値を持たない 1 つのフィールドが含まれます (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 配列には逆シリアル化中には、もう一方に既に含まれていない任意の XML 要素が含まれています配列。 差別化していない 1 つ以上のフィールドを追加するかどうかは<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>値を設定、クラスの最後のフィールドには、既に他の配列に含まれていないすべての不明な要素が含まれています。 とその他のフィールドがに設定されます`null`します。  
  
 複数のインスタンスを適用することができます、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスにメンバーが、各インスタンスがあります明確な<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティの値。 または、同じ<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティを個別に、各インスタンスに対して設定されて<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>インスタンスごとにプロパティ値を設定する必要があります。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">配列メンバーの要素名が、<see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> プロパティに指定されている要素名と一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML ドキュメントに生成される XML 名前空間を取得または設定します。</summary>
        <value>XML 名前空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティでは、XML 属性の一意の名前を設定することができます。 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティは、World Wide Web コンソーシアム (www.w3.org) のドキュメント 『 Namespaces in XML"で見られる XML 名前空間を作成するための規則に準拠  
  
 設定する、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ プレフィックス付きの名前を作成、<xref:System.Xml.Serialization.XmlSerializerNamespaces>名前空間と XML ドキュメントで使用されるプレフィックスを格納しています。 設定、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの名前空間のいずれかを<xref:System.Xml.Serialization.XmlSerializerNamespaces>します。 XML が生成されると、属性名が正しく指定した名前空間に関連付けられているプレフィックスで付けられます。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</summary>
        <value>コード生成の順序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>よう指示するための列挙、<xref:System.Web.Services.Description.ServiceDescriptionImporter>を設定するコードを生成する、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティ。  
  
> [!IMPORTANT]
>  1 回、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティが 1 つのパブリック プロパティまたは型のフィールドで使用されている、すべてのパブリック プロパティおよびその型と継承されたすべての型のフィールドに設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>