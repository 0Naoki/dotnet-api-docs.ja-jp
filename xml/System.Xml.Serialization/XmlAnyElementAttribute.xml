<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e377cff5fe8faaebdd3cdf60d0ba3b360028465" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48728202" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f71a3-101">メンバー (<see cref="T:System.Xml.XmlElement" /> オブジェクトまたは <see cref="T:System.Xml.XmlNode" /> オブジェクトの配列を返すフィールド) に、シリアル化または逆シリアル化対象のオブジェクト内に対応するメンバーがない任意の XML 要素を表すオブジェクトを含めるように指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f71a3-101">Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Xml.XmlNode" /> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="f71a3-102">ポータブル クラス ライブラリで作業するときなど、Silverlight、Windows Phone や Windows ストア アプリ プロジェクトを使用している .NET Framework 4.0.3 以上を使用して、<xref:System.Xml.Linq.XElement>または<xref:System.Xml.Linq.XNode>の代わりに<xref:System.Xml.XmlElement>と<xref:System.Xml.XmlNode>します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-102">When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XNode> in place of <xref:System.Xml.XmlElement> and <xref:System.Xml.XmlNode>.</span></span>  
  
 <span data-ttu-id="f71a3-103">使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>など、ドキュメントの一部として送信されるメタデータの XML ドキュメントの一部として送信されることができます (XML 要素) として任意のデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-103">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</span></span>  
  
 <span data-ttu-id="f71a3-104">適用、<xref:System.Xml.Serialization.XmlAnyElementAttribute>の配列を返すフィールドに<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f71a3-104">Apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="f71a3-105">オブジェクトがされているかどうかに応じて、2 つの方法で、そのフィールドを使用できるシリアル化または逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-105">Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</span></span> <span data-ttu-id="f71a3-106">シリアル化すると、XML 要素またはノードとして、なしに対応するメンバー (メンバー) オブジェクトのシリアル化される含まれていても、オブジェクトが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-106">When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</span></span> <span data-ttu-id="f71a3-107">指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティ値の属性を適用するときにすべて<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトの配列に挿入される必要があります、同じ要素名と既定の名前空間、または例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-107">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="f71a3-108">設定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの値に設定する必要がありますが、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティも、および<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは同じ名前と名前空間の値にも必要です。</span><span class="sxs-lookup"><span data-stu-id="f71a3-108">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="f71a3-109">ない場合は<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値が指定されて、<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは、任意の要素の名前を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-109">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="f71a3-110">呼び出すと、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>のメソッド、<xref:System.Xml.Serialization.XmlSerializer>クラスを逆シリアル化されるオブジェクトに対応するメンバーを持たないすべての要素が配列で収集されます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-110">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="f71a3-111">逆シリアル化後のコレクションを反復処理する<xref:System.Xml.XmlElement>項目のデータを処理します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-111">After deserialization, iterate through the collection of <xref:System.Xml.XmlElement> items to process the data.</span></span> <span data-ttu-id="f71a3-112">指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、その名前を持つ XML 要素のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f71a3-112">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="f71a3-113">指定しない場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、クラスに対応するメンバーを持たないすべての要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-113">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="f71a3-114">クラスに属性を適用する 1 つ以上のフィールドが含まれている場合は、使用、 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>、または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ配列の内容を区別するためにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-114">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="f71a3-115">かどうか (複数のフィールド) を持つこのようなクラスにはも設定差別化されたプロパティ値を持たない 1 つのフィールドが含まれます (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) この配列には逆シリアル化中には、既に含まれていない不明な XML 要素が含まれていますその他の配列。</span><span class="sxs-lookup"><span data-stu-id="f71a3-115">If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="f71a3-116">クラスには、差別化していない 1 つ以上のフィールドが含まれている場合<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>、または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>値セットを逆シリアル化時の動作は指定されていません。</span><span class="sxs-lookup"><span data-stu-id="f71a3-116">If a class contains more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the behavior during deserialization is unspecified.</span></span>  
  
 <span data-ttu-id="f71a3-117">適用することも、<xref:System.Xml.Serialization.XmlAnyElementAttribute>を 1 つを返すフィールドを<xref:System.Xml.XmlElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f71a3-117">You can also apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns a single <xref:System.Xml.XmlElement> object.</span></span> <span data-ttu-id="f71a3-118">これを行う場合のメソッドとプロパティを使用する必要があります、<xref:System.Xml.XmlElement>クラスを再帰的には、不明な要素を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-118">If you do so, you must use the properties and methods of the <xref:System.Xml.XmlElement> class to recursively iterate through the unknown elements.</span></span>  
  
 <span data-ttu-id="f71a3-119">複数のインスタンスを適用することができます、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスにメンバーが、各インスタンスがあります明確な<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="f71a3-119">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="f71a3-120">または、同じ<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティを個別に、各インスタンスに対して設定されて<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>インスタンスごとにプロパティ値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f71a3-120">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
 <span data-ttu-id="f71a3-121"><xref:System.Xml.Serialization.XmlSerializer.UnknownNode>と<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>のイベント、<xref:System.Xml.Serialization.XmlSerializer>を適用する場合は発生しません、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスのメンバーにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-121">The <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> and <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> events of the <xref:System.Xml.Serialization.XmlSerializer> do not occur if you apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a member of a class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f71a3-122">語を使用できます`XmlAnyElement`代わりに、コードで<xref:System.Xml.Serialization.XmlAnyElementAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-122">You can use the word `XmlAnyElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span></span>  
  
 <span data-ttu-id="f71a3-123">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-123">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f71a3-124">次の例では、適用、<xref:System.Xml.Serialization.XmlAnyElementAttribute>という名前のフィールドに`AllElements`の配列を返す<xref:System.Xml.XmlElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f71a3-124">The following example applies the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field named `AllElements` that returns an array of <xref:System.Xml.XmlElement> objects.</span></span>  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">
      <span data-ttu-id="f71a3-125">XML シリアル化の概要</span>
      <span class="sxs-lookup">
        <span data-stu-id="f71a3-125">Introducing XML Serialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f71a3-126">
            <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f71a3-127">
            <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-128">使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-128">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="f71a3-129">シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。</span><span class="sxs-lookup"><span data-stu-id="f71a3-129">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f71a3-130">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-130">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f71a3-131">
            <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-132">使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-132">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="f71a3-133">シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。</span><span class="sxs-lookup"><span data-stu-id="f71a3-133">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f71a3-134">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-134">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f71a3-135">XML 要素の XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-135">The XML namespace of the XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f71a3-136">
            <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名とその XML 名前空間を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document and its XML namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-137">使用して、<xref:System.Xml.Serialization.XmlAnyElementAttribute>コンス トラクター、フィールドのシリアル化をオーバーライドしているときにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-137">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="f71a3-138">シリアル化をオーバーライドする方法についての詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。</span><span class="sxs-lookup"><span data-stu-id="f71a3-138">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f71a3-139">XML 要素名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-139">Gets or sets the XML element name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f71a3-140">XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-140">The name of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-141">指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティ値の属性を適用するときにすべて<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトの配列に挿入される必要があります、同じ要素名と既定の名前空間、または例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-141">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="f71a3-142">設定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの値に設定する必要がありますが、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティも、および<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは同じ名前と名前空間の値にも必要です。</span><span class="sxs-lookup"><span data-stu-id="f71a3-142">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="f71a3-143">ない場合は<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値が指定されて、<xref:System.Xml.XmlElement>または<xref:System.Xml.XmlNode>オブジェクトは、任意の要素の名前を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-143">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="f71a3-144">呼び出すと、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>のメソッド、<xref:System.Xml.Serialization.XmlSerializer>クラスを逆シリアル化されるオブジェクトに対応するメンバーを持たないすべての属性が配列で収集されます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-144">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="f71a3-145">指定した場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、その名前を持つ XML 要素のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f71a3-145">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="f71a3-146">指定しない場合、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>値、配列には、クラスに対応するメンバーを持たないすべての要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-146">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="f71a3-147">クラスに属性を適用する 1 つ以上のフィールドが含まれている場合は、使用、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ配列の内容を区別するためにします。</span><span class="sxs-lookup"><span data-stu-id="f71a3-147">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="f71a3-148">かどうか (複数のフィールド) を持つこのようなクラスにはも設定差別化されたプロパティ値を持たない 1 つのフィールドが含まれます (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>と<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 配列には逆シリアル化中には、もう一方に既に含まれていない任意の XML 要素が含まれています配列。</span><span class="sxs-lookup"><span data-stu-id="f71a3-148">If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="f71a3-149">差別化していない 1 つ以上のフィールドを追加するかどうかは<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>または<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>値を設定、クラスの最後のフィールドには、既に他の配列に含まれていないすべての不明な要素が含まれています。 とその他のフィールドがに設定されます`null`します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-149">If you add more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to `null`.</span></span>  
  
 <span data-ttu-id="f71a3-150">複数のインスタンスを適用することができます、<xref:System.Xml.Serialization.XmlAnyElementAttribute>クラスにメンバーが、各インスタンスがあります明確な<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="f71a3-150">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="f71a3-151">または、同じ<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>プロパティを個別に、各インスタンスに対して設定されて<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>インスタンスごとにプロパティ値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f71a3-151">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f71a3-152">配列メンバーの要素名が、<see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> プロパティに指定されている要素名と一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-152">The element name of an array member does not match the element name specified by the <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f71a3-153">XML ドキュメントに生成される XML 名前空間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-153">Gets or sets the XML namespace generated in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f71a3-154">XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-154">An XML namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-155"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティでは、XML 属性の一意の名前を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-155">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property allows you to set a unique name for the XML attribute.</span></span> <span data-ttu-id="f71a3-156"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティは、World Wide Web コンソーシアム (www.w3.org) のドキュメント 『 Namespaces in XML"で見られる XML 名前空間を作成するための規則に準拠</span><span class="sxs-lookup"><span data-stu-id="f71a3-156">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="f71a3-157">設定する、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティ プレフィックス付きの名前を作成、<xref:System.Xml.Serialization.XmlSerializerNamespaces>名前空間と XML ドキュメントで使用されるプレフィックスを格納しています。</span><span class="sxs-lookup"><span data-stu-id="f71a3-157">To set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to a prefixed name, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="f71a3-158">設定、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>プロパティの名前空間のいずれかを<xref:System.Xml.Serialization.XmlSerializerNamespaces>します。</span><span class="sxs-lookup"><span data-stu-id="f71a3-158">Set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="f71a3-159">XML が生成されると、属性名が正しく指定した名前空間に関連付けられているプレフィックスで付けられます。</span><span class="sxs-lookup"><span data-stu-id="f71a3-159">When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f71a3-160">要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-160">Gets or sets the explicit order in which the elements are serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f71a3-161">コード生成の順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71a3-161">The order of the code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71a3-162">使用して、<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>よう指示するための列挙、<xref:System.Web.Services.Description.ServiceDescriptionImporter>を設定するコードを生成する、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f71a3-162">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f71a3-163">1 回、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティが 1 つのパブリック プロパティまたは型のフィールドで使用されている、すべてのパブリック プロパティおよびその型と継承されたすべての型のフィールドに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f71a3-163">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>