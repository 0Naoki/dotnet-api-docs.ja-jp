<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSerializer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d07956b41790d10b90106ace692180cac099fd6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d07956b41790d10b90106ace692180cac099fd6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serializes and deserializes objects into and from XML documents.</source>
          <target state="translated">オブジェクトから XML ドキュメントへのシリアル化および XML ドキュメントからオブジェクトへの逆シリアル化を実行します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> enables you to control how objects are encoded into XML.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> により、オブジェクトを XML にエンコードする方法を制御できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.</source>
          <target state="translated">XML シリアル化とは、オブジェクトのパブリック プロパティとパブリック フィールドを格納したり伝送できるようにシリアル形式 (この場合は XML) に変換する処理のことです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Deserialization re-creates the object in its original state from the XML output.</source>
          <target state="translated">逆シリアル化は、XML 出力から元の状態でオブジェクトを再作成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can think of serialization as a way of saving the state of an object into a stream or buffer.</source>
          <target state="translated">オブジェクトの状態をストリームまたはバッファーに保存しておく方法としてシリアル化を検討することができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, ASP.NET uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to encode XML Web service messages.</source>
          <target state="translated">たとえば、ASP.NET を使用して、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> XML Web サービス メッセージをエンコードするクラス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects.</source>
          <target state="translated">オブジェクトのデータは、クラス、フィールド、プロパティ、プリミティブ型、配列などのプログラミング構成要素、および <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> オブジェクトまたは <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> オブジェクトの形で埋め込まれている XML を使用して記述されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You have the option of creating your own classes, annotated with attributes, or using the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2)</ept> to generate the classes based on an existing XML Schema definition (XSD) document.</source>
          <target state="translated">属性、またはを使用して注釈が付けられた独自のクラスを作成するオプションがある、 <bpt id="p1">[</bpt>XML スキーマ定義ツール (Xsd.exe)<ept id="p1">](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2)</ept>を既存の XML スキーマ定義 (XSD) ドキュメントに基づいたクラスを生成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.</source>
          <target state="translated">XML スキーマがある場合は、厳密にスキーマに型指定されたされ、シリアル化する場合のスキーマに準拠する属性で注釈が付けられたされているクラスのセットを生成するために Xsd.exe を実行できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs.</source>
          <target state="translated">オブジェクトと XML 間でデータを転送するには、プログラミング言語構成要素の XML スキーマと XML スキーマをプログラミング言語構成要素からマッピングが必要です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> Xsd.exe と同様に関連するツールは、両方のデザイン時にこれら 2 つのテクノロジとランタイム間のブリッジを提供します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema.</source>
          <target state="translated">デザイン時に、カスタム クラスから XML スキーマ ドキュメント (.xsd) を生成するために、または特定のスキーマからクラスを生成するために Xsd.exe を使用します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>In either case, the classes are annotated with custom attributes to instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> how to map between the XML schema system and the common language runtime.</source>
          <target state="translated">どちらの場合、クラスがカスタム属性で注釈に指示するため、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> XML スキーマのシステムと、共通言語ランタイムの間にマップする方法です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>At runtime, instances of the classes can be serialized into XML documents that follow the given schema.</source>
          <target state="translated">実行時に、クラスのインスタンスを指定したスキーマに従っている XML ドキュメントにシリアル化できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Likewise, these XML documents can be deserialized into runtime objects.</source>
          <target state="translated">同様に、これらの XML ドキュメントの場合は、ランタイム オブジェクトに逆シリアル化できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Note that the XML schema is optional, and not required at design time or runtime.</source>
          <target state="translated">デザイン時または実行時に、オプションであり、必須ではないに XML スキーマことに注意してください。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Controlling Generated XML</source>
          <target state="translated">生成された XML を制御します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To control the generated XML, you can apply special attributes to classes and members.</source>
          <target state="translated">生成された XML を制御するには、クラスとメンバーに特別な属性を適用できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, to specify a different XML element name, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a public field or property, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">たとえば、さまざまな XML 要素名を指定する次のように適用します。、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>をパブリック フィールドまたはプロパティを設定し、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)</ept>.</source>
          <target state="translated">類似する属性の一覧については、次を参照してください。<bpt id="p1">[</bpt>コントロール XML シリアル化する属性<ept id="p1">](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can also implement the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface to control the XML output.</source>
          <target state="translated">実装することも、 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> XML 出力を制御するインターフェイスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If the XML generated must conform to section 5 of the World Wide Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1", you must construct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph>.</source>
          <target state="translated">生成される XML は、ワールド ワイド Consortium) (www.w3.org) ドキュメントのセクション 5 に準拠する必要があります、「簡易オブジェクト アクセス プロトコル (SOAP) 1.1」、する必要がありますを作成する、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>で、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To further control the encoded SOAP XML, use the attributes listed in <bpt id="p1">[</bpt>Attributes That Control Encoded SOAP Serialization<ept id="p1">](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91)</ept>.</source>
          <target state="translated">コントロールでエンコードされた SOAP XML をさらに一覧表示される属性を使用して<bpt id="p1">[</bpt>でエンコードされた SOAP シリアル化を制御する属性<ept id="p1">](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91)</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>With the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> you can take advantage of working with strongly typed classes and still have the flexibility of XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>厳密に型指定されたクラスの使用を利用し、XML の柔軟性がまだあることができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Using fields or properties of type <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> in your strongly typed classes, you can read parts of the XML document directly into XML objects.</source>
          <target state="translated">型のフィールドまたはプロパティを使用して<ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph>または<ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph>厳密に型指定されたクラスには、XML オブジェクトに直接 XML ドキュメントの部分を読み取ることができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you work with extensible XML schemas, you can also use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> attributes to serialize and deserialize elements or attributes that are not found in the original schema.</source>
          <target state="translated">拡張可能な XML スキーマを使用する場合は、使用することも、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>属性および要素または元のスキーマではない属性を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To use the objects, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects, or apply an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> to a field that returns an array of <ph id="ph4">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects.</source>
          <target state="translated">オブジェクトを使用するのには、適用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>の配列を返すフィールドに<ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph>オブジェクト、または適用、<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>の配列を返すフィールドに<ph id="ph4">&lt;xref:System.Xml.XmlAttribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If a property or field returns a complex object (such as an array or a class instance), the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> converts it to an element nested within the main XML document.</source>
          <target state="translated">プロパティやフィールドが複雑なオブジェクト (配列やクラス インスタンスなど) を返す場合、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> は、そのオブジェクトを、メイン XML ドキュメント内で入れ子になっている要素に変換します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, the first class in the following code returns an instance of the second class.</source>
          <target state="translated">たとえば、次のコードの最初のクラスは、2 番目のクラスのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The serialized, XML output looks like this:</source>
          <target state="translated">XML 出力は次のように、シリアル化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If a schema includes an element that is optional (minOccurs = '0'), or if the schema includes a default value, you have two options.</source>
          <target state="translated">スキーマには、省略可能な要素が含まれている場合 (minOccurs = '0')、または 2 つのオプションがスキーマには、既定値が含まれている場合。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>One option is to use <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType&gt;</ph> to specify the default value, as shown in the following code.</source>
          <target state="translated">1 つのオプションは、使用する<ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType&gt;</ph>を次のコードに示すように、既定値を指定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Another option is to use a special pattern to create a Boolean field recognized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, and to apply the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to the field.</source>
          <target state="translated">によって認識されるブール型のフィールドを作成する特殊なパターンを使用することもできます、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>、適用して、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>フィールドにします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The pattern is created in the form of <ph id="ph1">`propertyNameSpecified`</ph>.</source>
          <target state="translated">パターンは、の形式で作成<ph id="ph1">`propertyNameSpecified`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, if there is a field named "MyFirstName" you would also create a field named "MyFirstNameSpecified" that instructs the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> whether to generate the XML element named "MyFirstName".</source>
          <target state="translated">たとえば、"MyFirstNameSpecified"という名前のフィールドを作成することも、"MyFirstName"という名前のフィールドがあるかどうかをするように指示、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> "MyFirstName"をという名前の XML 要素を生成するかどうか。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This is shown in the following example.</source>
          <target state="translated">これを次の例に示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Overriding Default Serialization</source>
          <target state="translated">既定のシリアル化のオーバーライド</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class.</source>
          <target state="translated">インスタンスに追加することを適切な属性のいずれかを作成して、任意のオブジェクトとそのフィールドおよびプロパティのセットのシリアル化を上書きすることも、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</source>
          <target state="translated">2 つの用途を持つこの方法でシリアル化のオーバーライド: 最初に、制御し、ソースにアクセスを持っていない場合でも、DLL で見つかったオブジェクトのシリアル化を強化できます次に、シリアル化可能なクラスの 1 つのセットを作成するが、複数の方法でオブジェクトをシリアル化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For more details, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class and <bpt id="p1">[</bpt>How to: Control Serialization of Derived Classes<ept id="p1">](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>クラスと<bpt id="p1">[</bpt>する方法: 派生クラスのシリアル化の制御<ept id="p1">](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To serialize an object, call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">オブジェクトをシリアル化を呼び出し、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To deserialize an object, call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">オブジェクトを逆シリアル化を呼び出し、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To add XML namespaces to an XML document, see <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">XML ドキュメントに XML 名前空間を追加するを参照してください。<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> gives special treatment to classes that implement <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>特別な処理を実装するクラスは、<ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>または<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> must implement a public <ph id="ph2">`Add`</ph> method that takes a single parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> を実装するクラスは、単一のパラメーターを受け取るパブリックな <ph id="ph2">`Add`</ph> メソッドを実装している必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`Add`</ph> method's parameter must be of the same type as is returned from the <ph id="ph2">`Current`</ph> property on the value returned from <ph id="ph3">`GetEnumerator`</ph>, or one of that type's bases.</source>
          <target state="translated"><ph id="ph1">`Add`</ph>から返されると、同じ型のメソッドのパラメーターがある必要があります、<ph id="ph2">`Current`</ph>プロパティから返される値を<ph id="ph3">`GetEnumerator`</ph>、またはその型の基本型のいずれか。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> (such as <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>) in addition to <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> must have a public <ph id="ph4">`Item`</ph> indexed property (indexer in C#) that takes an integer, and it must have a public <ph id="ph5">`Count`</ph> property of type integer.</source>
          <target state="translated">実装するクラス<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>(など<ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>) に加え<ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph>パブリック必要があります<ph id="ph4">`Item`</ph>プロパティ (c# のインデクサー) を受け取る整数では、インデックスが作成され、パブリック必要があります<ph id="ph5">`Count`</ph>整数型のプロパティです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The parameter to the <ph id="ph1">`Add`</ph> method must be the same type as is returned from the <ph id="ph2">`Item`</ph> property, or one of that type's bases.</source>
          <target state="translated">パラメーターを<ph id="ph1">`Add`</ph>メソッドから返されると同じ型である必要があります、<ph id="ph2">`Item`</ph>プロパティ、またはその型の基本型のいずれか。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For classes that implement <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>, values to be serialized are retrieved from the indexed <ph id="ph2">`Item`</ph> property, not by calling <ph id="ph3">`GetEnumerator`</ph>.</source>
          <target state="translated">クラスを実装する<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>、シリアル化する値を取得、インデックスから<ph id="ph2">`Item`</ph>プロパティを呼び出すことではなく<ph id="ph3">`GetEnumerator`</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.</source>
          <target state="translated">オブジェクトを逆シリアル化する (ように、TEMP 環境変数によって定義される) を一時ディレクトリに書き込むアクセス許可が必要です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Dynamically Generated Assemblies</source>
          <target state="translated">動的に生成されたアセンブリ</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types.</source>
          <target state="translated">パフォーマンスを向上させるには、XML シリアル化インフラストラクチャでは、シリアル化し、指定された型を逆シリアル化アセンブリが動的に生成されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The infrastructure finds and reuses those assemblies.</source>
          <target state="translated">インフラストラクチャは、検索して、それらのアセンブリを再利用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This behavior occurs only when using the following constructors:</source>
          <target state="translated">この動作は、次のコンス トラクターを使用する場合にのみ発生します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance.</source>
          <target state="translated">他のコンス トラクターを使用する場合、同じアセンブリの複数のバージョンが生成され、その結果、メモリ リークとパフォーマンスの低下にアンロードされません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The easiest solution is to use one of the previously mentioned two constructors.</source>
          <target state="translated">最も簡単なソリューションでは、前述の 2 つのコンス トラクターのいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Otherwise, you must cache the assemblies in a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, as shown in the following example.</source>
          <target state="translated">それ以外の場合、内のアセンブリをキャッシュする必要があります、<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>の次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serialization of ArrayList and Generic List</source>
          <target state="translated">ArrayList とジェネリック リストのシリアル化</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize or deserialize the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>次を逆シリアル化または逆シリアル化できません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Arrays of <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph></source>
          <target state="translated">配列 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Arrays of <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph></source>
          <target state="translated">配列 <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serialization of Enumerations of Unsigned Long</source>
          <target state="translated">Unsigned Long の列挙体のシリアル化</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (<ph id="ph2">`ulong`</ph> in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>を次の条件に該当する場合は、列挙型をシリアル化するインスタンス化することはできません: 列挙体は、符号なし long 型 (<ph id="ph2">`ulong`</ph> C# の場合)、列挙体より大きい値を持つメンバーが含まれています9,223,372,036,854,775,807 です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, the following cannot be serialized.</source>
          <target state="translated">たとえば、次のシリアル化できません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Objects marked with the Obsolete Attribute no longer serialized</source>
          <target state="translated">オブジェクトが不要になったシリアル化、不使用属性でマーク</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>In the <ph id="ph1">[!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class no longer serializes objects that are marked as <ph id="ph3">`[Obsolete]`</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)]</ph> 、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>クラスが不要になったとしてマークされているオブジェクトをシリアル化<ph id="ph3">`[Obsolete]`</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The following example contains two main classes: <ph id="ph1">`PurchaseOrder`</ph> and <ph id="ph2">`Test`</ph>.</source>
          <target state="translated">次の例には、次の 2 つの主要なクラスが含まれています:<ph id="ph1">`PurchaseOrder`</ph>と<ph id="ph2">`Test`</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`PurchaseOrder`</ph> class contains information about a single purchase.</source>
          <target state="translated"><ph id="ph1">`PurchaseOrder`</ph>クラスには、1 つの購入に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`Test`</ph> class contains the methods that create the purchase order, and that read the created purchase order.</source>
          <target state="translated"><ph id="ph1">`Test`</ph>クラスには、発注書を作成して、作成された発注書を読み取るメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Commonly, an application defines several classes that the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> converts into a single XML-instance document.</source>
          <target state="translated">一般的には、アプリケーションをいくつか定義するクラス、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>を 1 つの XML インスタンス ドキュメントに変換します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>However, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must know only one type--the type of the class that represents the XML root element.</source>
          <target state="translated">ただし、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 1 種類だけ--を XML ルート要素を表すクラスの型を知る必要があります。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> automatically serializes all subordinate class instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>自動的にすべての下位のクラス インスタンスをシリアル化します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Similarly, only the type of the XML root element is required for deserialization.</source>
          <target state="translated">同様に、XML ルート要素の型のみが逆シリアル化に必要です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that serializes an object named <ph id="ph2">`Widget`</ph>.</source>
          <target state="translated">次の例の構築、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>という名前のオブジェクトをシリアル化<ph id="ph2">`Widget`</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The example sets various properties of the object before calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">例では、呼び出す前に、オブジェクトのさまざまなプロパティの設定、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> that maps one type to another.</source>
          <target state="translated">1 つの型から別の型への割り当てを行う <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class using an object that maps one type to another.</source>
          <target state="translated">ある型を別の型にマップするオブジェクトを指定して、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>This constructor is used to create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when you serialize an object into a SOAP message.</source>
          <target state="translated">このコンス トラクターを使用して作成する、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> SOAP メッセージに、オブジェクトをシリアル化するとします。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>To control the SOAP messages generated, use the special attributes (beginning with the word "Soap") found in the <ph id="ph1">&lt;xref:System.Xml.Serialization&gt;</ph> namespace.</source>
          <target state="translated">生成される SOAP メッセージを制御するために特別な属性 ("Soap"という単語で始まる) を使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">次の例は、という名前のクラスをシリアル化<ph id="ph1">`Group`</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>The serialization of the <ph id="ph1">`GroupName`</ph>, <ph id="ph2">`IgnoreThis`</ph> fields, and the members of the <ph id="ph3">`GroupType`</ph> enumeration are overridden.</source>
          <target state="translated">シリアル化、 <ph id="ph1">`GroupName`</ph>、<ph id="ph2">`IgnoreThis`</ph>フィールド、およびのメンバー、<ph id="ph3">`GroupType`</ph>列挙型が上書きされます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>In the <ph id="ph1">`CreateOverrideSerializer`</ph> method, a <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object is created, and for each overridden member or enumeration, a <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> object is created with the appropriate property set and added to the <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`CreateOverrideSerializer`</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>オブジェクトが作成され、オーバーライドされたメンバーまたは列挙体ごとに、<ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>オブジェクトが適切なプロパティ設定に追加で作成された、<ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> object is created using the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object, and that <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> object is used to create the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that overrides the default serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph>を使用してオブジェクトを作成、<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>オブジェクト、およびを<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph>を作成するオブジェクトが使用される、<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>既定のシリアル化をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The default namespace to use for all the XML elements.</source>
          <target state="translated">すべての XML 要素で使用する既定の名前空間。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>Specifies the default namespace for all the XML elements.</source>
          <target state="translated">すべての XML 要素の既定の名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that serializes an object named <ph id="ph2">`Widget`</ph>.</source>
          <target state="translated">次の例の構築、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>という名前のオブジェクトをシリアル化<ph id="ph2">`Widget`</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The example sets various properties of the object before calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">例では、呼び出す前に、オブジェクトのさまざまなプロパティの設定、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">シリアル化する追加のオブジェクト型の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>If a property or field returns an array, the <ph id="ph1">&lt;paramref name="extraTypes" /&gt;</ph> parameter specifies objects that can be inserted into the array.</source>
          <target state="translated">プロパティまたはフィールドが配列を返す場合、<ph id="ph1">&lt;paramref name="extraTypes" /&gt;</ph> パラメーターには、その配列に挿入できるオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</source>
          <target state="translated">既定では、パブリック プロパティまたはフィールドは、オブジェクト、または、オブジェクトの配列を返す場合、オブジェクトの種類は自動的にシリアル化されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>However, if a class contains a field or property that returns an array of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>, any object can be inserted into that array.</source>
          <target state="translated">ただし、クラスには、フィールドまたはプロパティが含まれている場合を返す型の配列<ph id="ph1">&lt;xref:System.Object&gt;</ph>、任意のオブジェクトを配列に挿入することができます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be instructed to expect all the possible object types that are inserted into the <ph id="ph2">&lt;xref:System.Object&gt;</ph> array.</source>
          <target state="translated">その場合は、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>に挿入されるすべての可能なオブジェクトの種類を想定するように指定する必要があります、<ph id="ph2">&lt;xref:System.Object&gt;</ph>配列。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>To do this, use the <ph id="ph1">`extraTypes`</ph> parameter to specify the extra object types to serialize or deserialize.</source>
          <target state="translated">これを行うを使用して、<ph id="ph1">`extraTypes`</ph>パラメーターを逆シリアル化または逆シリアル化する余分なオブジェクトの種類を指定します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>You can also use the <ph id="ph1">`extraTypes`</ph> parameter to specify types derived from a base class.</source>
          <target state="translated">使用することも、<ph id="ph1">`extraTypes`</ph>基底クラスから派生した型を指定するパラメーターです。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>For example, suppose a base class named <ph id="ph1">`Phone`</ph> exists, and a class named <ph id="ph2">`InternationalPhone`</ph> derives from it.</source>
          <target state="translated">たとえば、という名前の基本クラス<ph id="ph1">`Phone`</ph>が存在する、という名前のクラスと<ph id="ph2">`InternationalPhone`</ph>そこから派生します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>Use the <ph id="ph1">`extraTypes`</ph> parameter to specify the derived type as well.</source>
          <target state="translated">使用して、<ph id="ph1">`extraTypes`</ph>パラメーターを同様に、派生型を指定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The following example serializes an instance of a class that contains a public field that returns an array of objects.</source>
          <target state="translated">次の例では、オブジェクトの配列を返すパブリック フィールドを含むクラスのインスタンスがシリアル化します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The <ph id="ph1">`extraTypes`</ph> parameter of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> constructor specifies the types of the objects that can be serialized in the array.</source>
          <target state="translated"><ph id="ph1">`extraTypes`</ph>のパラメーター、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>コンス トラクターは、配列にシリアル化可能なオブジェクトの種類を指定します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The type of the object to serialize.</source>
          <target state="translated">シリアル化するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</source>
          <target state="translated">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The <ph id="ph1">`overrides`</ph> parameter can be used to control how fields and properties are encoded in XML.</source>
          <target state="translated"><ph id="ph1">`overrides`</ph>フィールドおよびプロパティを XML にエンコードする方法を制御するパラメーターを使用することができます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>These settings override any attributes that already exist on the objects.</source>
          <target state="translated">これらの設定は、オブジェクトに既に存在するすべての属性をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</source>
          <target state="translated">これは、ソース コードを変更することはできませんまたは複数のエンコーディングは、同じクラスに必要なときに役立ちます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.</source>
          <target state="translated">次の例では、DLL、およびそのためには定義、DLL 内のパブリック メンバーをオーバーライドするクラスのインスタンスがシリアル化します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that represents the XML root element.</source>
          <target state="translated">XML ルート要素を表す <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>It also specifies the class to use as the XML root element.</source>
          <target state="translated">また、XML ルート要素として使用するクラスを指定します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The root element of an XML document encloses all the other elements.</source>
          <target state="translated">XML ドキュメントのルート要素には、その他のすべての要素が含まれます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>By default, the object specified by the <ph id="ph1">`type`</ph> parameter is serialized as the root element.</source>
          <target state="translated">既定では、によって指定されたオブジェクト、<ph id="ph1">`type`</ph>パラメーターは、ルート要素としてシリアル化します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>Properties, such as the XML element name of the root element, are taken from the <ph id="ph1">`type`</ph> object.</source>
          <target state="translated">ルート要素の XML 要素名などのプロパティから取得されます、<ph id="ph1">`type`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>However, the <ph id="ph1">`root`</ph> parameter allows you to replace the default object's information by specifying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>; the object allows you to set a different namespace, element name, and so on.</source>
          <target state="translated">ただし、<ph id="ph1">`root`</ph>パラメーターを指定して既定のオブジェクトの情報を交換することができます、 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>; オブジェクトでは、別の名前空間、要素名、およびなどを設定することができます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that uses an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> that contains various properties of the XML root element, such as its namespace and element name.</source>
          <target state="translated">次の例の構築、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>を使用して、 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> XML ルート要素の名前空間と要素の名前などのさまざまなプロパティを格納します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>型<ept id="p1">&lt;/c&gt;</ept>パラメーターで指定したクラスの動作を拡張またはオーバーライドする <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">シリアル化する追加のオブジェクト型の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">XML ルート要素プロパティを定義する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">XML ドキュメント内のすべての XML 要素の既定の名前空間。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of type <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> into XML document instances, and deserialize XML document instances into objects of type <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> 型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</source>
          <target state="translated">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</source>
          <target state="translated">このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The <ph id="ph1">`overrides`</ph> parameter allows for the creation of an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt; that serializes a class that extends or overrides the behavior of a base class.</source>
          <target state="translated"><ph id="ph1">`overrides`</ph>パラメーターを使用して作成するため、[XmlSerializer コンス トラクター (型、XmlAttributeOverrides、型<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt; を拡張またはの動作をオーバーライドするクラスをシリアル化します。基本クラスです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL.</source>
          <target state="translated">たとえば、DLL を指定するには、可能であればを継承または DLL に含まれるクラスを拡張するクラスを作成します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>To serialize such a class, you must use an instance of the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides&gt; class when constructing the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt;.</source>
          <target state="translated">このようなクラスをシリアル化するには、インスタンスを使用する必要があります、[XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides &gt; [XmlSerializer コンス トラクター (を構築するときにクラス型、XmlAttributeOverrides、Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt;。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>For more details, see [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides&gt;.</source>
          <target state="translated">詳細については、次を参照してください。 [XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides &gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</source>
          <target state="translated">既定では、パブリック プロパティまたはフィールドは、オブジェクト、または、オブジェクトの配列を返す場合、オブジェクトの種類は自動的にシリアル化されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>However, if a class contains a field or property that returns an array of type [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Object&gt;, any object can be inserted into that array.</source>
          <target state="translated">ただし、クラスには、フィールドまたはプロパティが含まれている場合を返す型の配列 [XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph1">\&lt;</ph>xref:System.Object &gt;、任意のオブジェクトを配列に挿入することができます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>In that case, the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt; must be instructed to expect all the possible object types that are inserted into the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Object&gt; array.</source>
          <target state="translated">その場合は、[XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt; [XmlSerializer に挿入されるすべての可能なオブジェクトの種類を想定するように指定する必要がありますコンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph2">\&lt;</ph>xref:System.Object &gt; 配列。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>To do this, use the <ph id="ph1">`extraTypes`</ph> parameter to specify the extra object types to serialize or deserialize.</source>
          <target state="translated">これを行うを使用して、<ph id="ph1">`extraTypes`</ph>パラメーターを逆シリアル化または逆シリアル化する余分なオブジェクトの種類を指定します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The root element of an XML document encloses all the other elements.</source>
          <target state="translated">XML ドキュメントのルート要素には、その他のすべての要素が含まれます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>By default, the object specified by the <ph id="ph1">`type`</ph> parameter is serialized as the root element.</source>
          <target state="translated">既定では、によって指定されたオブジェクト、<ph id="ph1">`type`</ph>パラメーターは、ルート要素としてシリアル化します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Properties, such as the XML element name of the root element are taken from the <ph id="ph1">`type`</ph> object.</source>
          <target state="translated">ルート要素の XML 要素名などのプロパティから取得されます、<ph id="ph1">`type`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>However, the <ph id="ph1">`root`</ph> parameter allows you to replace the default object's information by specifying an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlRootAttribute&gt;; the object allows you to set a different namespace, element name, and so on.</source>
          <target state="translated">ただし、<ph id="ph1">`root`</ph>パラメーターを指定して既定のオブジェクトの情報を交換することができます、[XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlRootAttribute &gt; 以外の場合は、オブジェクトでは、別の名前空間、要素名、およびなどを設定することができます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Use the <ph id="ph1">`defaultName`</ph> parameter to specify the default namespace of all XML elements generated by the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt;.</source>
          <target state="translated">使用して、<ph id="ph1">`defaultName`</ph>によって生成されたすべての XML 要素の既定の名前空間を指定するパラメーター、[XmlSerializer コンス トラクター (型、XmlAttributeOverrides、Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class.</source>
          <target state="translated">次の例では、DLL ではこれを行うには、クラスのパブリック メンバーをオーバーライドするクラスのインスタンスがシリアル化します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information.</source>
          <target state="translated">この例では、余分な型は、すべての XML 要素、および XML ルート要素の情報を提供するクラスを使用する既定の名前空間の配列も指定します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The example assumes that the code at the beginning has been compiled into a DLL named <ph id="ph1">`HighSchool`</ph>.</source>
          <target state="translated">この例では、先頭のコードがという名前の DLL にコンパイルされている<ph id="ph1">`HighSchool`</ph>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>型<ept id="p1">&lt;/c&gt;</ept>パラメーターで指定したクラスの動作を拡張またはオーバーライドする <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">シリアル化する追加のオブジェクト型の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">XML ルート要素プロパティを定義する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">XML ドキュメント内のすべての XML 要素の既定の名前空間。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The location of the types.</source>
          <target state="translated">型の位置。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of type <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> into XML document instances, and deserialize XML document instances into objects of type <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> 型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</source>
          <target state="translated">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</source>
          <target state="translated">このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> がシリアル化できるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>型<ept id="p1">&lt;/c&gt;</ept>パラメーターで指定したクラスの動作を拡張またはオーバーライドする <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">シリアル化する追加のオブジェクト型の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">XML ルート要素プロパティを定義する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">XML ドキュメント内のすべての XML 要素の既定の名前空間。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The location of the types.</source>
          <target state="translated">型の位置。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> class that contains credentials required to access types.</source>
          <target state="translated">型にアクセスするために必要な資格情報を含む <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type.</source>
          <target state="translated">指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</source>
          <target state="translated">このオーバーロードでは、シリアル化操作または逆シリアル化操作で見つかる可能性がある他の型、すべての XML 要素の既定の名前空間、XML ルート要素として使用されるクラスとその場所、およびアクセスで要求される資格情報を提供できます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Allows more precise control over access to a temporary directory and prevents code injection and exploitation.</source>
          <target state="translated">一時ディレクトリへのアクセスをより細かく制御できますおよびコードの挿入や悪用を防止します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>To use this method, specify a location and give access only to specific users.</source>
          <target state="translated">このメソッドを使用するのには、場所を指定し、特定のユーザーにのみアクセスできるようにします。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Administrators can set up policies with evidence lists that match evidence to permissions.</source>
          <target state="translated">管理者は、証拠に基づいてアクセス許可に一致する証拠のリストを持つポリシーを設定できます。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that points to the document to deserialize.</source>
          <target state="translated">逆シリアル化するドキュメントを指す <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can deserialize a specified XML document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が、指定された XML ドキュメントを逆シリアル化できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can deserialize the object that the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> points to; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> が指すオブジェクトを <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が逆シリアル化できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A&gt;</ph> method to check whether an XML document can be deserialized.</source>
          <target state="translated">次の例では、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A&gt;</ph> XML ドキュメントを逆シリアル化できるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>Returns an object used to read the XML document to be serialized.</source>
          <target state="translated">シリアル化される XML ドキュメントを読み取るために使用されるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> used to read the XML document.</source>
          <target state="translated">XML ドキュメントを読み取るために使用する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>When overridden in a derived class, returns a writer used to serialize the object.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、オブジェクトのシリアル化に使用されるライターを返します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> クラスを実装するインスタンス。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Deserializes an XML document.</source>
          <target state="translated">XML ドキュメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">逆シリアル化する XML ドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> に格納されている XML ドキュメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">逆シリアル化される <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">逆シリアル化は、XML ドキュメントを読み取ると、ドキュメントの XML スキーマ (XSD) を厳密に型指定されたオブジェクトを構築するプロセスです。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">逆シリアル化する前に、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>逆シリアル化されるオブジェクトの型を使用して構築する必要があります。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Use the <ph id="ph1">`stream`</ph> parameter to specify an object that derives from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which is designed to write to streams.</source>
          <target state="translated">使用して、<ph id="ph1">`stream`</ph>から派生したオブジェクトを指定するパラメーター、<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>クラスは、ストリームに書き込むよう設計されています。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include:</source>
          <target state="translated">派生したクラス、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>クラスが含まれます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次の逆シリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The following example deserializes an object using a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">次の例では、オブジェクトを使用して、逆シリアル化、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">逆シリアル化する XML ドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> に格納されている XML ドキュメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">逆シリアル化される <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">逆シリアル化は、XML ドキュメントのインスタンスを読み取り、およびドキュメントの XML スキーマ (XSD) を厳密に型指定されたオブジェクトを構築するプロセスです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">逆シリアル化する前に、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>逆シリアル化されるオブジェクトの型を使用して構築する必要があります。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> include <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StreamReader&gt;</ph>.</source>
          <target state="translated">継承するクラス<ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>含める<ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph>と<ph id="ph3">&lt;xref:System.IO.StreamReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>If you are using a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> to deserialize an object, you must construct the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> with an appropriate <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph>.</source>
          <target state="translated">使用している場合、<ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>オブジェクトを逆シリアル化、構築する必要があります、<ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph>を適切な<ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The encoding specified by the XML document is ignored.</source>
          <target state="translated">XML ドキュメントで指定されているエンコードは無視されます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>To use the encoding specified by the XML document, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> overload that takes an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instead.</source>
          <target state="translated">使用するには、XML ドキュメントで指定されたエンコーディングを使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>を受け取るオーバー ロード、<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>代わりにします。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automatically detects and uses the encoding specified by the XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>自動的に検出して XML ドキュメントで指定されたエンコーディングを使用します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次の逆シリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The following example deserializes an object using a <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> object.</source>
          <target state="translated">次の例では、オブジェクトを使用して、逆シリアル化、<ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">逆シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">逆シリアル化する XML ドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> に格納されている XML ドキュメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>The deserialized object.</source>
          <target state="translated">逆シリアル化されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">逆シリアル化する XML ドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> に格納されている XML ドキュメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">逆シリアル化される <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">逆シリアル化は、XML ドキュメントのインスタンスを読み取り、およびドキュメントの XML スキーマ (XSD) を厳密に型指定されたオブジェクトを構築するプロセスです。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">逆シリアル化する前に、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>逆シリアル化されるオブジェクトの型を使用して構築する必要があります。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automatically detects and uses the encoding specified by the XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>自動的に検出して XML ドキュメントで指定されたエンコーディングを使用します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次の逆シリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The following example deserializes an object using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">次の例では、オブジェクトを使用して、逆シリアル化、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">逆シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">逆シリアル化する XML ドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The encoding style of the serialized XML.</source>
          <target state="translated">シリアル化された XML のエンコード スタイル。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and encoding style.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> に格納されている XML ドキュメントを、指定したエンコード スタイルを使用して逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The deserialized object.</source>
          <target state="translated">逆シリアル化されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">逆シリアル化は、XML ドキュメントのインスタンスを読み取り、およびドキュメントの XML スキーマ (XSD) を厳密に型指定されたオブジェクトを構築するプロセスです。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">逆シリアル化する前に、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>逆シリアル化されるオブジェクトの型を使用して構築する必要があります。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Set the <ph id="ph1">`encodingStyle`</ph> parameter to "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph> " for SOAP version 1.1 encoding; otherwise, set it to "<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" for SOAP version 1.2 encoding.</source>
          <target state="translated">設定、<ph id="ph1">`encodingStyle`</ph>パラメーターを"<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph> "の SOAP バージョン 1.1 のエンコードです。それ以外の場合に設定"<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>"の SOAP バージョン 1.2 エンコードします。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>注<ept id="p1">**</ept>、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次の逆シリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">逆シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the document to deserialize.</source>
          <target state="translated">逆シリアル化するドキュメントを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>Deserializes an XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and allows the overriding of events that occur during deserialization.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> に格納されている XML ドキュメントを逆シリアル化します。また、逆シリアル化で発生するイベントのオーバーライドを可能にします。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">逆シリアル化される <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The object being deserialized.</source>
          <target state="translated">逆シリアル化されているオブジェクト。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class used to read the document.</source>
          <target state="translated">ドキュメントの読み取りに使用される <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The encoding used.</source>
          <target state="translated">使用されるエンコーディング。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>Deserializes the object using the data contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> に格納されているデータを使用してオブジェクトを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The object being deserialized.</source>
          <target state="translated">逆シリアル化されているオブジェクト。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>This method is required for deserialization of unknown headers for Web Service scenarios only.</source>
          <target state="translated">このメソッドは、Web サービス シナリオでのみの不明なヘッダーの逆シリアル化に必要です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>This method allows you to avoid event synchronization in Web Service methods.</source>
          <target state="translated">このメソッドでは、Web サービス メソッドでイベントの同期を回避することができます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class from the specified mappings.</source>
          <target state="translated">指定したマッピングから <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> that maps one type to another.</source>
          <target state="translated">1 つの型から別の型への割り当てを行う <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects created from an array of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> オブジェクトの配列から作成された、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> オブジェクトの配列を返します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects used to map one type to another.</source>
          <target state="translated">1 つの型から別の型への割り当てに使用される <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> class that contains host and assembly data presented to the common language runtime policy system.</source>
          <target state="translated">共通言語ランタイム ポリシー システムに提示されるホスト データおよびアセンブリ データを含む <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class created from mappings of one XML type to another.</source>
          <target state="translated">XML 型から別の型への割り当てから作成された <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the deserialized object.</source>
          <target state="translated">逆シリアル化されるオブジェクトの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class from the specified mappings.</source>
          <target state="translated">指定したマッピングから <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects created from an array of types.</source>
          <target state="translated">型の配列から作成された、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> オブジェクトの配列を返します。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> method allows you to efficiently create an array of <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objects for processing an array of <ph id="ph3">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph>メソッドでは、配列を効率的に作成できます。<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>オブジェクトの配列を処理するため<ph id="ph3">&lt;xref:System.Type&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> method to return an array of <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objects.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph>の配列を返すメソッドを<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The code includes three class definitions that are each used to create an array of <ph id="ph1">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">コードには配列の作成に使用される各 3 つのクラス定義が含まれています<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns an assembly that contains typed serializers.</source>
          <target state="translated">型指定されたシリアライザーを格納しているアセンブリを返します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML シリアライザー ジェネレーター ツール (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept>の実行時のパフォーマンスを向上させるために指定されたアセンブリで型の XML シリアル化アセンブリを作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>シリアル化またはのオブジェクトを逆シリアル化すると、指定された型。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph>ようなアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Web サービスを呼び出すクライアント アプリケーションの一部としてこのようなアセンブリを配布する場合は、適用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph>アセンブリの名前と場所を指定するクライアントの種類にします。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>A collection of types.</source>
          <target state="translated">型のコレクション。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects used to convert one type to another.</source>
          <target state="translated">1 つの型から別の型への変換に使用される <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> オブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</source>
          <target state="translated">指定した割り当てを使用して、指定した型をシリアル化または逆シリアル化するために使用される、カスタム シリアライザーを格納しているアセンブリを返します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> object that contains serializers for the supplied types and mappings.</source>
          <target state="translated">指定した型および割り当てのシリアライザーを格納している <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains objects used to serialize and deserialize data.</source>
          <target state="translated">データのシリアル化および逆シリアル化に使用されるオブジェクトを格納している <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> that maps the XML data to the type data.</source>
          <target state="translated">XML データを型データに割り当てる <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class that represents the parameters used to invoke a compiler.</source>
          <target state="translated">コンパイラを呼び出すために使用されるパラメーターを表す <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</source>
          <target state="translated">指定した割り当てとコンパイラの設定およびオプションを使用して、指定した型をシリアル化または逆シリアル化するために使用される、カスタム シリアライザーを格納しているアセンブリを返します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that contains special versions of the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</source>
          <target state="translated">特別なバージョンの <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> を含む <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns the name of the assembly that contains one or more versions of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> especially created to serialize or deserialize specific types.</source>
          <target state="translated">特定の型のシリアル化または逆シリアル化のために特に作成された 1 つ以上のバージョンの <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> を格納しているアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML シリアライザー ジェネレーター ツール (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept>の実行時のパフォーマンスを向上させるために指定されたアセンブリで型の XML シリアル化アセンブリを作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>シリアル化またはのオブジェクトを逆シリアル化すると、指定された型。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph>ようなアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Web サービスを呼び出すクライアント アプリケーションの一部としてこのようなアセンブリを配布する場合は、適用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph>アセンブリの名前と場所を指定するクライアントの種類にします。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> you are deserializing.</source>
          <target state="translated">逆シリアル化している <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>Returns the name of the assembly that contains one or more versions of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> especially created to serialize or deserialize the specified type.</source>
          <target state="translated">指定した型のシリアル化または逆シリアル化のために特に作成された、1 つ以上のバージョンの <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> を格納しているアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The name of the assembly that contains an <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> for the type.</source>
          <target state="translated">型の <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> を格納しているアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML シリアライザー ジェネレーター ツール (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept>の実行時のパフォーマンスを向上させるために指定されたアセンブリで型の XML シリアル化アセンブリを作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>シリアル化またはのオブジェクトを逆シリアル化すると、指定された型。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph>ようなアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Web サービスを呼び出すクライアント アプリケーションの一部としてこのようなアセンブリを配布する場合は、適用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph>アセンブリの名前と場所を指定するクライアントの種類にします。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> you are interested in.</source>
          <target state="translated">コレクション内に存在するかどうかを確認する対象の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The namespace of the type.</source>
          <target state="translated">型の名前空間。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</source>
          <target state="translated">指定した名前空間にある指定した型のシリアライザーを格納しているアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The name of the assembly that contains specially built serializers.</source>
          <target state="translated">特別に作成されたシリアライザーを格納しているアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML シリアライザー ジェネレーター ツール (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept>の実行時のパフォーマンスを向上させるために指定されたアセンブリで型の XML シリアル化アセンブリを作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>シリアル化またはのオブジェクトを逆シリアル化すると、指定された型。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph>ようなアセンブリの名前を返します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Web サービスを呼び出すクライアント アプリケーションの一部としてこのようなアセンブリを配布する場合は、適用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph>アセンブリの名前と場所を指定するクライアントの種類にします。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serializes an object into an XML document.</source>
          <target state="translated">オブジェクトを XML ドキュメントにシリアル化します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、生成された XML ドキュメントを、指定した <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> を使用してファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドは、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、または読み取り専用プロパティは変換されません。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>To serialize all of an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">すべてのオブジェクトのフィールドとプロパティをシリアル化には、パブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>In the <ph id="ph1">`stream`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`stream`</ph>パラメーター、抽象から派生したオブジェクトを指定して<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> include:</source>
          <target state="translated">派生したクラス<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>が含まれます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The following example serializes an object using a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">次の例では、オブジェクトを使用して、シリアル化、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、生成された XML ドキュメントを、指定した <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> を使用してファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドは、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、または読み取り専用プロパティは変換されません。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>To serialize all an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">オブジェクトのすべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>In the <ph id="ph1">`textWriter`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`textWriter`</ph>パラメーター、抽象から派生したオブジェクトを指定して<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> include:</source>
          <target state="translated">派生したクラス<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>が含まれます。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The following example serializes an object using a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">次の例では、オブジェクトを使用して、シリアル化、<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、生成された XML ドキュメントを、指定した <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> を使用してファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、生成された XML ドキュメントを、指定した <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> を使用してファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドは、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、または読み取り専用プロパティは変換されません。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>To serialize all an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">オブジェクトのすべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>In the <ph id="ph1">`xmlWriter`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`xmlWriter`</ph>パラメーター、抽象から派生したオブジェクトを指定して<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>から派生した、<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The following example serializes an object using an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">次の例では、オブジェクトを使用して、シリアル化、<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">オブジェクトが参照する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that references the specified namespaces.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、指定した <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> を使用して、指定した名前空間を参照し、生成された XML ドキュメントをファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドが呼び出される、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、および読み取り専用プロパティはシリアル化されません。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">すべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`stream`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which is designed to write to streams.</source>
          <target state="translated">使用して、<ph id="ph1">`stream`</ph>抽象から派生したオブジェクトを指定するパラメーター<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>クラスは、ストリームに書き込むよう設計されています。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include:</source>
          <target state="translated">派生したクラス、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>クラスが含まれます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">次の例を持つオブジェクトをシリアル化、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> and adds two namespaces to the object.</source>
          <target state="translated">例でも作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>し、オブジェクトに 2 つの名前空間を追加します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The class that defines the serialized object is also attributed with <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to specify the namespace for each element.</source>
          <target state="translated">シリアル化されたオブジェクトを定義するクラスは、属性が設定されても<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>属性の各要素の名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> that contains namespaces for the generated XML document.</source>
          <target state="translated">生成された XML ドキュメントで使用する名前空間を格納している <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and references the specified namespaces.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、指定した <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドが呼び出される、パブリック フィールドとオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、および読み取り専用プロパティはシリアル化されません。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">すべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`textWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> class.</source>
          <target state="translated">使用して、<ph id="ph1">`textWriter`</ph>抽象から派生したオブジェクトを指定するパラメーター<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class include:</source>
          <target state="translated">派生したクラス<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>クラスが含まれます。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">次の例を持つオブジェクトをシリアル化、<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object and adds two namespaces to the object.</source>
          <target state="translated">例でも作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>オブジェクトおよびオブジェクトに 2 つの名前空間を追加します。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The class that defines the serialized object is also attributed with <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to specify the namespace for each element.</source>
          <target state="translated">シリアル化されたオブジェクトを定義するクラスは、属性が設定されても<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>属性の各要素の名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">シリアル化する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">オブジェクトが参照する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and references the specified namespaces.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、指定した <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドが呼び出される、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、および読み取り専用プロパティはシリアル化されません。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">すべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`xmlWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, which is designed to write XML documents.</source>
          <target state="translated">使用して、<ph id="ph1">`xmlWriter`</ph>抽象から派生したオブジェクトを指定するパラメーター<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>クラスは、XML ドキュメントを作成するよう設計されています。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>から派生した、<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">次の例を持つオブジェクトをシリアル化、<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> and adds two namespaces to the object.</source>
          <target state="translated">例でも作成、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>し、オブジェクトに 2 つの名前空間を追加します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Several instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> class are applied to the class members to specify the namespace for each element.</source>
          <target state="translated">複数のインスタンス、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>クラスは、各要素の名前空間を指定するクラスのメンバーに適用されます。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">オブジェクトが参照する <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The encoding style of the serialized XML.</source>
          <target state="translated">シリアル化された XML のエンコード スタイル。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Serializes the specified object and writes the XML document to a file using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and references the specified namespaces and encoding style.</source>
          <target state="translated">指定したオブジェクトをシリアル化し、指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> を使用して、指定した名前空間とエンコード スタイルを参照し、生成された XML ドキュメントをファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>メソッドが呼び出される、パブリック フィールドおよびオブジェクトの読み取り/書き込みプロパティを XML に変換します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">メソッド、インデクサー、プライベート フィールド、および読み取り専用プロパティはシリアル化されません。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">すべてのフィールドとプロパティをシリアル化するパブリックとプライベートの両方を使用して、<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Use the <ph id="ph1">`xmlWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, which is designed to write XML documents.</source>
          <target state="translated">使用して、<ph id="ph1">`xmlWriter`</ph>抽象から派生したオブジェクトを指定するパラメーター<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>クラスは、XML ドキュメントを作成するよう設計されています。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>から派生した、<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Set the <ph id="ph1">`encodingStyle`</ph> parameter to "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph>" for SOAP version 1.1 encoding; otherwise, set it to "<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" for SOAP version 1.2 encoding.</source>
          <target state="translated">設定、<ph id="ph1">`encodingStyle`</ph>パラメーターを"<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph>"の SOAP バージョン 1.1 のエンコードです。 それ以外の場合に設定"<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>"の SOAP バージョン 1.2 エンコードします。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 、次をシリアル化できません: 配列の<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>およびの配列<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>An error occurred during serialization.</source>
          <target state="translated">シリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">元の例外には、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">XML ドキュメントを書き込むために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>An instance of the <ph id="ph1">&lt;see langword="XmlSerializaerNamespaces" /&gt;</ph> that contains namespaces and prefixes to use.</source>
          <target state="translated">使用する名前空間とプレフィックスを格納している <ph id="ph1">&lt;see langword="XmlSerializaerNamespaces" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The encoding used in the document.</source>
          <target state="translated">ドキュメントで使用するエンコーディング。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>For SOAP encoded messages, the base used to generate id attributes.</source>
          <target state="translated">SOAP エンコード済みメッセージの場合に、id 属性の生成に使用される基本文字列。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, XML namespaces, and encoding.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> をシリアル化し、指定した <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>、XML 名前空間、およびエンコーディングを使用して、XML ドキュメントをファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The <bpt id="p1">*</bpt>id<ept id="p1">*</ept> parameter supplies the base string used to create SOAP ids.</source>
          <target state="translated"><bpt id="p1">*</bpt>Id<ept id="p1">*</ept>パラメーターが SOAP の id を作成するために使用する基本の文字列を指定します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>By default, these are "id1", "id2" and so on.</source>
          <target state="translated">既定では、これらは"id1"や"id2"です。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>But if the parameter is set to "myBase" the generated values are "myBaseid1", "myBaseid2" and so on.</source>
          <target state="translated">かどうか、パラメーターが設定"myBase"に生成された値がある"myBaseid1"、"myBaseid2"など</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>This functionality is used to create unique id values across the whole SOAP message.</source>
          <target state="translated">この機能を使用して、SOAP メッセージ全体にわたる一意の id 値を作成します。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML attribute of unknown type during deserialization.</source>
          <target state="translated">逆シリアル化時に <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が不明な型の XML 属性を認識した場合に発生します。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML attributes of unknown types.</source>
          <target state="translated">既定では、呼び出した後、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不明な型の XML 属性を無視します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">ただし、このイベントを使用して、このようなノード型を処理することができます。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>If the instance of the class being deserialized contains a field that returns an array of <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied to the field, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> event does not occur.</source>
          <target state="translated">逆シリアル化されるクラスのインスタンスの配列を返すフィールドが含まれる場合<ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph>オブジェクトおよび<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>、フィールドに適用されて、<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>Instead, all unknown XML attributes are collected into the array.</source>
          <target state="translated">代わりに、すべての不明な XML 属性は、配列に収集されます。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>The following example prints information about any unknown attributes encountered while deserializing an XML document.</source>
          <target state="translated">次の例では、XML ドキュメントを逆シリアル化中に発生した不明な属性に関する情報を出力します。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML element of unknown type during deserialization.</source>
          <target state="translated">逆シリアル化時に <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が不明な型の XML 要素を認識した場合に発生します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML attributes of unknown types.</source>
          <target state="translated">既定では、呼び出した後、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不明な型の XML 属性を無視します。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">ただし、このイベントを使用して、このようなノード型を処理することができます。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> is applied to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects, all unknown elements are collected in the array.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>の配列を返すフィールドに適用される<ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph>オブジェクト、配列のすべての不明な要素が収集されます。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> event does not occur.</source>
          <target state="translated">その場合は、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>The following example deserializes a class named <ph id="ph1">`Group`</ph> from a file named UnknownElements.xml.</source>
          <target state="translated">次の例には、という名前のクラスが逆シリアル化<ph id="ph1">`Group`</ph>UnknownElements.xml をという名前のファイルからです。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>Whenever an element is found in the file that has no corresponding member in the class, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> event occurs.</source>
          <target state="translated">要素はクラスでは、対応するメンバーを持たないファイルで検出されると、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>To try the example, paste the following XML code into a file named UnknownElements.xml.</source>
          <target state="translated">この例を実行するには、UnknownElements.xml をという名前のファイルに次の XML コードを貼り付けます。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML node of unknown type during deserialization.</source>
          <target state="translated">逆シリアル化時に <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が不明な型の XML ノードを認識した場合に発生します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML nodes of unknown types.</source>
          <target state="translated">既定では、呼び出した後、 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不明な型の XML ノードは無視されます。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">ただし、このイベントを使用して、このようなノード型を処理することができます。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>The following example prints the type of any encountered unknown node.</source>
          <target state="translated">次の例では、発生した不明なノードの種類を出力します。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Occurs during deserialization of a SOAP-encoded XML stream, when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters a recognized type that is not used or is unreferenced.</source>
          <target state="translated">SOAP エンコード済み XML ストリームの逆シリアル化時に、<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> が、未使用の型または参照されていない型を認識した場合に発生します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event only occurs when the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph>のみイベントが発生したときに、 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 「簡易オブジェクト アクセス プロトコル (SOAP) 1.1」、World Wide Web Consortium) (www.w3.org) ドキュメントのセクション 5 に準拠する SOAP メッセージを含む XML ドキュメントを逆シリアル化するために使用します。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Documents that conform to section 5 are in a special format.</source>
          <target state="translated">セクション 5 に準拠しているドキュメントは、特殊な形式で、します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>At the very least, such a document includes the main body of the SOAP message.</source>
          <target state="translated">少なくともは、このようなドキュメントには、SOAP メッセージの本文が含まれています。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document.</source>
          <target state="translated">ただし、すべての型を持つドキュメントにインラインで定義されたではなく一部の型定義は、ドキュメント内の最上位の要素への参照としてエンコードできます。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition.</source>
          <target state="translated">したがって、参照であるメイン ボディの検出された要素ごとに、必要があります型定義を含む対応する要素。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>To correlate the referencing element and the type definition, the type definition has an <ph id="ph1">`id`</ph> attribute set to a unique string ID and the referencing element has an <ph id="ph2">`href`</ph> attribute that references the same ID.</source>
          <target state="translated">型定義には、参照元の要素とその型定義を関連付けるため、<ph id="ph1">`id`</ph>属性と参照元の要素の一意の文字列 ID を設定するが、<ph id="ph2">`href`</ph>同じ ID を参照する属性</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event occur when there is a type definition found in the document, but no parameter in the main body references it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph>ドキュメントで検出された種類の定義がある場合に、イベントが発生するが、メイン ボディのパラメーターから参照されていません。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs&gt;</ph> class.</source>
          <target state="translated">確認するには、参照されていないオブジェクトの XML 型を取得するには、イベントの発生時に、<ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The XML ID of the object is returned by the <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A&gt;</ph> property.</source>
          <target state="translated">オブジェクトの XML ID がによって返される、<ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event should not be confused with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> events, which occur when there is no class member that corresponds to the XML node or element type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph>イベントがないと混同しないでください、<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph>と<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph>イベントでは、XML ノードや要素の型に対応するクラスのメンバーがない場合に発生します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The following example adds an <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventHandler&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">次の例では追加、<ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventHandler&gt;</ph>を<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The event is handled by the <ph id="ph1">`Serializer``_``UnreferencedObject`</ph> method.</source>
          <target state="translated">イベントを処理して、<ph id="ph1">`Serializer``_``UnreferencedObject`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>To run the example, cut and paste the following XML into a file named "UnrefObj.xml".</source>
          <target state="translated">実行するには、例を切り取って"UnrefObj.xml"という名前のファイルに次の XML を貼り付けます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>