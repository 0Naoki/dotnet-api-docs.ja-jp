<Type Name="XmlArrayAttribute" FullName="System.Xml.Serialization.XmlArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="910dd607d87bfddfaeedcfcaf4c6952e53d1faf8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48605984" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cb4c3-101">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が特定のクラス メンバーを XML 要素の配列としてシリアル化する必要があることを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a particular class member as an array of XML elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-102"><xref:System.Xml.Serialization.XmlArrayAttribute>を制御する属性のファミリに属するどの<xref:System.Xml.Serialization.XmlSerializer>をシリアル化またはオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-102">The <xref:System.Xml.Serialization.XmlArrayAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="cb4c3-103">類似の属性の完全な一覧を参照してください。 [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="cb4c3-104">適用することができます、<xref:System.Xml.Serialization.XmlArrayAttribute>オブジェクトの配列を返すパブリック フィールドまたは読み取り/書き込みプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-104">You can apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field or read/write property that returns an array of objects.</span></span> <span data-ttu-id="cb4c3-105">コレクションを返すフィールドを適用することも、<xref:System.Collections.ArrayList>または実装するオブジェクトを返す任意のフィールド、<xref:System.Collections.IEnumerable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-105">You can also apply it to collections and fields that return an <xref:System.Collections.ArrayList> or any field that returns an object that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="cb4c3-106">適用すると、<xref:System.Xml.Serialization.XmlArrayAttribute>クラスのメンバーに、<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>のメソッド、<xref:System.Xml.Serialization.XmlSerializer>クラスは、そのメンバーからの XML 要素の入れ子になったシーケンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-106">When you apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a class member, the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class generates a nested sequence of XML elements from that member.</span></span> <span data-ttu-id="cb4c3-107">XML スキーマ ドキュメント (.xsd ファイル) を示しますこのような配列として、`complexType`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-107">An XML schema document (an .xsd file), indicates such an array as a `complexType`.</span></span> <span data-ttu-id="cb4c3-108">たとえば、シリアル化するクラスが注文書である場合は、生成できます購入済みの項目の配列を適用して、<xref:System.Xml.Serialization.XmlArrayAttribute>注文番号の品目を表すオブジェクトの配列を返すパブリック フィールドにします。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-108">For example, if the class to be serialized represents a purchase order, you can generate an array of purchased items by applying the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field that returns an array of objects that represent order items.</span></span>  
  
 <span data-ttu-id="cb4c3-109">パブリック フィールドまたは複雑なまたはプリミティブ型のオブジェクトの配列を返すプロパティに属性が適用されていない場合、<xref:System.Xml.Serialization.XmlSerializer>既定で XML 要素の入れ子になったシーケンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-109">If no attributes are applied to a public field or property that returns an array of complex or primitive type objects, the <xref:System.Xml.Serialization.XmlSerializer> generates a nested sequence of XML elements by default.</span></span> <span data-ttu-id="cb4c3-110">正確にどのような XML 要素は、生成を制御するには、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>と<xref:System.Xml.Serialization.XmlArrayAttribute>フィールドまたはプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-110">To more precisely control what XML elements are generated, apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="cb4c3-111">例では、既定で生成された XML 要素の名前がから派生したメンバーの識別子を設定して生成された XML 要素の名前を変更することができます、<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-111">For example, by default, the name of the generated XML element is derived from the member identifier You can change the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="cb4c3-112">特定の種類の項目を含む配列をシリアル化して、すべてのクラスから派生した型である必要がありますを使用することがある場合、<xref:System.Xml.Serialization.XmlArrayItemAttribute>をそれぞれの種類を宣言します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-112">If you serialize an array that contains items of a specific type and all the classes derived from that type, you must use the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to declare each of the types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4c3-113">使用することができます`XmlArray`代わりに、コードで<xref:System.Xml.Serialization.XmlArrayAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-113">You can use `XmlArray` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayAttribute>.</span></span>  
  
 <span data-ttu-id="cb4c3-114">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-114">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-115">次の例では、クラスのインスタンスを複数のオブジェクトの配列を含む XML ドキュメントにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-115">The following example serializes a class instance into an XML document that contains several object arrays.</span></span> <span data-ttu-id="cb4c3-116"><xref:System.Xml.Serialization.XmlArrayAttribute> XML 要素の配列になるメンバーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-116">The <xref:System.Xml.Serialization.XmlArrayAttribute> is applied to the members that become XML element arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
    <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">
      <span data-ttu-id="cb4c3-117">XML シリアル化の概要</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-117">Introducing XML Serialization</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">
      <span data-ttu-id="cb4c3-118">方法 : XML ストリームの代替要素名を指定する</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-118">How to: Specify an Alternate Element Name for an XML Stream</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">
      <span data-ttu-id="cb4c3-119">属性を使用した XML シリアル化の制御</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-119">Controlling XML Serialization Using Attributes</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">
      <span data-ttu-id="cb4c3-120">XML シリアル化の例</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-120">Examples of XML Serialization</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">
      <span data-ttu-id="cb4c3-121">XML Schema Definition Tool (Xsd.exe)</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb4c3-121">XML Schema Definition Tool (Xsd.exe)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-122">
            <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-123">
            <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-124">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-124">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-125">次の例、<xref:System.Xml.Serialization.XmlArrayAttribute>に 2 つの配列。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-125">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayAttribute : string -&gt; System.Xml.Serialization.XmlArrayAttribute" Usage="new System.Xml.Serialization.XmlArrayAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="cb4c3-126">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-126">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb4c3-127">
            <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメント インスタンスに生成される XML 要素名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class and specifies the XML element name generated in the XML document instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-128">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-128">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-129">次の例、 <xref:System.Xml.Serialization.XmlArrayAttribute> 2 つの配列にこれらの配列を含むクラスのインスタンスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-129">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays, and serializes a class instance that contains those arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/Common/MyClass1.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-130">シリアル化された配列に与えられた、XML 要素の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-130">Gets or sets the XML element name given to the serialized array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb4c3-131">シリアル化された配列の XML 要素名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-131">The XML element name of the serialized array.</span>
          </span>
          <span data-ttu-id="cb4c3-132">既定値は、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> が割り当てられたメンバーの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-132">The default is the name of the member to which the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> is assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-133">指定、<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>メンバーの識別子とは異なるに生成された XML 要素名の場合します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-133">Specify an <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> when you want the generated XML element name to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="cb4c3-134">同じように設定することができます<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>生成された XML ドキュメントが同じ名前を持つメンバーを区別する XML 名前空間を使用している限り、1 つ以上のメンバーに値します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-134">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one member as long as the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="cb4c3-135">名前空間を使用して、XML ドキュメント内のプレフィックス付きの名前を作成する方法の詳細については、次を参照してください。<xref:System.Xml.Serialization.XmlSerializerNamespaces>します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-135">For more details about using namespaces and creating prefixed names in the XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-136">次の例のインスタンスをシリアル化、`Library`という名前のプロパティを含むクラス`Books`の配列を返す`Book`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-136">The following example serializes an instance of the `Library` class that contains a property named `Books` that returns an array of `Book` items.</span></span> <span data-ttu-id="cb4c3-137">この例では、<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>プロパティを XML 要素の配列に名前を付けることを指定する`My_Books`なく`Books`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-137">The example uses the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to specify that the array of XML elements should be named `My_Books` rather than `Books`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-138">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-138">Gets or sets a value that indicates whether the XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb4c3-139">
            <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-139">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="cb4c3-140">既定値は、<see langword="XmlSchemaForm.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-140">The default is <see langword="XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-141"><xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>プロパティが XML 要素名は修飾名または修飾されていないのかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-141">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property determines whether an XML element name is qualified or unqualified.</span></span> <span data-ttu-id="cb4c3-142"><xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> "Namespaces in XML 』 の「1999 World Wide Web コンソーシアム (www.w3.org) ドキュメントに準拠しているプロパティ</span><span class="sxs-lookup"><span data-stu-id="cb4c3-142">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property conforms to the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="cb4c3-143">場合、<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>を設定しようとすると、任意の値に設定されて、<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>プロパティを`XmlSchemaForm.Unqualified`例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-143">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="cb4c3-144">既定の設定、 `XmlSchemaForm.None`、指示、<xref:System.Xml.Serialization.XmlSerializer>名前空間を修飾するかどうかを判断する XML ドキュメントのスキーマを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-144">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="cb4c3-145">スキーマが、個々 の要素または属性の値を指定しない場合、<xref:System.Xml.Serialization.XmlSerializer>を使用して、`elementFormDefault`と`attributeFormDefault`要素または属性を修飾するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-145">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="cb4c3-146">次の XML コードは、スキーマを示しています。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-146">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="cb4c3-147">ときに、 <xref:System.Xml.Serialization.XmlSerializer> 、スキーマを読み取り、<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>両方の値、`Name`と`Number`は`XmlSchemaForm.None`が、`Name`要素を修飾すると、中に、`Number`要素が修飾されていません。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-147">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-148">次の例のインスタンスをシリアル化、`Enterprises`クラス。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-148">The following example serializes an instance of the `Enterprises` class.</span></span> <span data-ttu-id="cb4c3-149">2 つの XML 要素が同じローカル名を持つ (`Company`) が異なるプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-149">Two XML elements have the same local name (`Company`) but different prefixes.</span></span> <span data-ttu-id="cb4c3-150">例のセット、<xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>プロパティに設定されて`XmlForm.Qualified`修飾名が XML インスタンスで発生することを確認します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-150">The example sets the <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property is set to `XmlForm.Qualified` to ensure that the qualified names occur in the XML instance.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-151">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-151">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb4c3-152">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-152">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-153">構造の XML スキーマ仕様では、要素のコンテンツが見つからないことを明示的に通知する XML ドキュメントを許可します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-153">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="cb4c3-154">このような要素には、属性が含まれています`xsi:nil`設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-154">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="cb4c3-155">詳細については、「World Wide Web コンソーシアム (www.w3.org) の仕様を参照してください。"XML Schema Part 1: 構造体"。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-155">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="cb4c3-156">場合、<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>プロパティに設定されて`true`、`xsi:nil`に設定されているクラスのメンバーの属性が生成される`null`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-156">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="cb4c3-157">たとえば、という名前のフィールドを設定する`MyStringArray`に`null`、<xref:System.Xml.Serialization.XmlSerializer>次の XML コードが生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-157">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="cb4c3-158">場合、<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>プロパティは`false`、XML 要素は生成されません。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-158">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4c3-159">適用することはできません、<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>メンバー プロパティが値の型として型指定された値の型を含めることはできませんので`null`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-159">You cannot apply the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-160">次の例では、2 つの配列が含まれています: のいずれか、<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>プロパティに設定`true`、もう 1、<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>プロパティに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-160">The following example contains two arrays: one with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `true`, and another with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-161">XML 要素の名前空間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-161">Gets or sets the namespace of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb4c3-162">XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-162">The namespace of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-163"><xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A>プロパティでは、修飾 XML 要素名を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-163">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property allows you to create qualified XML element names.</span></span> <span data-ttu-id="cb4c3-164"><xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> "Namespaces in XML 』 の「1999 World Wide Web コンソーシアム (www.w3.org) のドキュメントで見つかった XML 名前空間を作成するための規則に準拠しているプロパティ</span><span class="sxs-lookup"><span data-stu-id="cb4c3-164">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="cb4c3-165">プレフィックスに関連付けられている名前空間を作成するには、インスタンスを作成する必要があります、<xref:System.Xml.Serialization.XmlSerializerNamespaces>名前空間と XML ドキュメントで使用されるプレフィックスを含むクラスです。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-165">To create namespaces that are associated with a prefix, you must create an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="cb4c3-166">各名前空間を設定するときに<xref:System.Xml.Serialization.XmlArrayAttribute>、名前空間のいずれかに一致する必要があります、<xref:System.Xml.Serialization.XmlSerializerNamespaces>します。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-166">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="cb4c3-167">XML が生成されると、各配列が正しく指定した名前空間に関連付けられているプレフィックスで付けられます。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-167">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4c3-168">次の例のインスタンスをシリアル化、`Library`を 2 つのメンバーを含むクラスを定期的なタイトルを含む別および書籍のタイトルを含む 1 つ。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-168">The following example serializes an instance of the `Library` class that contains two members, one that contain book titles, and another that contain periodical titles.</span></span> <span data-ttu-id="cb4c3-169">両方の XML 要素が名前付き`Titles`、それぞれに別のプレフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-169">Although both XML elements are named `Titles`, each contains a different prefix.</span></span> <span data-ttu-id="cb4c3-170">この例は、のインスタンスも含まれています。、<xref:System.Xml.Serialization.XmlSerializerNamespaces>名前空間と、2 つの要素の名前を修飾するために使用されるプレフィックスを含むクラスです。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-170">The example also includes an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used to qualify the two element names.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb4c3-171">要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-171">Gets or sets the explicit order in which the elements are serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb4c3-172">コード生成の順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb4c3-172">The order of the code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb4c3-173">使用して、<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>よう指示するための列挙、<xref:System.Web.Services.Description.ServiceDescriptionImporter>を設定するコードを生成する、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-173">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cb4c3-174">1 回、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>プロパティが 1 つのパブリック プロパティまたは型のフィールドで使用されている、すべてのパブリック プロパティおよびその型と継承されたすべての型のフィールドに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb4c3-174">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>