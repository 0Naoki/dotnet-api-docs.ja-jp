<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac1dd592ea0a05a8fe684d233b97022e48818a40" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53520796" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP エンコード済みの XML としてクラス インスタンスがシリアル化されるときに、<see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されるスキーマを制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute>を制御する属性のファミリに属しているクラスが、どの<xref:System.Xml.Serialization.XmlSerializer>をシリアル化またはエンコードされた SOAP XML としてオブジェクトを逆シリアル化します。 結果の XML は、World Wide Web コンソーシアム (www.w3.org) のドキュメントを"Simple Object Access Protocol (SOAP) 1.1 』 のセクション 5 に準拠しています。 類似の属性の完全な一覧を参照してください。 [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)します。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化、構築、<xref:System.Xml.Serialization.XmlSerializer>を使用して、<xref:System.Xml.Serialization.XmlTypeMapping>で作成された、<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>のメソッド、<xref:System.Xml.Serialization.SoapReflectionImporter>クラス。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute>クラス宣言にのみ適用できます。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>プロパティは、生成された XML ストリームの XML スキーマ ドキュメント (.xsd) で、結果の XML 要素の型が含まれているかどうかを決定します。 スキーマを表示するには、DLL ファイルにクラスをコンパイルします。 引数として、生成されたファイルを渡す、 [XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。 ツールのインスタンスで、クラスがシリアル化するときに生成される XML ストリームの XML スキーマの生成、<xref:System.Xml.Serialization.XmlSerializer>クラス。  
  
 クラスがシリアル化されるときに生成される XML ストリームを別のスキーマ (.xsd) ファイルを記述する Xsd.exe を原因別の名前空間を設定します。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>で、クラスに適用されます、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成、<xref:System.Xml.Serialization.SoapTypeAttribute>型のシリアル化をオーバーライドする場合。 オブジェクトを割り当てる、<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>のプロパティを<xref:System.Xml.Serialization.SoapAttributes>を追加し、<xref:System.Xml.Serialization.SoapAttributes>を<xref:System.Xml.Serialization.SoapAttributeOverrides>します。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成、<xref:System.Xml.Serialization.SoapTypeAttribute>型のシリアル化をオーバーライドする場合。 オブジェクトを割り当てる、<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>のプロパティを<xref:System.Xml.Serialization.SoapAttributes>を追加し、<xref:System.Xml.Serialization.SoapAttributes>を<xref:System.Xml.Serialization.SoapAttributeOverrides>します。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
        <param name="ns">型の XML 名前空間。</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、型の名前および型の XML 名前空間を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成、<xref:System.Xml.Serialization.SoapTypeAttribute>型のシリアル化をオーバーライドする場合。 オブジェクトを割り当てる、<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>のプロパティを<xref:System.Xml.Serialization.SoapAttributes>を追加し、<xref:System.Xml.Serialization.SoapAttributes>を<xref:System.Xml.Serialization.SoapAttributeOverrides>します。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要。  
  
 設定した場合、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 つ以上の型の値 (異なる複数のクラスに属性を適用する場合は、<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>それぞれの値)、 [XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)個別が生成されます各種類のスキーマ ファイル (.xsd)。 これはため、種類ごとに別の名前空間を設定するレンダリングの種類ごと、他の異なる種類ごとに個別のエンティティとして書き出さするために必要になります。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP エンコード済みの XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
        <value>SOAP エンコード済みの XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 適用、 <xref:System.Xml.Serialization.SoapTypeAttribute> XML スキーマ ドキュメントの種類を含めるかどうかを指定するクラスの宣言にします。 プロパティの設定の結果を表示する、<xref:System.Xml.Serialization.SoapTypeAttribute>クラスし、実行可能ファイルまたは DLL として、アプリケーションをコンパイルして、結果として得られるファイルを[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。 このツールは、クラスがシリアル化されるときに生成される XML ストリームの種類の定義を含むスキーマを書き込みます。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 型の名前空間を取得または設定します。</summary>
        <value>XML 型の名前空間。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定した場合、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 つ以上の型の値 (異なる複数のクラスに属性を適用する場合は、<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>それぞれの値)、 [XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)個別が生成されます各種類のスキーマ ファイル (.xsd)。 これはため、種類ごとに別の名前空間を設定するレンダリングの種類ごと、他の異なる種類ごとに個別のエンティティとして書き出さするために必要になります。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 型の名前を取得または設定します。</summary>
        <value>XML 型の名前。 既定値は、クラス名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 適用、 <xref:System.Xml.Serialization.SoapTypeAttribute> XML 型の名前空間、XML 型の名前、および XML スキーマ ドキュメントの種類を含めるかどうかを指定するためにクラス。 設定の結果を表示する、<xref:System.Xml.Serialization.SoapTypeAttribute>オブジェクトのプロパティ、アプリケーション実行可能ファイルまたは DLL としてコンパイルし、結果として得られるファイルを[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。 このツールは、型定義を含む、スキーマを書き込みます。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`します。 <xref:System.Xml.Serialization.SoapTypeAttribute>使用して、クラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。 <xref:System.Xml.Serialization.SoapTypeAttribute>はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルでその結果、両方のバージョンがシリアル化します。SoapType.xml SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>