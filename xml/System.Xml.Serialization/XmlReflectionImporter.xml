<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15e110dac0ed72fbe2130e716da9a5dd6b8b1f97" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39809482" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <TypeSignature Language="F#" Value="type XmlReflectionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b91a9-101">XML スキーマ要素宣言 (Web サービス記述言語 (WSDL: Web Services Description Language) ドキュメント内のリテラル XML スキーマ定義 (XSD: XML Schema Definition) のメッセージ部分など) と、対応する .NET Framework 型または Web サービス メソッドの対応付け情報を生成します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b91a9-101">Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET Framework types or Web service method information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-102"><xref:System.Xml.Serialization.XmlReflectionImporter>クラスは直接使用されません。</span><span class="sxs-lookup"><span data-stu-id="b91a9-102">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is not used directly.</span></span> <span data-ttu-id="b91a9-103">代わりはように使用します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-103">Instead, it is used as follows:</span></span>  
  
-   <span data-ttu-id="b91a9-104">によって、<xref:System.Web.Services.Description.ServiceDescriptionReflector>クラスの作成時に<xref:System.Web.Services.Description.ServiceDescription>Web サービスとして識別されるクラスからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b91a9-104">By the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class while it creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services.</span></span>  
  
-   <span data-ttu-id="b91a9-105">Web サービスまたは初期化中に含めてクライアント。</span><span class="sxs-lookup"><span data-stu-id="b91a9-105">By a Web service or client, including during initialization.</span></span>  
  
-   <span data-ttu-id="b91a9-106">初期化するために、<xref:System.Xml.Serialization.XmlSerializer>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b91a9-106">To initialize an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span>  
  
-   <span data-ttu-id="b91a9-107">ツールの中に XML スキーマ定義ツール (Xsd.exe) では、実行時のアセンブリ ファイル内の型から XML スキーマを生成します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-107">By the XML Schema Definition tool (Xsd.exe) while the tool generates XML schemas from types in a run-time assembly file.</span></span>  
  
-   <span data-ttu-id="b91a9-108">ツールの中に Web サービス記述言語ツール (Wsdl.exe) では、WSDL ドキュメントからクライアント プロキシ クラスまたは抽象サーバー クラスを生成します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-108">By the Web Services Description Language tool (Wsdl.exe) while the tool generates client proxy classes or abstract server classes from a WSDL document.</span></span>  
  
 <span data-ttu-id="b91a9-109"><xref:System.Xml.Serialization.XmlReflectionImporter>クラスは、サービスが Web サービスの使用またはクライアントを指定します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-109">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is used for Web services when a service or client specifies:</span></span>  
  
-   <span data-ttu-id="b91a9-110">リテラル使用、SOAP メッセージのパラメーターと戻り値 (または要求と応答のドキュメント) の内容がリテラル XML スキーマ定義で指定されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-110">Literal use, which indicates that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.</span></span>  
  
-   <span data-ttu-id="b91a9-111">HTTP GET と HTTP POST 操作を使用して Web サービスの非 SOAP 実装します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-111">Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b91a9-112">
            <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b91a9-113">
            <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-114">インスタンスを作成する必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter>オブジェクトに直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-114">You do not need to create an instance of an <xref:System.Xml.Serialization.XmlReflectionImporter> object directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter defaultNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">
          <span data-ttu-id="b91a9-115">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-115">The default XML namespace to use for imported type mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-116">指定した既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified default XML namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-117">インスタンスを作成する必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter>クラスを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-117">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter attributeOverrides" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">
          <span data-ttu-id="b91a9-118">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-118">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-119">指定した XML シリアル化オーバーライドを使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-119">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-120">インスタンスを作成する必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter>クラスを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-120">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides * string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter (attributeOverrides, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">
          <span data-ttu-id="b91a9-121">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-121">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="b91a9-122">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-122">The default XML namespace to use for imported type mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-123">指定した XML シリアル化オーバーライドと既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides and default XML namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-124">インスタンスを作成する必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter>クラスを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-124">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b91a9-125">Web サービス メソッドからの情報を使用して、内部型マッピングを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-125">Returns internal type mappings using information from a Web service method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="b91a9-126">Web サービス メソッドが作成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-126">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="b91a9-127">Web サービス メソッドが作成する XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-127">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b91a9-128">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-128">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="b91a9-129">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-129">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-130">Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-130">Generates internal type mappings for information from a Web service method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-131">WSDL メッセージ定義の要素部分に対するマッピングを持つ <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-131">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> with mappings to the element parts of a WSDL message definition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-132"><xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A>メソッドは Web サービスまたはクライアントを初期化または Web サービスを反映しているときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b91a9-132">The <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> method is called while initializing a Web service or client, or reflecting a Web service.</span></span> <span data-ttu-id="b91a9-133">メソッドを直接呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b91a9-133">It is not necessary to call it directly.</span></span>  
  
 <span data-ttu-id="b91a9-134"><xref:System.Xml.Serialization.XmlReflectionMember>配列パラメーターは、次のいずれかで構成できます。</span><span class="sxs-lookup"><span data-stu-id="b91a9-134">The <xref:System.Xml.Serialization.XmlReflectionMember> array parameter can consist of any one of the following:</span></span>  
  
-   <span data-ttu-id="b91a9-135">Web サービス メソッドの入力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b91a9-135">Web service method input parameters.</span></span>  
  
-   <span data-ttu-id="b91a9-136">Web サービス メソッドの出力パラメーターおよび戻り値の型 void でない場合にインデックス 0。</span><span class="sxs-lookup"><span data-stu-id="b91a9-136">Web service method output parameters, plus the return type, if not void, at index 0.</span></span>  
  
-   <span data-ttu-id="b91a9-137">入力の SOAP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b91a9-137">SOAP input headers.</span></span>  
  
-   <span data-ttu-id="b91a9-138">出力の SOAP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b91a9-138">SOAP output headers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="b91a9-139">Web サービス メソッドが作成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-139">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="b91a9-140">Web サービス メソッドが作成する XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-140">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b91a9-141">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-141">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="b91a9-142">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-142">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="b91a9-143">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-143">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-144">Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-144">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-145">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-145">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="b91a9-146">Web サービス メソッドが作成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-146">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="b91a9-147">Web サービス メソッドが作成する XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-147">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b91a9-148">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-148">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="b91a9-149">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-149">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="b91a9-150">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-150">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="openModel">
          <span data-ttu-id="b91a9-151">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-151">
              <see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-152">Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-152">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-153">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-153">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool * System.Xml.Serialization.XmlMappingAccess -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="b91a9-154">Web サービス メソッドが作成する XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-154">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="b91a9-155">Web サービス メソッドが作成する XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-155">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b91a9-156">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-156">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="b91a9-157">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-157">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="b91a9-158">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-158">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="openModel">
          <span data-ttu-id="b91a9-159">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-159">
              <see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="b91a9-160">
            <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-160">One of the <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> values.</span>
          </span>
          <span data-ttu-id="b91a9-161">既定値は、<see langword="None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-161">The default is <see langword="None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-162">Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-162">Generates internal type mappings for information from a Web service method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-163">マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-163">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b91a9-164">指定した .NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-164">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b91a9-165">.NET Framework 型。この型の対応付け情報が生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-165">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-166">指定した .NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-166">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-167">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-167">Internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-168">呼び出す必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>メソッドを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-168">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b91a9-169">.NET Framework 型。この型の対応付け情報が生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-169">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="b91a9-170">使用する既定の XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-170">The default XML namespace to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-171">指定した型と名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-171">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-172">.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-172">Internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-173">呼び出す必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>メソッドを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-173">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b91a9-174">.NET Framework 型。この型の対応付け情報が生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-174">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="b91a9-175">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-175">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-176">指定した型と属性を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-176">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-177">.NET Framework 型と XML スキーマ要素の対応付けを表す <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-177">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that represents a mapping of a .NET Framework type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-178">呼び出す必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>メソッドを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-178">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b91a9-179">.NET Framework 型。この型の対応付け情報が生成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-179">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="b91a9-180">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-180">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="b91a9-181">使用する既定の XML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-181">The default XML namespace to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-182">指定した型、属性、および名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-182">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type, attribute, and namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b91a9-183">.NET Framework 型と XML スキーマ要素の内部的な対応付けを格納した <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-183">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that contains the internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-184">呼び出す必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>メソッドを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-184">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.IncludeType : Type -&gt; unit" Usage="xmlReflectionImporter.IncludeType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b91a9-185">型の対応付け情報を保存する .NET Framework 型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-185">The .NET Framework type for which to save type mapping information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-186">後でインポート メソッドを呼び出すときに使用する型のマッピングを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-186">Includes mappings for a type for later use when import methods are invoked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a9-187">呼び出す必要はありません、<xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A>メソッドを直接します。</span><span class="sxs-lookup"><span data-stu-id="b91a9-187">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.IncludeTypes : System.Reflection.ICustomAttributeProvider -&gt; unit" Usage="xmlReflectionImporter.IncludeTypes provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b91a9-188">
            <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 属性から派生したカスタム属性を格納する <see cref="T:System.Reflection.ICustomAttributeProvider" /> クラスのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-188">An instance of the <see cref="T:System.Reflection.ICustomAttributeProvider" /> class that contains custom attributes derived from the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a9-189">後でインポート メソッドを呼び出すときに使用する派生型のマッピングを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a9-189">Includes mappings for derived types for later use when import methods are invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>