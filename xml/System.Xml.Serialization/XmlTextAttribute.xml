<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd1d340d704f2f3871d98c0ff007f941da7ed18b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ea20c-101">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、クラスをシリアル化または逆シリアル化するときに、そのクラスに含まれる特定のメンバーを XML テキストとして処理する必要があることを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea20c-101">Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer" /> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea20c-102"><xref:System.Xml.Serialization.XmlTextAttribute>を制御する属性のファミリに属する方法、<xref:System.Xml.Serialization.XmlSerializer>およびオブジェクトを逆シリアル化 (を通じてその<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>と<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>メソッド)。</span><span class="sxs-lookup"><span data-stu-id="ea20c-102">The <xref:System.Xml.Serialization.XmlTextAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes and deserializes an object (through its <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> and <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> methods).</span></span> <span data-ttu-id="ea20c-103">類似する属性の一覧については、次を参照してください。[コントロール XML シリアル化する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="ea20c-104">インスタンスを 1 つだけ、<xref:System.Xml.Serialization.XmlTextAttribute>クラスでクラスを適用できます。</span><span class="sxs-lookup"><span data-stu-id="ea20c-104">Only one instance of the <xref:System.Xml.Serialization.XmlTextAttribute> class can be applied in a class.</span></span>  
  
 <span data-ttu-id="ea20c-105">適用することができます、<xref:System.Xml.Serialization.XmlTextAttribute>パブリック フィールドとパブリックの読み取り/書き込みプロパティ プリミティブと列挙型を返すにします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-105">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to public fields and public read/write properties that return primitive and enumeration types.</span></span>  
  
 <span data-ttu-id="ea20c-106">適用することができます、<xref:System.Xml.Serialization.XmlTextAttribute>フィールドまたはプロパティを文字列の配列を返すにします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-106">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="ea20c-107">型の配列に属性を適用することもできます。<xref:System.Object>設定する必要がありますが、<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>プロパティを文字列にします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-107">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="ea20c-108">その場合は、配列に挿入された任意の文字列は XML テキストとしてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ea20c-108">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
 <span data-ttu-id="ea20c-109"><xref:System.Xml.Serialization.XmlTextAttribute>を返すフィールドにも適用できる、<xref:System.Xml.XmlNode>または配列の<xref:System.Xml.XmlNode>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ea20c-109">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="ea20c-110">既定では、 <xref:System.Xml.Serialization.XmlSerializer> XML 要素としてのクラス メンバーをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-110">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes a class member as an XML element.</span></span> <span data-ttu-id="ea20c-111">ただし、適用する場合、 <xref:System.Xml.Serialization.XmlTextAttribute> 、メンバーに、 <xref:System.Xml.Serialization.XmlSerializer> XML テキストの値に変換します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-111">However, if you apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a member, the <xref:System.Xml.Serialization.XmlSerializer> translates its value into XML text.</span></span> <span data-ttu-id="ea20c-112">これは、値が XML 要素の内容にエンコードされていることを意味します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-112">This means that the value is encoded into the content of an XML element.</span></span>  
  
 <span data-ttu-id="ea20c-113">[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)ときどき生成、 <xref:System.Xml.Serialization.XmlTextAttribute> XML スキーマ定義 (XSD) ファイルからクラスを作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-113">The [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) occasionally generates the <xref:System.Xml.Serialization.XmlTextAttribute> when creating classes from an XML Schema definition (XSD) file.</span></span> <span data-ttu-id="ea20c-114">これは、スキーマを含む場合に発生、`complexType`混合コンテンツは; を持つ場合は、対応するクラス メンバーを含みます対象の文字列の配列を返します、<xref:System.Xml.Serialization.XmlTextAttribute>を適用します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-114">This occurs when the schema contains a `complexType` with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <xref:System.Xml.Serialization.XmlTextAttribute> is applied.</span></span> <span data-ttu-id="ea20c-115">たとえば、ときに、`Xml Schema Definition`ツールはこのスキーマを処理します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-115">For example, when the `Xml Schema Definition` tool processes this schema:</span></span>  
  
```  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 <span data-ttu-id="ea20c-116">次のクラスが生成されます (余分なスペースと注釈が削除されました)。</span><span class="sxs-lookup"><span data-stu-id="ea20c-116">the following class is generated (extra spaces and remarks have been removed):</span></span>  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 <span data-ttu-id="ea20c-117">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-117">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ea20c-118">語を使用できます`XmlText`時間が長いではなく、コードで<xref:System.Xml.Serialization.XmlTextAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-118">You can use the word `XmlText` in your code instead of the longer <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ea20c-119">
            <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-119">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea20c-120">
            <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea20c-121">方法をオーバーライドすることができますを<xref:System.Xml.Serialization.XmlSerializer>を作成して、パブリック フィールドまたはパブリックの読み取り/書き込みプロパティをシリアル化、 <xref:System.Xml.Serialization.XmlAttributes>、設定とその<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>プロパティを<xref:System.Xml.Serialization.XmlTextAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-121">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="ea20c-122">詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea20c-122">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea20c-123">次の例は、という名前のパブリック フィールドを含むクラスをシリアル化`Comment`です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-123">The following example serializes a class that contains a public field, named `Comment`.</span></span> <span data-ttu-id="ea20c-124">例では、適用、<xref:System.Xml.Serialization.XmlTextAttribute>のフィールドに、XML 要素としてシリアル化をオーバーライドすることと、代わりに XML テキストとしてシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-124">The example applies an <xref:System.Xml.Serialization.XmlTextAttribute> to the field, thereby overriding its serialization as an XML element, and instead serializing it as XML text.</span></span>  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ea20c-125">シリアル化するメンバーの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-125">The <see cref="T:System.Type" /> of the member to be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea20c-126">
            <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea20c-127">方法をオーバーライドすることができますを<xref:System.Xml.Serialization.XmlSerializer>を作成して、パブリック フィールドまたはパブリックの読み取り/書き込みプロパティをシリアル化、 <xref:System.Xml.Serialization.XmlAttributes>、設定とその<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>プロパティを<xref:System.Xml.Serialization.XmlTextAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-127">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="ea20c-128">詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea20c-128">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea20c-129">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されたテキストの XML スキーマ定義言語 (XSD: XML Schema Definition Language) データ型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-129">Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea20c-130">W3C (World Wide Web Consortium) (www.w3.org ) のドキュメント『XML Schema Part 2: Datatypes』で定義されている XML スキーマ (XSD) データ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-130">An XML Schema (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea20c-131">設定、<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>プロパティの XML スキーマの単純なデータ型には、生成された XML の形式に影響します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-131">Setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property to an XML Schema simple data type affects the format of the generated XML.</span></span> <span data-ttu-id="ea20c-132">たとえば、"date"にプロパティの設定が生成されるテキストの例では一般的な日付形式を書式設定: 2001-08-31 です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-132">For example, setting the property to "date" causes the generated text to be formatted in the general date style, for example: 2001-08-31.</span></span> <span data-ttu-id="ea20c-133">これに対し、プロパティの設定、"dateTime"の結果に標準化ドキュメント 8601、「形式の日付と時刻」、国際組織で定義されている、特定の時点で例: 2001-08-15T06:59:11.0508456-07:00 です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-133">By contrast, setting the property to "dateTime" results in a specific instant as defined by the International Organization for Standardization document 8601, "Representations of Dates and Times", for example: 2001-08-15T06:59:11.0508456-07:00.</span></span>  
  
 <span data-ttu-id="ea20c-134">設定の効果、<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>を使用する場合、プロパティを表示もできます、 [XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)コンパイル済みのファイルの XML スキーマを生成します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-134">The effect of setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property can also be seen when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate the XML Schema for a compiled file.</span></span> <span data-ttu-id="ea20c-135">ツールの使用方法の詳細については、次を参照してください。 [、XML スキーマ定義ツールと XML シリアル化](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-135">For more information on using the tool, see [The XML Schema Definition Tool and XML Serialization](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="ea20c-136">次の表は、.NET の同等の XML スキーマの単純なデータ型を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-136">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="ea20c-137">XML スキーマの`base64Binary`と`hexBinary`データ型の配列を使用して<xref:System.Byte>構造体、および適用、<xref:System.Xml.Serialization.XmlTextAttribute>で、 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "base64Binary"または"hexBinary"、適切に設定します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-137">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="ea20c-138">XML スキーマの`time`と`date`データ型を使用して、<xref:System.DateTime>入力し、適用、<xref:System.Xml.Serialization.XmlTextAttribute>で、 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "date"または"time"に設定します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-138">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="ea20c-139">文字列にマップされているすべての XML スキーマ データ型には、適用、<xref:System.Xml.Serialization.XmlTextAttribute>でその<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>プロパティを XML スキーマ データ型に設定します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-139">For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlTextAttribute> with its <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property set to the XML Schema data type.</span></span> <span data-ttu-id="ea20c-140">このメンバーのスキーマだけであり、シリアル化形式は変更されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ea20c-140">Note that this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ea20c-141">プロパティでは、XML スキーマ データ型の 1 つに正確に設定する必要があるため、大文字小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="ea20c-141">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ea20c-142">要素は XML としてバイナリ データを渡すことは、XML 属性として渡すことよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="ea20c-142">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="ea20c-143">XML スキーマ データ型の詳細については、「XML スキーマ パート 2:: データ型」をという名前の World Wide Web Consortium) (www.w3.org) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea20c-143">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="ea20c-144">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="ea20c-144">XSD data type</span></span>|<span data-ttu-id="ea20c-145">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="ea20c-145">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="ea20c-146">anyURI</span><span class="sxs-lookup"><span data-stu-id="ea20c-146">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-147">base64Binary</span><span class="sxs-lookup"><span data-stu-id="ea20c-147">base64Binary</span></span>|<span data-ttu-id="ea20c-148">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="ea20c-148">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ea20c-149">boolean</span><span class="sxs-lookup"><span data-stu-id="ea20c-149">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="ea20c-150">byte</span><span class="sxs-lookup"><span data-stu-id="ea20c-150">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="ea20c-151">date</span><span class="sxs-lookup"><span data-stu-id="ea20c-151">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ea20c-152">dateTime</span><span class="sxs-lookup"><span data-stu-id="ea20c-152">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ea20c-153">decimal</span><span class="sxs-lookup"><span data-stu-id="ea20c-153">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="ea20c-154">double</span><span class="sxs-lookup"><span data-stu-id="ea20c-154">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="ea20c-155">ENTITY</span><span class="sxs-lookup"><span data-stu-id="ea20c-155">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-156">エンティティ</span><span class="sxs-lookup"><span data-stu-id="ea20c-156">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-157">float</span><span class="sxs-lookup"><span data-stu-id="ea20c-157">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="ea20c-158">gDay</span><span class="sxs-lookup"><span data-stu-id="ea20c-158">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-159">gMonth</span><span class="sxs-lookup"><span data-stu-id="ea20c-159">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-160">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="ea20c-160">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-161">gYear</span><span class="sxs-lookup"><span data-stu-id="ea20c-161">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-162">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="ea20c-162">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-163">hexBinary</span><span class="sxs-lookup"><span data-stu-id="ea20c-163">hexBinary</span></span>|<span data-ttu-id="ea20c-164">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="ea20c-164">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="ea20c-165">ID</span><span class="sxs-lookup"><span data-stu-id="ea20c-165">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-166">IDREF</span><span class="sxs-lookup"><span data-stu-id="ea20c-166">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-167">IDREFS</span><span class="sxs-lookup"><span data-stu-id="ea20c-167">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-168">int</span><span class="sxs-lookup"><span data-stu-id="ea20c-168">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="ea20c-169">整数</span><span class="sxs-lookup"><span data-stu-id="ea20c-169">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-170">language</span><span class="sxs-lookup"><span data-stu-id="ea20c-170">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-171">long</span><span class="sxs-lookup"><span data-stu-id="ea20c-171">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="ea20c-172">name</span><span class="sxs-lookup"><span data-stu-id="ea20c-172">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-173">NCName</span><span class="sxs-lookup"><span data-stu-id="ea20c-173">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-174">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="ea20c-174">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-175">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="ea20c-175">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-176">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="ea20c-176">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-177">normalizedString</span><span class="sxs-lookup"><span data-stu-id="ea20c-177">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-178">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="ea20c-178">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-179">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="ea20c-179">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-180">NOTATION</span><span class="sxs-lookup"><span data-stu-id="ea20c-180">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-181">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="ea20c-181">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-182">QName</span><span class="sxs-lookup"><span data-stu-id="ea20c-182">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="ea20c-183">duration</span><span class="sxs-lookup"><span data-stu-id="ea20c-183">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-184">string</span><span class="sxs-lookup"><span data-stu-id="ea20c-184">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-185">short</span><span class="sxs-lookup"><span data-stu-id="ea20c-185">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="ea20c-186">時間</span><span class="sxs-lookup"><span data-stu-id="ea20c-186">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ea20c-187">token</span><span class="sxs-lookup"><span data-stu-id="ea20c-187">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="ea20c-188">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="ea20c-188">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="ea20c-189">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="ea20c-189">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="ea20c-190">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="ea20c-190">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="ea20c-191">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="ea20c-191">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="ea20c-192">指定した XML スキーマ データ型を .NET データ型に割り当てることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-192">The XML Schema data type you have specified cannot be mapped to the .NET data type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ea20c-193">指定した XML スキーマ データ型はプロパティとしては無効なので、そのメンバー型に変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-193">The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea20c-194">メンバーの型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-194">Gets or sets the type of the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea20c-195">メンバーの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea20c-195">The <see cref="T:System.Type" /> of the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea20c-196"><xref:System.Type>プロパティは、プリミティブ型と列挙体にのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="ea20c-196">The <xref:System.Type> property can only be set to primitive types and enumerations.</span></span>  
  
 <span data-ttu-id="ea20c-197"><xref:System.Xml.Serialization.XmlTextAttribute>を返すフィールドにも適用できる、<xref:System.Xml.XmlNode>または配列の<xref:System.Xml.XmlNode>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ea20c-197">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="ea20c-198">適用することができます、<xref:System.Xml.Serialization.XmlTextAttribute>フィールドまたはプロパティを文字列の配列を返すにします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-198">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="ea20c-199">型の配列に属性を適用することもできます。<xref:System.Object>設定する必要がありますが、<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>プロパティを文字列にします。</span><span class="sxs-lookup"><span data-stu-id="ea20c-199">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="ea20c-200">その場合は、配列に挿入された任意の文字列は XML テキストとしてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ea20c-200">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>