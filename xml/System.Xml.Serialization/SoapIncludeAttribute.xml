<Type Name="SoapIncludeAttribute" FullName="System.Xml.Serialization.SoapIncludeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2483227f3ccf0d2cd0a74f3230e2d2cbb74a1da" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56351687" /></Metadata><TypeSignature Language="C#" Value="public class SoapIncludeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapIncludeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapIncludeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapIncludeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapIncludeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapIncludeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをエンコード済みの SOAP XML としてシリアル化または逆シリアル化するときに、型を認識できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapIncludeAttribute>を制御する属性のファミリに属しているクラスが、どのように<xref:System.Xml.Serialization.XmlSerializer>、シリアル化または逆シリアル化でエンコードされた SOAP XML としてオブジェクト。 結果の XML は、World Wide Web コンソーシアム (www.w3.org) のドキュメントを"Simple Object Access Protocol (SOAP) 1.1 』 のセクション 5 に準拠しています。 類似の属性の完全な一覧を参照してください。 [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)します。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化、構築する必要があります、<xref:System.Xml.Serialization.XmlSerializer>を使用して、<xref:System.Xml.Serialization.XmlTypeMapping>で作成された、<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>のメソッド、<xref:System.Xml.Serialization.SoapReflectionImporter>クラス。  
  
 適用するときに、 <xref:System.Xml.Serialization.SoapIncludeAttribute>、指定、<xref:System.Type>の派生クラス。 ときに、<xref:System.Xml.Serialization.XmlSerializer>基本と、派生クラスの両方を含むオブジェクトをシリアル化します。 両方のオブジェクトの種類を認識できますしします。  
  
 使用することができます、<xref:System.Xml.Serialization.SoapIncludeAttribute>派生クラスを Web サービス記述言語 (WSDL) で記述されたサービスの説明のドキュメントに含める。 メソッドから返された場合など、 <xref:System.Object>、適用、<xref:System.Xml.Serialization.SoapIncludeAttribute>メソッドに返される実際の型を指定します。  
  
 WSDL の詳細については、World Wide Web コンソーシアム (www.w3.org) の仕様、「Web サービス記述言語 (WSDL) 1.1」を参照してください。  
  
 属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。  
  
   
  
## Examples  
 次の例では、適用、 <xref:System.Xml.Serialization.SoapIncludeAttribute> XML Web サービス メソッドを 2 回クリックします。 型のオブジェクトを返します`Vehicle`(基本クラス)。 <xref:System.Xml.Serialization.SoapIncludeAttribute> 、メソッドから派生したクラスのインスタンスを返す、`Vehicle`クラス。  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapIncludeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapIncludeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapIncludeAttribute : Type -&gt; System.Xml.Serialization.SoapIncludeAttribute" Usage="new System.Xml.Serialization.SoapIncludeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">含めるオブジェクトの型。</param>
        <summary>型を指定して、<see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のインスタンスの適用、<xref:System.Xml.Serialization.SoapIncludeAttribute>フィールドまたはプロパティをオブジェクトの配列を返す、<xref:System.Collections.ArrayList>オブジェクト、または複数の種類を返すことができるオブジェクトのコレクションを格納しています。 設定、<xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>フィールドまたはプロパティを含めることが必要な各型のプロパティ。  
  
   
  
## Examples  
 次の例では、適用、 <xref:System.Xml.Serialization.SoapIncludeAttribute> 2 回クリックして、XML Web サービス メソッド。 型のオブジェクトを返します`Vehicle`(基本クラス)。 <xref:System.Xml.Serialization.SoapIncludeAttribute> 、メソッドから派生したクラスのインスタンスを返す、`Vehicle`クラス。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapIncludeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.SoapIncludeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトをシリアル化または逆シリアル化するときに使用するオブジェクトの型を取得または設定します。</summary>
        <value>含めるオブジェクトの型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のインスタンスの適用、<xref:System.Xml.Serialization.SoapIncludeAttribute>フィールドまたはプロパティをオブジェクトの配列を返す、<xref:System.Collections.ArrayList>オブジェクト、または複数の種類を返すことができるオブジェクトのコレクションを格納しています。 設定、<xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>フィールドまたはプロパティを含めることが必要な各型のプロパティ。  
  
   
  
## Examples  
 次の例では、適用、 <xref:System.Xml.Serialization.SoapIncludeAttribute> 2 回クリックして、XML Web サービス メソッド。 型のオブジェクトを返します`Vehicle`(基本クラス)。 <xref:System.Xml.Serialization.SoapIncludeAttribute> 、メソッドから派生したクラスのインスタンスを返す、`Vehicle`クラス。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>