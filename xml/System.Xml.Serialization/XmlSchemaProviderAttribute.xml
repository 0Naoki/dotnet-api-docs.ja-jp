<Type Name="XmlSchemaProviderAttribute" FullName="System.Xml.Serialization.XmlSchemaProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eae1b-101">型に適用された場合、XML スキーマを返す型の静的メソッドの名前と、型のシリアル化を制御する <see cref="T:System.Xml.XmlQualifiedName" /> (または匿名型の <see cref="T:System.Xml.Schema.XmlSchemaType" />) を格納します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-101">When applied to a type, stores the name of a static method of the type that returns an XML schema and a <see cref="T:System.Xml.XmlQualifiedName" /> (or <see cref="T:System.Xml.Schema.XmlSchemaType" /> for anonymous types) that controls the serialization of the type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae1b-102">主な目的、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>を有効にするのには、 <xref:System.Xml.Serialization.XmlSchemaExporter> Web サービス記述言語ツール (WSDL.exe) から照会されたとき、またはを使用してスキーマを返すために、 **Web 参照の追加**Visual Studio の機能です。</span><span class="sxs-lookup"><span data-stu-id="eae1b-102">The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of Visual Studio.</span></span> <span data-ttu-id="eae1b-103">静的メソッドの型の実際のスキーマを制御できます。</span><span class="sxs-lookup"><span data-stu-id="eae1b-103">You can control the actual schema for the type in the static method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eae1b-104">属性のターゲット クラスを実装する必要があります、<xref:System.Xml.Serialization.IXmlSerializable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="eae1b-104">The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 <span data-ttu-id="eae1b-105"><xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>プロパティは、リフレクションを使用する静的メソッドの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-105">The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection.</span></span> <span data-ttu-id="eae1b-106">メソッドを実装する必要がありますが、単一のパラメーターを受け取る必要があります、<xref:System.Xml.Schema.XmlSchemaSet>メソッドを追加するオブジェクト、<xref:System.Xml.Schema.XmlSchema>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="eae1b-106">The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object.</span></span> <span data-ttu-id="eae1b-107">メソッドが返す必要がありますも、<xref:System.Xml.XmlQualifiedName>データ型を識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="eae1b-107">The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.</span></span>  
  
## <a name="returning-anonymous-types"></a><span data-ttu-id="eae1b-108">匿名型を返す</span><span class="sxs-lookup"><span data-stu-id="eae1b-108">Returning Anonymous Types</span></span>  
 <span data-ttu-id="eae1b-109">返すメソッドを使用して、匿名の複合型を作成することはできません<xref:System.Xml.XmlQualifiedName>です。</span><span class="sxs-lookup"><span data-stu-id="eae1b-109">An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>.</span></span> <span data-ttu-id="eae1b-110">として匿名型を返す必要がある、匿名型が、名前を持たないため、匿名型をスキーマに追加することはできません、<xref:System.Xml.Schema.XmlSchemaType>です。</span><span class="sxs-lookup"><span data-stu-id="eae1b-110">Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eae1b-111">次の例に適用されます、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>サーバー側のクラスです。</span><span class="sxs-lookup"><span data-stu-id="eae1b-111">The following example applies the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to a server-side class.</span></span> <span data-ttu-id="eae1b-112">呼び出されると、という名前のメソッドによって、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>プロパティは、スキーマを作成します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-112">When invoked, the method named by the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property creates the schema.</span></span> <span data-ttu-id="eae1b-113">この単純な実装では、ディスクから既存のスキーマを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="eae1b-113">This simple implementation reads an existing schema off the disk.</span></span> <span data-ttu-id="eae1b-114">ただし、作成することも、カスタム スキーマについては、必要に応じて、型を使用する場合、<xref:System.Xml.Schema>名前空間。</span><span class="sxs-lookup"><span data-stu-id="eae1b-114">However, you can also create a custom schema, if necessary, using the types found in the <xref:System.Xml.Schema> namespace.</span></span>  
  
 [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]
 [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaProviderAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaProviderAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="eae1b-115">実装する必要がある静的メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="eae1b-115">The name of the static method that must be implemented.</span></span></param>
        <summary><span data-ttu-id="eae1b-116">型の XML スキーマを提供する静的メソッドの名前を受け取って、<see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> class, taking the name of the static method that supplies the type's XML schema.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAny">
      <MemberSignature Language="C#" Value="public bool IsAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAny" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAny As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAny { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae1b-117">ターゲット クラスがワイルドカードかどうか、またはクラスのスキーマに <see langword="xs:any" /> 要素のみが含まれているかどうかを判断する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-117">Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <see langword="xs:any" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="eae1b-118">クラスがワイルドカードの場合、またはスキーマに <see langword="true" /> 要素のみが含まれている場合は <see langword="xs:any" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eae1b-118"><see langword="true" />, if the class is a wildcard, or if the schema contains only the <see langword="xs:any" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae1b-119">属性のターゲット クラスには、任意のクラスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="eae1b-119">The target class of the attribute can be any class.</span></span> <span data-ttu-id="eae1b-120">これは、次の方法で実現できます。</span><span class="sxs-lookup"><span data-stu-id="eae1b-120">This can be achieved in the following ways:</span></span>  
  
-   <span data-ttu-id="eae1b-121">属性によってという名前のメソッドが返すことができます`null`です。</span><span class="sxs-lookup"><span data-stu-id="eae1b-121">The method named by the attribute can return `null`.</span></span>  
  
-   <span data-ttu-id="eae1b-122">このプロパティの値を設定`true`メソッドが呼び出されないようにします。</span><span class="sxs-lookup"><span data-stu-id="eae1b-122">Set the value of this property to `true` to prevent the method from being called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae1b-123">型の XML スキーマおよびその XML スキーマ データ型の名前を提供する静的メソッドの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="eae1b-123">Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.</span></span></summary>
        <value><span data-ttu-id="eae1b-124">XML スキーマを返すために XML インフラストラクチャによって呼び出されるメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="eae1b-124">The name of the method that is invoked by the XML infrastructure to return an XML schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>