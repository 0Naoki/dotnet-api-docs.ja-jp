<Type Name="XmlTypeAttribute" FullName="System.Xml.Serialization.XmlTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a0631ce0490da0eaf70fc0f86c951433181267" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37731814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8931c-101">この属性が適用された対象が <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化されるときに生成される XML スキーマを制御します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8931c-101">Controls the XML schema that is generated when the attribute target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8931c-102"><xref:System.Xml.Serialization.XmlTypeAttribute>を制御する属性のファミリに属するどの<xref:System.Xml.Serialization.XmlSerializer>をシリアル化またはオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="8931c-102">The <xref:System.Xml.Serialization.XmlTypeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="8931c-103">類似の属性の完全な一覧を参照してください。 [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="8931c-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="8931c-104">適用することができます、<xref:System.Xml.Serialization.XmlTypeAttribute>クラス、構造体、列挙型、またはインターフェイスの宣言にします。</span><span class="sxs-lookup"><span data-stu-id="8931c-104">You can apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class, structure, enumeration, or interface declaration.</span></span>  
  
 <span data-ttu-id="8931c-105">適用、 <xref:System.Xml.Serialization.XmlTypeAttribute> XML 型の名前空間、XML 型の名前、および XML スキーマ ドキュメントの種類を含めるかどうかを指定するためにクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-105">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="8931c-106">プロパティの設定の結果を表示する、<xref:System.Xml.Serialization.XmlTypeAttribute>クラスし、実行可能ファイルまたは DLL として、アプリケーションをコンパイルして、結果として得られるファイルを[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。</span><span class="sxs-lookup"><span data-stu-id="8931c-106">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="8931c-107">このツールは、型定義を含む、スキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8931c-107">The tool writes the schema, including the type definition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8931c-108">設定した場合、<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>プロパティを`false`、 [XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)スキーマでは、型は含まれません。</span><span class="sxs-lookup"><span data-stu-id="8931c-108">If you set the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`, the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) does not include the type in the schema.</span></span> <span data-ttu-id="8931c-109">既定では、パブリック クラスごとに、XSD ツールが生成されます、`complexType`とその型の要素。</span><span class="sxs-lookup"><span data-stu-id="8931c-109">By default, for each public class, the XSD tool generates a `complexType` and an element of that type.</span></span>  
  
 <span data-ttu-id="8931c-110">属性の使用方法の詳細については、次を参照してください。[属性](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)します。</span><span class="sxs-lookup"><span data-stu-id="8931c-110">For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8931c-111">語を使用できます`XmlType`代わりに、コードで<xref:System.Xml.Serialization.XmlTypeAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="8931c-111">You can use the word `XmlType` in your code instead of the longer <xref:System.Xml.Serialization.XmlTypeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8931c-112">次の例では、2 つのクラスを<xref:System.Xml.Serialization.XmlTypeAttribute>が適用されています。</span><span class="sxs-lookup"><span data-stu-id="8931c-112">The following example shows two classes to which the <xref:System.Xml.Serialization.XmlTypeAttribute> has been applied.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8931c-113">
            <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8931c-114">
            <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-114">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8931c-115">次の例は、2 つのインスタンスを作成、<xref:System.Xml.Serialization.XmlTypeAttribute>される 2 つのクラスのシリアル化をオーバーライドするクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-115">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTypeAttribute : string -&gt; System.Xml.Serialization.XmlTypeAttribute" Usage="new System.Xml.Serialization.XmlTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="8931c-116">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-116">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8931c-117">
            <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8931c-118">適用、 <xref:System.Xml.Serialization.XmlTypeAttribute> XML 型の名前空間、XML 型の名前、および XML スキーマ ドキュメントの種類を含めるかどうかを指定するためにクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-118">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="8931c-119">プロパティの設定の結果を表示する、<xref:System.Xml.Serialization.XmlTypeAttribute>クラスし、実行可能ファイルまたは DLL として、アプリケーションをコンパイルして、結果として得られるファイルを[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。</span><span class="sxs-lookup"><span data-stu-id="8931c-119">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="8931c-120">このツールは、型定義を含む、スキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8931c-120">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8931c-121">次の例は、2 つのインスタンスを作成、<xref:System.Xml.Serialization.XmlTypeAttribute>される 2 つのクラスのシリアル化をオーバーライドするクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-121">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousType">
      <MemberSignature Language="C#" Value="public bool AnonymousType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnonymousType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AnonymousType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousType : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8931c-122">結果のスキーマ型が XSD 匿名型であるかどうかを判断する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-122">Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8931c-123">結果のスキーマ型が XSD 匿名型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-123">
              <see langword="true" />, if the resulting schema type is an XSD anonymous type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8931c-124">XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-124">Gets or sets a value that indicates whether to include the type in XML schema documents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8931c-125">XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-125">
              <see langword="true" /> to include the type in XML schema documents; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8931c-126">適用、 <xref:System.Xml.Serialization.XmlTypeAttribute> XML 型の名前空間、XML 型の名前、および XML スキーマ ドキュメントの種類を含めるかどうかを指定するためにクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-126">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="8931c-127">プロパティの設定の結果を表示する、<xref:System.Xml.Serialization.XmlTypeAttribute>クラス、実行可能ファイルまたは DLL としてアプリケーションをコンパイルおよび XML スキーマ定義ツール (XSD.exe) を生成されたファイルを渡します。</span><span class="sxs-lookup"><span data-stu-id="8931c-127">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="8931c-128">このツールは、型定義を含む、スキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8931c-128">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8931c-129">次の例では、適用、<xref:System.Xml.Serialization.XmlTypeAttribute>を`ExtraneousInfo`クラス、設定、<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="8931c-129">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `ExtraneousInfo` class, setting the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8931c-130">XML 型の名前空間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-130">Gets or sets the namespace of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8931c-131">XML 型の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-131">The namespace of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8931c-132">次の例では、適用、<xref:System.Xml.Serialization.XmlTypeAttribute>クラスの設定中に、<xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8931c-132">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class while setting the <xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8931c-133">XML 型の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-133">Gets or sets the name of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8931c-134">XML 型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8931c-134">The name of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8931c-135">適用、 <xref:System.Xml.Serialization.XmlTypeAttribute> XML 型の名前空間、XML 型の名前、および XML スキーマ ドキュメントの種類を含めるかどうかを指定するためにクラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-135">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="8931c-136">プロパティの設定の結果を表示する、<xref:System.Xml.Serialization.XmlTypeAttribute>クラスし、実行可能ファイルまたは DLL として、アプリケーションをコンパイルして、結果として得られるファイルを[XML スキーマ定義ツール (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)します。</span><span class="sxs-lookup"><span data-stu-id="8931c-136">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="8931c-137">このツールは、型定義を含む、スキーマを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8931c-137">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8931c-138">次の例では、適用、<xref:System.Xml.Serialization.XmlTypeAttribute>を`Person`と`Job`クラス。</span><span class="sxs-lookup"><span data-stu-id="8931c-138">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `Person` and `Job` classes.</span></span> <span data-ttu-id="8931c-139">クラスをコンパイルし、結果として得られる実行可能ファイルを XML スキーマ定義ツールに渡す場合は、出力セクションでは、スキーマが表示されます。</span><span class="sxs-lookup"><span data-stu-id="8931c-139">If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>