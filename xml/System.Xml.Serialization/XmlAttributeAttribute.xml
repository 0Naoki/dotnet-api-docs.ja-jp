<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8332ed330975a7a06490fcf56fbedce1fafe96b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70689764" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAttributeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6215-101"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス メンバーを XML 属性としてシリアル化する必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6215-102">は<xref:System.Xml.Serialization.XmlAttributeAttribute> 、が<xref:System.Xml.Serialization.XmlSerializer>オブジェクトをシリアル化 (逆シリアル化) する方法を制御する属性のファミリに属しています。</span><span class="sxs-lookup"><span data-stu-id="d6215-102">The <xref:System.Xml.Serialization.XmlAttributeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object.</span></span> <span data-ttu-id="d6215-103">類似する属性の完全な一覧については、「 [XML シリアル化を制御する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6215-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="d6215-104">パブリックフィールドまたはパブリックプロパティ<xref:System.Xml.Serialization.XmlAttributeAttribute>に適用されると、は、 <xref:System.Xml.Serialization.XmlSerializer>メンバーを XML 属性としてシリアル化するようにに通知します。</span><span class="sxs-lookup"><span data-stu-id="d6215-104">When applied to a public field or property, the <xref:System.Xml.Serialization.XmlAttributeAttribute> informs the <xref:System.Xml.Serialization.XmlSerializer> to serialize the member as an XML attribute.</span></span> <span data-ttu-id="d6215-105">既定では、 <xref:System.Xml.Serialization.XmlSerializer>は、パブリックフィールドとパブリックプロパティを XML 要素としてシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-105">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes public fields and properties as XML elements.</span></span>  
  
 <span data-ttu-id="d6215-106">は、 <xref:System.Xml.Serialization.XmlAttributeAttribute> XML スキーマ定義言語 (xsd) の単純型 (xsd から `anySimpleType` 派生したすべての組み込みデータ型を含む) にマップできる値 (または値の配列) を返すパブリックフィールドまたはパブリックプロパティにのみ割り当てることができます。「」と入力します)。</span><span class="sxs-lookup"><span data-stu-id="d6215-106">You can assign the <xref:System.Xml.Serialization.XmlAttributeAttribute> only to public fields or public properties that return a value (or array of values) that can be mapped to one of the XML Schema definition language (XSD) simple types (including all built-in datatypes derived from the XSD `anySimpleType` type).</span></span> <span data-ttu-id="d6215-107">使用できる型には、、 <xref:System.Guid> <xref:System.Char>、およびの各列挙体を含む、XSD の単純型にマップできるものがあります。</span><span class="sxs-lookup"><span data-stu-id="d6215-107">The possible types include any that can be mapped to the XSD simple types, including <xref:System.Guid>, <xref:System.Char>, and enumerations.</span></span> <span data-ttu-id="d6215-108">XSD 型<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>の一覧と、それらが to.NET データ型にマップされる方法については、プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6215-108">See the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property for a list of XSD types and how they are mapped to.NET data types.</span></span>  
  
 <span data-ttu-id="d6215-109">で<xref:System.Xml.Serialization.XmlAttributeAttribute> 設定できる `xml:space` 特殊な属性として、 (言語を指定) と (空白の処理方法を指定する) 属性の2つがあります。 `xml:lang`</span><span class="sxs-lookup"><span data-stu-id="d6215-109">There are two special attributes that can be set with the <xref:System.Xml.Serialization.XmlAttributeAttribute> : the `xml:lang` (specifies language) and `xml:space` (specifies how to handle white space) attributes.</span></span> <span data-ttu-id="d6215-110">これらの属性は、XML を処理するアプリケーションにのみ関連する情報を伝達することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="d6215-110">These attributes are intended to convey information that is relevant only to an application processing the XML.</span></span> <span data-ttu-id="d6215-111">これらの設定の例を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="d6215-111">Examples of setting these are shown in the following code.</span></span>  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space 
 ```

 ```vb 
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 <span data-ttu-id="d6215-112">属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6215-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6215-113">`XmlAttribute` 長い <xref:System.Xml.Serialization.XmlAttributeAttribute> のではなく、コードで単語を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d6215-113">You can use the word `XmlAttribute` in your code instead of the longer <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6215-114">次の例では、が適用されるいくつかの<xref:System.Xml.Serialization.XmlAttributeAttribute>フィールドを含むクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-114">The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.XmlAttributeAttribute> is applied.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6215-115"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-115">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6215-116"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="d6215-117"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 属性の名前。</span><span class="sxs-lookup"><span data-stu-id="d6215-117">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="d6215-118"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化し、生成される XML 属性の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6215-119">属性を取得するために使用する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d6215-119">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="d6215-120"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string * Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute (attributeName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="d6215-121">生成される XML 属性の名前。</span><span class="sxs-lookup"><span data-stu-id="d6215-121">The name of the XML attribute that is generated.</span></span></param>
        <param name="type"><span data-ttu-id="d6215-122">属性を取得するために使用する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d6215-122">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="d6215-123"><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6215-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeName : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6215-124">XML 属性の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-124">Gets or sets the name of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="d6215-125">XML 属性の名前。</span><span class="sxs-lookup"><span data-stu-id="d6215-125">The name of the XML attribute.</span></span> <span data-ttu-id="d6215-126">既定値はメンバー名です。</span><span class="sxs-lookup"><span data-stu-id="d6215-126">The default is the member name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6215-127">既定値<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>を使用できない場合は、プロパティを使用して XML 属性名を指定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-127">Use the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property to specify an XML attribute name when the default value cannot be used.</span></span> <span data-ttu-id="d6215-128">たとえば、XML 属性名がメンバー識別子として無効な場合は、を無効な名前に設定し<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>ているときに、識別子に有効な名前を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d6215-128">For example, if the XML attribute name is invalid as a member identifier, you can use a valid name for the identifier while setting the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> to an invalid name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6215-129">次の例では<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 、 <xref:System.Xml.Serialization.XmlAttributeAttribute>のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-129">The following example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property of an <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6215-130"><see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 属性の XSD データ型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-130">Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="d6215-131">XSD (XML スキーマドキュメント) データ型。</span><span class="sxs-lookup"><span data-stu-id="d6215-131">An XSD (XML Schema Document) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6215-132">次の表は、their.NET と同等の XSD 単純データ型を示しています。</span><span class="sxs-lookup"><span data-stu-id="d6215-132">The following table lists the XSD simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="d6215-133">XSD `base64Binary` <xref:System.Xml.Serialization.XmlArrayItemAttribute>および`hexBinary`データ型の場合は、構造体の<xref:System.Byte>配列を使用し、必要に<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>応じて、プロパティが "base64Binary" または "hexBinary" に設定されたを適用します。</span><span class="sxs-lookup"><span data-stu-id="d6215-133">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="d6215-134">`time` XSD および<xref:System.Xml.Serialization.XmlAttributeAttribute> <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>データ型の場合は、型を使用し、を "date" または "time" に設定してを適用します。 <xref:System.DateTime>  `date`</span><span class="sxs-lookup"><span data-stu-id="d6215-134">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="d6215-135">文字列にマップされているすべての xsd 型につい<xref:System.Xml.Serialization.XmlAttributeAttribute>て、 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>そのプロパティが xsd 型に設定されたを適用します。</span><span class="sxs-lookup"><span data-stu-id="d6215-135">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with its <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="d6215-136">ただし、この場合、シリアル化形式は変更されず、メンバーのスキーマのみが変更されます。</span><span class="sxs-lookup"><span data-stu-id="d6215-136">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6215-137">プロパティでは大文字と小文字が区別されるため、XSD データ型の1つに厳密に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6215-137">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6215-138">バイナリデータを XML 要素として渡すことは、XML 属性として渡すよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="d6215-138">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="d6215-139">XML データ型の詳細については、World Wide Web コンソーシアムの「 [Xml Schema Part 2: データ型](https://www.w3.org/TR/xmlschema-2/)」ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6215-139">For more information about XML data types, see the [XML Schema Part 2: DataTypes](https://www.w3.org/TR/xmlschema-2/) document from the World Wide Web Consortium.</span></span>  
  
|<span data-ttu-id="d6215-140">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="d6215-140">XSD data type</span></span>|<span data-ttu-id="d6215-141">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="d6215-141">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="d6215-142">anyURI</span><span class="sxs-lookup"><span data-stu-id="d6215-142">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-143">base64Binary</span><span class="sxs-lookup"><span data-stu-id="d6215-143">base64Binary</span></span>|<span data-ttu-id="d6215-144">オブジェクトの<xref:System.Byte>配列</span><span class="sxs-lookup"><span data-stu-id="d6215-144">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="d6215-145">boolean</span><span class="sxs-lookup"><span data-stu-id="d6215-145">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="d6215-146">byte</span><span class="sxs-lookup"><span data-stu-id="d6215-146">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="d6215-147">date</span><span class="sxs-lookup"><span data-stu-id="d6215-147">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d6215-148">dateTime</span><span class="sxs-lookup"><span data-stu-id="d6215-148">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d6215-149">decimal</span><span class="sxs-lookup"><span data-stu-id="d6215-149">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="d6215-150">double</span><span class="sxs-lookup"><span data-stu-id="d6215-150">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="d6215-151">ENTITY</span><span class="sxs-lookup"><span data-stu-id="d6215-151">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-152">事業</span><span class="sxs-lookup"><span data-stu-id="d6215-152">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-153">float</span><span class="sxs-lookup"><span data-stu-id="d6215-153">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="d6215-154">gDay</span><span class="sxs-lookup"><span data-stu-id="d6215-154">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-155">gMonth</span><span class="sxs-lookup"><span data-stu-id="d6215-155">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-156">G当月日</span><span class="sxs-lookup"><span data-stu-id="d6215-156">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-157">gYear</span><span class="sxs-lookup"><span data-stu-id="d6215-157">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-158">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="d6215-158">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-159">hexBinary</span><span class="sxs-lookup"><span data-stu-id="d6215-159">hexBinary</span></span>|<span data-ttu-id="d6215-160">オブジェクトの<xref:System.Byte>配列</span><span class="sxs-lookup"><span data-stu-id="d6215-160">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="d6215-161">ID</span><span class="sxs-lookup"><span data-stu-id="d6215-161">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-162">IDREF</span><span class="sxs-lookup"><span data-stu-id="d6215-162">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-163">IDREFS</span><span class="sxs-lookup"><span data-stu-id="d6215-163">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-164">int</span><span class="sxs-lookup"><span data-stu-id="d6215-164">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="d6215-165">整数</span><span class="sxs-lookup"><span data-stu-id="d6215-165">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-166">language</span><span class="sxs-lookup"><span data-stu-id="d6215-166">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-167">long</span><span class="sxs-lookup"><span data-stu-id="d6215-167">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="d6215-168">name</span><span class="sxs-lookup"><span data-stu-id="d6215-168">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-169">NCName</span><span class="sxs-lookup"><span data-stu-id="d6215-169">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-170">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="d6215-170">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-171">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="d6215-171">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-172">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="d6215-172">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-173">normalizedString</span><span class="sxs-lookup"><span data-stu-id="d6215-173">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-174">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="d6215-174">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-175">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="d6215-175">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-176">NOTATION</span><span class="sxs-lookup"><span data-stu-id="d6215-176">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-177">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="d6215-177">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-178">QName</span><span class="sxs-lookup"><span data-stu-id="d6215-178">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="d6215-179">duration</span><span class="sxs-lookup"><span data-stu-id="d6215-179">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-180">string</span><span class="sxs-lookup"><span data-stu-id="d6215-180">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-181">short</span><span class="sxs-lookup"><span data-stu-id="d6215-181">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="d6215-182">時間</span><span class="sxs-lookup"><span data-stu-id="d6215-182">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d6215-183">token</span><span class="sxs-lookup"><span data-stu-id="d6215-183">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="d6215-184">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="d6215-184">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="d6215-185">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="d6215-185">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="d6215-186">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="d6215-186">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="d6215-187">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="d6215-187">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="d6215-188">次の例では<xref:System.Xml.Serialization.XmlAttributeAttribute> 、を2つのメンバーに<xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>適用し、プロパティを別の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-188">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two members, and sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to different values.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6215-189"><see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 属性名が修飾されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-189">Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</span></span></summary>
        <value><span data-ttu-id="d6215-190"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="d6215-190">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="d6215-191">既定値は、<see langword="XmlForm.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6215-191">The default is <see langword="XmlForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6215-192">プロパティ<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>は、XML 要素が修飾されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d6215-192">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="d6215-193">プロパティ<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>は、1999 http://www.w3.org仕様`Namespaces in XML`に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="d6215-193">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the 1999 http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="d6215-194">プロパティが<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>任意の値に設定されている場合、 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>プロパティを`XmlSchemaForm.Unqualified`に設定しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d6215-194">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="d6215-195">既定の設定で`XmlSchemaForm.None`は、XML <xref:System.Xml.Serialization.XmlSerializer>ドキュメントのスキーマを確認して、名前空間が修飾されているかどうかを確認するようにに指示します。</span><span class="sxs-lookup"><span data-stu-id="d6215-195">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="d6215-196">スキーマで個々の要素または属性の値が指定されてい<xref:System.Xml.Serialization.XmlSerializer>ない場合`elementFormDefault` 、 `attributeFormDefault`はおよびの値を使用して、要素または属性が修飾されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d6215-196">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="d6215-197">次の XML コードは、スキーマを示しています。</span><span class="sxs-lookup"><span data-stu-id="d6215-197">The following XML code shows a schema:</span></span>  
  
```xml  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="d6215-198"><xref:System.Xml.Serialization.XmlSerializer>がスキーマ`Number` `Name` `Number` `XmlSchemaForm.None`を読み取った場合、 `Name`との両方の値はになりますが、要素は修飾されますが、要素は修飾されません。 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A></span><span class="sxs-lookup"><span data-stu-id="d6215-198">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6215-199">次の例では<xref:System.Xml.Serialization.XmlAttributeAttribute> 、クラスに含まれる2つのフィールドにを適用します。</span><span class="sxs-lookup"><span data-stu-id="d6215-199">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6215-200">XML 属性の XML 名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-200">Gets or sets the XML namespace of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="d6215-201">XML 属性の XML 名前空間。</span><span class="sxs-lookup"><span data-stu-id="d6215-201">The XML namespace of the XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6215-202">プロパティ<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>は、 http://www.w3.org 仕様 `Namespaces in XML` に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="d6215-202">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="d6215-203">プレフィックスに関連付けられている名前空間を作成する<xref:System.Xml.Serialization.XmlSerializerNamespaces>には、XML ドキュメントで使用される名前空間とプレフィックスを含むオブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6215-203">To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="d6215-204">それぞれ<xref:System.Xml.Serialization.XmlAttributeAttribute>に設定する名前空間は、 <xref:System.Xml.Serialization.XmlSerializerNamespaces>オブジェクト内のいずれかの名前空間と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6215-204">The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="d6215-205">が<xref:System.Xml.Serialization.XmlSerializer> XML コードを生成すると、各属性名のプレフィックスが正しくなります。</span><span class="sxs-lookup"><span data-stu-id="d6215-205">When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6215-206">次の例では<xref:System.Xml.Serialization.XmlAttributeAttribute> 、クラスに含まれる2つのフィールドにを適用します。</span><span class="sxs-lookup"><span data-stu-id="d6215-206">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span> <span data-ttu-id="d6215-207">この例では<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 、各属性のプロパティをメンバー識別子とは異なる値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-207">The example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property for each attribute to a value different from the member identifier.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6215-208">XML 属性の複合型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6215-208">Gets or sets the complex type of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="d6215-209">XML 属性の型。</span><span class="sxs-lookup"><span data-stu-id="d6215-209">The type of the XML attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
