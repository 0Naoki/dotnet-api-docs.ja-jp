<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13e579faca401274b8a66994712d16f618265d9c" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70358347" /></Metadata><TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化された配列で配置できる派生型を指定する属性を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、が<xref:System.Xml.Serialization.XmlSerializer>オブジェクトをシリアル化または逆シリアル化する方法を制御する属性のファミリに属しています。 類似する属性の完全な一覧については、「 [XML シリアル化を制御する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)」を参照してください。  
  
 は、 <xref:System.Xml.Serialization.XmlArrayItemAttribute>配列を返す任意のパブリックな読み取り/書き込みメンバーに適用することも、アクセスを提供することもできます。 たとえば、オブジェクトの配列、コレクション、 <xref:System.Collections.ArrayList>、または<xref:System.Collections.IEnumerable>インターフェイスを実装する任意のクラスを返すフィールドなどです。  
  
 は<xref:System.Xml.Serialization.XmlArrayItemAttribute>ポリモーフィズムをサポートしています。つまり、で<xref:System.Xml.Serialization.XmlSerializer>は、派生オブジェクトを配列に追加することができます。 たとえば、という名前のクラス`Mammal`が、という名前`Animal`の基底クラスから派生しているとします。 さらに、という名前`MyAnimals`のクラスに、オブジェクトの`Animal`配列を返すフィールドが含まれているとします。 が<xref:System.Xml.Serialization.XmlSerializer>型と`Animal`型の両方をシリアル化できるように<xref:System.Xml.Serialization.XmlArrayItemAttribute>するには、2つの許容される型のいずれかを指定するたびに、をフィールドに2回適用します。 `Mammal`  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlArrayItemAttribute>または<xref:System.Xml.Serialization.XmlElementAttribute>の複数のインスタンスを適用して、配列に挿入できるオブジェクトの型を指定できます。  
  
> [!NOTE]
>  インターフェイスまたはインターフェイスの配列を返すフィールドまたはプロパティのシリアル化はサポートされていません。  
  
 属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。  
  
> [!NOTE]
>  `XmlArrayItem` 長い<xref:System.Xml.Serialization.XmlArrayItemAttribute>のではなく、コードで単語を使用できます。  
  
   
  
## Examples  
 次の例では、オブジェクト`Group`の`Employee`配列を返すと`Employees`いう名前のフィールドを含むという名前のクラスをシリアル化します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、をフィールドに適用し、 <xref:System.Xml.Serialization.XmlSerializer>基本クラス (`Employee`) 型と派生クラス型 (`Manager`) の両方のオブジェクトをシリアル化された配列に挿入できることをに指示します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML シリアル化の概要</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">方法 : XML ストリームの代替要素名を指定する</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">属性を使用した XML シリアル化の制御</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">XML シリアル化の例</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、オブジェクト`Transportation`の`Vehicle`配列を返すと`MyVehicles`いう名前のフィールドを含むという名前のクラスをシリアル化します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、をフィールドに適用し<xref:System.Xml.Serialization.XmlSerializer>て、 `Vehicle`クラスから派生`Car`したクラスのインスタンスを配列に挿入できるようにします。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">XML 要素の名前。</param>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバーロードは、 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>プロパティを設定します。  
  
 生成された XML 要素の名前がメンバーの識別子と異なる場合は、このオーバーロードを使用します。  
  
 名前空間を含む XML ドキュメントには、要素名の複数のバージョンを含めることができます。 詳細については、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> プロパティを参照してください。  
  
   
  
## Examples  
 次の例では、オブジェクト`Transportation`の`Vehicle`配列を返すと`MyVehicles`いう名前のフィールドを含むという名前のクラスをシリアル化します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、をフィールドに適用し<xref:System.Xml.Serialization.XmlSerializer>て、 `Vehicle`クラスから派生`Car`したクラスのインスタンスを配列に挿入できるようにします。 属性を適用し<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> `elementName`ている間、この例ではパラメーターを使用してプロパティを設定します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、シリアル化される配列に挿入できる <see cref="T:System.Type" /> を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、オブジェクト`Transportation`の`Vehicle`配列を返すと`MyVehicles`いう名前のフィールドを含むという名前のクラスをシリアル化します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、をフィールドに適用し<xref:System.Xml.Serialization.XmlSerializer>て、 `Vehicle`クラスから派生`Car`したクラスのインスタンスを配列に挿入できるようにします。 属性を適用し<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> `type`ている間、この例ではパラメーターを使用してプロパティを設定します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">XML 要素の名前。</param>
        <param name="type">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前、および生成される XML ドキュメントに挿入できる <see cref="T:System.Type" /> を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバーロードは<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 、 <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>プロパティとプロパティを設定します。  
  
 生成された XML 要素の名前がメンバーの識別子と異なる場合は、このオーバーロードを使用します。  
  
 名前空間を含む XML ドキュメントには、要素名の複数のバージョンを含めることができます。 詳細については、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> プロパティを参照してください。  
  
   
  
## Examples  
 次の例では、オブジェクト`Transportation`の`Vehicle`配列を返すと`MyVehicles`いう名前のフィールドを含むという名前のクラスをシリアル化します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、をフィールドに適用し<xref:System.Xml.Serialization.XmlSerializer>て、 `Vehicle`クラスから派生`Car`したクラスのインスタンスを配列に挿入できるようにします。 属性の<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>適用中に、 `elementName`パラメーター <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>を使用してプロパティを設定し、 `type`パラメーターを使用してプロパティを設定します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された XML 要素の XML データ型を取得または設定します。</summary>
        <value>XML スキーマ定義 (XSD) データ型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、XML スキーマの単純なデータ型と .NET に相当するものを示しています。  
  
 `base64Binary` XML スキーマ<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>と`hexBinary`データ型の場合は、オブジェクトの<xref:System.Byte>配列を使用し、必要<xref:System.Xml.Serialization.XmlArrayItemAttribute>に応じて、プロパティが "base64Binary" または "hexBinary" に設定されたを適用します。 `time` XML スキーマ<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>と`date` データ型<xref:System.Xml.Serialization.XmlArrayItemAttribute>の場合は、型を使用し、を"date"または"time"に設定してを適用します。<xref:System.DateTime>  
  
 文字列にマップされているすべての xml スキーマ型につい<xref:System.Xml.Serialization.XmlArrayItemAttribute>て、 <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>そのプロパティを xml スキーマ型に設定したを適用します。 ただし、この場合、シリアル化形式は変更されず、メンバーのスキーマのみが変更されます。  
  
> [!NOTE]
>  プロパティでは大文字と小文字が区別されるため、XML スキーマデータ型の1つに厳密に設定する必要があります。  
  
> [!NOTE]
>  バイナリデータを XML 要素として渡す方が効率的であるため、XML 属性として渡すことができます。  
  
 Xml スキーマデータ型の詳細については、「World Wide Web コンソーシアム[ドキュメント xml スキーマ第2部:データ](https://www.w3.org/TR/xmlschema-2/)型。  
  
|XSD データ型|.NET データ型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|オブジェクトの<xref:System.Byte>配列|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|事業|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|オブジェクトの<xref:System.Byte>配列|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 次の例では、と`PurchaseOrder`いう名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.XmlArrayItemAttribute>クラスのいくつかのインスタンスが3つのメンバー <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>に適用され、各インスタンスのプロパティは配列で許可されている型に設定されます。  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された XML 要素の名前を取得または設定します。</summary>
        <value>生成された XML 要素の名前。 既定値はメンバー識別子です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 生成さ<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>れた XML 要素の名前がメンバーの識別子と異なる場合は、を指定します。  
  
 生成された xml <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>ドキュメントで同じ名前のメンバーを区別するために xml 名前空間を使用する場合は、複数のクラスメンバーに同じ値を設定できます。 XML ドキュメントで名前空間とプレフィックス付きの名前を使用する方法の詳細に<xref:System.Xml.Serialization.XmlSerializerNamespaces>ついては、クラスを参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 、クラス`Vehicle`と`Car`クラスのプロパティを設定します。これにより、に<xref:System.Xml.Serialization.XmlSerializer>よってこれらのクラスに対して生成される XML 要素の名前が変更されます。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。 既定値は、<see langword="XmlSchemaForm.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>は、xml の World Wide Web コンソーシアム仕様の名前[空間](https://www.w3.org/TR/xml-names/)に基づいて、xml 要素名を修飾するかどうかを決定します。  
  
 プロパティが<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>任意の値に設定されている場合、 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>プロパティを`XmlSchemaForm.Unqualified`に設定しようとすると、例外がスローされます。  
  
 既定値`XmlSchemaForm.None`は、XML ドキュメントの<xref:System.Xml.Serialization.XmlSerializer>スキーマを確認して、名前空間が修飾されているかどうかを確認するようにに指示します。 要素の場合、 <xref:System.Xml.Serialization.XmlSerializer>はスキーマ要素属性`elementFormDefault`の値をチェックします。 属性の場合は、スキーマ要素の属性`attributeFormDefault`の値をチェックします。 たとえば、次の XML スキーマは、要素が`Name`修飾されているの`Number`に対して、要素は修飾されていないことを示しています。  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 `Vehicle` `Car`クラスのプロパティをに`XmlSchemaForm.Qualified`、クラスのプロパティをに設定する例を次に示します。<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> `XmlSchemaForm.Unqualified` <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> プロパティが <see langword="XmlSchemaForm.Unqualified" /> に設定され、<see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 値が指定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" /> で、インスタンスは作成されません。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構造体の XML スキーマ仕様では、XML ドキュメントが要素のコンテンツが欠落していることを明示的に通知できます。 このような要素には`xsi:nil` 、属性`true`がに設定されています。 詳細については、「XML Schema [Part 1:」という名前の World Wide Web コンソーシアムの仕様を参照してください。構造](https://www.w3.org/TR/xmlschema-1/)体。  
  
 プロパティが`true`の場合、 `xsi:nil` に`null`設定されているクラスメンバーに対して属性が生成されます。 <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> たとえば、という名前`MyStringArray`のフィールドをに`null`設定すると<xref:System.Xml.Serialization.XmlSerializer> 、によって次の XML コードが生成されます。  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>プロパティが`false`の場合、XML 要素は生成されません。  
  
> [!NOTE]
>  値型にを<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>含める`null`ことはできないため、プロパティを値型として型指定されたメンバーに適用することはできません。  
  
   
  
## Examples  
 次の例では、と`Group`いう名前のクラスをシリアル`Employees`化します。この`Employee`クラスには、オブジェクトの配列を返すという名前のフィールドが含まれています。 という名前`Manager`の2番`Employee`目のクラスはから派生します。 は、オブジェクトと<xref:System.Xml.Serialization.XmlSerializer> `Employee` <xref:System.Xml.Serialization.XmlArrayItemAttribute> オブジェクト`Manager`の両方を配列に挿入できることを指定します。 この例では<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> 、プロパティを設定し<xref:System.Xml.Serialization.XmlSerializer>ます。これに`xsi:nil`より、に`null`設定された配列内の属性オブジェクトを生成しないように指示します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された XML 要素の名前空間を取得または設定します。</summary>
        <value>生成された XML 要素の名前空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>は、XML の World Wide Web コンソーシアム仕様の[名前空間](https://www.w3.org/TR/xml-names/)に準拠しています。  
  
 XML ドキュメントとそれに関連付けられたプレフィックスで使用する名前空間を<xref:System.Xml.Serialization.XmlSerializerNamespaces>作成するには、すべてのプレフィックスと名前空間のペアを含むを作成する必要があります。 それぞれ<xref:System.Xml.Serialization.XmlArrayAttribute>に設定する名前空間は、 <xref:System.Xml.Serialization.XmlSerializerNamespaces>に格納されている必要があります。 が<xref:System.Xml.Serialization.XmlSerializer>ドキュメントを生成すると、各配列項目の要素名の先頭に正しくプレフィックスが付いています。  
  
   
  
## Examples  
 次の例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、を適用<xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>し、プロパティを設定します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が影響を与える XML 要素の階層構造のレベルを取得または設定します。</summary>
        <value>複数の配列内の 1 つの配列のインデックスのセットの 0 から始まるインデックス番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Xml ドキュメントには、XML 要素の階層を含めることができます。 このような階層を表すために、配列の配列が使用されます。 このような配列では、各インデックスは階層内のレベルを表します。 したがって<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、プロパティは、配列の配列を返すフィールドにを適用する場合にのみ使用<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>されます。  
  
 属性を適用するときは、を設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>して、属性が影響を与える階層レベルを指定します。 最初のインデックスの値は常に0です。したがって、最初の配列インデックス<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>に<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>値を<xref:System.Xml.Serialization.XmlArrayItemAttribute>適用せずに、--を設定することはできません。 後続<xref:System.Xml.Serialization.XmlArrayItemAttribute>のオブジェクトだけが<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> 、値 (1、2、3など) を指定する必要があります。  
  
   
  
## Examples  
 次の例では<xref:System.Xml.Serialization.XmlArrayItemAttribute> 、配列の配列に3つの属性を適用します。 各属性が適用さ<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>れる配列を指定するために、プロパティは配列のインデックスに設定されます。  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配列内で使用できる型を取得または設定します。</summary>
        <value>配列内で使用できる <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パブリックフィールド<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>またはパブリックの読み取り/書き込みプロパティ値のオーバーライドされた型を指定するには、プロパティを使用します。  
  
 フィールドまたはプロパティが型<xref:System.Object>の配列を返す場合は、 <xref:System.Xml.Serialization.XmlArrayItemAttribute>の複数のインスタンスをフィールドまたはプロパティに適用します。 各インスタンスについて、 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>プロパティを、配列に挿入できるオブジェクトの型に設定します。  
  
 配列にプリミティブ型のみが含まれている場合は、 <xref:System.Xml.Serialization.XmlArrayItemAttribute>を適用する必要はありません。 既定では、 <xref:System.Xml.Serialization.XmlSerializer>は各値に対して同じ要素名を持つ一連の要素を生成しますが、各要素の型は XML スキーマデータ型に設定されます。 コード例を次に示します。  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 結果は次のようになります。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 ただし、各プリミティブ型に<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>対してプロパティを指定した場合、各値の要素名は .net 型名を使用して生成されます。 次にコード例を示します。  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 結果は次のようになります。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 次の例では、オブジェクトの配列をシリアル化します。 配列を返すフィールドには、2つ<xref:System.Xml.Serialization.XmlArrayItemAttribute>のインスタンスがあります。 各インスタンスは、 <xref:System.Xml.Serialization.XmlSerializer>配列内の指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>されたを受け入れるようにに指示します。  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
