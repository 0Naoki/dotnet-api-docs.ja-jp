<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c472f4f1d3efe640577120cfaf9c17a99d34544" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37486036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4af50-101">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化された配列で配置できる派生型を指定する属性を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4af50-101">Represents an attribute that specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-102"><xref:System.Xml.Serialization.XmlArrayItemAttribute>を制御する属性のファミリに属するどの<xref:System.Xml.Serialization.XmlSerializer>をシリアル化またはオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="4af50-102">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="4af50-103">類似の属性の完全な一覧を参照してください。 [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="4af50-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="4af50-104">適用することができます、<xref:System.Xml.Serialization.XmlArrayItemAttribute>配列を返すか、いずれかへのアクセスを提供するパブリックな読み取り/書き込みメンバーにします。</span><span class="sxs-lookup"><span data-stu-id="4af50-104">You can apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to any public read/write member that returns an array, or provides access to one.</span></span> <span data-ttu-id="4af50-105">コレクション、オブジェクトの配列を返すフィールドなど、 <xref:System.Collections.ArrayList>、または実装するクラス、<xref:System.Collections.IEnumerable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="4af50-105">For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="4af50-106"><xref:System.Xml.Serialization.XmlArrayItemAttribute>はポリモーフィズムをサポート - つまり、これにより、<xref:System.Xml.Serialization.XmlSerializer>配列に派生オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="4af50-106">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array.</span></span> <span data-ttu-id="4af50-107">たとえば、という名前のクラス`Mammal`という名前の基本クラスから派生`Animal`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-107">For example, suppose a class named `Mammal` is derived from a base class named `Animal`.</span></span> <span data-ttu-id="4af50-108">という名前のクラスと`MyAnimals`の配列を返すフィールドを含む`Animal`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-108">Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects.</span></span> <span data-ttu-id="4af50-109">許可する、<xref:System.Xml.Serialization.XmlSerializer>両方のシリアル化に、`Animal`と`Mammal`入力、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドに毎回、2 つの可能な型のいずれかを指定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-109">To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field twice, each time specifying one of the two acceptable types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-110">複数のインスタンスを適用することができます、<xref:System.Xml.Serialization.XmlArrayItemAttribute>または<xref:System.Xml.Serialization.XmlElementAttribute>配列に挿入できるオブジェクトの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-110">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-111">フィールドまたはプロパティを返すインターフェイスまたはインターフェイスの配列のシリアル化がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4af50-111">The serialization of a field or property that returns an interface or array of interfaces is not supported.</span></span>  
  
 <span data-ttu-id="4af50-112">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="4af50-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-113">語を使用できます`XmlArrayItem`代わりに、コードで<xref:System.Xml.Serialization.XmlArrayItemAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="4af50-113">You can use the word `XmlArrayItem` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-114">次の例では、という名前のクラスをシリアル化`Group`という名前のフィールドを格納している`Employees`の配列を返す`Employee`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-114">The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="4af50-115">例では、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドに指示するため、<xref:System.Xml.Serialization.XmlSerializer>両方の基本クラスのオブジェクトを挿入できること (`Employee`) 型と派生クラス型 (`Manager`) シリアル化された配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-115">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-116">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4af50-117">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4af50-118">次の例では、という名前のクラスをシリアル化`Transportation`という名前のフィールドを格納している`MyVehicles`の配列を返す`Vehicle`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-118">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="4af50-119">例は、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドを指定することができます、<xref:System.Xml.Serialization.XmlSerializer>のインスタンスを挿入する、`Car`クラスから派生した、`Vehicle`クラス、配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-119">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="4af50-120">XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-120">The name of the XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af50-121">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-122">このオーバー ロードの設定、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4af50-122">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="4af50-123">メンバーの識別子とは異なるに生成された XML 要素名を使用する場合は、このオーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="4af50-123">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="4af50-124">名前空間を含む XML ドキュメントは、要素名の 1 つ以上のバージョンを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4af50-124">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="4af50-125">詳細については、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4af50-125">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-126">次の例では、という名前のクラスをシリアル化`Transportation`という名前のフィールドを格納している`MyVehicles`の配列を返す`Vehicle`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-126">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="4af50-127">例は、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドを指定することができます、<xref:System.Xml.Serialization.XmlSerializer>のインスタンスを挿入する、`Car`クラスから派生した、`Vehicle`クラス、配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-127">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="4af50-128">例では、設定、属性を適用するときに、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>プロパティを使用して、`elementName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4af50-128">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4af50-129">シリアル化するオブジェクトの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-129">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af50-130">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、シリアル化される配列に挿入できる <see cref="T:System.Type" /> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4af50-131">次の例では、という名前のクラスをシリアル化`Transportation`という名前のフィールドを格納している`MyVehicles`の配列を返す`Vehicle`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-131">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="4af50-132">例は、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドを指定することができます、<xref:System.Xml.Serialization.XmlSerializer>のインスタンスを挿入する、`Car`クラスから派生した、`Vehicle`クラス、配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-132">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="4af50-133">例では、設定、属性を適用するときに、<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>プロパティを使用して、`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4af50-133">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="4af50-134">XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-134">The name of the XML element.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="4af50-135">シリアル化するオブジェクトの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-135">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4af50-136">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前、および生成される XML ドキュメントに挿入できる <see cref="T:System.Type" /> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document and the <see cref="T:System.Type" /> that can be inserted into the generated XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-137">このオーバー ロードの設定、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>と<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4af50-137">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.</span></span>  
  
 <span data-ttu-id="4af50-138">メンバーの識別子とは異なるに生成された XML 要素名を使用する場合は、このオーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="4af50-138">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="4af50-139">名前空間を含む XML ドキュメントは、要素名の 1 つ以上のバージョンを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4af50-139">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="4af50-140">詳細については、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4af50-140">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-141">次の例では、という名前のクラスをシリアル化`Transportation`という名前のフィールドを格納している`MyVehicles`の配列を返す`Vehicle`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-141">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="4af50-142">例は、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドを指定することができます、<xref:System.Xml.Serialization.XmlSerializer>のインスタンスを挿入する、`Car`クラスから派生した、`Vehicle`クラス、配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-142">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="4af50-143">例では、設定、属性を適用するときに、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>プロパティを使用して、`elementName`パラメーター、および<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>プロパティを使用して、`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4af50-143">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-144">生成された XML 要素の XML データ型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-144">Gets or sets the XML data type of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-145">World Wide Web Consortium (www.w3.org) のドキュメント『XML Schema Part 2: DataTypes』で定義されている XML スキーマ定義 (XSD) データ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-145">An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-146">次の表では、.NET の同等の XML スキーマの単純なデータ型を示します。</span><span class="sxs-lookup"><span data-stu-id="4af50-146">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="4af50-147">XML スキーマの`base64Binary`と`hexBinary`、データ型の配列を使用して、<xref:System.Byte>オブジェクト、および適用を<xref:System.Xml.Serialization.XmlArrayItemAttribute>で、<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>プロパティ"base64Binary"または"hexBinary"を適切に設定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-147">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="4af50-148">XML スキーマの`time`と`date`、データ型を使用して、<xref:System.DateTime>を入力し、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>で、 <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> "date"または"time"に設定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-148">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="4af50-149">文字列にマップされているすべての XML スキーマ型に対して適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>でその<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>プロパティが XML スキーマ型に設定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-149">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="4af50-150">ただし、メンバーのスキーマのみ、シリアル化形式は変わりません。</span><span class="sxs-lookup"><span data-stu-id="4af50-150">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-151">プロパティでは、XML スキーマ データ型のいずれかに正確に設定する必要があるため、大文字小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="4af50-151">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-152">要素は XML としてバイナリ データを渡すことはより効率的な XML 属性として、それを渡します。</span><span class="sxs-lookup"><span data-stu-id="4af50-152">Passing binary data as an XML element is more efficient then passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="4af50-153">XML スキーマ データ型の詳細については、World Wide Web コンソーシアム (www.w3.org) のドキュメントを参照してください"XML Schema Part 2: datatypes 』 です。"。</span><span class="sxs-lookup"><span data-stu-id="4af50-153">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes."</span></span>  
  
|<span data-ttu-id="4af50-154">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="4af50-154">XSD data type</span></span>|<span data-ttu-id="4af50-155">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="4af50-155">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="4af50-156">anyURI</span><span class="sxs-lookup"><span data-stu-id="4af50-156">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-157">base64Binary</span><span class="sxs-lookup"><span data-stu-id="4af50-157">base64Binary</span></span>|<span data-ttu-id="4af50-158">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="4af50-158">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="4af50-159">boolean</span><span class="sxs-lookup"><span data-stu-id="4af50-159">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="4af50-160">byte</span><span class="sxs-lookup"><span data-stu-id="4af50-160">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="4af50-161">date</span><span class="sxs-lookup"><span data-stu-id="4af50-161">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="4af50-162">dateTime</span><span class="sxs-lookup"><span data-stu-id="4af50-162">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="4af50-163">decimal</span><span class="sxs-lookup"><span data-stu-id="4af50-163">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="4af50-164">double</span><span class="sxs-lookup"><span data-stu-id="4af50-164">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="4af50-165">ENTITY</span><span class="sxs-lookup"><span data-stu-id="4af50-165">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-166">エンティティ</span><span class="sxs-lookup"><span data-stu-id="4af50-166">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-167">float</span><span class="sxs-lookup"><span data-stu-id="4af50-167">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="4af50-168">gDay</span><span class="sxs-lookup"><span data-stu-id="4af50-168">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-169">gMonth</span><span class="sxs-lookup"><span data-stu-id="4af50-169">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-170">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="4af50-170">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-171">gYear</span><span class="sxs-lookup"><span data-stu-id="4af50-171">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-172">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="4af50-172">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-173">hexBinary</span><span class="sxs-lookup"><span data-stu-id="4af50-173">hexBinary</span></span>|<span data-ttu-id="4af50-174">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="4af50-174">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="4af50-175">ID</span><span class="sxs-lookup"><span data-stu-id="4af50-175">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-176">IDREF</span><span class="sxs-lookup"><span data-stu-id="4af50-176">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-177">IDREFS</span><span class="sxs-lookup"><span data-stu-id="4af50-177">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-178">int</span><span class="sxs-lookup"><span data-stu-id="4af50-178">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="4af50-179">整数</span><span class="sxs-lookup"><span data-stu-id="4af50-179">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-180">language</span><span class="sxs-lookup"><span data-stu-id="4af50-180">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-181">long</span><span class="sxs-lookup"><span data-stu-id="4af50-181">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="4af50-182">name</span><span class="sxs-lookup"><span data-stu-id="4af50-182">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-183">NCName</span><span class="sxs-lookup"><span data-stu-id="4af50-183">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-184">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="4af50-184">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-185">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="4af50-185">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-186">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="4af50-186">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-187">normalizedString</span><span class="sxs-lookup"><span data-stu-id="4af50-187">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-188">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="4af50-188">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-189">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="4af50-189">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-190">NOTATION</span><span class="sxs-lookup"><span data-stu-id="4af50-190">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-191">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="4af50-191">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-192">QName</span><span class="sxs-lookup"><span data-stu-id="4af50-192">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="4af50-193">duration</span><span class="sxs-lookup"><span data-stu-id="4af50-193">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-194">string</span><span class="sxs-lookup"><span data-stu-id="4af50-194">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-195">short</span><span class="sxs-lookup"><span data-stu-id="4af50-195">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="4af50-196">時間</span><span class="sxs-lookup"><span data-stu-id="4af50-196">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="4af50-197">token</span><span class="sxs-lookup"><span data-stu-id="4af50-197">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="4af50-198">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="4af50-198">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="4af50-199">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="4af50-199">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="4af50-200">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="4af50-200">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="4af50-201">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="4af50-201">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="4af50-202">次の例では、という名前のクラスをシリアル化`PurchaseOrder`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-202">The following example serializes a class named `PurchaseOrder`.</span></span> <span data-ttu-id="4af50-203">複数のインスタンス、<xref:System.Xml.Serialization.XmlArrayItemAttribute>クラスは、3 つのメンバーに適用されます、<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>インスタンスごとにプロパティが配列で許可されている型に設定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-203">Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property for each instance is set to a type allowed in the array.</span></span>  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-204">生成された XML 要素の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-204">Gets or sets the name of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-205">生成された XML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-205">The name of the generated XML element.</span>
          </span>
          <span data-ttu-id="4af50-206">既定値はメンバー識別子です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-206">The default is the member identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-207">指定、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>メンバーの識別子とは異なるに生成された XML 要素の名前にする場合。</span><span class="sxs-lookup"><span data-stu-id="4af50-207">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="4af50-208">同じように設定することができます<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>という名前のメンバーを生成された XML ドキュメントが同じを区別する XML 名前空間を使用している場合は、複数のクラス メンバーへの値。</span><span class="sxs-lookup"><span data-stu-id="4af50-208">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members.</span></span> <span data-ttu-id="4af50-209">XML ドキュメントの名前空間とプレフィックスの名前を使用する方法の詳細については、次を参照してください。、<xref:System.Xml.Serialization.XmlSerializerNamespaces>クラス。</span><span class="sxs-lookup"><span data-stu-id="4af50-209">For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-210">次の例のセット、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>プロパティを`Vehicle`と`Car`クラス - XML 要素の名前を変更することを<xref:System.Xml.Serialization.XmlSerializer>これらのクラスが生成されます。</span><span class="sxs-lookup"><span data-stu-id="4af50-210">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-211">生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-211">Gets or sets a value that indicates whether the name of the generated XML element is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-212">
            <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-212">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="4af50-213">既定値は、<see langword="XmlSchemaForm.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-213">The default is <see langword="XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-214"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>プロパティでは、XML 要素名を修飾されたかどうか、World Wide Web コンソーシアム (www.w3.org) の仕様 『 Namespaces in XML"に基づくかを決定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-214">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="4af50-215">場合、<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>を設定しようとすると、任意の値に設定されて、<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>プロパティを`XmlSchemaForm.Unqualified`例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4af50-215">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="4af50-216">既定値は`XmlSchemaForm.None`、指示、<xref:System.Xml.Serialization.XmlSerializer>名前空間を修飾するかどうかを判断する XML ドキュメントのスキーマを確認します。</span><span class="sxs-lookup"><span data-stu-id="4af50-216">The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="4af50-217">要素に、<xref:System.Xml.Serialization.XmlSerializer>スキーマ要素の属性の値をチェック`elementFormDefault`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-217">For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`.</span></span> <span data-ttu-id="4af50-218">属性の場合、スキーマ要素の属性の値をチェック`attributeFormDefault`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-218">For attributes, it checks the value of the schema-element attribute `attributeFormDefault`.</span></span> <span data-ttu-id="4af50-219">たとえば、次の XML スキーマを示しますが、`Name`要素を修飾すると中、`Number`要素が修飾されていません。</span><span class="sxs-lookup"><span data-stu-id="4af50-219">For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4af50-220">次の例のセット、<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>プロパティを`Vehicle`クラスを`XmlSchemaForm.Unqualified`、および<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>プロパティを`Car`クラスを`XmlSchemaForm.Qualified`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-220">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Car` class to `XmlSchemaForm.Qualified`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4af50-221">
            <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> プロパティが <see langword="XmlSchemaForm.Unqualified" /> に設定され、<see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-221">The <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> property is set to <see langword="XmlSchemaForm.Unqualified" /> and a <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> value is specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-222">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-222">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-223">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" /> で、インスタンスは作成されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-223">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />, and no instance is generated.</span>
          </span>
          <span data-ttu-id="4af50-224">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-224">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-225">構造の XML スキーマ仕様では、要素のコンテンツが見つからないことを明示的に通知する XML ドキュメントを許可します。</span><span class="sxs-lookup"><span data-stu-id="4af50-225">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="4af50-226">このような要素には、属性が含まれています`xsi:nil`設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-226">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="4af50-227">詳細については、「World Wide Web コンソーシアム (www.w3.org) の仕様を参照してください。"XML Schema Part 1: 構造体"。</span><span class="sxs-lookup"><span data-stu-id="4af50-227">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="4af50-228">場合、<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>プロパティは`true`、`xsi:nil`に設定されているクラスのメンバーの属性が生成される`null`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-228">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="4af50-229">たとえば、という名前のフィールドを設定する`MyStringArray`に`null`、<xref:System.Xml.Serialization.XmlSerializer>次の XML コードが生成されます。</span><span class="sxs-lookup"><span data-stu-id="4af50-229">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="4af50-230">場合、<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>プロパティは`false`、XML 要素は生成されません。</span><span class="sxs-lookup"><span data-stu-id="4af50-230">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4af50-231">適用することはできません、<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>メンバー プロパティが値の型として型指定された値の型を含めることはできませんので`null`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-231">You cannot apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-232">次の例では、という名前のクラスをシリアル化`Group`、という名前のフィールドを含む`Employees`の配列を返す`Employee`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-232">The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="4af50-233">という名前の 2 番目のクラス`Manager`から派生した`Employee`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-233">A second class named `Manager` derives from `Employee`.</span></span> <span data-ttu-id="4af50-234"><xref:System.Xml.Serialization.XmlArrayItemAttribute>ことを指定します、<xref:System.Xml.Serialization.XmlSerializer>両方を挿入できる`Employee`と`Manager`配列オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4af50-234">An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array.</span></span> <span data-ttu-id="4af50-235">例のセット、<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>プロパティを示すため、<xref:System.Xml.Serialization.XmlSerializer>を生成しないように、`xsi:nil`配列内のオブジェクトの属性に設定`null`します。</span><span class="sxs-lookup"><span data-stu-id="4af50-235">The example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-236">生成された XML 要素の名前空間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-236">Gets or sets the namespace of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-237">生成された XML 要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-237">The namespace of the generated XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-238"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>プロパティは、World Wide Web コンソーシアム (www.w3.org) の仕様 『 Namespaces in XML」に準拠しています</span><span class="sxs-lookup"><span data-stu-id="4af50-238">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="4af50-239">XML ドキュメントと関連付けられたプレフィックスを使用する名前空間を作成するには、作成する必要があります、<xref:System.Xml.Serialization.XmlSerializerNamespaces>すべてのプレフィックスと名前空間のペアを格納します。</span><span class="sxs-lookup"><span data-stu-id="4af50-239">To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs.</span></span> <span data-ttu-id="4af50-240">各名前空間を設定する<xref:System.Xml.Serialization.XmlArrayAttribute>で含める必要があります、<xref:System.Xml.Serialization.XmlSerializerNamespaces>します。</span><span class="sxs-lookup"><span data-stu-id="4af50-240">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="4af50-241">ときに、<xref:System.Xml.Serialization.XmlSerializer>ドキュメントを生成します。 各配列項目要素名を正しくプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="4af50-241">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-242">次の例では、適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>設定と、<xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4af50-242">The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-243">
            <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が影響を与える XML 要素の階層構造のレベルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-243">Gets or sets the level in a hierarchy of XML elements that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-244">複数の配列内の 1 つの配列のインデックスのセットの 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-244">The zero-based index of a set of indexes in an array of arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-245">XML ドキュメントは、XML 要素の階層を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4af50-245">An XML document can contain hierarchies of XML elements.</span></span> <span data-ttu-id="4af50-246">このような階層を表すには、配列の配列を使用します。</span><span class="sxs-lookup"><span data-stu-id="4af50-246">To represent such a hierarchy, an array of arrays is used.</span></span> <span data-ttu-id="4af50-247">このような配列では、各インデックスは、階層のレベルを表します。</span><span class="sxs-lookup"><span data-stu-id="4af50-247">In such an array, each index represents a level in the hierarchy.</span></span> <span data-ttu-id="4af50-248">そのため、<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>プロパティは、適用するときにのみ使用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>を配列の配列を返すフィールドにします。</span><span class="sxs-lookup"><span data-stu-id="4af50-248">Therefore, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.</span></span>  
  
 <span data-ttu-id="4af50-249">属性を適用する場合は、どの階層レベルを設定して、属性が影響を指定、<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>します。</span><span class="sxs-lookup"><span data-stu-id="4af50-249">When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span></span> <span data-ttu-id="4af50-250">最初のインデックスが常に 0 以外の値を持ちますそのために設定するオプションがその<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>--<xref:System.Xml.Serialization.XmlArrayItemAttribute>せず、<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>値配列の最初のインデックスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="4af50-250">The first index always has the value of 0; therefore it is optional to set its <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> value is applied to the first array index.</span></span> <span data-ttu-id="4af50-251">のみ後続<xref:System.Xml.Serialization.XmlArrayItemAttribute>オブジェクトを必要と<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>(1、2、3、およびなど) として指定する値。</span><span class="sxs-lookup"><span data-stu-id="4af50-251">Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> values specified (as 1, 2, 3, and so forth).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af50-252">次の例に適用される 3 つ<xref:System.Xml.Serialization.XmlArrayItemAttribute>属性を配列の配列。</span><span class="sxs-lookup"><span data-stu-id="4af50-252">The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays.</span></span> <span data-ttu-id="4af50-253">各属性の適用対象の配列を指定する、<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>プロパティが配列のインデックスに設定します。</span><span class="sxs-lookup"><span data-stu-id="4af50-253">To specify which of the arrays each attribute applies to, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is set to the index of the arrays.</span></span>  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4af50-254">配列内で使用できる型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-254">Gets or sets the type allowed in an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4af50-255">配列内で使用できる <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4af50-255">A <see cref="T:System.Type" /> that is allowed in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af50-256">使用して、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>パブリック フィールドまたはパブリックな読み取り/書き込みプロパティの値のオーバーライドの種類を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4af50-256">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.</span></span>  
  
 <span data-ttu-id="4af50-257">フィールドまたはプロパティが型の配列を返すかどうか<xref:System.Object>の複数のインスタンスの適用、<xref:System.Xml.Serialization.XmlArrayItemAttribute>フィールドまたはプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="4af50-257">If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property.</span></span> <span data-ttu-id="4af50-258">インスタンスごとに、設定、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>プロパティを配列に挿入できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="4af50-258">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="4af50-259">配列にプリミティブ型のみが含まれている場合は適用する必要はありません、<xref:System.Xml.Serialization.XmlArrayItemAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="4af50-259">If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span> <span data-ttu-id="4af50-260">既定で、<xref:System.Xml.Serialization.XmlSerializer>は、それぞれの値が、各要素の型は、XML スキーマ データ型に設定されて、一連の要素は、それぞれと同じ要素名を生成します。</span><span class="sxs-lookup"><span data-stu-id="4af50-260">By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type.</span></span> <span data-ttu-id="4af50-261">コード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4af50-261">For example, the following code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 <span data-ttu-id="4af50-262">この XML の結果:</span><span class="sxs-lookup"><span data-stu-id="4af50-262">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 <span data-ttu-id="4af50-263">ただし、指定した場合、 <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> .NET 型名を使用して各プリミティブ型、値ごとに要素名のプロパティを生成します。</span><span class="sxs-lookup"><span data-stu-id="4af50-263">However, if you specify the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property for each primitive type, the element name for each value is generated using the .NET type name.</span></span> <span data-ttu-id="4af50-264">このコード例:</span><span class="sxs-lookup"><span data-stu-id="4af50-264">For example this code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 <span data-ttu-id="4af50-265">この XML の結果:</span><span class="sxs-lookup"><span data-stu-id="4af50-265">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4af50-266">次の例は、オブジェクトの配列をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="4af50-266">The following example serializes an array of objects.</span></span> <span data-ttu-id="4af50-267">配列を返すフィールドが 2 つの属性付き<xref:System.Xml.Serialization.XmlArrayItemAttribute>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4af50-267">The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances.</span></span> <span data-ttu-id="4af50-268">各インスタンスに指示、<xref:System.Xml.Serialization.XmlSerializer>を受け入れる指定した<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>配列にします。</span><span class="sxs-lookup"><span data-stu-id="4af50-268">Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> in the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>