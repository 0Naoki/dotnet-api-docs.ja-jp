<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="699be6d7170c7863cead8c110b37b70275ee3113" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46686505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法を制御する属性オブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成、<xref:System.Xml.Serialization.XmlAttributes>既定をオーバーライドするプロセスの一部であるようにして、<xref:System.Xml.Serialization.XmlSerializer>クラスのインスタンスをシリアル化します。 たとえば、DLL がアクセスできないソースから作成されるオブジェクトをシリアル化するとします。 使用して、 <xref:System.Xml.Serialization.XmlAttributeOverrides>、補強またはそれ以外の場合、オブジェクトをシリアル化する方法を制御することができます。  
  
 メンバー、<xref:System.Xml.Serialization.XmlAttributes>クラスがシリアル化を制御する属性クラスのファミリに直接対応します。 たとえば、<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>にプロパティを設定する必要があります、<xref:System.Xml.Serialization.XmlTextAttribute>に指示してフィールドまたはプロパティのシリアル化をオーバーライドすることのできる、 <xref:System.Xml.Serialization.XmlSerializer> XML テキストとしてプロパティ値をシリアル化します。 シリアル化を制御する属性の完全な一覧を参照してください、<xref:System.Xml.Serialization.XmlSerializer>します。  
  
 使用しての詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides>で、<xref:System.Xml.Serialization.XmlAttributes>クラスを参照してください[方法: XML、Stream の代替要素名を指定](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)。  
  
   
  
## Examples  
 次の例では、という名前のクラスのインスタンスをシリアル化`Orchestra`、という名前の 1 つのフィールドを含む`Instruments`の配列を返す`Instrument`オブジェクト。 という名前の 2 番目のクラス`Brass`継承、`Instrument`クラス。 例は、作成、<xref:System.Xml.Serialization.XmlAttributes>を上書きするオブジェクト、`Instrument`フィールド--を受け入れるようにフィールドを許可する`Brass`--オブジェクトし、追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトのインスタンスを<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML シリアル化の概要</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">方法 : XML ストリームの代替要素名を指定する</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">属性を使用した XML シリアル化の制御</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">XML シリアル化の例</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、という名前のクラスのインスタンスをシリアル化`Orchestra`、という名前の 1 つのフィールドを含む`Instruments`の配列を返す`Instrument`オブジェクト。 という名前の 2 番目のクラス`Brass`継承、`Instrument`クラス。 例は、作成、<xref:System.Xml.Serialization.XmlAttributes>を上書きするオブジェクト、`Instrument`フィールド--を受け入れるようにフィールドを許可する`Brass`--オブジェクトし、追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトのインスタンスを<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">XML のシリアル化を制御する属性の代替実装を提供できるクラス。</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化し、<see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法をカスタマイズします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコンス トラクターを使用して、<xref:System.Xml.Serialization.XmlAttributes>このコンス トラクターを使用するのではなく、クラス、します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> を取得または設定します。</summary>
        <value>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute>の配列を返すメンバーに適用できる<xref:System.Xml.XmlAttribute>オブジェクトに逆シリアル化します。 これにより、<xref:System.Xml.Serialization.XmlSerializer>対象のオブジェクト内の対応するメンバーがないすべての属性を逆シリアル化に逆シリアル化--ためそれらの要素は「不明」に、<xref:System.Xml.Serialization.XmlSerializer>します。 これは、機能は、ランダムなデータが XML ストリームに含まれていますが常にあることがわかっている場合、または XML ストリームが XML Web サービスによって変更されたときに便利です。  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A>プロパティでは、先のメンバーのシリアル化をオーバーライドすることができます、<xref:System.Xml.Serialization.XmlAnyAttributeAttribute>が適用されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクトのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> オブジェクトのコレクションを表す <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute>の配列を返すメンバーに適用できる<xref:System.Xml.XmlElement>オブジェクトに逆シリアル化します。 これにより、<xref:System.Xml.Serialization.XmlSerializer>対象のオブジェクト内の対応するメンバーがないすべての要素を逆シリアル化に逆シリアル化--ためそれらの要素は「不明」に、<xref:System.Xml.Serialization.XmlSerializer>します。 これは、機能は、ランダムなデータが XML ストリームに含まれていますが常にあることがわかっている場合、または XML ストリームが XML Web サービスによって変更されたときに便利です。  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>プロパティでは、これをメンバーとして機能するにはメンバーのシリアル化をオーバーライドすることができます、<xref:System.Xml.Serialization.XmlAnyElementAttribute>が適用されています。  
  
   
  
## Examples  
 次の例では、作成、新しい<xref:System.Xml.Serialization.XmlAnyElementAttribute>オブジェクトし、それを介してアクセスされるオブジェクトのコレクションに追加、<xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>プロパティ。 <xref:System.Xml.Serialization.XmlAttributes>オブジェクトに追加し、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトを作成するために使用される、<xref:System.Xml.Serialization.XmlSerializer>オブジェクト。 <xref:System.Xml.Serialization.XmlSerializer>オブジェクトを逆シリアル化または逆シリアル化するために使用します。 使用する効果を表示する、<xref:System.Xml.Serialization.XmlAnyElementAttributes>プロパティを"UnknownElements.xml"をという名前を使用して XML ドキュメントを作成、`SerializeObject`メソッドで、`Main`メソッド。 (不明) の他の要素を含める結果のドキュメントを編集します。 コメント アウト、`SerializeObject`呼び出し、`Main`メソッドへの呼び出しをコメント解除します、`DeserializeObject`メソッドで、名前と任意の不明な XML 要素の値を出力します。  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、配列を返すパブリック フィールドまたは読み取り/書き込みプロパティをシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
        <value>配列を返すパブリック フィールドまたは読み取り/書き込みプロパティを <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> でシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パブリック フィールドまたは配列を返すパブリックな読み取り/書き込みプロパティがシリアル化する 2 つの方法があります、 <xref:System.Xml.Serialization.XmlSerializer>: 既定のシリアル化とコントロールのシリアル化します。  
  
 既定のシリアル化で、メンバーに属性は適用されません。 シリアル化されるとき、配列は、メンバー名から取得した、入れ子になったシーケンスの XML 要素名を持つ XML 要素の入れ子になったシーケンスとしてシリアル化します。  
  
 シリアル化をより正確に制御するには、適用、<xref:System.Xml.Serialization.XmlArrayAttribute>フィールドまたはプロパティにします。 たとえば、変更できます生成された XML 要素名を既定値から別の名前を設定して、<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>プロパティを新しい値。  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>プロパティでは、既定のシリアル化と適用することによって制御されるシリアル化をオーバーライドすることができます、<xref:System.Xml.Serialization.XmlArrayAttribute>メンバーにします。 たとえば、生成された新しい値 (メンバーの識別子) の既定の XML 要素名を変更できます。 さらに、適用する場合、<xref:System.Xml.Serialization.XmlArrayAttribute>いずれかでオーバーライドされたメンバーに<xref:System.Xml.Serialization.XmlArrayAttribute>に割り当てられた、<xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、という名前のフィールドを含むクラスをシリアル化`Members`オブジェクトの配列を返します。 <xref:System.Xml.Serialization.XmlArrayAttribute> 、フィールドのシリアル化をオーバーライドし、対象の要素名の名前を変更するために使用`Staff`します。  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パブリック フィールドまたは読み取り/書き込みプロパティによって返された配列に挿入されている項目を <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化する方法を指定するオブジェクトのコレクションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>プロパティでは、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティによって返された配列に挿入できる派生型を指定することができます。 フィールドまたはプロパティをそのまま使用したい新しい種類ごとに、作成、<xref:System.Xml.Serialization.XmlArrayItemAttribute>オブジェクトと<xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A>に、 <xref:System.Xml.Serialization.XmlArrayItemAttributes>) によって返される、<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>プロパティ。 (新しい型は、フィールドまたはプロパティは既に承諾済みの型から派生する必要があります)。<xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトし、フィールドまたはプロパティを格納しているオブジェクトの種類と、フィールドまたはプロパティの名前を指定します。 構築、<xref:System.Xml.Serialization.XmlSerializer>で、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトを呼び出す前に<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>または<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>メソッド。  
  
   
  
## Examples  
 次の例では、という名前のフィールドを含むクラスをシリアル化`Members`オブジェクトの配列を返します。 2 つ<xref:System.Xml.Serialization.XmlArrayItemAttribute>という名前の基本クラスから派生したオブジェクトをそのまま使用するフィールドを許可するオブジェクトが作成されます`Member`します。 各オブジェクトに追加されます、<xref:System.Xml.Serialization.XmlAttributes>を通じて、<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>プロパティ。  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
        <value>パブリック フィールドまたは読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を制御する <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティに属性が適用されていない場合としてシリアル化される XML 要素。 指示することも、 <xref:System.Xml.Serialization.XmlSerializer> XML 属性を適用することで生成する、<xref:System.Xml.Serialization.XmlAttributeAttribute>フィールドまたはプロパティにします。  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>プロパティでは、既定のシリアル化と適用することによって制御されるシリアル化をオーバーライドすることができます、<xref:System.Xml.Serialization.XmlAttributeAttribute>メンバーにします。 これを行うには、作成、<xref:System.Xml.Serialization.XmlAttributeAttribute>そのプロパティを設定し、(など<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>)。 新しいオブジェクトを割り当てます、<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。 追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトし、フィールドまたはプロパティを格納しているオブジェクトの種類と、フィールドまたはプロパティの名前を指定します。 最後に、作成、<xref:System.Xml.Serialization.XmlSerializer>を使用して、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトと呼び出し、<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>または<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>メソッド。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`という名前のプロパティを格納している`GroupName`、`GroupName`プロパティが XML 属性としてシリアル化します。 例は、作成、<xref:System.Xml.Serialization.XmlAttributeOverrides>と<xref:System.Xml.Serialization.XmlAttributes>フィールドの既定のシリアル化をオーバーライドするオブジェクト。 作成し、<xref:System.Xml.Serialization.XmlAttributeAttribute>具体的にはオーバーライドが、プロパティと、オブジェクトに設定されて、<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>プロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトに追加されます、<xref:System.Xml.Serialization.XmlAttributeOverrides>指定されているオーバーライドされたメンバーの名前を持つオブジェクト。 最後に、<xref:System.Xml.Serialization.XmlSerializer>が構築され、使用して返される、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数の選択肢を区別できるようにするオブジェクトを取得または設定します。</summary>
        <value>
          <see langword="xsi:choice" /> 要素としてシリアル化されているクラス メンバーに適用できる <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 要素または XML 属性の既定値を取得または設定します。</summary>
        <value>XML 要素または XML 属性の既定値を表す <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 要素または XML 属性の既定値を指定するには適用することで、<xref:System.ComponentModel.DefaultValueAttribute>メンバーにします。 値を適用した結果を確認するには、アプリケーション DLL または実行可能ファイルをコンパイルし、生成されたファイルを XML スキーマ定義ツール (XSD.exe) を引数として渡します。 XML スキーマ ドキュメントで、既定値が割り当てられている、`default`属性。 次の例では、既定値は、 \<Animal > 要素は、「犬」。  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 既定値を上書きするには、作成、<xref:System.Object>に割り当てると、<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>します。  
  
 フィールドまたはプロパティに割り当てられた値がそのフィールドまたはプロパティの既定値に等しい場合、 <xref:System.Xml.Serialization.XmlSerializer> XML インスタンスに値をシリアル化されません。 代入された値は、XML スキーマから回復できるためです。 つまり、フィールドまたはプロパティの設定を既定値には、まったく設定しないのと同じです。 同様に、フィールドまたはプロパティの値が設定されていない場合、<xref:System.Xml.Serialization.XmlSerializer>は既定値は、スキーマで見つかった。 両方の場合、(既定のプロパティを設定またはまったく設定しない)、XML ドキュメント インスタンスでは、プロパティの値は含まれません。  
  
 スキーマではなくクラスのコンス トラクターを使用すると、既定値を割り当てます。 スキーマからクラスを生成する Xsd.exe を使用する場合、コメント アウトするか、すべての [System.ComponentModel.DefaultValueAttribute("myFieldName")] 属性をクラス ファイルから削除することができます。  
  
   
  
## Examples  
 次の例は、という名前のクラスを示しています。 `Pet` "Dog"に設定の既定値を持つフィールドを格納しています。 例でも作成ただし、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト、およびセットの<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>プロパティを新しい既定値 ("Cat")。 これには、元の既定値がオーバーライドされます。 したがって、フィールドの値は"Cat"に設定されている場合、<xref:System.Xml.Serialization.XmlSerializer>既定値として扱われます、シリアル化できません。 その他の値に設定されている場合、<xref:System.Xml.Serialization.XmlSerializer>値をシリアル化します。  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み取り/書き込みプロパティを XML 要素としてシリアル化する方法を指定する、オブジェクトのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 要素としてシリアル化オーバーライドされたメンバーごとに、新しいする必要があります追加<xref:System.Xml.Serialization.XmlElementAttribute>を<xref:System.Xml.Serialization.XmlElementAttributes>呼び出すことによって、<xref:System.Xml.Serialization.XmlElementAttributes.Add%2A>メソッド。 既定で、<xref:System.Xml.Serialization.XmlElementAttributes>オブジェクトを作成しに割り当てられている、<xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、シリアル化、`Transportation`という名前の 1 つのフィールドを保持しているクラス`Vehicles`を返す、<xref:System.Collections.ArrayList>します。 2 つの例が適用される<xref:System.Xml.Serialization.XmlElementAttribute>属性を`Vehicles`フィールド。 この例では、2 つ作成されます<xref:System.Xml.Serialization.XmlElementAttribute>オブジェクトし、それらを追加、<xref:System.Xml.Serialization.XmlElementAttributes>のコレクション、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。 異なる型のオブジェクトを受け入れるように配列を許可する、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトに追加されます、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> が列挙体メンバーをシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オーバーライドする識別子ごとに、作成する必要があります、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトし、設定、<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>プロパティを<xref:System.Xml.Serialization.XmlEnumAttribute>識別子をオーバーライドします。 追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトし、両方を指定、<xref:System.Type>の列挙体、およびオーバーライドされたメンバー名を含むクラスです。  
  
   
  
## Examples  
 次の例では、という名前の 2 つのクラスをシリアル化`Food`と`FoodType`します。 `FoodType`クラスがオーバーライドする 2 つの列挙体に含まれ、列挙ごとに、例では、作成、<xref:System.Xml.Serialization.XmlEnumAttribute>オブジェクトに割り当てます、<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。 例を追加し、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトを作成するために使用、<xref:System.Xml.Serialization.XmlSerializer>します。  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み書き可能なパブリック プロパティをシリアル化するかどうかを指定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> がそのフィールドまたはプロパティをシリアル化しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、すべてのパブリック フィールドとパブリックの読み取り/書き込みプロパティはシリアル化によって、<xref:System.Xml.Serialization.XmlSerializer>します。 つまり、各パブリック フィールドまたはプロパティの値は XML 要素または XML ドキュメント インスタンスの XML 属性として永続化します。  
  
 フィールドまたはプロパティの既定のシリアル化を無効にするには、作成、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトし、設定、<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>プロパティを`true`します。 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトし、フィールドまたはプロパティを無視するを含むオブジェクトの型とフィールドを無視するプロパティの名前を指定します。  
  
 場合、<xref:System.Xml.Serialization.XmlIgnoreAttribute>が適用されるフィールドまたはプロパティでは、フィールドまたはプロパティは無視されます。 作成してその動作をオーバーライドするただし、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト、設定、<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>プロパティを`false`に追加すること、<xref:System.Xml.Serialization.XmlAttributeOverrides>フィールドまたはプロパティを格納しているオブジェクトの種類との名前を指定するオブジェクト、フィールドまたはプロパティ。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`、という名前のメンバーを含む`Comment`先、<xref:System.Xml.Serialization.XmlIgnoreAttribute>が適用されます。 例は、作成、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト、およびセット、<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>プロパティを`false`、オーバーライドするため、<xref:System.Xml.Serialization.XmlIgnoreAttribute>します。  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> オブジェクトを返すメンバーを格納するオブジェクトがオーバーライドされたときに、すべての名前空間宣言を保持するかどうかを示す値を取得または設定します。</summary>
        <value>名前空間宣言を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例には、という名前のクラスが含まれています。`Student`します。 クラスには、という名前のメンバーが含まれています。`MyNamespaces`を返す、<xref:System.Xml.Serialization.XmlSerializerNamespaces>オブジェクト。 例は、作成、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトのインスタンスに追加される、<xref:System.Xml.Serialization.XmlAttributeOverrides>クラス。 <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A>プロパティに設定されて`true`、(objectclass = *)、<xref:System.Xml.Serialization.XmlSerializer>名前空間を保持するためにときのシリアル化、`Student`オブジェクトがオーバーライドされます。  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラスを XML ルート要素としてシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
        <value>XML ルート要素として属性が設定されているクラスをオーバーライドする <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、作成、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト、および<xref:System.Xml.Serialization.XmlRootAttribute>オブジェクト。 例では、代入、<xref:System.Xml.Serialization.XmlRootAttribute>を<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト、および追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。 例の最後に、取得、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを渡すことによって、<xref:System.Type>にシリアル化されたクラスの<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。 (この例で、<xref:System.Type>は`Group`)。  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> に対してパブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML テキストとしてシリアル化するよう指示するオブジェクトを取得または設定します。</summary>
        <value>パブリック プロパティまたはフィールドの既定のシリアル化をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティはシリアル化で XML 要素として、<xref:System.Xml.Serialization.XmlSerializer>します。 ただしが強制的にフィールドまたはプロパティを適用することで、XML テキストとしてシリアル化する、<xref:System.Xml.Serialization.XmlTextAttribute>フィールドまたはプロパティにします。  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlTextAttribute>フィールドまたは配列を返すプロパティに適用することはできません。  
  
 フィールドまたはプロパティ (つまり、配列を返さない) の既定のシリアル化を無効にするには、作成、<xref:System.Xml.Serialization.XmlTextAttribute>に割り当てると、<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。 追加、<xref:System.Xml.Serialization.XmlAttributes>オブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトし、オーバーライドされたフィールドまたはプロパティを含むオブジェクトの型とオーバーライドされたフィールドまたはプロパティの名前を指定します。  
  
   
  
## Examples  
 次の例では、という名前のクラスをシリアル化`Group`、という名前のフィールドを含む`Comment`します。 既定値を上書きするようにして、 <xref:System.Xml.Serialization.XmlSerializer> 、フィールドをシリアル化します。 例は、作成、<xref:System.Xml.Serialization.XmlAttributeOverrides>と<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。 作成し、<xref:System.Xml.Serialization.XmlTextAttribute>オブジェクトに割り当てます、<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>プロパティを追加し、 <xref:System.Xml.Serialization.XmlAttributes> (XML テキストとしてシリアル化するフィールドの名前) を持つオブジェクトを<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。 この例の最後に作成、<xref:System.Xml.Serialization.XmlSerializer>を使用して、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト。  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> が適用されているクラスを <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> がシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
        <value>クラス宣言に適用された <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTypeAttribute>で型をシリアル化する方法の制御に使用できる、<xref:System.Xml.Serialization.XmlSerializer>します。 既定では、型をシリアル化すると場合、によってなど、 <xref:System.Xml.Serialization.XmlSerializer> XML 要素名とクラス名を使用します。 作成して、<xref:System.Xml.Serialization.XmlTypeAttribute>で、設定、<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>プロパティと、作成、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクト、XML 要素名を変更することができます。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Xml.Serialization.XmlTypeAttribute>オブジェクトを代入して、<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>