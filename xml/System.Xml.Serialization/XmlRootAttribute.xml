<Type Name="XmlRootAttribute" FullName="System.Xml.Serialization.XmlRootAttribute">
  <TypeSignature Language="C#" Value="public class XmlRootAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlRootAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlRootAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlRootAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlRootAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18599-101">属性ターゲットを XML ルート要素として XML シリアル化する方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="18599-101">Controls XML serialization of the attribute target as an XML root element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18599-102"><xref:System.Xml.Serialization.XmlRootAttribute>を制御する属性のファミリに属するどの<xref:System.Xml.Serialization.XmlSerializer>オブジェクトを逆シリアル化またはシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="18599-102">The <xref:System.Xml.Serialization.XmlRootAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="18599-103">類似する属性の一覧については、次を参照してください。[コントロール XML シリアル化する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)です。</span><span class="sxs-lookup"><span data-stu-id="18599-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="18599-104">適用することができます、<xref:System.Xml.Serialization.XmlRootAttribute>クラス、構造体、列挙型、またはインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="18599-104">You can apply the <xref:System.Xml.Serialization.XmlRootAttribute> to a class, structure, enumeration, or interface.</span></span> <span data-ttu-id="18599-105">XML Web サービス メソッドの戻り値に属性を適用することもできます。</span><span class="sxs-lookup"><span data-stu-id="18599-105">You can also apply the attribute to the return value of an XML Web service method.</span></span>  
  
 <span data-ttu-id="18599-106">すべての XML ドキュメントには、その他のすべての要素を含む単一のルート要素が必要です。</span><span class="sxs-lookup"><span data-stu-id="18599-106">Every XML document must have a single root element that contains all the other elements.</span></span> <span data-ttu-id="18599-107"><xref:System.Xml.Serialization.XmlRootAttribute>を制御できますが、どのように<xref:System.Xml.Serialization.XmlSerializer>特定のプロパティを設定して、ルート要素が生成されます。</span><span class="sxs-lookup"><span data-stu-id="18599-107">The <xref:System.Xml.Serialization.XmlRootAttribute> allows you to control how the <xref:System.Xml.Serialization.XmlSerializer> generates the root element by setting certain properties.</span></span> <span data-ttu-id="18599-108">たとえば、設定して、生成される XML 要素の名前を指定、<xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="18599-108">For example, specify the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="18599-109">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="18599-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18599-110">語を使用できます`XmlRoot`時間が長いではなく、コードで<xref:System.Xml.Serialization.XmlRootAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="18599-110">You can use the word `XmlRoot` in your code instead of the longer <xref:System.Xml.Serialization.XmlRootAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18599-111">次の例に適用されます、<xref:System.Xml.Serialization.XmlRootAttribute>クラスにします。</span><span class="sxs-lookup"><span data-stu-id="18599-111">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class.</span></span> <span data-ttu-id="18599-112">属性が要素名、名前空間を指定するかどうかと、要素を修飾するかどうか、`xsi:nil`属性が、クラスに設定されている場合に生成される`null`です。</span><span class="sxs-lookup"><span data-stu-id="18599-112">The attribute specifies the element name, namespace, and whether the element is qualified, and whether the `xsi:nil` attribute is generated if the class is set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18599-113"><see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスの新しいインスタンスを初期化し、そのクラス名を XML ルート要素の名前として使用します。</span><span class="sxs-lookup"><span data-stu-id="18599-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and uses the class name as the name of the XML root element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18599-114"><see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18599-114">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="18599-115">次の例のインスタンスを作成する、<xref:System.Xml.Serialization.XmlRootAttribute>に割り当てます、<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>のプロパティ、<xref:System.Xml.Serialization.XmlAttributes>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="18599-115">The following example creates an instance of an <xref:System.Xml.Serialization.XmlRootAttribute> and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="18599-116">ときに、<xref:System.Xml.Serialization.XmlSerializer>シリアル化、`MyClass`オブジェクトを使用して、<xref:System.Xml.Serialization.XmlRootAttribute>を既定のルート要素を上書きするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="18599-116">When the <xref:System.Xml.Serialization.XmlSerializer> serializes the `MyClass` object, it uses the <xref:System.Xml.Serialization.XmlRootAttribute> object to override the default root element.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="18599-117">XML ルート要素の名前。</span><span class="sxs-lookup"><span data-stu-id="18599-117">The name of the XML root element.</span></span></param>
        <summary><span data-ttu-id="18599-118"><see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスの新しいインスタンスを初期化し、XML ルート要素の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="18599-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and specifies the name of the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="18599-119">次の例は、XmlRootAttribute のインスタンスを作成し、「生徒」という名前のクラスのインスタンスのシリアル化のオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="18599-119">The following example creates an instance of the XmlRootAttribute and uses it to override the serialization of an instance of a class named "Student".</span></span>  
  
 [!code-cpp[XMLRootAttribute_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CPP/xmlrootattribute_constructor.cpp#1)]
 [!code-csharp[XMLRootAttribute_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CS/xmlrootattribute_constructor.cs#1)]
 [!code-vb[XMLRootAttribute_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_Constructor/VB/xmlrootattribute_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18599-120">XML ルート要素の XSD データ型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-120">Gets or sets the XSD data type of the XML root element.</span></span></summary>
        <value><span data-ttu-id="18599-121">W3C (World Wide Web Consortium) (www.w3.org ) のドキュメント『XML Schema: DataTypes』で定義されている XSD (XML スキーマ ドキュメント) データ型。</span><span class="sxs-lookup"><span data-stu-id="18599-121">An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18599-122">次の表は、.NET の同等の XSD 単純なデータ型を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="18599-122">The following table lists the XSD simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="18599-123">Xsd`base64Binary`と`hexBinary`データ型の配列を使用して<xref:System.Byte>構造体、および適用、<xref:System.Xml.Serialization.XmlRootAttribute>で、<xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A>プロパティを"base64Binary"または"hexBinary"、適切に設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-123">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="18599-124">Xsd`time`と`date`データ型を使用して、<xref:System.DateTime>入力し、適用、<xref:System.Xml.Serialization.XmlRootAttribute>で、 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> "date"または"time"に設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-124">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="18599-125">文字列にマップされているすべての XSD 型の適用、<xref:System.Xml.Serialization.XmlRootAttribute>でその<xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A>プロパティを XSD 型に設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-125">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlRootAttribute> with its <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="18599-126">ただし、メンバーのスキーマだけであり、シリアル化形式は変わりません。</span><span class="sxs-lookup"><span data-stu-id="18599-126">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18599-127">プロパティは大文字小文字を区別、XSD データ型の 1 つに正確に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="18599-127">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18599-128">要素は XML としてバイナリ データを渡すことは、XML 属性として渡すことよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="18599-128">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="18599-129">XML データ型の詳細については、「XML スキーマ パート 2:: データ型」をという名前の World Wide Web Consortium) (www.w3.org) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="18599-129">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="18599-130">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="18599-130">XSD data type</span></span>|<span data-ttu-id="18599-131">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="18599-131">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="18599-132">anyURI</span><span class="sxs-lookup"><span data-stu-id="18599-132">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-133">base64Binary</span><span class="sxs-lookup"><span data-stu-id="18599-133">base64Binary</span></span>|<span data-ttu-id="18599-134">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="18599-134">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="18599-135">boolean</span><span class="sxs-lookup"><span data-stu-id="18599-135">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="18599-136">byte</span><span class="sxs-lookup"><span data-stu-id="18599-136">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="18599-137">date</span><span class="sxs-lookup"><span data-stu-id="18599-137">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="18599-138">dateTime</span><span class="sxs-lookup"><span data-stu-id="18599-138">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="18599-139">decimal</span><span class="sxs-lookup"><span data-stu-id="18599-139">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="18599-140">double</span><span class="sxs-lookup"><span data-stu-id="18599-140">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="18599-141">ENTITY</span><span class="sxs-lookup"><span data-stu-id="18599-141">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-142">エンティティ</span><span class="sxs-lookup"><span data-stu-id="18599-142">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-143">float</span><span class="sxs-lookup"><span data-stu-id="18599-143">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="18599-144">gDay</span><span class="sxs-lookup"><span data-stu-id="18599-144">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-145">gMonth</span><span class="sxs-lookup"><span data-stu-id="18599-145">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-146">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="18599-146">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-147">gYear</span><span class="sxs-lookup"><span data-stu-id="18599-147">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-148">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="18599-148">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-149">hexBinary</span><span class="sxs-lookup"><span data-stu-id="18599-149">hexBinary</span></span>|<span data-ttu-id="18599-150">配列<xref:System.Byte>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="18599-150">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="18599-151">ID</span><span class="sxs-lookup"><span data-stu-id="18599-151">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-152">IDREF</span><span class="sxs-lookup"><span data-stu-id="18599-152">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-153">IDREFS</span><span class="sxs-lookup"><span data-stu-id="18599-153">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-154">int</span><span class="sxs-lookup"><span data-stu-id="18599-154">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="18599-155">整数</span><span class="sxs-lookup"><span data-stu-id="18599-155">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-156">language</span><span class="sxs-lookup"><span data-stu-id="18599-156">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-157">long</span><span class="sxs-lookup"><span data-stu-id="18599-157">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="18599-158">name</span><span class="sxs-lookup"><span data-stu-id="18599-158">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-159">NCName</span><span class="sxs-lookup"><span data-stu-id="18599-159">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-160">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="18599-160">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-161">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="18599-161">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-162">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="18599-162">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-163">normalizedString</span><span class="sxs-lookup"><span data-stu-id="18599-163">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-164">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="18599-164">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-165">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="18599-165">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-166">NOTATION</span><span class="sxs-lookup"><span data-stu-id="18599-166">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-167">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="18599-167">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-168">QName</span><span class="sxs-lookup"><span data-stu-id="18599-168">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="18599-169">recurringDate</span><span class="sxs-lookup"><span data-stu-id="18599-169">recurringDate</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-170">duration</span><span class="sxs-lookup"><span data-stu-id="18599-170">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-171">string</span><span class="sxs-lookup"><span data-stu-id="18599-171">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-172">short</span><span class="sxs-lookup"><span data-stu-id="18599-172">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="18599-173">時間</span><span class="sxs-lookup"><span data-stu-id="18599-173">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="18599-174">token</span><span class="sxs-lookup"><span data-stu-id="18599-174">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="18599-175">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="18599-175">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="18599-176">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="18599-176">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="18599-177">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="18599-177">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="18599-178">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="18599-178">unsignedShort</span></span>|<xref:System.UInt16>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18599-179"><see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> メソッドおよび <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> メソッドによって生成および認識される XML 要素名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-179">Gets or sets the name of the XML element that is generated and recognized by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class's <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> and <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> methods, respectively.</span></span></summary>
        <value><span data-ttu-id="18599-180">XML ドキュメント インスタンスで生成および認識された XML ルート要素名。</span><span class="sxs-lookup"><span data-stu-id="18599-180">The name of the XML root element that is generated and recognized in an XML-document instance.</span></span> <span data-ttu-id="18599-181">既定値は、シリアル化されたクラスの名前です。</span><span class="sxs-lookup"><span data-stu-id="18599-181">The default is the name of the serialized class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18599-182">指定して、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>する場合は、クラス名と異なるに生成された XML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="18599-182">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the class name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18599-183">次の例のインスタンスを作成する、<xref:System.Xml.Serialization.XmlRootAttribute>クラスとセット、<xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A>プロパティを新しい値。</span><span class="sxs-lookup"><span data-stu-id="18599-183">The following example creates an instance of the <xref:System.Xml.Serialization.XmlRootAttribute> class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property to a new value.</span></span> <span data-ttu-id="18599-184">作成する、オブジェクトを使用して、<xref:System.Xml.Serialization.XmlAttributeOverrides>オブジェクトを使用してオブジェクトのシリアル化を上書きします。</span><span class="sxs-lookup"><span data-stu-id="18599-184">The object is then used to create an <xref:System.Xml.Serialization.XmlAttributeOverrides> object used to override the serialization of an object.</span></span>  
  
 [!code-cpp[XMLRootAttribute_ElementName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CPP/xmlrootattribute_elementname.cpp#1)]
 [!code-csharp[XMLRootAttribute_ElementName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CS/xmlrootattribute_elementname.cs#1)]
 [!code-vb[XMLRootAttribute_ElementName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_ElementName/VB/xmlrootattribute_elementname.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18599-185"><see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="null" /> に設定されているメンバーを、<see langword="xsi:nil" /> に設定されている <see langword="true" /> 属性にシリアル化するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-185">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> into the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value>
          <span data-ttu-id="18599-186"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="18599-186"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18599-187">構造の XML スキーマの仕様では、要素のコンテンツが不足していることを明示的に通知する、XML ドキュメントを許可します。</span><span class="sxs-lookup"><span data-stu-id="18599-187">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="18599-188">このような要素には、属性が含まれています。 `xsi:nil` 'éý'`true`です。</span><span class="sxs-lookup"><span data-stu-id="18599-188">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="18599-189">詳細については、次を参照してください。、http://www.w3.org/TR/xmlschema-1/という名前の仕様`XML Schema Part 1: Structures`です。</span><span class="sxs-lookup"><span data-stu-id="18599-189">For more information, see the http://www.w3.org/TR/xmlschema-1/ specification named `XML Schema Part 1: Structures`.</span></span>  
  
 <span data-ttu-id="18599-190">場合、<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>プロパティに設定されている`true`、`xsi:nil`次の XML に示すように属性を生成します。</span><span class="sxs-lookup"><span data-stu-id="18599-190">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated as shown in the following XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:nil="true" />  
```  
  
 <span data-ttu-id="18599-191">場合、<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>プロパティは`false`、次のコードに示すように、空の要素を作成します。</span><span class="sxs-lookup"><span data-stu-id="18599-191">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is `false`, an empty element is created as shown in the following code:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" />  
```  
  
   
  
## Examples  
 <span data-ttu-id="18599-192">次の例は、という名前のクラスをシリアル化`Group`です。</span><span class="sxs-lookup"><span data-stu-id="18599-192">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="18599-193">例では、適用、<xref:System.Xml.Serialization.XmlRootAttribute>クラス、およびセットを<xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="18599-193">The example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to the class, and sets the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18599-194">XML ルート要素の名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18599-194">Gets or sets the namespace for the XML root element.</span></span></summary>
        <value><span data-ttu-id="18599-195">XML 要素の名前空間。</span><span class="sxs-lookup"><span data-stu-id="18599-195">The namespace for the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18599-196"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>という名前の World Wide Web Consortium) (www.w3.org) 仕様に準拠しているプロパティ`Namespaces in XML`です。</span><span class="sxs-lookup"><span data-stu-id="18599-196">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification named `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="18599-197">XML ドキュメントでプレフィックスが指定された名前空間を作成するには、作成、<xref:System.Xml.Serialization.XmlSerializerNamespaces>プレフィックスと名前空間のすべてのペアを含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="18599-197">To create prefixed namespaces in the XML document, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all the prefix-namespace pairs.</span></span> <span data-ttu-id="18599-198">名前空間ごとに設定する<xref:System.Xml.Serialization.XmlArrayAttribute>に含まれる必要があります、<xref:System.Xml.Serialization.XmlSerializerNamespaces>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="18599-198">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="18599-199">ときに、<xref:System.Xml.Serialization.XmlSerializer>ドキュメントを生成配列項目ごとに、要素名を正しくプレフィックスします。</span><span class="sxs-lookup"><span data-stu-id="18599-199">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18599-200">次の例に適用されます、<xref:System.Xml.Serialization.XmlRootAttribute>クラスとセットを<xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="18599-200">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      </Docs>
    </Member>
  </Members>
</Type>