<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07f472e239d440bb029fc42deaa18068f7a22d4d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f5045-101">XML シリアル化および逆シリアル化のカスタム書式を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5045-101">Provides custom formatting for XML serialization and deserialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5045-102">このインターフェイスを実装する 2 つの理由があります。</span><span class="sxs-lookup"><span data-stu-id="f5045-102">There are two reasons to implement this interface.</span></span> <span data-ttu-id="f5045-103">1 つ目は、オブジェクトをシリアル化またはによって逆シリアル化する方法を制御する、<xref:System.Xml.Serialization.XmlSerializer>です。</span><span class="sxs-lookup"><span data-stu-id="f5045-103">The first is to control how your object is serialized or deserialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="f5045-104">など、大きなデータ セットをバッファー処理ではなくバイトにデータをチャンクでき、またデータは Base64 エンコードを使用してエンコードされたときに発生するが増加しないようにできます。</span><span class="sxs-lookup"><span data-stu-id="f5045-104">For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</span></span> <span data-ttu-id="f5045-105">シリアル化を制御するには、実装、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>と<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>コントロールするメソッド、<xref:System.Xml.XmlReader>と<xref:System.Xml.XmlWriter>クラスの XML を読み書きするために使用します。</span><span class="sxs-lookup"><span data-stu-id="f5045-105">To control the serialization, implement the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> and <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> methods to control the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes used to read and write the XML.</span></span> <span data-ttu-id="f5045-106">この例は、次を参照してください。[する方法: シリアル化データのチャンク](~/docs/standard/serialization/how-to-chunk-serialized-data.md)です。</span><span class="sxs-lookup"><span data-stu-id="f5045-106">For an example of this, see [How to: Chunk Serialized Data](~/docs/standard/serialization/how-to-chunk-serialized-data.md).</span></span>  
  
 <span data-ttu-id="f5045-107">2 つ目の理由、スキーマを制御できるためです。</span><span class="sxs-lookup"><span data-stu-id="f5045-107">The second reason is to be able to control the schema.</span></span> <span data-ttu-id="f5045-108">これを有効にするに適用する必要があります、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>シリアル化する型、およびスキーマを返す静的メンバーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="f5045-108">To enable this, you must apply the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to the serializable type, and specify the name of the static member that returns the schema.</span></span> <span data-ttu-id="f5045-109">参照してください、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>例についてはします。</span><span class="sxs-lookup"><span data-stu-id="f5045-109">See the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> for an example.</span></span>  
  
 <span data-ttu-id="f5045-110">インターフェイスを実装するクラスには、パラメーターなしのコンス トラクターが必要です。</span><span class="sxs-lookup"><span data-stu-id="f5045-110">A class that implements the interface must have a parameterless constructor.</span></span> <span data-ttu-id="f5045-111">要件は、これは、<xref:System.Xml.Serialization.XmlSerializer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f5045-111">This is a requirement of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5045-112">次のコード例の実装を示しています、<xref:System.Xml.Serialization.IXmlSerializable>プライベート フィールドをシリアル化するインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f5045-112">The following example code shows an implementation of the <xref:System.Xml.Serialization.IXmlSerializable> interface that serializes a private field.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5045-113">このメソッドは予約されているため、使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-113">This method is reserved and should not be used.</span>
          </span>
          <span data-ttu-id="f5045-114">
            <see langword="IXmlSerializable" /> インターフェイスを実装する場合、このメソッドから <see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返す必要があります。また、カスタム スキーマの指定が要求されている場合は、このクラスに <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> を適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-114">When implementing the <see langword="IXmlSerializable" /> interface, you should return <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5045-115">
            <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドによって生成され <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> メソッドによって処理されるオブジェクトの XML 表現を記述する <see cref="T:System.Xml.Schema.XmlSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-115">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5045-116">オブジェクトを逆シリアル化またはシリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer>クラスでは、XML の検証は実行されません。</span><span class="sxs-lookup"><span data-stu-id="f5045-116">When serializing or deserializing an object, the <xref:System.Xml.Serialization.XmlSerializer> class does not perform XML validation.</span></span> <span data-ttu-id="f5045-117">このため、多くの場合も安全ですなどを返すことによって、このメソッドの単純な実装を提供することによって、スキーマ情報を省略する`null`(`Nothing` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="f5045-117">For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning `null` (`Nothing` in Visual Basic).</span></span>  
  
 <span data-ttu-id="f5045-118">使用する必要がありますスキーマ情報を提供することが必要な場合、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="f5045-118">If providing schema information is necessary, you should use the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute.</span></span> <span data-ttu-id="f5045-119">`GetSchema`メソッドが返すまだ`null`(または`Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="f5045-119">The `GetSchema` method should still return `null` (or `Nothing`).</span></span>  
  
 <span data-ttu-id="f5045-120">いくつか[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]を実装するレガシのカスタム型と同じように、型、`IXmlSerializable`インターフェイスを使用している可能性`GetSchema`の代わりに`XmlSchemaProvider`です。</span><span class="sxs-lookup"><span data-stu-id="f5045-120">Some [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types as well as legacy custom types implementing the `IXmlSerializable` interface may be using `GetSchema` instead of `XmlSchemaProvider`.</span></span> <span data-ttu-id="f5045-121">この場合、メソッドがによって生成されたオブジェクトの XML 表現を記述する正確な XML スキーマを返します、<xref:System.Data.DataSet.WriteXml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f5045-121">In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f5045-122">オブジェクトの逆シリアル化元である <see cref="T:System.Xml.XmlReader" /> ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-122">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5045-123">オブジェクトの XML 表現からオブジェクトを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-123">Generates an object from its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5045-124"><xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>メソッドによって書き込まれた情報を使用して、オブジェクトを構築する必要があります、<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f5045-124">The <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method must reconstitute your object using the information that was written by the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f5045-125">このメソッドが呼び出されると、リーダーは、型の情報をラップする開始タグ上。</span><span class="sxs-lookup"><span data-stu-id="f5045-125">When this method is called, the reader is positioned on the start tag that wraps the information for your type.</span></span> <span data-ttu-id="f5045-126">つまり、開始タグ上で直接、シリアル化されたオブジェクトの先頭を示すです。</span><span class="sxs-lookup"><span data-stu-id="f5045-126">That is, directly on the start tag that indicates the beginning of a serialized object.</span></span> <span data-ttu-id="f5045-127">このメソッドが戻るときにする必要がありますが要素全体を読み取る最初から最後まで、すべての内容を含むです。</span><span class="sxs-lookup"><span data-stu-id="f5045-127">When this method returns, it must have read the entire element from beginning to end, including all of its contents.</span></span> <span data-ttu-id="f5045-128">異なり、<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>メソッド、フレームワークがラッパー要素を自動的に処理されません。</span><span class="sxs-lookup"><span data-stu-id="f5045-128">Unlike the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method, the framework does not handle the wrapper element automatically.</span></span> <span data-ttu-id="f5045-129">実装には、これを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f5045-129">Your implementation must do so.</span></span> <span data-ttu-id="f5045-130">これらの配置ルールに従わなかった場合と、予期しない実行時例外または破損したデータを生成するコードが生じる場合があります。</span><span class="sxs-lookup"><span data-stu-id="f5045-130">Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</span></span>  
  
 <span data-ttu-id="f5045-131">このメソッドを実装する場合、可能性を考慮する必要があります悪意のあるユーザーが無効にするか、それ以外の場合、アプリケーションの動作を変更するために適切な形式が無効な XML 表現を提供可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f5045-131">When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5045-132">次の例の実装を示しています、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f5045-132">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 <span data-ttu-id="f5045-133">次の例では、使用、<xref:System.Xml.Serialization.XmlSerializer>このオブジェクトを逆シリアル化するクラス。</span><span class="sxs-lookup"><span data-stu-id="f5045-133">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f5045-134">オブジェクトのシリアル化先の <see cref="T:System.Xml.XmlWriter" /> ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-134">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5045-135">オブジェクトを XML 表現に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5045-135">Converts an object into its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5045-136"><xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>実装を提供するがオブジェクトの XML 表現を記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f5045-136">The <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementation you provide should write out the XML representation of the object.</span></span> <span data-ttu-id="f5045-137">フレームワークは、ラッパー要素を書き込み、その開始後に、XML ライターを配置します。</span><span class="sxs-lookup"><span data-stu-id="f5045-137">The framework writes a wrapper element and positions the XML writer after its start.</span></span> <span data-ttu-id="f5045-138">実装には、子要素を含む、その内容を書き込むことがあります。</span><span class="sxs-lookup"><span data-stu-id="f5045-138">Your implementation may write its contents, including child elements.</span></span> <span data-ttu-id="f5045-139">フレームワークでは、ラッパー要素が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="f5045-139">The framework then closes the wrapper element.</span></span>  
  
 <span data-ttu-id="f5045-140">ための十分な情報を書き込む、<xref:System.Xml.XmlWriter>ストリームを許可する、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>メソッド、オブジェクトを再構成します。</span><span class="sxs-lookup"><span data-stu-id="f5045-140">Write sufficient information to the <xref:System.Xml.XmlWriter> stream to allow the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method to reconstitute your object.</span></span>  
  
 <span data-ttu-id="f5045-141">たとえば、オブジェクトの状態には、配列変数が含まれている場合、配列の長さを書き込むことを確認するまたはオブジェクトが再構成時点を確認する値の数を知ることは、配列の値を説明する要素を格納する親要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="f5045-141">For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5045-142">次の例の実装を示しています、<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f5045-142">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 <span data-ttu-id="f5045-143">次の例では、使用、<xref:System.Xml.Serialization.XmlSerializer>このオブジェクトを逆シリアル化するクラス。</span><span class="sxs-lookup"><span data-stu-id="f5045-143">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>