<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IXmlSerializable.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58155c578ca3a365629ee4d705a95789ebfd67428.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8155c578ca3a365629ee4d705a95789ebfd67428</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>Provides custom formatting for XML serialization and deserialization.</source>
          <target state="translated">XML シリアル化および逆シリアル化のカスタム書式を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>There are two reasons to implement this interface.</source>
          <target state="translated">このインターフェイスを実装する 2 つの理由があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The first is to control how your object is serialized or deserialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">1 つ目は、オブジェクトをシリアル化またはによって逆シリアル化する方法を制御する、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</source>
          <target state="translated">など、大きなデータ セットをバッファー処理ではなくバイトにデータをチャンクでき、またデータは Base64 エンコードを使用してエンコードされたときに発生するが増加しないようにできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>To control the serialization, implement the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> methods to control the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> classes used to read and write the XML.</source>
          <target state="translated">シリアル化を制御するには、実装、<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph>コントロールするメソッド、<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>と<ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph>クラスの XML を読み書きするために使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>For an example of this, see <bpt id="p1">[</bpt>How to: Chunk Serialized Data<ept id="p1">](~/docs/standard/serialization/how-to-chunk-serialized-data.md)</ept>.</source>
          <target state="translated">この例は、次を参照してください。<bpt id="p1">[</bpt>する方法: シリアル化データのチャンク<ept id="p1">](~/docs/standard/serialization/how-to-chunk-serialized-data.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The second reason is to be able to control the schema.</source>
          <target state="translated">2 つ目の理由、スキーマを制御できるためです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>To enable this, you must apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> to the serializable type, and specify the name of the static member that returns the schema.</source>
          <target state="translated">これを有効にするに適用する必要があります、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph>シリアル化する型、およびスキーマを返す静的メンバーの名前を指定します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> for an example.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph>例についてはします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>A class that implements the interface must have a parameterless constructor.</source>
          <target state="translated">インターフェイスを実装するクラスには、パラメーターなしのコンス トラクターが必要です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>This is a requirement of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.</source>
          <target state="translated">要件は、これは、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The following example code shows an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface that serializes a private field.</source>
          <target state="translated">次のコード例の実装を示しています、<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>プライベート フィールドをシリアル化するインターフェイスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>This method is reserved and should not be used.</source>
          <target state="translated">このメソッドは予約されているため、使用できません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>When implementing the <ph id="ph1">&lt;see langword="IXmlSerializable" /&gt;</ph> interface, you should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <ph id="ph4">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph> to the class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IXmlSerializable" /&gt;</ph> インターフェイスを実装する場合、このメソッドから <ph id="ph2">&lt;see langword="null" /&gt;</ph> (Visual Basic では <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>) を返す必要があります。また、カスタム スキーマの指定が要求されている場合は、このクラスに <ph id="ph4">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph> を適用します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> メソッドによって生成され <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> メソッドによって処理されるオブジェクトの XML 表現を記述する <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>When serializing or deserializing an object, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class does not perform XML validation.</source>
          <target state="translated">オブジェクトを逆シリアル化またはシリアル化するときに、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>クラスでは、XML の検証は実行されません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">このため、多くの場合も安全ですなどを返すことによって、このメソッドの単純な実装を提供することによって、スキーマ情報を省略する<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>If providing schema information is necessary, you should use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> attribute.</source>
          <target state="translated">使用する必要がありますスキーマ情報を提供することが必要な場合、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>The <ph id="ph1">`GetSchema`</ph> method should still return <ph id="ph2">`null`</ph> (or <ph id="ph3">`Nothing`</ph>).</source>
          <target state="translated"><ph id="ph1">`GetSchema`</ph>メソッドが返すまだ<ph id="ph2">`null`</ph>(または<ph id="ph3">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>Some <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> types as well as legacy custom types implementing the <ph id="ph2">`IXmlSerializable`</ph> interface may be using <ph id="ph3">`GetSchema`</ph> instead of <ph id="ph4">`XmlSchemaProvider`</ph>.</source>
          <target state="translated">いくつか<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>を実装するレガシのカスタム型と同じように、型、<ph id="ph2">`IXmlSerializable`</ph>インターフェイスを使用している可能性<ph id="ph3">`GetSchema`</ph>の代わりに<ph id="ph4">`XmlSchemaProvider`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">この場合、メソッドがによって生成されたオブジェクトの XML 表現を記述する正確な XML スキーマを返します、<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> stream from which the object is deserialized.</source>
          <target state="translated">オブジェクトの逆シリアル化元である <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> ストリーム。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Generates an object from its XML representation.</source>
          <target state="translated">オブジェクトの XML 表現からオブジェクトを生成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method must reconstitute your object using the information that was written by the <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph>メソッドによって書き込まれた情報を使用して、オブジェクトを構築する必要があります、<ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When this method is called, the reader is positioned on the start tag that wraps the information for your type.</source>
          <target state="translated">このメソッドが呼び出されると、リーダーは、型の情報をラップする開始タグ上。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>That is, directly on the start tag that indicates the beginning of a serialized object.</source>
          <target state="translated">つまり、開始タグ上で直接、シリアル化されたオブジェクトの先頭を示すです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When this method returns, it must have read the entire element from beginning to end, including all of its contents.</source>
          <target state="translated">このメソッドが戻るときにする必要がありますが要素全体を読み取る最初から最後まで、すべての内容を含むです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method, the framework does not handle the wrapper element automatically.</source>
          <target state="translated">異なり、<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph>メソッド、フレームワークがラッパー要素を自動的に処理されません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Your implementation must do so.</source>
          <target state="translated">実装には、これを実行する必要があります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</source>
          <target state="translated">これらの配置ルールに従わなかった場合と、予期しない実行時例外または破損したデータを生成するコードが生じる場合があります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</source>
          <target state="translated">このメソッドを実装する場合、可能性を考慮する必要があります悪意のあるユーザーが無効にするか、それ以外の場合、アプリケーションの動作を変更するために適切な形式が無効な XML 表現を提供可能性があります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The following example illustrates an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">次の例の実装を示しています、<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize this object.</source>
          <target state="translated">次の例では、使用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>このオブジェクトを逆シリアル化するクラス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> stream to which the object is serialized.</source>
          <target state="translated">オブジェクトのシリアル化先の <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> ストリーム。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Converts an object into its XML representation.</source>
          <target state="translated">オブジェクトを XML 表現に変換します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> implementation you provide should write out the XML representation of the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph>実装を提供するがオブジェクトの XML 表現を記述する必要があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The framework writes a wrapper element and positions the XML writer after its start.</source>
          <target state="translated">フレームワークは、ラッパー要素を書き込み、その開始後に、XML ライターを配置します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Your implementation may write its contents, including child elements.</source>
          <target state="translated">実装には、子要素を含む、その内容を書き込むことがあります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The framework then closes the wrapper element.</source>
          <target state="translated">フレームワークでは、ラッパー要素が閉じられます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Write sufficient information to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> stream to allow the <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method to reconstitute your object.</source>
          <target state="translated">ための十分な情報を書き込む、<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>ストリームを許可する、<ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph>メソッド、オブジェクトを再構成します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</source>
          <target state="translated">たとえば、オブジェクトの状態には、配列変数が含まれている場合、配列の長さを書き込むことを確認するまたはオブジェクトが再構成時点を確認する値の数を知ることは、配列の値を説明する要素を格納する親要素を使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The following example illustrates an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">次の例の実装を示しています、<ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize this object.</source>
          <target state="translated">次の例では、使用、<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>このオブジェクトを逆シリアル化するクラス。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>