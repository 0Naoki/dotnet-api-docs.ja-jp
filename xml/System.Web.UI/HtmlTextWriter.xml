<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dcb3a-101">マークアップ文字とテキストを ASP.NET サーバー コントロールの出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-101">Writes markup characters and text to an ASP.NET server control output stream.</span></span> <span data-ttu-id="dcb3a-102">このクラスには、ASP.NET サーバー コントロールがマークアップをクライアントにレンダリングするときに使用する書式設定機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-103"><xref:System.Web.UI.HtmlTextWriter>クラスは、HTML 4.0 をデスクトップ ブラウザーに表示するために使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="dcb3a-104"><xref:System.Web.UI.HtmlTextWriter>内のすべてのマークアップ ライターの基本クラスも、<xref:System.Web.UI>名前空間を含む、 <xref:System.Web.UI.ChtmlTextWriter>、 <xref:System.Web.UI.Html32TextWriter>、および<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="dcb3a-105">これらのクラスは、要素、属性、およびマークアップのさまざまな種類のスタイルとレイアウト情報の書き込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="dcb3a-106">さらに、これらのクラスは、各マークアップの言語に関連付けられているページとコントロール アダプター クラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="dcb3a-107">ほとんどの場合、ASP.NET は自動的に要求元のデバイスの適切なライターを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="dcb3a-108">ただし、カスタム テキスト ライターを作成する場合、または特定のデバイス用のページを表示するために特定のライターを指定する場合は、割り当てる必要があります、ライターのページに、`controlAdapters`アプリケーション .browser ファイルのセクションです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-109">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.Control.Render%2A>から派生したカスタム コントロールのメソッド、<xref:System.Web.UI.Control>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="dcb3a-110">このコード例は、さまざまなを使用する方法を示しています。<xref:System.Web.UI.HtmlTextWriter>メソッド、プロパティ、およびフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-111"><see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="dcb3a-112">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span></span></param>
        <summary><span data-ttu-id="dcb3a-113">既定のタブ文字列を使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>コンス トラクターを使用して、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>行のインデントは必要なときに定数です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="dcb3a-115">呼び出す、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>のオーバー ロードを新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-116">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>カスタムを作成するコンス トラクター<xref:System.Web.UI.HtmlTextWriter>という名前のオブジェクト`StyledLabelHtmlWriter.`ときに、`MyPage`から派生するカスタムのクラス、<xref:System.Web.UI.Page>クラス、クライアントから要求されます。使用して、ブラウザー、`StyledLabelHtmlWriter`を出力ストリームには、そのコンテンツをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="dcb3a-117">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <param name="tabString"><span data-ttu-id="dcb3a-118">行のインデントをレンダリングするために使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-118">The string to use to render a line indentation.</span></span></param>
        <summary><span data-ttu-id="dcb3a-119">タブ文字列を指定して、<see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>コンス トラクターを使用して`tabString`行のインデントが必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="dcb3a-121">呼び出す、<xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType>基底コンス トラクターを新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-122">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>カスタムを作成するコンス トラクター<xref:System.Web.UI.HtmlTextWriter>という名前のオブジェクト`StyledLabelHtmlWriter.`ときに、`MyPage`から派生するカスタムのクラス、<xref:System.Web.UI.Page>クラス、クライアントから要求されます。使用して、ブラウザー、`StyledLabelHtmlWriter`を出力ストリームには、そのコンテンツをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-123"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-124">追加する属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-124">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-125">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-125">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-126"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-127">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>メソッド、属性は、のいずれかではない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>値、実行時までに、属性が不明の場合またはします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="dcb3a-128">いずれかの特定のマークアップ要素のインスタンスの<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性の一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="dcb3a-129">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-130">属性の一覧はから削除し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="dcb3a-131">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-132">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-133"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-134">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-135"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-136">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドを呼び出す前に、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="dcb3a-137">2 つの異なるオーバー ロードを呼び出すコード<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>との 2 つの異なるオーバー ロード<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を呼び出す前に、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドを表示するために、`<span>`要素を出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="dcb3a-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>という名前のカスタム属性を定義するメソッドが使用される`CustomAttribute`およびという名前のカスタム値`CustomAttributeValue`の`<span>`このコードを表示する要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-139">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-140">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-140">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-141"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-142">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>標準マークアップ属性を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="dcb3a-143">いずれかの特定のマークアップ要素のインスタンスの<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性の一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="dcb3a-144">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、任意の属性によって追加される、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-145">属性の一覧はから削除し、<xref:System.Web.UI.HtmlTextWriter>です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="dcb3a-146">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-147">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-148"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-149">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-150"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-151">使用するコード例を次に示します、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>を追加するメソッド、`Onclick`マークアップ要素に属性し、ECMAScript コードを次にその値を設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-152">追加する属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-152">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-153">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-153">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEndode">
          <span data-ttu-id="dcb3a-154">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-154"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-155">オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-156">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッド、属性は、のいずれかではない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>値、または実行時までのエンコード属性が不明の場合は必要です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="dcb3a-157">いずれかの特定のマークアップ要素のインスタンスの<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性の一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="dcb3a-158">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-159">属性の一覧はから削除し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="dcb3a-160">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッドを`fEncode`'éý'`true`属性では、引用符 (")、不等号 (<) を含めることができます可能性のある場合またはアンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="dcb3a-161">メソッドの呼び出しは、要求元のデバイスの要件を満たすように属性がエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="dcb3a-162">設定することができます`fEncode`に`false`属性が既にエンコードされていることがわかっている場合、これらの文字のいずれもが生成されることを把握している場合またはします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
  
 <span data-ttu-id="dcb3a-163">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-163">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-164">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-164">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-165"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-165">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-166">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-166">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-167"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-168">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>ことを確認するカスタム属性を名前付きメソッド`myattribute`の値がエンコードされていないと、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-168">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-169">追加する属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-169">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-170">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-170">A string containing the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-171">属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-171">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-172"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、<see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値と共に、指定されたマークアップ属性および値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-172">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-173">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29>メソッドから継承する場合にのみ、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-173">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-174">新規作成することができ`name`と`key`属性のペア。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-174">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-175">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-175">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-176">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-176">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="dcb3a-177">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-177"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-178">オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-178">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-179">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>メソッド、標準のマークアップの属性、省略可能なエンコーディングとします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-179">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="dcb3a-180">いずれかの特定のマークアップ要素のインスタンスの<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性の一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-180">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="dcb3a-181">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素の開始タグをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-181">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-182">属性の一覧はから削除し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-182">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="dcb3a-183">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>メソッドを`fEncode`'éý'`true`属性では、引用符 (")、不等号 (<) を含めることができます可能性のある場合またはアンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-183">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="dcb3a-184">メソッドの呼び出しは、要求元のデバイスの要件を満たすように属性がエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-184">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="dcb3a-185">設定することができます`fEncode`に`false`属性が既にエンコードされていることがわかっている場合、これらの文字のいずれもが生成されることを把握している場合またはします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-185">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
  
 <span data-ttu-id="dcb3a-186">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-186">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-187">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-187">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-188"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-188">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-189">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-189">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-190"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-190">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-191">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>文字列値に割り当てられていることを確認する方法、`Alt`属性の`<img>`要素が要求元のデバイス用にエンコードされています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-191">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-192"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ スタイル属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-192">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-193">追加するスタイル属性を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-193">A string that contains the style attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-194">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-194">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-195">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始タグに、指定されたマークアップ スタイル属性および属性値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-195">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-196">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>メソッドは、スタイルがのメンバーではないと、<xref:System.Web.UI.HtmlTextWriterStyle>列挙型か、実行時まで不明です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-196">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="dcb3a-197"><xref:System.Web.UI.HtmlTextWriter>クラスはレンダリングされるマークアップ要素のスタイルのリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-197">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="dcb3a-198">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、によって追加された任意のスタイル、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-198">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-199">スタイルの一覧は、クリアされます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-199">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="dcb3a-200">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-200">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-201">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>要素に属性をすべてのスタイルを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-201">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-202"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-202">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-203">必要に応じてその他のメソッドを使用して、要素の開始と終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-203">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-204"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-204">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-205">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>メソッド`font-size`と`color`にスタイル属性、`<p>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-205">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="dcb3a-206">このコード例では、<xref:System.Web.UI.HtmlTextWriter>コントロールの内容を表示するクラス。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-206">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-207">出力ストリームに追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-207">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-208">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-208">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-209">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 値および属性値に関連付けられたマークアップ スタイル属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-209">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-210">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29>メソッドは、スタイルのメンバーであると、<xref:System.Web.UI.HtmlTextWriterStyle>列挙され、実行する前に呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-210">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="dcb3a-211"><xref:System.Web.UI.HtmlTextWriter>クラスはレンダリングされるマークアップ要素のスタイルのリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-211">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="dcb3a-212">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、によって追加された任意のスタイル、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-212">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-213">スタイルの一覧は、クリアされます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-213">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="dcb3a-214">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-214">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="dcb3a-215">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>要素に属性をすべてのスタイルを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-215">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-216"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-216">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="dcb3a-217">必要に応じてその他のメソッドを使用して、要素の開始と終了タグの間にあるコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-217">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="dcb3a-218"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-218">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-219">次のコード例では、オーバーライドの一部を使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-219">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-220">コードのチェックするかどうか、`<Label>`要素を表示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-220">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="dcb3a-221">場合は、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>を確認するメソッドが呼び出されたかどうか、`Color`スタイル属性が定義されて、`<Label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-221">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="dcb3a-222">場合、`Color`属性が定義されていない、コードのこのオーバー ロードを呼び出して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を追加するメソッド、`Color`スタイル属性を属性し、その値を設定し、`red`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-222">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-223">追加されるスタイル属性を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-223">A string that contains the style attribute to be added.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-224">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-224">A string that contains the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-225">追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-225">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span></span></param>
        <summary><span data-ttu-id="dcb3a-226">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、<see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値と共に、指定されたマークアップ スタイル属性および属性値を追加します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-226">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-227">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29>メソッドから継承する場合にのみ、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-227">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-228">新規作成することができ`name`と`value`のペアを<xref:System.Web.UI.HtmlTextWriterStyle>属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-228">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-229"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールが出力されようとしていることを通知します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-229">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-230"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>メソッドに機能がありません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-230">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="dcb3a-231">オーバーライドする必要があります、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>から派生したクラスのメソッド<xref:System.Web.UI.HtmlTextWriter>独自の表示機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-231">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="dcb3a-232">必要となるマークアップ言語ではたとえば、`<p>`要素も、コントロールの前にすぐに表示できますの必要性、`<p>`要素は前に決定されます、使用する可能性があります、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-232">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-233"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを閉じ、関連付けられているシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-233">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-234">この実装、<xref:System.Web.UI.HtmlTextWriter.Close%2A>メソッドの呼び出し、<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-234">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="dcb3a-235">呼び出しに続く、<xref:System.Web.UI.HtmlTextWriter.Close%2A>メソッド、任意の操作で、<xref:System.Web.UI.HtmlTextWriter>すべてのリソースが解放されたために、オブジェクトが例外をスロー可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-235">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-236">単一のタブ文字を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-236">Represents a single tab character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-237">1 つのタブは、ASCII 9 文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-237">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-238">次のコード例を使用するコンス トラクターを作成する方法を示しています、<xref:System.IO.TextWriter>オブジェクト パラメーターおよびパスとして、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>コンス トラクターの 2 番目のバージョンへのパラメーターの引数としてフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-238">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="dcb3a-239">このコンス トラクターは、コードから呼び出されたときに、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>フィールドは、ページまたはアダプタによって使用されるマークアップ ライターのインスタンスのインデント ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-239">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-240">引用符 (") を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-240">Represents the quotation mark (") character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-241"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>属性を閉じます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-241">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-242">次のコード例は、レンダリングする方法を示します、`border`属性を`<table>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-242">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="dcb3a-243">コードの呼び出し、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド、属性値およびその使用方法を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを表示するために、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>と<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-243">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="dcb3a-244">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-244">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-245">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-245">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-246">エンコードする属性値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-246">A string containing the attribute value to encode.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="dcb3a-247">属性値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-247"><see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-248">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-248">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-249"><paramref name="value" /> が空の場合は、エンコードされた属性値を含む文字列 <see langword="null" />。または <paramref name="fEncode" /> が <see langword="false" /> の場合は、エンコードされていない属性値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-249">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-250">使用して、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>メソッド、属性がない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>列挙値か、実行時まで不明です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-250">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="dcb3a-251"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドの削除は二重引用符 (")、アンパサンド (&)、入力に関係なく、記号 (<) ため、その無効なタグは生成されませんよりも小さくするとします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-251">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="dcb3a-252">によって実行は、実際のエンコード、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-252">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-253">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドのパラメーターとして、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドを呼び出すし、エンコードして、`color:blue`スタイル属性の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-253">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="dcb3a-254">マークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-254">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-255">エンコードする属性値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-255">A string containing the attribute value to encode.</span></span></param>
        <summary><span data-ttu-id="dcb3a-256">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-256">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-257">エンコードされた属性値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-257">A string containing the encoded attribute value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-258"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドの削除は二重引用符 (")、アンパサンド (&)、入力に関係なく、記号 (<) ため、その無効なタグは生成されませんよりも小さくするとします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-258">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="dcb3a-259">によって実行は、実際のエンコード、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-259">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="dcb3a-260">エンコードする URL を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-260">A string containing the URL to encode.</span></span></param>
        <summary><span data-ttu-id="dcb3a-261">指定した URL 内の空白文字列を "%20" に変換して、最小限の URL エンコーディングを実行します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-261">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span></span></summary>
        <returns><span data-ttu-id="dcb3a-262">エンコードされた URL を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-262">A string containing the encoded URL.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-263">文字の URL エンコードは、パーセント記号 (%) の後に、2 桁の 16 進表現 (大文字)、ラテン文字の ISO コード ポイントの文字で構成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-263">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="dcb3a-264">スペースを 16 進表現は 20 です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-264">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-265">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A>でパラメーターとして渡される URL に含まれるスペースに変換するメソッド、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-265">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-266"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトがページにコンテンツを書き込むために使用するエンコーディングを取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-266">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span></span></summary>
        <value><span data-ttu-id="dcb3a-267">マークアップをページに書き込むときに使用される <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-267">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-268"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A>プロパティ ベースからその値を取得する<xref:System.IO.TextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-268">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-269">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Encoding%2A>プロパティをカスタム コントロールが含まれているページにテキストを表示するために使用するエンコードの種類を記述します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-269">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-270"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールのレンダリングが完了したことを通知します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-270">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span></span> <span data-ttu-id="dcb3a-271">このメソッドを使用して、<see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> メソッドで開かれたすべてのマークアップ要素を閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-271">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-272"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>メソッドに機能がありません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-272">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="dcb3a-273">オーバーライドする必要があります<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>から派生したクラスで、<xref:System.Web.UI.HtmlTextWriter>独自の表示機能を提供するクラス。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-273">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="dcb3a-274">使用することができます、<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>で開かれているすべてのマークアップ要素を終了するメソッド、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-274">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-275">マークアップ要素の終了タグの左山かっことスラッシュ記号 (&lt;/) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-275">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-276"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>マークアップ要素の終了タグを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-276">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-277">次のコード例は、の終了タグをレンダリングする方法を示します、`<table>`マークアップ要素を使用して、<xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>と<xref:System.Web.UI.HtmlTextWriter.TagRightChar>フィールドへの呼び出しでパラメーター値として、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-277">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="dcb3a-278">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-278">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-279">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-279">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="dcb3a-280">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-280">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <summary><span data-ttu-id="dcb3a-281">指定されたスタイルのレイアウトと文字書式を実装するための属性を含む <see langword="&lt;span&gt;" /> 要素の開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-281">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-282">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-282">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="dcb3a-283"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-283">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="dcb3a-284">同じ値を使用して`style`で、 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 、対応するのに使用する方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-284">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="dcb3a-285"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>メソッドの開始タグの表示、`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-285">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="dcb3a-286">このメソッドから、必要な属性とスタイルの属性に追加の開始タグ、`<span>`要素によって指定される設定を表示する、<xref:System.Web.UI.WebControls.Style>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-286">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="dcb3a-287">属性とスタイル属性を含む、使用する異なるマークアップ要素をレンダリングする場合、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-287">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-288">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用して、クラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>適用する方法、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルのテキスト文字列をします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-288">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="dcb3a-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドに、HTML 表示`<span style="color:Navy;">`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="dcb3a-290"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しが閉じ、`<span>`テキストが表示された後の要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-290">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="dcb3a-291">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-291">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <param name="tag"><span data-ttu-id="dcb3a-292"><c>style</c> で指定されたスタイル オブジェクトを含んだマークアップ要素の開始タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-292">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span></span></param>
        <summary><span data-ttu-id="dcb3a-293">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-293">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-294">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-294">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="dcb3a-295"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-295">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="dcb3a-296">同じ値を使用して`style`で、 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 、対応するのに使用する方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-296">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="dcb3a-297"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドで指定した要素の開始タグの表示、`tag`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-297">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="dcb3a-298"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドし、必要な属性とスタイル属性を追加で指定されている設定を表示する要素の開始タグ、<xref:System.Web.UI.WebControls.Style>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-298">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="dcb3a-299">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>の開始タグを表示するためにオーバー ロード、`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-299">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-300">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用して、クラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>適用する方法、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルのテキスト文字列をします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-300">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="dcb3a-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドに、HTML 表示`<span style="color:Navy;">`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="dcb3a-302"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しが閉じ、`<span>`テキストが表示された後の要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-302">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-303">等号 (<see langword="=" />) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-303">Represents the equal sign (<see langword="=" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-304">使用することができます、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>の代わりにフィールド、<xref:System.Web.UI.HtmlTextWriter.EqualsChar>フィールドの属性値の区切り記号を構築するときにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-304">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-305">次のコード例は、レンダリングする方法を示します、`src`属性と用の値の一部、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-305">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="dcb3a-306">コードを使用して、<xref:System.Web.UI.HtmlTextWriter.EqualsChar>フィールドで、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの呼び出しの間で、等号 (=) を表示するために、`src`属性とその値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-306">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="dcb3a-307">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-307">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-308">文字列 (=") の等号 (=) と二重引用符文字 (") の両方を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-308">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-309"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>を属性値の区切り記号を構築するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-309">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-310">次のコード例は、レンダリングする方法を示します、`border`属性を`<table>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-310">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="dcb3a-311">コードの呼び出し、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド、属性値およびその使用方法を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを表示するために、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>と<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-311">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="dcb3a-312">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-312">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-313">指定したレイアウトと文字書式を終了するマークアップ要素の終了タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-313">Writes the closing tag of a markup element to end the specified layout and character formatting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="dcb3a-314">閉じるレイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-314">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span></span></param>
        <summary><span data-ttu-id="dcb3a-315">指定したレイアウトと文字書式を終了する <see langword="&lt;span&gt;" /> 要素の終了タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-315">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-316"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29>メソッドの終了タグの表示、`<span>`要素の後に、コントロールの終了タグ、要素を閉じる、対応するによって開かれた<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-316">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="dcb3a-317"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成するには、デバイス アダプターまたはコントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-317">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="dcb3a-318">同じ値を使用して`style`で、 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 、対応するのに使用する方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-318">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-319">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用して、クラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>適用する方法、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルのテキスト文字列をします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-319">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="dcb3a-320"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドに、HTML 表示`<span style="color:Navy;">`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-320">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="dcb3a-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しが閉じ、`<span>`テキストが表示された後の要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="dcb3a-322">出力テキストへの適用を停止するよう、レイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-322">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span></span></param>
        <param name="tag"><span data-ttu-id="dcb3a-323">指定されたスタイルを適用した属性を含んだマークアップ要素の終了タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-323">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span></span> <span data-ttu-id="dcb3a-324">これは、対応する <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 呼び出しで渡されたキーに一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-324">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span></span></param>
        <summary><span data-ttu-id="dcb3a-325">指定されたマークアップ要素の終了タグを書き込んで、指定されたレイアウトと文字書式を終了します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-325">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-326"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドで指定されている要素の終了タグをレンダリングする`tag`、コントロールの終了タグの後に、対応するによって開かれた要素を閉じる<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-326">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="dcb3a-327"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成するには、デバイス アダプターまたはコントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-327">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="dcb3a-328">同じ値を使用して`style`で、 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 、対応するのに使用する方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-328">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-329">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用して、クラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>適用する方法、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルのテキスト文字列をします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-329">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="dcb3a-330"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドに、HTML 表示`<span style="color:Navy;">`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-330">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="dcb3a-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しが閉じ、`<span>`テキストが表示された後の要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-332">ページまたは Web サーバー コントロールのすべてのプロパティで、すべてのマークアップとスタイル属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-332">Removes all the markup and style attributes on all properties of the page or Web server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-333">属性は、マークアップ要素上に描画される前に、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-333">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="dcb3a-334">さらに、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>と<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>属性とスタイルをレンダリングするためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-334">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-335">次のコード例から派生するカスタム クラスを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-335">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="dcb3a-336">呼び出されると、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかをチェック`<label>`または`<a>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-336">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="dcb3a-337">場合、`<label>`要素を表示している、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッド チェックするかどうか、`style`属性は要素に表示され、いない場合は、作成、`style`属性し、設定`color: blue`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-337">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="dcb3a-338">場合、`<a>`要素を表示している、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドを判断するかどうか、`href`属性が含まれる、できない場合、追加、 `href` URL にhttp://www.cohowinery.comです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-338">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-339">現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトのすべてのバッファーをクリアし、バッファー内のすべてのデータを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-339">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-340"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.Flush%2A>メソッドを呼び出すだけ、<xref:System.IO.TextWriter.Flush%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-340">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName"><span data-ttu-id="dcb3a-341"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> の取得対象となる属性を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-341">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-342">指定した属性に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-342">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-343">指定した属性の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値。属性が列挙型のメンバーでない場合は無効な <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-343">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-344">場合`attrName`は`null`または空の文字列 ("")、またはに型指定された属性の名前、値-1 で、テーブルに見つかりません、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-344">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-345">次のコード例から派生したクラスを使用して、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-345">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="dcb3a-346">上書きのチェックするかどうか`tagKey`と等しい、<xref:System.Web.UI.HtmlTextWriterTag.Font>フィールドであることを示す、`<font>`マークアップ要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-346">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="dcb3a-347">そのため、オーバーライドを呼び出す場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>かどうかを検索するメソッド、`<font>`要素が含まれています、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-347">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="dcb3a-348">場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>返します`false`、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>定義するメソッド、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>し、その値に設定`30pt`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-348">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="dcb3a-349">マークアップ属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-349">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span></span></param>
        <summary><span data-ttu-id="dcb3a-350">指定した <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値に関連付けられたマークアップ属性の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-350">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-351">マークアップ属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-351">A string containing the name of the markup attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-352"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>メソッドは、空の文字列を返します ("") 場合は、`attrKey`が無効です<xref:System.Web.UI.HtmlTextWriterAttribute>値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-352">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-353">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>に変換する方法、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>列挙体の値、文字列名。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-353">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName"><span data-ttu-id="dcb3a-354"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> の取得対象のスタイル属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-354">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-355">指定したスタイルの <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-355">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-356"><paramref name="styleName" /> に対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-356">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-357"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>メソッドが値として型指定された-1 を返します、<xref:System.Web.UI.HtmlTextWriterStyle>場合は、値`styleName`いずれかに対応しない<xref:System.Web.UI.HtmlTextWriterStyle>列挙値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-357">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-358">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-358">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-359"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>オーバーライドによりかどうか、`<label>`マークアップを表示する場合は、要素を確認し、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-359">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="dcb3a-360">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が定義されていない、<xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>メソッドへの呼び出しの最初のパラメーターとして使用されます、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を追加するメソッド、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性を`<label>`マークアップ要素、 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性`red`.</span><span class="sxs-lookup"><span data-stu-id="dcb3a-360">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey"><span data-ttu-id="dcb3a-361">スタイル属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-361">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span></span></param>
        <summary><span data-ttu-id="dcb3a-362">指定した <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたマークアップ スタイル属性名を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-362">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-363"><paramref name="styleKey" /> で指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたスタイル属性名。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-363">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-364">場合`styleKey`が無効です<xref:System.Web.UI.HtmlTextWriterStyle>オブジェクト、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>メソッドは、空の文字列を返します ("") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-364">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-365">次のコード例を確認する方法を示して かどうか、`<label>`要素を表示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-365">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="dcb3a-366">場合は、ことを確認するかどうか、<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性が要素で定義されています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-366">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="dcb3a-367">属性が定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>メソッドに変換、<xref:System.Web.UI.HtmlTextWriterStyle.Color>列挙メンバーに渡すには、その文字列形式に、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-367">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="dcb3a-368"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> の取得対象のマークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-368">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-369">指定したマークアップ要素に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-369">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-370"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値。<paramref name="tagName" /> が特定の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値に関連付けられていない場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-370">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-371">場合`tagName`は`null`、空の文字列 ("")、またはマークアップ タグ名のテーブルに見つかりません、<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>メソッドを返します、<xref:System.Web.UI.HtmlTextWriterTag.Unknown>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-371">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-372">次のコード例は、のオーバー ロードをオーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドのパラメーターとして文字列を受け取る。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-372">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="dcb3a-373">文字列が渡される、<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>メソッドで、対応する変換<xref:System.Web.UI.HtmlTextWriterTag>列挙型メンバー、しに渡します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>を受け取るオーバー ロード、<xref:System.Web.UI.HtmlTextWriterTag>列挙値をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-373">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="dcb3a-374">マークアップ要素の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span></span></param>
        <summary><span data-ttu-id="dcb3a-375">指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-375">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-376">マークアップ要素を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-376">A string representing the markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-377">場合`tagKey`が無効です<xref:System.Web.UI.HtmlTextWriterTag>値、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>メソッドは、空の文字列を返します ("") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-377">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-378">次のコード例を終了する方法を示しています、`<font>`要素を使用して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-378">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="dcb3a-379"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>に変換する方法、<xref:System.Web.UI.HtmlTextWriterTag.Font>値を文字列にします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-379">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-380">マークアップの各行の開始位置のインデントを設定するタブ位置の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-380">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span></span></summary>
        <value><span data-ttu-id="dcb3a-381">各行のインデントを設定するタブ位置の数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-381">The number of tab positions to indent each line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-382">指定された文字列を記述してインデントを実行、`tabString`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>コンス トラクターで指定されている回数、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-382">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="dcb3a-383">場合、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティが負の値に設定、保存される前に 0 に変更されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-383">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-384">次のコード例に割り当てられている値をインクリメントする方法を示します、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティの開始タグに属性が追加されたときに、`<span>`要素および<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-384">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="dcb3a-385">内にレンダリングするすべてのマークアップでインデントが大きくなります、`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-385">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-386">マークアップ要素の内部コンテンツを書き込むテキスト ライターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-386">Gets or sets the text writer that writes the inner content of the markup element.</span></span></summary>
        <value><span data-ttu-id="dcb3a-387">内部マークアップの内容を書き込む <see cref="T:System.IO.TextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-387">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-388">内部マークアップの内容は、開始タグと終了タグのマークアップ言語要素の間にあるテキストです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-388">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="dcb3a-389">場合、<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>プロパティに設定されている、<xref:System.IO.TextWriter>オブジェクトのインスタンスでは、<xref:System.Web.HttpWriter>クラスは、このファクトが記録され、別の参照を保存します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-389">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-390">次のコード例から派生したカスタム Web サーバー コントロールを使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl>をオーバーライドするクラス、<xref:System.Web.UI.Control.Render%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-390">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="dcb3a-391">使用して、<xref:System.Web.UI.HtmlTextWriter>を記述するクラス、`<font>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-391">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="dcb3a-392">使用して、要素の開始タグを書き込み、後に、<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>プロパティの文字列に書き込む`"<br> The time on the server:"`の値を持つには、この文字列を連結し、<xref:System.DateTime.Now%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-392">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-393"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-393">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-394">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-394">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-395"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-395">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="dcb3a-396"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-396"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-397">割り当てられる値を取得する、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトを使用して、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>この 1 つではなく、オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-397">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-398">次のコード例のオーバーライドを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から継承するクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-398">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-399"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>かどうかのチェックを無効、`<font>`マークアップ要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-399">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="dcb3a-400">そのため、オーバーライドを呼び出す場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>を確認するかどうか、`<font>`要素が含まれています、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-400">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="dcb3a-401">ない場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>定義するメソッド、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`30pt`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-401">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-402">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-402">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-403">属性に代入する値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-403">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-404"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-404">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="dcb3a-405"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-405"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-406">場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>メソッドを返します。 `true`、に割り当てられる値、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトが返され、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-406">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-407"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、マークアップ スタイル属性をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-407">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-408">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-408">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-409"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-409">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="dcb3a-410"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-410"><see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-411">指定したスタイルの属性を持つレンダリングされる値を取得するを使用して、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-411">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-412">次のコード例を確認する方法を示して かどうか、`<label>`要素を表示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-412">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="dcb3a-413">場合は、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッド チェックするかどうか、<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性が要素で定義されています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-413">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="dcb3a-414">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が定義されていない、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドを定義、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性し、その値に設定`red`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-414">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="dcb3a-415">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-415">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-416">スタイル属性に割り当てられた値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-416">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-417"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性とその値をレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-417">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="dcb3a-418"><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性とその値をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-418"><see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-419">場合、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッドを返します。 `true`、に割り当てられる値、<xref:System.Web.UI.HtmlTextWriterStyle>で属性が返される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-419">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="dcb3a-420">確認する属性の名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-420">A string that contains the name of the attribute to check.</span></span></param>
        <summary><span data-ttu-id="dcb3a-421"><see langword="&lt;form&gt;" /> マークアップ要素の開始タグに確実に属性がレンダリングされるようにするために、属性を確認します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-421">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-422">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-422">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-423"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>メソッドを返します。`true`すべての属性です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-423">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="dcb3a-424">上書き、<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>の開始タグ内にレンダリングできる属性を制限、`<form>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-424">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-425">上書き、<see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />を返すメソッドを<see langword="true" />に含めることがこれらの属性に対してのみ、<see langword="&lt;form&gt;" />から派生したクラスのマークアップの要素、<see cref="T:System.Web.UI.HtmlTextWriter" />クラスが目的としています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-425">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-426"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトで使用される行終端文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-426">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <value><span data-ttu-id="dcb3a-427">現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> で使用される行終端文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-427">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-428">既定の行終端記号の文字列は、キャリッジ リターン、ライン フィード ("\r\n") の後にします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-428">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="dcb3a-429">行終端記号の文字列が 1 つの出力ストリームに書き込まれるの<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-429">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="dcb3a-430">場合、<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>プロパティに設定されている`null`、デフォルト改行文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-430">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-431">次のコード例から派生するカスタム クラスを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-431">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="dcb3a-432">呼び出されると、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかをチェック`<label>`または`<a>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-432">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="dcb3a-433">その場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドは、ラベルのスタイル属性が定義されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-433">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="dcb3a-434">スタイルが定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドの既定値の設定、`style:color`青に属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-434">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="dcb3a-435"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドを使用して、<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>行を挿入するプロパティがマークアップ タグで中断およびその他の定義済みの属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-435">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-436">レンダリングする属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-436">A string containing the name of the attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-437">属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-437">A string containing the value that is assigned to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-438">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-438">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-439">指定したマークアップ属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-439">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-440">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-440">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-441"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>メソッドは常に返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-441">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="dcb3a-442"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>オーバーライドでは、属性が、ページに表示するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-442">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-443">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-443">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="dcb3a-444">場合、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性が表示されますが、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>値ではありません`30pt`では、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>呼び出しをオーバーライド、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>を追加するメソッド、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`30pt`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-444">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-445">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />クラスをオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />を返すメソッドを<see langword="false" />属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップに表示されるようにするのにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-445">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span></span> <span data-ttu-id="dcb3a-446">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="bgcolor" />属性を<see langword="&lt;table&gt;" />要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />を返すと<see langword="false" />とき<paramref name="name" />渡します<see langword="bgcolor" />および<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />プロパティの値が<see langword="table" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-446">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-447">レンダリングするスタイル属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-447">A string containing the name of the style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-448">スタイル属性に割り当てる値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-448">A string containing the value that is assigned to the style attribute.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-449">スタイル属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-449">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-450">指定されたマークアップ スタイル属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-450">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-451">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-451">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-452"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>メソッドは常に返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-452">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="dcb3a-453"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>オーバーライドでは、ページにスタイル属性を表示するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-453">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-454">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-454">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="dcb3a-455">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性が表示されると、ですが、<xref:System.Web.UI.HtmlTextWriterStyle.Color>値ではありません`purple`、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>使用のオーバーライド、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を設定するメソッド、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性を`purple`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-455">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-456">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />クラスをオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />を返すメソッドを<see langword="false" />スタイル属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップ言語に表示されるようにするのにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-456">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span></span> <span data-ttu-id="dcb3a-457">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="color" />スタイル属性を<see langword="&lt;p&gt;" />要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />を返すと<see langword="false" />とき<paramref name="name" />を渡します<see langword="color" />と<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />プロパティの値が<see langword="p" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-457">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-458">レンダリングする要素の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-458">A string containing the name of the element to render.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-459">要素に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-459">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span></span></param>
        <summary><span data-ttu-id="dcb3a-460">指定したマークアップ要素を要求側のページにレンダリングするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-460">Determines whether the specified markup element will be rendered to the requesting page.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-461">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-461">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-462"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>メソッドは常に返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-462">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="dcb3a-463"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>オーバーライドでは、要素をページに表示するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-463">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-464">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-464">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="dcb3a-465">場合、<xref:System.Web.UI.HtmlTextWriterTag.Font>要素を表示している、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>使用をオーバーライド、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>メソッドを呼び出せば確認するかどうか、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性を表示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-465">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="dcb3a-466">使用する場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドを作成、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`20pt`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-466">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-467">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />クラスをオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />を返すメソッドを<see langword="false" />マークアップ要素がまったく、または特定のマークアップ言語用に表示されないようにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-467">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span></span> <span data-ttu-id="dcb3a-468">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="&lt;font&gt;" />要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />を返すメソッドを<see langword="false" />を含むページが要求されたときに、<see langword="&lt;font&gt;" />要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-468">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-469">マークアップ文字の行のインデント レベルを表す一連のタブ文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-469">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-470"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>メソッドを使用、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>させることが必要なインデントを記述する方法の多くのタブ文字列を決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-470">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="dcb3a-471">タブ文字列が指定された、<xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-471">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="dcb3a-472">タブ文字列が指定されていない場合、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>定数 (`\t`) を使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-472">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-473">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-473">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-474"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>オーバーライド常に使用して、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>インデントを実行する定数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-475">レンダリングする要素のリストから、最近保存したマークアップ要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-475">Removes the most recently saved markup element from the list of rendered elements.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-476">最近レンダリングしたマークアップ要素を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-476">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-477">要素によって出力されるマークアップ要素の一覧に追加されます、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-477">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="dcb3a-478"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドは、呼び出すことによって、一覧からマークアップ要素を削除、<xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-478">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dcb3a-479">レンダリングする要素のリストが空です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-479">The list of rendered elements is empty.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag"><span data-ttu-id="dcb3a-480">マークアップ要素の終了タグ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-480">The closing tag of the markup element.</span></span></param>
        <summary><span data-ttu-id="dcb3a-481">マークアップ要素の終了タグを生成するときに、後で使用できるように、指定されたマークアップ要素を保存します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-481">Saves the specified markup element for later use when generating the end tag for a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-482">要素でレンダリングされるマークアップ要素の一覧に追加されるときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-482">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="dcb3a-483"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドでは、要素の終了タグを表示した後に、一覧からマークアップ要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-483">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-484">登録するマークアップ属性の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-484">A string containing the name of the markup attribute to register.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-485">属性名に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-485">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span></span></param>
        <summary><span data-ttu-id="dcb3a-486">リテラルの、または動的に生成されたマークアップ属性をソース ファイルから登録して、これらの属性を要求側のクライアントに適切にレンダリングできるようにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-486">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-487">呼び出しによって、HTML マークアップ言語の定義済みの属性が登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>メソッドと最初<xref:System.Web.UI.HtmlTextWriter>オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-487">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="dcb3a-488">動的な属性を使用して登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>別の時のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-488">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="dcb3a-489">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>メソッドは`static`ですべての属性の登録が適用されるため、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-489">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-490">スタイル名を指定するソース ファイルから渡された文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-490">The string passed from the source file specifying the style name.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-491">指定したスタイルに対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-491">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span></span></param>
        <summary><span data-ttu-id="dcb3a-492">リテラルの、または動的に生成されたマークアップ スタイル プロパティをソース ファイルから登録して、これらのプロパティを要求側のクライアントに適切にレンダリングできるようにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-492">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-493">呼び出しによって、HTML マークアップ言語のカスケード スタイル シート (CSS) の定義済み属性が登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>メソッドと最初<xref:System.Web.UI.HtmlTextWriter>オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-493">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="dcb3a-494">動的なスタイル属性を使用して登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>別の時のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-494">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="dcb3a-495">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>メソッドは`static`ですべての属性の登録が適用されるため、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-495">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-496">HTML タグを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-496">A string that contains the HTML tag.</span></span></param>
        <param name="key"><span data-ttu-id="dcb3a-497">レンダリングする要素を指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-497">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span></span></param>
        <summary><span data-ttu-id="dcb3a-498">リテラルの、または動的に生成されたマークアップ タグをソース ファイルから登録して、それらのタグを要求側のクライアントに適切にレンダリングできるようにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-498">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-499">呼び出しによって HTML 言語の定義済みのマークアップ タグが登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>メソッドと最初<xref:System.Web.UI.HtmlTextWriter>オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-499">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="dcb3a-500">使用して動的なマークアップ タグを登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>別の時のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-500">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="dcb3a-501">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>メソッドは`static`すべてにタグの登録が適用されるため、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-501">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-502">マークアップ要素のコンテンツの後および終了タグの前に出現するテキストまたは空白文字をマークアップの出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-502">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-503">要素のコンテンツの後に書き込む空白文字またはテキストを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-503">A string that contains the spacing or text to write after the content of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-504"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>メソッドをマークアップの現在の要素に子要素を挿入する場合に便利にすることができます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-504">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-505">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスを決定するかどうか、`<label>`要素を表示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-505">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="dcb3a-506">場合は、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>上書き挿入の終了タグ、`<font>`の終了タグの直前の要素、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-506">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="dcb3a-507">要素以外の場合`<label>`、表示される、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-507">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-508"><see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />メソッドを返します。<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-508">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="dcb3a-509">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />テキストまたは要素のコンテンツの後、終了タグの前に空白文字を記述するかどうか。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-509">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-510">マークアップ要素の終了タグの後に出現する空白文字またはテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-511">要素の終了タグの後に書き込む空白文字またはテキスト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-511">The spacing or text to write after the closing tag of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-512"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>メソッドになる要素のタグの後に追加の終了タグをレンダリングする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-513">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>から派生したクラスかどうかを決定するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスを表示、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="dcb3a-514">場合は、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>上書き挿入の終了タグ、`<font>`要素の直後に、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="dcb3a-515">ない場合は、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-516"><see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />メソッドを返します。<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-516">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="dcb3a-517">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />テキストまたは要素終了タグの後に空白文字を記述する場合。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-517">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-518">マークアップ要素のコンテンツの前および開始タグの後にテキストまたは空白文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-518">Writes any text or spacing before the content and after the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-519">要素のコンテンツの前に書き込むテキストまたは空白文字。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-519">The text or spacing to write prior to the content of the element.</span></span> <span data-ttu-id="dcb3a-520">オーバーライドされない場合、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-520">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-521"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>メソッドになる内部マークアップの前に、現在のマークアップ要素に子要素を挿入する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-521">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-522">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>から派生したクラスかどうかを決定するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスは、表示しようとする、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-522">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="dcb3a-523">場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>上書き挿入の開始タグ、`<font>`の開始タグの直後後の要素、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-523">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="dcb3a-524">ない場合は、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-524">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-525"><see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />メソッドを返します。<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-525">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="dcb3a-526">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />テキストまたは前の要素の内容が、開始タグの後に空白文字を記述するかどうか。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-526">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-527">マークアップ要素の開始タグの前に出現するテキストまたは空白文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-527">Writes any text or spacing that occurs before the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="dcb3a-528">マークアップ要素の開始タグの前に書き込むテキストまたは空白文字。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-528">The text or spacing to write before the markup element opening tag.</span></span> <span data-ttu-id="dcb3a-529">オーバーライドされない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-529">If not overridden, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-530"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>メソッドは、目的の要素の開始タグの前に追加の開始タグをレンダリングする役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-530">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-531">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>クラスから派生するかどうかを判断するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスは、表示しようとする、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-531">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="dcb3a-532">場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>上書き挿入の開始タグ、`<font>`要素の直前に、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-532">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="dcb3a-533">場合は、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-533">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-534"><see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />メソッドを返します。<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-534">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="dcb3a-535">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />テキストまたは要素の開始タグの前の間隔を記述する場合。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-535">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-536">マークアップ要素の開始タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-536">Writes the opening tag of a markup element to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="dcb3a-537">開始タグをレンダリングするマークアップ要素の名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-537">A string containing the name of the markup element for which to render the opening tag.</span></span></param>
        <summary><span data-ttu-id="dcb3a-538">指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-538">Writes the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-539">使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>の上書き、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29>メソッド、マークアップ要素は、のいずれかではない場合、<xref:System.Web.UI.HtmlTextWriterTag>列挙値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-539">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="dcb3a-540">使用して、マークアップ要素を生成する、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、最初の呼び出し、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグの表示スタイル属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-540">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-541">内側のマークアップを生成するには、後に呼び出し、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>終了タグを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-541">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-542">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>非標準の開始タグを表示するためにカスタム コントロール`MyTag`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-542">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="dcb3a-543">コードの例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>内側のマークアップを呼び出し、続いてを表示するためにメソッド、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>要素を閉じます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-543">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="dcb3a-544">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-544">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="dcb3a-545">レンダリングするマークアップ要素の開始タグを定義する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-545">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span></span></param>
        <summary><span data-ttu-id="dcb3a-546">指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素の開始タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-546">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-547">使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29>メソッドのいずれかである既知の型は、マークアップ要素の場合、<xref:System.Web.UI.HtmlTextWriterTag>列挙値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-547">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="dcb3a-548">使用して、マークアップ要素を生成する、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、最初の呼び出し、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグの表示スタイル属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-548">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-549">内側のマークアップを生成するには、後に呼び出し、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>終了タグを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-549">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-550">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>の開始タグを出力する方法、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-550">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="dcb3a-551">要素に追加する属性、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドが開始される`<img>`タグ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-551">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="dcb3a-552"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>終了タグを生成するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-552">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="dcb3a-553">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-553">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-554">マークアップ要素の終了タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-554">Writes the end tag of a markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-555">呼び出す、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドした後に、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>オーバー ロードが呼び出されたと開始タグと終了タグ (内部マークアップ) の要素の間のすべてのコンテンツがレンダリングされた後です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-555">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-556">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>両方の後にメソッド、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>開始タグを生成するメソッドと<xref:System.Web.UI.HtmlTextWriter.Write%2A>開始タグと終了タグのカスタムの間の内部のマークアップを表示するメソッド`MyTag`要素が呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-556">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="dcb3a-557">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-557">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-558">マークアップ タグの空白文字と自己終了スラッシュ記号 (/) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-558">Represents a space and the self-closing slash mark (/) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-559"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars>フィールドは、自己終了あるマークアップ要素で使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="dcb3a-560">例:</span><span class="sxs-lookup"><span data-stu-id="dcb3a-560">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-561">自己終了マークアップ要素の終了スラッシュ記号と右山かっこ (/&gt;) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-561">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-562"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドのマークアップの自己終了要素を構築するときにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-562">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-563">次のコード例は、カスタムの値を表示する方法を示しています。`FileName`引用符の後にプロパティとによって表される文字、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-563">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="dcb3a-564">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドおよびパス、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>要素を閉じますパラメーターの引数としてフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-564">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="dcb3a-565">このコード例を表示、`FileName`プロパティの値と、次のマークアップ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-565">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-566">セミコロン (;) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-566">Represents the semicolon (;).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-567">渡す、<xref:System.Web.UI.HtmlTextWriter.SemicolonChar>パラメーターの引数としてフィールド、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの呼び出しは、カスタム コントロールまたはアダプターからセミコロンをレンダリングするときにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-567">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-568">次のコード例では、手動で一連のマークアップ要素のスタイルをレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-568">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="dcb3a-569">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド`font-size`と`border-style`スタイル属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-569">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="dcb3a-570"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar>フィールドのパラメーターとして使用、<xref:System.Web.UI.HtmlTextWriter.Write%2A>の値を区切るためのメソッド、`font-size`の先頭からの属性、`border-style`属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-570">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="dcb3a-571">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-571">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-572">アポストロフィ (') を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-572">Represents an apostrophe (').</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-573">使用して、<xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>アポストロフィを表示するために必要な場合のフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-573">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-574">スラッシュ記号 (/) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-574">Represents the slash mark (/).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-575">使用して、 <xref:System.Web.UI.HtmlTextWriter.SlashChar> URL を作成する場合、スラッシュを表示するためにフィールドをマークします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-575">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="dcb3a-576"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドを使用、<xref:System.Web.UI.HtmlTextWriter.SlashChar>マークアップ要素の終了タグを記述する場合のフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-576">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-577">次のコード例は、手動で出力する方法を示します、`src`の属性、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-577">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="dcb3a-578">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.SlashChar>に適用されるパスのスラッシュを表示するために、パラメーターとしてフィールドをマーク、`src`属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-578">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="dcb3a-579">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-579">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-580">空白文字 ( ) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-580">Represents a space ( ) character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-581"><xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>要素と属性間の区切り記号を作成するときの方法です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-581">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-582">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-582">This section provides two code examples.</span></span> <span data-ttu-id="dcb3a-583">最初の例では、文字配列を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-583">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="dcb3a-584">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-584">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="dcb3a-585">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-585">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="dcb3a-586">次のコード例を作成する方法を示しています、<xref:System.Char>を含む配列、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-586">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="dcb3a-587">次のコード例を呼び出すときに、パラメーターとして前のコード例で作成された配列を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-587">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-588">スタイル属性を値に等しく設定するために使用するスタイル イコール (<see langword=":" />) 文字を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-588">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-589"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>フィールドは使用、<xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>スタイルの名前と値を区切るためにメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-589">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-590">次のコード例を表示する方法を示しています、`FontWeight`属性と値の`bold`要素の開始タグにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-590">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="dcb3a-591">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>各スタイル属性の値を設定する文字を表示するためにパラメーターとしてフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-591">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="dcb3a-592">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-592">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-593">指定したマークアップ要素の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-593">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span></span></summary>
        <value><span data-ttu-id="dcb3a-594">開始タグが出力されるマークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-594">The markup element that is having its opening tag rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-595"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A>プロパティから継承するクラスにのみ使用するが、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-595">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-596">読み取りまたは設定する必要があります、<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>プロパティへの呼び出しでのみ、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドです。 これは、一貫した値に設定されているときだけです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-596">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-597">次のコード例に示しますのオーバーライド バージョン、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-597">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-598">値を使用して、<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>ユーザー設定を使用してサーバー コントロールかどうかを決定するプロパティ<xref:System.Web.UI.HtmlTextWriter>オブジェクトを表示、`<label>`マークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-598">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="dcb3a-599">である場合、`<font>`を持つ要素を`color`属性に設定`red`の書式設定を変更するのには、`<label>`要素のテキスト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-599">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dcb3a-600">プロパティ値が設定できません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-600">The property value cannot be set.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-601">マークアップ タグの開始山かっこ (&lt;) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-601">Represents the opening angle bracket (&lt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-602"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar>フィールドは使用、 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッド マークアップ タグを書き込むときにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-602">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-603">次のコード例の開始タグの最初の文字を表示する、`<table>`要素の名前を持つ要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-603">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="dcb3a-604">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.TagLeftChar>をパラメーターとしてフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-604">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="dcb3a-605">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-605">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-606">レンダリングされるマークアップ要素のタグ名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-606">Gets or sets the tag name of the markup element being rendered.</span></span></summary>
        <value><span data-ttu-id="dcb3a-607">出力されるマークアップ要素のタグ名。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-607">The tag name of the markup element being rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-608"><xref:System.Web.UI.HtmlTextWriter.TagName%2A>プロパティから継承するクラスにのみ使用するが、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-608">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-609">読み取りまたは設定する必要があります、<xref:System.Web.UI.HtmlTextWriter.TagName%2A>プロパティでのみ<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドの呼び出しです。 これは、一貫した値に設定されているときだけです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-609">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-610">次のコード例に示しますのオーバーライド バージョン、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-610">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="dcb3a-611">コード例をチェックするかどうかを表示する要素、`<label>`要素を呼び出して、<xref:System.String.Compare%2A?displayProperty=nameWithType>メソッド、および成功して、<xref:System.Web.UI.HtmlTextWriter.TagName%2A>プロパティの値と文字列の`"label"`パラメーターの引数として。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-611">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="dcb3a-612">場合、`<label>`要素のレンダリングの開始タグ、`<font>`要素で、`color`属性に設定`red`、前にレンダリング、`<label>`要素の開始タグ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-612">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="dcb3a-613">表示するために要素がない場合、`<label>`要素では、基本クラスのバージョンの<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-613">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcb3a-614">マークアップ タグの終了山かっこ (&gt;) を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-614">Represents the closing angle bracket (&gt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-615"><xref:System.Web.UI.HtmlTextWriter.TagRightChar>フィールドは使用、 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッド マークアップ タグを書き込むときにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-615">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-616">次のコード例は、の終了タグをレンダリングする方法を示します、`<table>`要素のオーバー ロードを呼び出すことによって、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-616">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="dcb3a-617">タグの最後の文字を表示するために、コード例を使用して、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.TagRightChar>をパラメーターとしてフィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-617">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="dcb3a-618">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-618">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-619">保留中のタブ空白文字と共に、指定したデータ型を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-619">Writes the specified data type to the output stream, along with any pending tab spacing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-620">出力ストリームに書き込む <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-620">The <see cref="T:System.Boolean" /> to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-621">保留中のタブ空白文字と共に、ブール値のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-621">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-622"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-623">出力ストリームに書き込む Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-623">The Unicode character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-624">保留中のタブ空白文字と共に、Unicode 文字のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-624">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-625"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-625">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-626">次のコード例では、使用方法を示します、<xref:System.Web.UI.HtmlTextWriter.Write%2A>の開始タグを終了する方法、`<img>`要素を使用して、<xref:System.Web.UI.HtmlTextWriter.TagRightChar>定数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-626">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="dcb3a-627">このコード例は、次のマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-627">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dcb3a-628">出力ストリームに書き込む Unicode 文字の配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-628">The array of Unicode characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-629">保留中のタブ空白文字と共に、Unicode 文字の配列のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-629">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-630"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-630">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-631">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-631">This section provides two code examples.</span></span> <span data-ttu-id="dcb3a-632">最初の例では、文字の配列を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-632">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="dcb3a-633">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-633">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="dcb3a-634">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-634">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="dcb3a-635">次のコード例を略さずに文字の配列を作成する方法を示しています`hello world`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-635">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="dcb3a-636">配列に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドには、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-636">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="dcb3a-637">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを表示するために、`hello world`文字配列をこのコード例を含むコントロールがページに含まれている場合、ページに前のコード例で作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-637">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-638">出力ストリームに書き込む倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-638">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-639">保留中のタブ空白文字と共に、倍精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-639">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-640"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-640">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-641">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Double.MaxValue?displayProperty=nameWithType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-641">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="dcb3a-642">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-642">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-643">出力ストリームに書き込む 32 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-643">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-644">保留中のタブ空白文字と共に、32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-644">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-645"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-646">出力ストリームに書き込む 64 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-646">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-647">保留中のタブ空白文字と共に、64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-647">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-648"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-649">出力ストリームに書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-649">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-650">保留中のタブ空白文字と共に、オブジェクトのテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-650">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-651"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-651">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-652">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-652">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dcb3a-653">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-653">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="dcb3a-654">値、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-654">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-655">出力ストリームに書き込む単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-655">The single-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-656">保留中のタブ空白文字と共に、単精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-656">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-657"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-657">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-658">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Single.Epsilon?displayProperty=nameWithType>フィールドで、最小有効値は、の<xref:System.Single>構造体。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-658">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="dcb3a-659">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-659">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="dcb3a-660">出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-660">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-661">保留中のタブ空白文字と共に、指定した文字列を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-661">Writes the specified string to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-662"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-662">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-663">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>開始タグと終了タグのカスタム マークアップ要素の間の文字列を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-663">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="dcb3a-664">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-664">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-665">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-665">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="dcb3a-666">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-666">An object to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-667">保留中のタブ空白文字と共に、<see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、タブ文字列と書式設定された文字列を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-667">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-668"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-668">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-669">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を持つ書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-669">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-670">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-670">A string that contains zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="dcb3a-671">書式設定するオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-671">An object array to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-672">保留中のタブ空白文字と共に、オブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-672">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="dcb3a-673">このメソッドは <see cref="M:System.String.Format(System.String,System.Object[])" /> メソッドと同じセマンティクスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-673">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-674"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-674">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-675">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-675">This section contains two code examples.</span></span> <span data-ttu-id="dcb3a-676">最初の例では、書式設定された文字列および配列の内容を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-676">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="dcb3a-677">2 番目の例では、配列を宣言する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-677">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="dcb3a-678">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>書式設定された文字列とオブジェクトの配列、名前付きの内容を表示するためにメソッド`curPriceTime`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-678">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="dcb3a-679">メソッドの呼び出しは、最初のメンバーを表示する前に、配列の 2 番目のメンバーを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-679">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="dcb3a-680">次のコード例では、宣言することを示しています、`curPriceTime`オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-680">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dcb3a-681">出力ストリームへのテキストの書き込み元となる文字配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-681">The array of characters from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="dcb3a-682">書き込みの開始位置を示す配列内のインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-682">The index location in the array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="dcb3a-683">出力ストリームに書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-683">The number of characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-684">保留中のタブ空白文字と共に、Unicode 文字の部分配列のテキスト形式を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-684">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-685"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-685">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-686">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-686">This section provides two code examples.</span></span> <span data-ttu-id="dcb3a-687">最初の例では、文字配列を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-687">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="dcb3a-688">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-688">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="dcb3a-689">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-689">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="dcb3a-690">次のコード例を略さずに文字の配列を作成する方法を示しています。`hello world`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-690">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="dcb3a-691">配列に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドには、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-691">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="dcb3a-692">次のコード例の部分を使用して、`index`と`count`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.Write%2A>前の例で作成された配列の最初の 5 文字を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-692">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-693">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-693">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="dcb3a-694">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-694">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="dcb3a-695">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-695">An object to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-696">保留中のタブ空白文字と共に、2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-696">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="dcb3a-697">このメソッドは <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-697">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-698"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>メソッドの基本します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-698">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-699">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値および書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>と<xref:System.DateTime.Today%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-699">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-700">マークアップ属性とその値を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-700">Writes a markup attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-701">出力ストリームに書き込む属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-701">The attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-702">属性に代入する値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-702">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-703">指定したマークアップ属性と値を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-703">Writes the specified markup attribute and value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-704">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>マークアップ属性とエンコードせずにその値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-704">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="dcb3a-705"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-705">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="dcb3a-706">場合`value`は`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、属性名のみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-706">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-707">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-707">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="dcb3a-708">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-708">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="dcb3a-709">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-709">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-710">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>過負荷、書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-710">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="dcb3a-711">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-711">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="dcb3a-712">要素の開始タグが閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-712">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="dcb3a-713">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-713">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-714">派生クラスでオーバーライドすることができます、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />属性とその値を書き込むためのカスタム規則を定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-714">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="dcb3a-715">たとえば、許可されているコードを記述することも、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />に空の値を使用して属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-715">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-716">出力ストリームに書き込むマークアップ属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-716">The markup attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-717">属性に代入する値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-717">The value assigned to the attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="dcb3a-718">属性とその代入値をエンコードする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-718"><see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-719">指定されたマークアップ属性と値を出力ストリームに書き込みます。また、指定されている場合は、エンコードされた値も書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-719">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-720">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>マークアップ属性とエンコードの有無は、その値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-720">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="dcb3a-721"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドを使用、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>エンコードを行うメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-721">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="dcb3a-722"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-722">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="dcb3a-723">場合`value`は`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、属性名のみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-723">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-724">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-724">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="dcb3a-725">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-725">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="dcb3a-726">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-726">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-727">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>過負荷、書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-727">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="dcb3a-728">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-728">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="dcb3a-729">要素の開始タグが閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-729">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="dcb3a-730">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-730">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dcb3a-731">派生クラスでオーバーライドすることができます、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />属性とその値を書き込むためのカスタム規則を定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-731">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="dcb3a-732">たとえば、許可されているコードを記述することも、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />に空の値を使用して属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-732">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="dcb3a-733">開始タグを書き込むマークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-733">The markup element of which to write the opening tag.</span></span></param>
        <summary><span data-ttu-id="dcb3a-734">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-734">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-735"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドには、マークアップ要素の開始タグの終わり山かっこ (>) は書き込みません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-735">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="dcb3a-736">これには、要素の開始タグのマークアップ属性の書き込みが実行できます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-736">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="dcb3a-737">使用して、<xref:System.Web.UI.HtmlTextWriter.TagRightChar>定数を呼び出すときに開始タグを閉じる、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-737">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="dcb3a-738">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>自己終了は、マークアップ要素を記述するときに定数です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-738">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="dcb3a-739"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>せずタグや属性のマッピングを許可する、各要求に対して同じ方法でマークアップ要素を表示するカスタムのサーバー コントロールがメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-740">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-740">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="dcb3a-741">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-741">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="dcb3a-742">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-742">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-743">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>過負荷、書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-743">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="dcb3a-744">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-744">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="dcb3a-745">要素の開始タグが閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-745">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="dcb3a-746">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-746">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-747"><see langword="&lt;br /&gt;" /> マークアップ要素を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-747">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-748">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>カスタム コントロールまたはアダプターのマークアップ内の行を表示するためにメソッドが中断します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="dcb3a-749"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>メソッドは、間に空白を書き込みます、`br`と`/`HTML 互換性を高めるためです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-749">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-750">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>書き込みます、`<br />`要素の後に要求元のブラウザーを<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッドは、エンコードされた書き込みます`&lt;custID&gt; &amp; &lt;invoice#&gt;`マークアップ。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-750">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dcb3a-751">エンコードして出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-751">The text string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-752">要求元のデバイスで指定したテキストをエンコードし、それを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-752">Encodes the specified text for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-753">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッド (string) には、山かっこが含まれている場合 (\<または >) または、アンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-753">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="dcb3a-754"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッドを使用、<xref:System.Web.HttpUtility.HtmlEncode%2A>エンコードを実行するメソッドも Unicode 文字に変換し、`00A0`に`&nbsp;`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-754">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-755">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>エンコード済みのマークアップを書き込みます`&lt;custID&gt; &amp; &lt;invoice#&gt;`出力ストリームにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-755">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="dcb3a-756"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>メソッド書き込み`<br />`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-756">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcb3a-757"><paramref name="text" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-757"><paramref name="text" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="dcb3a-758">エンコードして出力ストリームに書き込む URL 文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-758">The URL string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-759">指定された URL をエンコードしてから、出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-759">Encodes the specified URL, and then writes it to the output stream.</span></span> <span data-ttu-id="dcb3a-760">URL にはパラメーターが含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-760">The URL might include parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-761"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>メソッドは、文字列で、 `url` URL エンコード仕様に従ってパラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-761">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="dcb3a-762">疑問符 (?) の区切り記号に続くパラメーターはエンコードされません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-762">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-763">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>メソッドで、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-763">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText"><span data-ttu-id="dcb3a-764">エンコードして出力ストリームに書き込む URL パラメーターの文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-764">The URL parameter string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-765">指定した URL パラメーターを要求側のデバイスに合わせてエンコードし、それを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-765">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-766">URL のパラメーター部分に含まれるスペース、正符号 (+) としてエンコードされており、等号 (=) としてエンコード`%3d`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-766">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-767">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>メソッドで、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="dcb3a-768">終了タグを書き込む要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-768">The element to write the closing tag for.</span></span></param>
        <summary><span data-ttu-id="dcb3a-769">タブ空白文字と指定したマークアップ要素の終了タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-769">Writes any tab spacing and the closing tag of the specified markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-770">異なり、 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 、メソッド、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドには、対応する開始タグと一致する要素の終了タグを作成するためのロジックがありません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-770">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-771">次のコード例に示しますレンダリング、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-771">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="dcb3a-772">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-772">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="dcb3a-773">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>要素の開始文字を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-773">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="dcb3a-774">2 つのオーバー ロードを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドに属性を書き込む、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-774">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="dcb3a-775">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-775">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="dcb3a-776">出力ストリームに書き込む要素。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-776">The element to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-777">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-777">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-778"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>メソッドに自動的に右山かっこ (>) の書き込みでは、要素の開始タグとは異なり、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、終わり山かっは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-778">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="dcb3a-779">使用して<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>マークアップ要素の属性がないためです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-779">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-780">オーバーロードされたパラメーターで指定されたデータを <see cref="T:System.Web.UI.HtmlTextWriter" /> 出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-780">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span></span> <span data-ttu-id="dcb3a-781">このメソッドのすべてのバージョンで、保留中のタブ空白文字が出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-781">All versions of this method write any pending tab spacing to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-782">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-782">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-783"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-783">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb3a-784">行終端文字列を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-784">Writes a line terminator string to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-785">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-786">詳細については、「<xref:System.IO.TextWriter.WriteLine%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-786">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-787">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>後の行を挿入するメソッドを`<img>`要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-787">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-788">出力ストリームに書き込むブール値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-788">The Boolean to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-789">保留中のタブ空白文字とブール値のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-789">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-790">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-790">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-791"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-791">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-792">出力ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-792">The character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-793">保留中のタブ空白文字と Unicode 文字を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-793">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-794">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-795"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dcb3a-796">出力ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-796">The character array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-797">保留中のタブ空白文字と Unicode 文字の配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-797">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-798">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-799"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-800">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-800">This section provides two code examples.</span></span> <span data-ttu-id="dcb3a-801">最初の例では、配列を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-801">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="dcb3a-802">2 番目の例では、その配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-802">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="dcb3a-803">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-803">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="dcb3a-804">次のコード例を略さずに文字の配列を作成する方法を示しています。`hello world`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-804">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="dcb3a-805">配列に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドには、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-805">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="dcb3a-806">次のコード例での表示、`hello world`文字配列を使用して、前の例で作成された、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-806">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-807">出力ストリームに書き込む倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-807">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-808">保留中のタブ空白文字と倍精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-808">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-809">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-809">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-810"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-810">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-811">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Double.MaxValue?displayProperty=nameWithType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-811">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="dcb3a-812">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-812">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-813">出力ストリームに書き込む 32 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-813">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-814">指定したタブ文字列と 32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-814">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-815">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-815">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-816"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-816">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-817">出力ストリームに書き込む 64 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-817">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-818">指定したタブ文字列と 64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-818">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-819">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-820"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-821">出力ストリームに書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-821">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-822">保留中のタブ空白文字とオブジェクトのテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-822">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-823">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-824"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-825">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>プロパティ、コントロールをします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-826">出力ストリームに書き込む単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-826">The single-precision floating point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-827">保留中のタブ空白文字と単精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-827">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-828">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-828">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-829"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-829">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-830">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Single.Epsilon?displayProperty=nameWithType>フィールドで、最小有効値は、の<xref:System.Single>構造体。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-830">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="dcb3a-831">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-831">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="dcb3a-832">出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-832">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-833">保留中のタブ空白文字とテキスト文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-833">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-834">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-834">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-835"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-835">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dcb3a-836">出力ストリームに書き込む 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-836">The 4-byte unsigned integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-837">指定したタブ文字列と 4 バイトの符号なし整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-837">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-838">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-839"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-840">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-840">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="dcb3a-841">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-841">An object to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-842">保留中のタブ空白文字とオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-842">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-843">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-843">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-844"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-844">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="dcb3a-845"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-845">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-846">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を持つ書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-846">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-847">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-847">A string containing zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="dcb3a-848">書式設定するオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-848">An object array to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-849">保留中のタブ空白文字とオブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-849">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-850">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-850">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-851"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-851">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="dcb3a-852"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-852">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-853">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-853">This section contains two code examples.</span></span> <span data-ttu-id="dcb3a-854">最初の例では、文字列および配列を出力ストリームに表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-854">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="dcb3a-855">2 つ目は、配列を宣言する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-855">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="dcb3a-856">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>書式設定された文字列とオブジェクトの配列を出力ストリームの内容を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-856">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="dcb3a-857">次のコード例では、前のコード例では、表示されているオブジェクトの配列を宣言する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-857">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dcb3a-858">出力ストリームにテキストを書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-858">The character array from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="dcb3a-859">書き込みを開始する文字配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-859">The location in the character array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="dcb3a-860">出力ストリームに書き込む配列内の文字数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-860">The number of characters in the array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-861">保留中のタブ空白文字と Unicode 文字の部分配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-861">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-862">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-862">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-863"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-863">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-864">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-864">This section contains two code examples.</span></span> <span data-ttu-id="dcb3a-865">最初の例では、文字配列を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-865">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="dcb3a-866">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-866">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="dcb3a-867">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-867">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="dcb3a-868">次のコード例を略さずに文字の配列を作成する方法を示しています`hello world`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-868">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="dcb3a-869">配列に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドには、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-869">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="dcb3a-870">次のコード例では、`index`と`count`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの前のコード例で作成された配列の最初の 5 文字を表示するためにします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-870">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dcb3a-871">0 個以上の書式項目を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-871">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="dcb3a-872">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-872">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="dcb3a-873">書式指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-873">An object to format.</span></span></param>
        <summary><span data-ttu-id="dcb3a-874">保留中のタブ空白文字と 2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-874">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-875">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-875">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-876"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-876">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="dcb3a-877"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-877">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb3a-878">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値および書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティおよび<xref:System.DateTime.Today%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-878">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="dcb3a-879">出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-879">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="dcb3a-880">文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-880">Writes a string, followed by a line terminator string, to the output stream.</span></span> <span data-ttu-id="dcb3a-881">このメソッドは、指定されたタブ空白文字を無視します。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-881">This method ignores any specified tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-882">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A>メソッドではなく、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドは、レンダリングされた文字列の前、タブの空白文字を表示したくないと`s`です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-882">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="dcb3a-883">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-883">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="dcb3a-884"><xref:System.IO.TextWriter.WriteLine%2A>書き込む基本メソッドが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-884">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcb3a-885">スタイル属性とその値を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-885">Writes a style attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-886">出力ストリームに書き込むスタイル属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-886">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-887">スタイル属性に割り当てられた値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-887">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="dcb3a-888">指定したスタイル属性を出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-888">Writes the specified style attribute to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-889"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>メソッドは、次の形式でスタイル属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-889">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="dcb3a-890">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="dcb3a-890">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcb3a-891">出力ストリームに書き込むスタイル属性。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-891">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="dcb3a-892">スタイル属性に割り当てられた値。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-892">The value assigned to the style attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="dcb3a-893">スタイル属性と割り当てられた値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-893"><see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dcb3a-894">指定したスタイル属性と値を出力ストリームに書き込み、さらに指定されている場合は値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-894">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-895"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>メソッドは、次の形式でスタイル属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-895">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="dcb3a-896">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="dcb3a-896">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="dcb3a-897"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッドのエンコードが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-897">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dcb3a-898">エンコードして出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-898">The string to encode and write to the output stream.</span></span></param>
        <param name="argument">
          <span data-ttu-id="dcb3a-899">URL のパラメーター セクションの一部として文字列をエンコードする場合は <see langword="true" />。URL のパス セクションの一部として文字列をエンコードする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-899"><see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span></span></param>
        <summary><span data-ttu-id="dcb3a-900">指定された文字列を書き込んで、URL の要件に従ってエンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-900">Writes the specified string, encoding it according to URL requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb3a-901"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>メソッドは、URL の区切り記号と見なすことが文字をエンコード (の設定に依存する`argument`) 形式の文字列に`%xx`ASCII コードがより小さい 128、それ以外の場合、`%uxxxx`ここで、`x`は 16 進数。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-901">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="dcb3a-902"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>メソッドを使用して、<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>ユーティリティ メソッドとしてメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb3a-902">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>