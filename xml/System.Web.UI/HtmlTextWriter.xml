<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlTextWriter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512a77ea598c1fb3af16632e6711c2fe49de157af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12a77ea598c1fb3af16632e6711c2fe49de157af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">マークアップ文字とテキストを ASP.NET サーバー コントロールの出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">このクラスには、ASP.NET サーバー コントロールがマークアップをクライアントにレンダリングするときに使用する書式設定機能が用意されています。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、HTML 4.0 をデスクトップ ブラウザーに表示するために使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> is also the base class for all markup writers in the <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, including the <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>内のすべてのマークアップ ライターの基本クラスも、<ph id="ph2">&lt;xref:System.Web.UI&gt;</ph>名前空間を含む、 <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>、 <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>、および<ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">これらのクラスは、要素、属性、およびマークアップのさまざまな種類のスタイルとレイアウト情報の書き込みに使用されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">さらに、これらのクラスは、各マークアップの言語に関連付けられているページとコントロール アダプター クラスによって使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">ほとんどの場合、ASP.NET は自動的に要求元のデバイスの適切なライターを使用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">ただし、カスタム テキスト ライターを作成する場合、または特定のデバイス用のページを表示するために特定のライターを指定する場合は、割り当てる必要があります、ライターのページに、<ph id="ph1">`controlAdapters`</ph>アプリケーション .browser ファイルのセクションです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method of a custom control that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph>から派生したカスタム コントロールのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The code example illustrates how to use various <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> methods, properties, and fields.</source>
          <target state="translated">このコード例は、さまざまなを使用する方法を示しています。<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>メソッド、プロパティ、およびフィールドです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> instance that renders the markup content.</source>
          <target state="translated">マークアップ コンテンツをレンダリングする <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class that uses a default tab string.</source>
          <target state="translated">既定のタブ文字列を使用する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant when indentation of a line is necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph>コンス トラクターを使用して、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph>行のインデントは必要なときに定数です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> overload to initialize the new instance.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph>のオーバー ロードを新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph>カスタムを作成するコンス トラクター<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>という名前のオブジェクト<ph id="ph3">`StyledLabelHtmlWriter.`</ph>ときに、<ph id="ph4">`MyPage`</ph>から派生するカスタムのクラス、<ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>クラス、クライアントから要求されます。使用して、ブラウザー、<ph id="ph6">`StyledLabelHtmlWriter`</ph>を出力ストリームには、そのコンテンツをレンダリングします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that renders the markup content.</source>
          <target state="translated">マークアップ コンテンツをレンダリングする <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">行のインデントをレンダリングするために使用する文字列。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class with a specified tab string character.</source>
          <target state="translated">タブ文字列を指定して、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor uses <ph id="ph3">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph>コンス トラクターを使用して<ph id="ph3">`tabString`</ph>行のインデントが必要な場合です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base constructor to initialize the new instance.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>基底コンス トラクターを新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph>カスタムを作成するコンス トラクター<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>という名前のオブジェクト<ph id="ph3">`StyledLabelHtmlWriter.`</ph>ときに、<ph id="ph4">`MyPage`</ph>から派生するカスタムのクラス、<ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>クラス、クライアントから要求されます。使用して、ブラウザー、<ph id="ph6">`StyledLabelHtmlWriter`</ph>を出力ストリームには、そのコンテンツをレンダリングします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">追加する属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph>メソッド、属性は、のいずれかではない場合、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>値、実行時までに、属性が不明の場合またはします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">いずれかの特定のマークアップ要素のインスタンスの<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、その要素の属性の一覧を保持します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、任意の属性によって追加された、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドは、要素の開始タグに表示されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">属性の一覧はから削除し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>要素に属性を追加します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を呼び出す方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドを呼び出す前に、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The code calls two different overloads of <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and two different overloads of <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> before it calls the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to render a <ph id="ph4">`&lt;span&gt;`</ph> element to the output stream.</source>
          <target state="translated">2 つの異なるオーバー ロードを呼び出すコード<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>との 2 つの異なるオーバー ロード<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>を呼び出す前に、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドを表示するために、<ph id="ph4">`&lt;span&gt;`</ph>要素を出力ストリーム。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method is used to define the custom attribute named <ph id="ph2">`CustomAttribute`</ph> and the custom value named <ph id="ph3">`CustomAttributeValue`</ph> for the <ph id="ph4">`&lt;span&gt;`</ph> element that this code renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph>という名前のカスタム属性を定義するメソッドが使用される<ph id="ph2">`CustomAttribute`</ph>およびという名前のカスタム値<ph id="ph3">`CustomAttributeValue`</ph>の<ph id="ph4">`&lt;span&gt;`</ph>このコードを表示する要素。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">出力ストリームに追加するマークアップ属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to render a standard markup attribute.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph>標準マークアップ属性を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">いずれかの特定のマークアップ要素のインスタンスの<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、その要素の属性の一覧を保持します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、任意の属性によって追加される、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドは、要素の開始タグに表示されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">属性の一覧はから削除し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>要素に属性を追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to add an <ph id="ph3">`Onclick`</ph> attribute to a markup element, and then set its value to the following ECMAScript code:</source>
          <target state="translated">使用するコード例を次に示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph>を追加するメソッド、<ph id="ph3">`Onclick`</ph>マークアップ要素に属性し、ECMAScript コードを次にその値を設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">追加する属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性とその値をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">オプションのエンコーディングを使用して、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>メソッド、属性は、のいずれかではない場合、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>値、または実行時までのエンコード属性が不明の場合は必要です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">いずれかの特定のマークアップ要素のインスタンスの<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、その要素の属性の一覧を保持します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、任意の属性によって追加された、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドは、要素の開始タグに表示されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">属性の一覧はから削除し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>メソッドを<ph id="ph2">`fEncode`</ph>'éý'<ph id="ph3">`true`</ph>属性では、引用符 (")、不等号 (&lt;) を含めることができます可能性のある場合またはアンパサンド (&amp;)。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">メソッドの呼び出しは、要求元のデバイスの要件を満たすように属性がエンコードされます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">設定することができます<ph id="ph1">`fEncode`</ph>に<ph id="ph2">`false`</ph>属性が既にエンコードされていることがわかっている場合、これらの文字のいずれもが生成されることを把握している場合またはします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>要素に属性を追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that a custom attribute, named <ph id="ph3">`myattribute`</ph>, and its value are not encoded for an <ph id="ph4">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>ことを確認するカスタム属性を名前付きメソッド<ph id="ph3">`myattribute`</ph>の値がエンコードされていないと、<ph id="ph4">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">追加する属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the attribute.</source>
          <target state="translated">属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Adds the specified markup attribute and value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value, to the opening tag of the element that the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 列挙値と共に、指定されたマークアップ属性および値を追加します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph>メソッドから継承する場合にのみ、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">新規作成することができ<ph id="ph1">`name`</ph>と<ph id="ph2">`key`</ph>属性のペア。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">出力ストリームに追加するマークアップ属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性とその値をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">オプションのエンコーディングを使用して、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph>メソッド、標準のマークアップの属性、省略可能なエンコーディングとします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">いずれかの特定のマークアップ要素のインスタンスの<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、その要素の属性の一覧を保持します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、任意の属性によって追加された、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>要素の開始タグをレンダリングします。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">属性の一覧はから削除し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph>メソッドを<ph id="ph2">`fEncode`</ph>'éý'<ph id="ph3">`true`</ph>属性では、引用符 (")、不等号 (&lt;) を含めることができます可能性のある場合またはアンパサンド (&amp;)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">メソッドの呼び出しは、要求元のデバイスの要件を満たすように属性がエンコードされます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">設定することができます<ph id="ph1">`fEncode`</ph>に<ph id="ph2">`false`</ph>属性が既にエンコードされていることがわかっている場合、これらの文字のいずれもが生成されることを把握している場合またはします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>要素に属性を追加します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素のタグと終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that the string value that is assigned to an <ph id="ph2">`Alt`</ph> attribute for an <ph id="ph3">`&lt;img&gt;`</ph> element is encoded for the requesting device.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph>文字列値に割り当てられていることを確認する方法、<ph id="ph2">`Alt`</ph>属性の<ph id="ph3">`&lt;img&gt;`</ph>要素が要求元のデバイス用にエンコードされています。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds a markup style attribute to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトが後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成する要素の開始タグに、マークアップ スタイル属性を追加します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">追加するスタイル属性を格納している文字列。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">後続の <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成される開始タグに、指定されたマークアップ スタイル属性および属性値を追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method when the style is not a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration or is not known until run time.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph>メソッドは、スタイルがのメンバーではないと、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>列挙型か、実行時まで不明です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスはレンダリングされるマークアップ要素のスタイルのリストを保持します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、によって追加された任意のスタイル、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドは、要素の開始タグに表示されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">スタイルの一覧は、クリアされます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>要素に属性をすべてのスタイルを追加するメソッド。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素の開始と終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method to render <ph id="ph3">`font-size`</ph> and <ph id="ph4">`color`</ph> style attributes on a <ph id="ph5">`&lt;p&gt;`</ph> element.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph>メソッド<ph id="ph3">`font-size`</ph>と<ph id="ph4">`color`</ph>にスタイル属性、<ph id="ph5">`&lt;p&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>This code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to render the contents of the control.</source>
          <target state="translated">このコード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>コントロールの内容を表示するクラス。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add to the output stream.</source>
          <target state="translated">出力ストリームに追加するスタイル属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Adds the markup style attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> value and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成される開始マークアップ タグに、指定された <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 値および属性値に関連付けられたマークアップ スタイル属性を追加します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> method when the style is a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration and is known before run time.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph>メソッドは、スタイルのメンバーであると、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>列挙され、実行する前に呼ばれます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスはレンダリングされるマークアップ要素のスタイルのリストを保持します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、によって追加された任意のスタイル、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドは、要素の開始タグに表示されます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">スタイルの一覧は、クリアされます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">マークアップ要素を表示するためのコーディング パターンは次のとおりです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>要素に属性をすべてのスタイルを追加するメソッド。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">必要に応じてその他のメソッドを使用して、要素の開始と終了タグの間にあるコンテンツを表示します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The following code example demonstrates how to use part of an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例では、オーバーライドの一部を使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The code checks whether a <ph id="ph1">`&lt;Label&gt;`</ph> element is being rendered.</source>
          <target state="translated">コードのチェックするかどうか、<ph id="ph1">`&lt;Label&gt;`</ph>要素を表示しています。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method is called to check whether a <ph id="ph2">`Color`</ph> style attribute has been defined for the <ph id="ph3">`&lt;Label&gt;`</ph> element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph>を確認するメソッドが呼び出されたかどうか、<ph id="ph2">`Color`</ph>スタイル属性が定義されて、<ph id="ph3">`&lt;Label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If a <ph id="ph1">`Color`</ph> attribute has not been defined, the code calls this overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add the <ph id="ph3">`Color`</ph> attribute to the style attribute, and then set its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`Color`</ph>属性が定義されていない、コードのこのオーバー ロードを呼び出して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>を追加するメソッド、<ph id="ph3">`Color`</ph>スタイル属性を属性し、その値を設定し、<ph id="ph4">`red`</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">追加されるスタイル属性を格納している文字列。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add.</source>
          <target state="translated">追加するスタイル属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Adds the specified markup style attribute and the attribute value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value, to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">後続の <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの呼び出しで作成される開始マークアップ タグに、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 列挙値と共に、指定されたマークアップ スタイル属性および属性値を追加します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph>メソッドから継承する場合にのみ、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributes.</source>
          <target state="translated">新規作成することができ<ph id="ph1">`name`</ph>と<ph id="ph2">`value`</ph>のペアを<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトまたは派生クラスのオブジェクトに、コントロールが出力されようとしていることを通知します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph>メソッドに機能がありません。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>You must override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> to provide your own rendering functionality.</source>
          <target state="translated">オーバーライドする必要があります、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph>から派生したクラスのメソッド<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>独自の表示機能を提供します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> override.</source>
          <target state="translated">必要となるマークアップ言語ではたとえば、<ph id="ph1">`&lt;p&gt;`</ph>要素も、コントロールの前にすぐに表示できますの必要性、<ph id="ph2">`&lt;p&gt;`</ph>要素は前に決定されます、使用する可能性があります、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph>をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and releases any system resources associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトを閉じ、関連付けられているシステム リソースを解放します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> base method.</source>
          <target state="translated">この実装、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Following a call to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method, any operations on the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object might throw exceptions because all its resources have been released.</source>
          <target state="translated">呼び出しに続く、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph>メソッド、任意の操作で、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>すべてのリソースが解放されたために、オブジェクトが例外をスロー可能性があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>Represents a single tab character.</source>
          <target state="translated">単一のタブ文字を表します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">1 つのタブは、ASCII 9 文字で表されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The following code example demonstrates how to create a constructor that takes a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object as a parameter and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field as a parameter argument to a second version of the constructor.</source>
          <target state="translated">次のコード例を使用するコンス トラクターを作成する方法を示しています、<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>オブジェクト パラメーターおよびパスとして、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph>コンス トラクターの 2 番目のバージョンへのパラメーターの引数としてフィールドです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>When this constructor is called from code, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</source>
          <target state="translated">このコンス トラクターは、コードから呼び出されたときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph>フィールドは、ページまたはアダプタによって使用されるマークアップ ライターのインスタンスのインデント ポリシーを定義します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">引用符 (") を表します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to close an attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>属性を閉じます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、レンダリングする方法を示します、<ph id="ph1">`border`</ph>属性を<ph id="ph2">`&lt;table&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">コードの呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッド、属性値およびその使用方法を表示するために、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを表示するために、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph>と<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">現在のコンテキストの <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">エンコードする属性値を含む文字列。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性値をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">現在のコンテキストの <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the encoded attribute value, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is empty, or the unencoded attribute value if <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> が空の場合は、エンコードされた属性値を含む文字列 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。または <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> が <ph id="ph4">&lt;see langword="false" /&gt;</ph> の場合は、エンコードされていない属性値。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method if the attribute is not an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> enumeration value or is not known until run time.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph>メソッド、属性がない場合、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>列挙値か、実行時まで不明です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph>メソッドの削除は二重引用符 (")、アンパサンド (&amp;)、入力に関係なく、記号 (&lt;) ため、その無効なタグは生成されませんよりも小さくするとします。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">によって実行は、実際のエンコード、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call, and then encodes a <ph id="ph3">`color:blue`</ph> style attribute value.</source>
          <target state="translated">次のコード例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph>メソッドのパラメーターとして、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドを呼び出すし、エンコードして、<ph id="ph3">`color:blue`</ph>スタイル属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> representing the markup attribute.</source>
          <target state="translated">マークアップ属性を表す <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">エンコードする属性値を含む文字列。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">現在のコンテキストの <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">エンコードされた属性値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph>メソッドの削除は二重引用符 (")、アンパサンド (&amp;)、入力に関係なく、記号 (&lt;) ため、その無効なタグは生成されませんよりも小さくするとします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">によって実行は、実際のエンコード、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the URL to encode.</source>
          <target state="translated">エンコードする URL を格納している文字列。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">指定した URL 内の空白文字列を "%20" に変換して、最小限の URL エンコーディングを実行します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the encoded URL.</source>
          <target state="translated">エンコードされた URL を格納している文字列。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">文字の URL エンコードは、パーセント記号 (%) の後に、2 桁の 16 進表現 (大文字)、ラテン文字の ISO コード ポイントの文字で構成されます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">スペースを 16 進表現は 20 です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> method to convert any spaces in the URL that is passed as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call.</source>
          <target state="translated">次のコード例を呼び出す方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph>でパラメーターとして渡される URL に含まれるスペースに変換するメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドの呼び出しです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>Gets the encoding that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object uses to write content to the page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトがページにコンテンツを書き込むために使用するエンコーディングを取得します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the markup is written to the page.</source>
          <target state="translated">マークアップをページに書き込むときに使用される <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property obtains its value from the base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph>プロパティ ベースからその値を取得する<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property to write the type of encoding that a custom control uses to render text to the page that contains it.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph>プロパティをカスタム コントロールが含まれているページにテキストを表示するために使用するエンコードの種類を記述します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトまたは派生クラスのオブジェクトに、コントロールのレンダリングが完了したことを通知します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use this method to close any markup elements opened in the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">このメソッドを使用して、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> メソッドで開かれたすべてのマークアップ要素を閉じることができます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph>メソッドに機能がありません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You must override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to provide your own rendering functionality.</source>
          <target state="translated">オーバーライドする必要があります<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph>から派生したクラスで、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>独自の表示機能を提供するクラス。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method to close any markup elements opened in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph>で開かれているすべてのマークアップ要素を終了するメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">マークアップ要素の終了タグの左山かっことスラッシュ記号 (<ph id="ph1">&amp;lt;</ph>/) を表します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to construct markup element end tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>マークアップ要素の終了タグを作成するメソッド。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> markup element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> fields as parameter values in calls to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、の終了タグをレンダリングする方法を示します、<ph id="ph1">`&lt;table&gt;`</ph>マークアップ要素を使用して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph>フィールドへの呼び出しでパラメーター値として、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">指定されたスタイルのレイアウトと文字書式を実装するための属性を含む <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> 要素の開始タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">同じ値を使用して<ph id="ph1">`style`</ph>で、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 、対応するのに使用する方法<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the opening tag of a <ph id="ph3">`&lt;span&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph>メソッドの開始タグの表示、<ph id="ph3">`&lt;span&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">このメソッドから、必要な属性とスタイルの属性に追加の開始タグ、<ph id="ph1">`&lt;span&gt;`</ph>要素によって指定される設定を表示する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> overload.</source>
          <target state="translated">属性とスタイル属性を含む、使用する異なるマークアップ要素をレンダリングする場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">次のコード例は、という名前のカスタム クラスを使用する方法を示します<ph id="ph1">`TextSample`</ph>から派生した、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>を使用して、クラス、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>適用する方法、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph>スタイルのテキスト文字列をします。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドに、HTML 表示<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドの呼び出しが閉じ、<ph id="ph2">`&lt;span&gt;`</ph>テキストが表示された後の要素。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the opening tag of the markup element that will contain the style object specified in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept> で指定されたスタイル オブジェクトを含んだマークアップ要素の開始タグを指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">同じ値を使用して<ph id="ph1">`style`</ph>で、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 、対応するのに使用する方法<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the opening tag of the element specified by the <ph id="ph3">`tag`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph>メソッドで指定した要素の開始タグの表示、<ph id="ph3">`tag`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph>メソッドし、必要な属性とスタイル属性を追加で指定されている設定を表示する要素の開始タグ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> overload to render the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph>の開始タグを表示するためにオーバー ロード、<ph id="ph2">`&lt;span&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">次のコード例は、という名前のカスタム クラスを使用する方法を示します<ph id="ph1">`TextSample`</ph>から派生した、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>を使用して、クラス、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>適用する方法、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph>スタイルのテキスト文字列をします。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドに、HTML 表示<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドの呼び出しが閉じ、<ph id="ph2">`&lt;span&gt;`</ph>テキストが表示された後の要素。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>Represents the equal sign (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</source>
          <target state="translated">等号 (<ph id="ph1">&lt;see langword="=" /&gt;</ph>) を表します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>You might want to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph>の代わりにフィールド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph>フィールドの属性値の区切り記号を構築するときにします。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The following code example shows how to render the <ph id="ph1">`src`</ph> attribute and part of its value for an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、レンダリングする方法を示します、<ph id="ph1">`src`</ph>属性と用の値の一部、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call to render the equal sign (=) between the <ph id="ph3">`src`</ph> attribute and its value.</source>
          <target state="translated">コードを使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph>フィールドで、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの呼び出しの間で、等号 (=) を表示するために、<ph id="ph3">`src`</ph>属性とその値。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">文字列 (=") の等号 (=) と二重引用符文字 (") の両方を表します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods to construct the opening delimiter of attribute values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>を属性値の区切り記号を構築するメソッド。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、レンダリングする方法を示します、<ph id="ph1">`border`</ph>属性を<ph id="ph2">`&lt;table&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">コードの呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッド、属性値およびその使用方法を表示するために、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを表示するために、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph>と<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the closing tag of a markup element to end the specified layout and character formatting.</source>
          <target state="translated">指定したレイアウトと文字書式を終了するマークアップ要素の終了タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to close.</source>
          <target state="translated">閉じるレイアウトと書式設定を指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the closing tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element to end the specified layout and character formatting.</source>
          <target state="translated">指定したレイアウトと文字書式を終了する <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> 要素の終了タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the closing tag of a <ph id="ph3">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph>メソッドの終了タグの表示、<ph id="ph3">`&lt;span&gt;`</ph>要素の後に、コントロールの終了タグ、要素を閉じる、対応するによって開かれた<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>呼び出します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成するには、デバイス アダプターまたはコントロールを使用します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">同じ値を使用して<ph id="ph1">`style`</ph>で、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 、対応するのに使用する方法<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">次のコード例は、という名前のカスタム クラスを使用する方法を示します<ph id="ph1">`TextSample`</ph>から派生した、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>を使用して、クラス、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>適用する方法、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph>スタイルのテキスト文字列をします。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドに、HTML 表示<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドの呼び出しが閉じ、<ph id="ph2">`&lt;span&gt;`</ph>テキストが表示された後の要素。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated">出力テキストへの適用を停止するよう、レイアウトと書式設定を指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated">指定されたスタイルを適用した属性を含んだマークアップ要素の終了タグを指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>This must match the key passed in the corresponding <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> call.</source>
          <target state="translated">これは、対応する <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> 呼び出しで渡されたキーに一致する必要があります。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">指定されたマークアップ要素の終了タグを書き込んで、指定されたレイアウトと文字書式を終了します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the closing tag of the element that is specified by <ph id="ph3">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph>メソッドで指定されている要素の終了タグをレンダリングする<ph id="ph3">`tag`</ph>、コントロールの終了タグの後に、対応するによって開かれた要素を閉じる<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph>メソッドの呼び出しです。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成するには、デバイス アダプターまたはコントロールを使用します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">同じ値を使用して<ph id="ph1">`style`</ph>で、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> 、対応するのに使用する方法<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">次のコード例は、という名前のカスタム クラスを使用する方法を示します<ph id="ph1">`TextSample`</ph>から派生した、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>を使用して、クラス、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>適用する方法、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph>スタイルのテキスト文字列をします。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph>メソッドに、HTML 表示<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph>メソッドの呼び出しが閉じ、<ph id="ph2">`&lt;span&gt;`</ph>テキストが表示された後の要素。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">ページまたは Web サーバー コントロールのすべてのプロパティで、すべてのマークアップとスタイル属性を削除します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Before attributes are rendered on a markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method is called.</source>
          <target state="translated">属性は、マークアップ要素上に描画される前に、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> methods for each attribute and style to render.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph>属性とスタイルをレンダリングするためのメソッドです。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例から派生するカスタム クラスを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>をオーバーライドするクラス、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements:</source>
          <target state="translated">呼び出されると、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかをチェック<ph id="ph2">`&lt;label&gt;`</ph>または<ph id="ph3">`&lt;a&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method checks whether a <ph id="ph3">`style`</ph> attribute is rendered on the element and, if not, creates a <ph id="ph4">`style`</ph> attribute and sets it to <ph id="ph5">`color: blue`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`&lt;label&gt;`</ph>要素を表示している、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッド チェックするかどうか、<ph id="ph3">`style`</ph>属性は要素に表示され、いない場合は、作成、<ph id="ph4">`style`</ph>属性し、設定<ph id="ph5">`color: blue`</ph>です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If an <ph id="ph1">`&lt;a&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether an <ph id="ph3">`href`</ph> attribute is included and, if not, adds an <ph id="ph4">`href`</ph> to the URL <ph id="ph5">http://www.cohowinery.com</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`&lt;a&gt;`</ph>要素を表示している、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドを判断するかどうか、<ph id="ph3">`href`</ph>属性が含まれる、できない場合、追加、 <ph id="ph4">`href`</ph> URL に<ph id="ph5">http://www.cohowinery.com</ph>です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>Clears all buffers for the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトのすべてのバッファーをクリアし、バッファー内のすべてのデータを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> method just calls the <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph>メソッドを呼び出すだけ、<ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>A string that contains the attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> の取得対象となる属性を格納している文字列。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>Obtains the corresponding <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute.</source>
          <target state="translated">指定した属性に対応する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 列挙値を取得します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute; otherwise, an invalid <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">指定した属性の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 列挙値。属性が列挙型のメンバーでない場合は無効な <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, is returned.</source>
          <target state="translated">場合<ph id="ph1">`attrName`</ph>は<ph id="ph2">`null`</ph>または空の文字列 ("")、またはに型指定された属性の名前、値-1 で、テーブルに見つかりません、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>オブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The following code example demonstrates how to use a class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例から派生したクラスを使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>をオーバーライドするクラス、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The override checks whether <ph id="ph1">`tagKey`</ph> is equal to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> field, which indicates that a <ph id="ph3">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">上書きのチェックするかどうか<ph id="ph1">`tagKey`</ph>と等しい、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph>フィールドであることを示す、<ph id="ph3">`&lt;font&gt;`</ph>マークアップ要素が表示されます。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to find out whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">そのため、オーバーライドを呼び出す場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph>かどうかを検索するメソッド、<ph id="ph2">`&lt;font&gt;`</ph>要素が含まれています、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> and sets its value to <ph id="ph6">`30pt`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph>返します<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドの呼び出し、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph>定義するメソッド、<ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>し、その値に設定<ph id="ph6">`30pt`</ph>です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> to obtain the markup attribute name for.</source>
          <target state="translated">マークアップ属性名の取得対象の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Obtains the name of the markup attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> 値に関連付けられたマークアップ属性の名前を取得します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">マークアップ属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method returns an empty string (""), if <ph id="ph2">`attrKey`</ph> is not a valid <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph>メソッドは、空の文字列を返します ("") 場合は、<ph id="ph2">`attrKey`</ph>が無効です<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> enumeration value to its string name.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph>に変換する方法、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>列挙体の値、文字列名。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The style attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> の取得対象のスタイル属性。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value for the specified style.</source>
          <target state="translated">指定したスタイルの <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 列挙値を取得します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value corresponding to <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="styleName" /&gt;</ph> に対応する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 列挙値。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method returns the value -1 typed as a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> value, if <ph id="ph3">`styleName`</ph> does not correspond to any <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph>メソッドが値として型指定された-1 を返します、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>場合は、値<ph id="ph3">`styleName`</ph>いずれかに対応しない<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>列挙値。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例をオーバーライドする方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determines whether a <ph id="ph2">`&lt;label&gt;`</ph> markup will be rendered, and, if so, checks the element for a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>オーバーライドによりかどうか、<ph id="ph2">`&lt;label&gt;`</ph>マークアップを表示する場合は、要素を確認し、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method is used as the first parameter in a call to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to a <ph id="ph5">`&lt;label&gt;`</ph> markup element and set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`red`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性が定義されていない、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph>メソッドへの呼び出しの最初のパラメーターとして使用されます、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>を追加するメソッド、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性を<ph id="ph5">`&lt;label&gt;`</ph>マークアップ要素、 <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> 属性<ph id="ph7">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> to obtain the style attribute name for.</source>
          <target state="translated">スタイル属性名の取得対象の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>Obtains the markup style attribute name associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 列挙値に関連付けられたマークアップ スタイル属性名を取得します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The style attribute name associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value specified in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph> で指定された <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> 列挙値に関連付けられたスタイル属性名。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">場合<ph id="ph1">`styleKey`</ph>が無効です<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>オブジェクト、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph>メソッドは、空の文字列を返します ("") です。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">次のコード例を確認する方法を示して かどうか、<ph id="ph1">`&lt;label&gt;`</ph>要素を表示しています。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, it checks whether a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">場合は、ことを確認するかどうか、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>スタイル属性が要素で定義されています。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the attribute has not been defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method is called and the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method converts the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> enumeration member into its string representation to pass to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method.</source>
          <target state="translated">属性が定義されていない場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドが呼び出されると、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph>メソッドに変換、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>列挙メンバーに渡すには、その文字列形式に、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The markup element for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> の取得対象のマークアップ要素。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value associated with the specified markup element.</source>
          <target state="translated">指定したマークアップ要素に関連付けられた <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 列挙値を取得します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value; otherwise, if <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> is not associated with a specific <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 列挙値。<ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> が特定の <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 値に関連付けられていない場合は <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method returns the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> field.</source>
          <target state="translated">場合<ph id="ph1">`tagName`</ph>は<ph id="ph2">`null`</ph>、空の文字列 ("")、またはマークアップ タグ名のテーブルに見つかりません、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph>メソッドを返します、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The following code example shows how to override the overload of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that takes a string as its parameter.</source>
          <target state="translated">次のコード例は、のオーバー ロードをオーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドのパラメーターとして文字列を受け取る。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The string is passed to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method, which converts it to the corresponding <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration member, and then passes that to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload that takes a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration value as a parameter.</source>
          <target state="translated">文字列が渡される、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph>メソッドで、対応する変換<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph>列挙型メンバー、しに渡します、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>を受け取るオーバー ロード、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph>列挙値をパラメーターとして。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> to obtain the markup element for.</source>
          <target state="translated">マークアップ要素の取得対象の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>Obtains the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 列挙値に関連付けられたマークアップ要素を取得します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>A string representing the markup element.</source>
          <target state="translated">マークアップ要素を表す文字列。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">場合<ph id="ph1">`tagKey`</ph>が無効です<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph>値、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph>メソッドは、空の文字列を返します ("") です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to close a <ph id="ph1">`&lt;font&gt;`</ph> element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を終了する方法を示しています、<ph id="ph1">`&lt;font&gt;`</ph>要素を使用して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> value to a string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph>に変換する方法、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph>値を文字列にします。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">マークアップの各行の開始位置のインデントを設定するタブ位置の数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">各行のインデントを設定するタブ位置の数。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor the number of times that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property.</source>
          <target state="translated">指定された文字列を記述してインデントを実行、<ph id="ph1">`tabString`</ph>のパラメーター、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph>コンス トラクターで指定されている回数、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph>プロパティが負の値に設定、保存される前に 0 に変更されます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The following code example demonstrates how to increment the value that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property when attributes have been added to the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method has been called.</source>
          <target state="translated">次のコード例に割り当てられている値をインクリメントする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph>プロパティの開始タグに属性が追加されたときに、<ph id="ph2">`&lt;span&gt;`</ph>要素および<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>This increases the indentation for any markup that is rendered inside the <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">内にレンダリングするすべてのマークアップでインデントが大きくなります、<ph id="ph1">`&lt;span&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">マークアップ要素の内部コンテンツを書き込むテキスト ライターを取得または設定します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the inner markup content.</source>
          <target state="translated">内部マークアップの内容を書き込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">内部マークアップの内容は、開始タグと終了タグのマークアップ言語要素の間にあるテキストです。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object that is an instance of the <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph>プロパティに設定されている、<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>オブジェクトのインスタンスでは、<ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph>クラスは、このファクトが記録され、別の参照を保存します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>The following code example shows how to use a custom Web server control, derived from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例から派生したカスタム Web サーバー コントロールを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>をオーバーライドするクラス、<ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>It uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to write a <ph id="ph2">`&lt;font&gt;`</ph> element.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>を記述するクラス、<ph id="ph2">`&lt;font&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>After it writes the opening tag of the element, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property to write the string <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> and concatenates this string with the value of the <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">使用して、要素の開始タグを書き込み、後に、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph>プロパティの文字列に書き込む<ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph>の値を持つには、この文字列を連結し、<ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">マークアップ属性に関連付けられた <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に属性をレンダリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>To obtain the value to be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> overload instead of this one.</source>
          <target state="translated">割り当てられる値を取得する、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>オブジェクトを使用して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph>この 1 つではなく、オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例のオーバーライドを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>から継承するクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override checks whether a <ph id="ph2">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>かどうかのチェックを無効、<ph id="ph2">`&lt;font&gt;`</ph>マークアップ要素が表示されます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to check whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">そのため、オーバーライドを呼び出す場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph>を確認するかどうか、<ph id="ph2">`&lt;font&gt;`</ph>要素が含まれています、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If not, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and sets its value to <ph id="ph4">`30pt`</ph>.</source>
          <target state="translated">ない場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph>定義するメソッド、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性し、その値に設定<ph id="ph4">`30pt`</ph>です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">マークアップ属性に関連付けられた <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">属性に代入する値。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に属性をレンダリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph>メソッドを返します。 <ph id="ph2">`true`</ph>、に割り当てられる値、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph>オブジェクトが返され、<ph id="ph4">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether a markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、マークアップ スタイル属性をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">属性に関連付けられている <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に属性をレンダリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>To get the value that will be rendered with the specified style attribute, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method.</source>
          <target state="translated">指定したスタイルの属性を持つレンダリングされる値を取得するを使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">次のコード例を確認する方法を示して かどうか、<ph id="ph1">`&lt;label&gt;`</ph>要素を表示しています。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method checks whether a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph>メソッド チェックするかどうか、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>スタイル属性が要素で定義されています。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute and sets its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性が定義されていない、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドを定義、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性し、その値に設定<ph id="ph4">`red`</ph>です。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">属性に関連付けられている <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">スタイル属性に割り当てられた値。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性とその値をレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute and its value will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> メソッドの次回の呼び出し中に属性とその値をレンダリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribute is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph>メソッドを返します。 <ph id="ph2">`true`</ph>、に割り当てられる値、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph>で属性が返される、<ph id="ph4">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">確認する属性の名前が格納されている文字列。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> markup element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> マークアップ要素の開始タグに確実に属性がレンダリングされるようにするために、属性を確認します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> for all attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph>メソッドを返します。<ph id="ph3">`true`</ph>すべての属性です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> to limit the attributes that can be rendered in the opening tag of a <ph id="ph2">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">上書き、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph>の開始タグ内にレンダリングできる属性を制限、<ph id="ph2">`&lt;form&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only for those attributes that can be included in the <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> element of the markup for which the class derived from the <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class is intended.</source>
          <target state="translated">上書き、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph>を返すメソッドを<ph id="ph2">&lt;see langword="true" /&gt;</ph>に含めることがこれらの属性に対してのみ、<ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph>から派生したクラスのマークアップの要素、<ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>クラスが目的としています。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> オブジェクトで使用される行終端文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string used by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> で使用される行終端文字列。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The default line terminator string is a carriage return, followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターン、ライン フィード ("\r\n") の後にします。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string is written to the output stream whenever one of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> methods is called.</source>
          <target state="translated">行終端記号の文字列が 1 つの出力ストリームに書き込まれるの<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, the default new line character is used.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`null`</ph>、デフォルト改行文字を使用します。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例から派生するカスタム クラスを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>をオーバーライドするクラス、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements.</source>
          <target state="translated">呼び出されると、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかをチェック<ph id="ph2">`&lt;label&gt;`</ph>または<ph id="ph3">`&lt;a&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether a style attribute is defined for the label.</source>
          <target state="translated">その場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドは、ラベルのスタイル属性が定義されているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If no style is defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method sets the default value for the <ph id="ph2">`style:color`</ph> attribute to blue.</source>
          <target state="translated">スタイルが定義されていない場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドの既定値の設定、<ph id="ph2">`style:color`</ph>青に属性。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method then uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property to insert a line break in the markup tag and writes any other defined attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph>メソッドを使用して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph>行を挿入するプロパティがマークアップ タグで中断およびその他の定義済みの属性を書き込みます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">レンダリングする属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">マークアップ属性に関連付けられた <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">指定したマークアップ属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph>メソッドは常に返します<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph>オーバーライドでは、属性が、ページに表示するかどうかを判断できます。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> value is not <ph id="ph3">`30pt`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override calls the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph7">`30pt`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性が表示されますが、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>値ではありません<ph id="ph3">`30pt`</ph>では、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph>呼び出しをオーバーライド、<ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>を追加するメソッド、<ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性し、その値に設定<ph id="ph7">`30pt`</ph>です。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</source>
          <target state="translated">継承する場合、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>クラスをオーバーライドできます、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph>を返すメソッドを<ph id="ph3">&lt;see langword="false" /&gt;</ph>属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップに表示されるようにするのにします。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>For example, if you do not want the object derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribute to <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elements, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</source>
          <target state="translated">派生したオブジェクトしたくない場合など<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>表示するために、<ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph>属性を<ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph>要素をオーバーライドできます、<ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph>を返すと<ph id="ph5">&lt;see langword="false" /&gt;</ph>とき<ph id="ph6">&lt;paramref name="name" /&gt;</ph>渡します<ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph>および<ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph>プロパティの値が<ph id="ph9">&lt;see langword="table" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">レンダリングするスタイル属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">スタイル属性に割り当てる値を格納している文字列。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the style attribute.</source>
          <target state="translated">スタイル属性に関連付けられている <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">指定されたマークアップ スタイル属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph>メソッドは常に返します<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph>オーバーライドでは、ページにスタイル属性を表示するかどうかを判断できます。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> value is not <ph id="ph3">`purple`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override uses the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`purple`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>スタイル属性が表示されると、ですが、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>値ではありません<ph id="ph3">`purple`</ph>、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph>使用のオーバーライド、<ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>を設定するメソッド、<ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph>属性を<ph id="ph7">`purple`</ph>です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</source>
          <target state="translated">継承する場合、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>クラスをオーバーライドできます、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph>を返すメソッドを<ph id="ph3">&lt;see langword="false" /&gt;</ph>スタイル属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップ言語に表示されるようにするのにします。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="color" /&gt;</ph> style attribute to a <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="color" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</source>
          <target state="translated">派生したオブジェクトしたくない場合など<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>表示するために、<ph id="ph2">&lt;see langword="color" /&gt;</ph>スタイル属性を<ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph>要素をオーバーライドできます、<ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph>を返すと<ph id="ph5">&lt;see langword="false" /&gt;</ph>とき<ph id="ph6">&lt;paramref name="name" /&gt;</ph>を渡します<ph id="ph7">&lt;see langword="color" /&gt;</ph>と<ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph>プロパティの値が<ph id="ph9">&lt;see langword="p" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">レンダリングする要素の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associated with the element.</source>
          <target state="translated">要素に関連付けられた <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">指定したマークアップ要素を要求側のページにレンダリングするかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>のクラスの実装、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph>メソッドは常に返します<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph>オーバーライドでは、要素をページに表示するかどうかを判断できます。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to determine whether a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is being rendered.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph>要素を表示している、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph>使用をオーバーライド、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph>メソッドを呼び出せば確認するかどうか、<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性を表示しています。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If not, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph3">`20pt`</ph>.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドを作成、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph>属性し、その値に設定<ph id="ph3">`20pt`</ph>です。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a markup element from being rendered at all or for a particular markup language.</source>
          <target state="translated">継承する場合、<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>クラスをオーバーライドできます、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph>を返すメソッドを<ph id="ph3">&lt;see langword="false" /&gt;</ph>マークアップ要素がまったく、または特定のマークアップ言語用に表示されないようにします。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph4">&lt;see langword="false" /&gt;</ph> when a page is requested that contains a <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">派生したオブジェクトしたくない場合など<ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>表示するために、<ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph>要素をオーバーライドできます、<ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph>を返すメソッドを<ph id="ph4">&lt;see langword="false" /&gt;</ph>を含むページが要求されたときに、<ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">マークアップ文字の行のインデント レベルを表す一連のタブ文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property to determine how many tab strings to write to obtain the desired indentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph>メソッドを使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph>させることが必要なインデントを記述する方法の多くのタブ文字列を決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The tab string is specified with the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">タブ文字列が指定された、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>If no tab string is specified, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) is used.</source>
          <target state="translated">タブ文字列が指定されていない場合、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph>定数 (<ph id="ph2">`\t`</ph>) を使用します。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method in a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> override always uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant to perform the indentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph>オーバーライド常に使用して、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph>インデントを実行する定数。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">レンダリングする要素のリストから、最近保存したマークアップ要素を削除します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the most recently rendered markup element.</source>
          <target state="translated">最近レンダリングしたマークアップ要素を格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Elements are added to the list of rendered markup elements by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">要素によって出力されるマークアップ要素の一覧に追加されます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list by calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>メソッドは、呼び出すことによって、一覧からマークアップ要素を削除、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">レンダリングする要素のリストが空です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The closing tag of the markup element.</source>
          <target state="translated">マークアップ要素の終了タグ。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">マークアップ要素の終了タグを生成するときに、後で使用できるように、指定されたマークアップ要素を保存します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Elements are added to the list of rendered markup elements when the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> method.</source>
          <target state="translated">要素でレンダリングされるマークアップ要素の一覧に追加されるときに、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>メソッドでは、要素の終了タグを表示した後に、一覧からマークアップ要素を削除します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">登録するマークアップ属性の名前を格納している文字列。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that corresponds with the attribute name.</source>
          <target state="translated">属性名に対応する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">リテラルの、または動的に生成されたマークアップ属性をソース ファイルから登録して、これらの属性を要求側のクライアントに適切にレンダリングできるようにします。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The predefined attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">呼び出しによって、HTML マークアップ言語の定義済みの属性が登録されている、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph>メソッドと最初<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Dynamic attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method at other times.</source>
          <target state="translated">動的な属性を使用して登録することができます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph>別の時のメソッドです。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">使用される登録テーブル、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph>メソッドは<ph id="ph2">`static`</ph>ですべての属性の登録が適用されるため、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>ホスト コンピューター上のオブジェクト。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">スタイル名を指定するソース ファイルから渡された文字列。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that corresponds with the specified style.</source>
          <target state="translated">指定したスタイルに対応する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">リテラルの、または動的に生成されたマークアップ スタイル プロパティをソース ファイルから登録して、これらのプロパティを要求側のクライアントに適切にレンダリングできるようにします。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">呼び出しによって、HTML マークアップ言語のカスケード スタイル シート (CSS) の定義済み属性が登録されている、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph>メソッドと最初<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Dynamic style attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method at other times.</source>
          <target state="translated">動的なスタイル属性を使用して登録することができます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph>別の時のメソッドです。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">使用される登録テーブル、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph>メソッドは<ph id="ph2">`static`</ph>ですべての属性の登録が適用されるため、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>ホスト コンピューター上のオブジェクト。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">HTML タグを格納している文字列。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies which element to render.</source>
          <target state="translated">レンダリングする要素を指定する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">リテラルの、または動的に生成されたマークアップ タグをソース ファイルから登録して、それらのタグを要求側のクライアントに適切にレンダリングできるようにします。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The predefined markup tags of the HTML language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">呼び出しによって HTML 言語の定義済みのマークアップ タグが登録されている、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph>メソッドと最初<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Dynamic markup tags can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method at other times.</source>
          <target state="translated">使用して動的なマークアップ タグを登録することができます、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph>別の時のメソッドです。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of tags applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">使用される登録テーブル、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph>メソッドは<ph id="ph2">`static`</ph>すべてにタグの登録が適用されるため、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>ホスト コンピューター上のオブジェクト。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">マークアップ要素のコンテンツの後および終了タグの前に出現するテキストまたは空白文字をマークアップの出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">要素のコンテンツの後に書き込む空白文字またはテキストを格納している文字列。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph>メソッドをマークアップの現在の要素に子要素を挿入する場合に便利にすることができます。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to determine whether a <ph id="ph3">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスを決定するかどうか、<ph id="ph3">`&lt;label&gt;`</ph>要素を表示しています。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the closing tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph>上書き挿入の終了タグ、<ph id="ph2">`&lt;font&gt;`</ph>の終了タグの直前の要素、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If an element other than <ph id="ph1">`&lt;label&gt;`</ph> is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">要素以外の場合<ph id="ph1">`&lt;label&gt;`</ph>、表示される、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph>基本メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>のクラスの実装、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph>メソッドを返します。<ph id="ph3">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> if you want to write text or spacing after the element content but before the closing tag.</source>
          <target state="translated">オーバーライド<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph>テキストまたは要素のコンテンツの後、終了タグの前に空白文字を記述するかどうか。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">マークアップ要素の終了タグの後に出現する空白文字またはテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">要素の終了タグの後に書き込む空白文字またはテキスト。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph>メソッドになる要素のタグの後に追加の終了タグをレンダリングする場合に便利です。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is rendering a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph>から派生したクラスかどうかを決定するメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスを表示、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph>上書き挿入の終了タグ、<ph id="ph2">`&lt;font&gt;`</ph>要素の直後に、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">ない場合は、<ph id="ph1">`&lt;label&gt;`</ph>要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph>基本メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>のクラスの実装、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph>メソッドを返します。<ph id="ph3">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> if you want to write text or spacing after the element closing tag.</source>
          <target state="translated">オーバーライド<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph>テキストまたは要素終了タグの後に空白文字を記述する場合。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">マークアップ要素のコンテンツの前および開始タグの後にテキストまたは空白文字を書き込みます。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">要素のコンテンツの前に書き込むテキストまたは空白文字。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If not overridden, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">オーバーライドされない場合、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph>メソッドになる内部マークアップの前に、現在のマークアップ要素に子要素を挿入する場合に便利です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph>から派生したクラスかどうかを決定するメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、表示しようとする、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the opening tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph>上書き挿入の開始タグ、<ph id="ph2">`&lt;font&gt;`</ph>の開始タグの直後後の要素、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">ない場合は、<ph id="ph1">`&lt;label&gt;`</ph>要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph>基本メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>のクラスの実装、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph>メソッドを返します。<ph id="ph3">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> if you want to write text or spacing after the opening tag but ahead of the element content.</source>
          <target state="translated">オーバーライド<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph>テキストまたは前の要素の内容が、開始タグの後に空白文字を記述するかどうか。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">マークアップ要素の開始タグの前に出現するテキストまたは空白文字を書き込みます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">マークアップ要素の開始タグの前に書き込むテキストまたは空白文字。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If not overridden, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">オーバーライドされない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>メソッドは、目的の要素の開始タグの前に追加の開始タグをレンダリングする役に立ちます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method to determine whether a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、オーバーライドする方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>クラスから派生するかどうかを判断するメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスは、表示しようとする、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>上書き挿入の開始タグ、<ph id="ph2">`&lt;font&gt;`</ph>要素の直前に、<ph id="ph3">`&lt;label&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If it is not rendering a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">場合は、<ph id="ph1">`&lt;label&gt;`</ph>要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>基本メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>のクラスの実装、<ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph>メソッドを返します。<ph id="ph3">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> if you want to write text or spacing ahead of the element opening tag.</source>
          <target state="translated">オーバーライド<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph>テキストまたは要素の開始タグの前の間隔を記述する場合。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element to the output stream.</source>
          <target state="translated">マークアップ要素の開始タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">開始タグをレンダリングするマークアップ要素の名前を含む文字列。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> method, if the markup element is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>の上書き、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph>メソッド、マークアップ要素は、のいずれかではない場合、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph>列挙値。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">使用して、マークアップ要素を生成する、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、最初の呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグの表示スタイル属性を指定します。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">内側のマークアップを生成するには、後に呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>終了タグを生成する方法です。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a custom control to render the opening tag of a non-standard <ph id="ph2">`MyTag`</ph> element.</source>
          <target state="translated">次のコード例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>非標準の開始タグを表示するためにカスタム コントロール<ph id="ph2">`MyTag`</ph>要素。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The code example then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render inner markup, and then calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to close the element.</source>
          <target state="translated">コードの例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>内側のマークアップを呼び出し、続いてを表示するためにメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>要素を閉じます。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">レンダリングするマークアップ要素の開始タグを定義する <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value to the output stream.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 列挙値に関連付けられたマークアップ要素の開始タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> method if the markup element is of a known type that is one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph>メソッドのいずれかである既知の型は、マークアップ要素の場合、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph>列挙値。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">使用して、マークアップ要素を生成する、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドは、最初の呼び出し、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグの表示スタイル属性を指定します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">内側のマークアップを生成するには、後に呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>終了タグを生成する方法です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to output the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>の開始タグを出力する方法、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The attributes that are added to the element by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method will be in the opening <ph id="ph2">`&lt;img&gt;`</ph> tag.</source>
          <target state="translated">要素に追加する属性、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph>メソッドが開始される<ph id="ph2">`&lt;img&gt;`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method is used to generate the closing tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>終了タグを生成するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">マークアップ要素の終了タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>メソッドした後に、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>オーバー ロードが呼び出されたと開始タグと終了タグ (内部マークアップ) の要素の間のすべてのコンテンツがレンダリングされた後です。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after both the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that generates the opening tag and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method that renders the inner markup between the opening and closing tags of the custom <ph id="ph4">`MyTag`</ph> element have been called.</source>
          <target state="translated">次のコード例を呼び出す方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>両方の後にメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>開始タグを生成するメソッドと<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>開始タグと終了タグのカスタムの間の内部のマークアップを表示するメソッド<ph id="ph4">`MyTag`</ph>要素が呼び出されています。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">マークアップ タグの空白文字と自己終了スラッシュ記号 (/) を表します。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> field is used in markup elements that are self-closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph>フィールドは、自己終了あるマークアップ要素で使用します。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>For example:</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">自己終了マークアップ要素の終了スラッシュ記号と右山かっこ (/<ph id="ph1">&amp;gt;</ph>) を表します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method when constructing self-closing markup elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドのマークアップの自己終了要素を構築するときにします。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The following code example shows how to render the value of a custom <ph id="ph1">`FileName`</ph> property followed by a quotation mark and the characters represented by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field.</source>
          <target state="translated">次のコード例は、カスタムの値を表示する方法を示しています。<ph id="ph1">`FileName`</ph>引用符の後にプロパティとによって表される文字、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The code example calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field as the parameter argument to close the element.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドおよびパス、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph>要素を閉じますパラメーターの引数としてフィールドです。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>This code example renders the <ph id="ph1">`FileName`</ph> property value, and then the following markup:</source>
          <target state="translated">このコード例を表示、<ph id="ph1">`FileName`</ph>プロパティの値と、次のマークアップ。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Represents the semicolon (;).</source>
          <target state="translated">セミコロン (;) を表します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Pass the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field as the parameter argument in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">渡す、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph>パラメーターの引数としてフィールド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの呼び出しは、カスタム コントロールまたはアダプターからセミコロンをレンダリングするときにします。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The following code example demonstrates how to manually render a series of styles on a markup element.</source>
          <target state="translated">次のコード例では、手動で一連のマークアップ要素のスタイルをレンダリングする方法を示します。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render <ph id="ph2">`font-size`</ph> and <ph id="ph3">`border-style`</ph> style attributes.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッド<ph id="ph2">`font-size`</ph>と<ph id="ph3">`border-style`</ph>スタイル属性。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field is used as a parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to separate the value of the <ph id="ph3">`font-size`</ph> attribute from the beginning of the <ph id="ph4">`border-style`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph>フィールドのパラメーターとして使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>の値を区切るためのメソッド、<ph id="ph3">`font-size`</ph>の先頭からの属性、<ph id="ph4">`border-style`</ph>属性。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Represents an apostrophe (').</source>
          <target state="translated">アポストロフィ (') を表します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> field when it is necessary to render an apostrophe.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph>アポストロフィを表示するために必要な場合のフィールドです。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Represents the slash mark (/).</source>
          <target state="translated">スラッシュ記号 (/) を表します。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field to render the slash marks when you write a URL.</source>
          <target state="translated">使用して、 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> URL を作成する場合、スラッシュを表示するためにフィールドをマークします。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field when writing the closing tag of a markup element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッドを使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph>マークアップ要素の終了タグを記述する場合のフィールドです。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The following code example demonstrates how to manually render the <ph id="ph1">`src`</ph> attribute of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">次のコード例は、手動で出力する方法を示します、<ph id="ph1">`src`</ph>の属性、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field as its parameter to render slash marks in the path that is applied to the <ph id="ph3">`src`</ph> attribute.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph>に適用されるパスのスラッシュを表示するために、パラメーターとしてフィールドをマーク、<ph id="ph3">`src`</ph>属性。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>Represents a space ( ) character.</source>
          <target state="translated">空白文字 ( ) を表します。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods when writing separators between elements and attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>要素と属性間の区切り記号を作成するときの方法です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>This section provides two code examples.</source>
          <target state="translated">このセクションでは、2 つのコード例を示します。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">最初の例では、文字配列を作成する方法を示しています。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">2 番目の例では、配列を使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>These code examples generate the following markup:</source>
          <target state="translated">これらのコード例では、次のマークアップを生成します。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array that contains the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field.</source>
          <target state="translated">次のコード例を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Char&gt;</ph>を含む配列、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を呼び出すときに、パラメーターとして前のコード例で作成された配列を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>Represents the style equals (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) character used to set style attributes equal to values.</source>
          <target state="translated">スタイル属性を値に等しく設定するために使用するスタイル イコール (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) 文字を表します。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method to delimit style names and values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph>フィールドは使用、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph>スタイルの名前と値を区切るためにメソッドです。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The following code example demonstrates how to render a <ph id="ph1">`FontWeight`</ph> attribute and value of <ph id="ph2">`bold`</ph> to the opening tag of an element.</source>
          <target state="translated">次のコード例を表示する方法を示しています、<ph id="ph1">`FontWeight`</ph>属性と値の<ph id="ph2">`bold`</ph>要素の開始タグにします。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field as the parameter to render the character that sets the value of each style attribute.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph>各スタイル属性の値を設定する文字を表示するためにパラメーターとしてフィールドです。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value for the specified markup element.</source>
          <target state="translated">指定したマークアップ要素の <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> 値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">開始タグが出力されるマークアップ要素。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph>プロパティから継承するクラスにのみ使用するが、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property only in a call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method; this is the only time it is set to a consistent value.</source>
          <target state="translated">読み取りまたは設定する必要があります、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph>プロパティへの呼び出しでのみ、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドです。 これは、一貫した値に設定されているときだけです。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例に示しますのオーバーライド バージョン、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>It uses the value of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property to determine whether a server control using the custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is rendering a <ph id="ph3">`&lt;label&gt;`</ph> markup element.</source>
          <target state="translated">値を使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph>ユーザー設定を使用してサーバー コントロールかどうかを決定するプロパティ<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>オブジェクトを表示、<ph id="ph3">`&lt;label&gt;`</ph>マークアップ要素。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>If it is, a <ph id="ph1">`&lt;font&gt;`</ph> element with a <ph id="ph2">`color`</ph> attribute set to <ph id="ph3">`red`</ph> is returned to modify the formatting of the <ph id="ph4">`&lt;label&gt;`</ph> element's text.</source>
          <target state="translated">である場合、<ph id="ph1">`&lt;font&gt;`</ph>を持つ要素を<ph id="ph2">`color`</ph>属性に設定<ph id="ph3">`red`</ph>の書式設定を変更するのには、<ph id="ph4">`&lt;label&gt;`</ph>要素のテキスト。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The property value cannot be set.</source>
          <target state="translated">プロパティ値が設定できません。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">マークアップ タグの開始山かっこ (<ph id="ph1">&amp;lt;</ph>) を表します。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph>フィールドは使用、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッド マークアップ タグを書き込むときにします。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The following code example renders the first character of the opening tag of a <ph id="ph1">`&lt;table&gt;`</ph> element with the element name.</source>
          <target state="translated">次のコード例の開始タグの最初の文字を表示する、<ph id="ph1">`&lt;table&gt;`</ph>要素の名前を持つ要素。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field as a parameter.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph>をパラメーターとしてフィールドです。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">レンダリングされるマークアップ要素のタグ名を取得または設定します。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">出力されるマークアップ要素のタグ名。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph>プロパティから継承するクラスにのみ使用するが、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property only in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">読み取りまたは設定する必要があります、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph>プロパティでのみ<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>メソッドの呼び出しです。 これは、一貫した値に設定されているときだけです。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">次のコード例に示しますのオーバーライド バージョン、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>から派生したクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The code example checks whether the element to render is a <ph id="ph1">`&lt;label&gt;`</ph> element by calling the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and then passing the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property value and a string, <ph id="ph4">`"label"`</ph>, as the parameter arguments.</source>
          <target state="translated">コード例をチェックするかどうかを表示する要素、<ph id="ph1">`&lt;label&gt;`</ph>要素を呼び出して、<ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>メソッド、および成功して、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph>プロパティの値と文字列の<ph id="ph4">`"label"`</ph>パラメーターの引数として。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is about to be rendered, the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element, with a <ph id="ph3">`color`</ph> attribute set to <ph id="ph4">`red`</ph>, is rendered before the <ph id="ph5">`&lt;label&gt;`</ph> element's opening tag.</source>
          <target state="translated">場合、<ph id="ph1">`&lt;label&gt;`</ph>要素のレンダリングの開始タグ、<ph id="ph2">`&lt;font&gt;`</ph>要素で、<ph id="ph3">`color`</ph>属性に設定<ph id="ph4">`red`</ph>、前にレンダリング、<ph id="ph5">`&lt;label&gt;`</ph>要素の開始タグ。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If the element to render is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the base class's version of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method is called.</source>
          <target state="translated">表示するために要素がない場合、<ph id="ph1">`&lt;label&gt;`</ph>要素では、基本クラスのバージョンの<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">マークアップ タグの終了山かっこ (<ph id="ph1">&amp;gt;</ph>) を表します。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph>フィールドは使用、 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッド マークアップ タグを書き込むときにします。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> element by making calls to overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、の終了タグをレンダリングする方法を示します、<ph id="ph1">`&lt;table&gt;`</ph>要素のオーバー ロードを呼び出すことによって、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>To render the final character of the tag, the code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field as a parameter.</source>
          <target state="translated">タグの最後の文字を表示するために、コード例を使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph>をパラメーターとしてフィールドです。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the specified data type to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、指定したデータ型を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、ブール値のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む Unicode 文字。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、Unicode 文字のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to end the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element by using the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>の開始タグを終了する方法、<ph id="ph2">`&lt;img&gt;`</ph>要素を使用して、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>This code example renders the following markup:</source>
          <target state="translated">このコード例は、次のマークアップを表示します。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む Unicode 文字の配列。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、Unicode 文字の配列のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">このセクションでは、2 つのコード例を示します。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The first one demonstrates how to create an array of characters.</source>
          <target state="translated">最初の例では、文字の配列を作成する方法を示しています。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">2 番目の例では、配列を使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">これらのコード例では、次のマークアップを生成します。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">次のコード例を略さずに文字の配列を作成する方法を示しています<ph id="ph1">`hello world`</ph>です。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">配列に含まれるが、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドには、2 つの単語の間にスペースを作成します。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph2">`hello world`</ph> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドを表示するために、<ph id="ph2">`hello world`</ph>文字配列をこのコード例を含むコントロールがページに含まれている場合、ページに前のコード例で作成します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、倍精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む 32 バイト符号付き整数。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む 64 バイト符号付き整数。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むオブジェクト。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、オブジェクトのテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property:</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、単精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>フィールドで、最小有効値は、の<ph id="ph3">&lt;xref:System.Single&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、指定した文字列を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a string between the opening and closing tags of a custom markup element.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>開始タグと終了タグのカスタム マークアップ要素の間の文字列を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、<ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> メソッドと同じセマンティクスを使用して、タブ文字列と書式設定された文字列を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの値を持つ書式設定された文字列を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">書式設定するオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、オブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> メソッドと同じセマンティクスを使用します。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">このセクションには、2 つのコード例が含まれています。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The first one demonstrates how to render a formatted string and the contents of an array.</source>
          <target state="translated">最初の例では、書式設定された文字列および配列の内容を表示する方法を示しています。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The second one demonstrates how to declare the array.</source>
          <target state="translated">2 番目の例では、配列を宣言する方法を示しています。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the contents of an object array, named <ph id="ph2">`curPriceTime`</ph>.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>書式設定された文字列とオブジェクトの配列、名前付きの内容を表示するためにメソッド<ph id="ph2">`curPriceTime`</ph>です。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The method call renders the second member of the array before it renders the first member.</source>
          <target state="translated">メソッドの呼び出しは、最初のメンバーを表示する前に、配列の 2 番目のメンバーを表示します。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example demonstrates declaring the <ph id="ph1">`curPriceTime`</ph> object array.</source>
          <target state="translated">次のコード例では、宣言することを示しています、<ph id="ph1">`curPriceTime`</ph>オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">出力ストリームへのテキストの書き込み元となる文字配列。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">書き込みの開始位置を示す配列内のインデックス位置。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字数。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、Unicode 文字の部分配列のテキスト形式を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This section provides two code examples.</source>
          <target state="translated">このセクションでは、2 つのコード例を示します。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">最初の例では、文字配列を作成する方法を示しています。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">2 番目の例では、配列を使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">これらのコード例では、次のマークアップを生成します。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">次のコード例を略さずに文字の配列を作成する方法を示しています。<ph id="ph1">`hello world`</ph>です。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">配列に含まれるが、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドには、2 つの単語の間にスペースを作成します。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following portion of the code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the first five characters of the array created in the preceding example.</source>
          <target state="translated">次のコード例の部分を使用して、<ph id="ph1">`index`</ph>と<ph id="ph2">`count`</ph>のパラメーター、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>前の例で作成された配列の最初の 5 文字を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">保留中のタブ空白文字と共に、2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> メソッドと同じセマンティクスを使用します。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドは、タブ、保留になっていると、呼び出しを生成、<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>メソッドの基本します。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> properties.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph>メソッドの値および書式設定された文字列を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a markup attribute and its value to the output stream.</source>
          <target state="translated">マークアップ属性とその値を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む属性。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">属性に代入する値。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">指定したマークアップ属性と値を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with no encoding.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>マークアップ属性とエンコードせずにその値を書き込みます。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドは、属性名のみを書き込みます。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">次のコード例に示しますレンダリング、<ph id="ph1">`&lt;img&gt;`</ph>の両方をオーバー ロード内の要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">コード例では、次のプロセスを使用します。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドで、要素の開始文字を表示します。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph>過負荷、書き込みが、<ph id="ph2">`alt`</ph>属性とその値を<ph id="ph3">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>カスタムを表示するためにオーバー ロード<ph id="ph2">`myattribute`</ph>属性の値と<ph id="ph3">`No "encoding" required`</ph>、し、設定<ph id="ph4">`fEncode`</ph>に<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">要素の開始タグが閉じを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>を終了するメソッド、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">派生クラスでオーバーライドすることができます、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph>属性とその値を書き込むためのカスタム規則を定義するメソッド。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">たとえば、許可されているコードを記述することも、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph>に空の値を使用して属性を書き込みます。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むマークアップ属性。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">属性に代入する値。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性とその代入値をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">指定されたマークアップ属性と値を出力ストリームに書き込みます。また、指定されている場合は、エンコードされた値も書き込みます。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>マークアップ属性とエンコードの有無は、その値を書き込みます。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method to do the encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドを使用、<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph>エンコードを行うメソッドです。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドは、属性名のみを書き込みます。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">次のコード例に示しますレンダリング、<ph id="ph1">`&lt;img&gt;`</ph>の両方をオーバー ロード内の要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The code example uses the following process:</source>
          <target state="translated">コード例では、次のプロセスを使用します。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドで、要素の開始文字を表示します。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph>過負荷、書き込みが、<ph id="ph2">`alt`</ph>属性とその値を<ph id="ph3">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>カスタムを表示するためにオーバー ロード<ph id="ph2">`myattribute`</ph>属性の値と<ph id="ph3">`No "encoding" required`</ph>、し、設定<ph id="ph4">`fEncode`</ph>に<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">要素の開始タグが閉じを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>を終了するメソッド、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">派生クラスでオーバーライドすることができます、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph>属性とその値を書き込むためのカスタム規則を定義するメソッド。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">たとえば、許可されているコードを記述することも、<ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph>に空の値を使用して属性を書き込みます。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">開始タグを書き込むマークアップ要素。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドには、マークアップ要素の開始タグの終わり山かっこ (&gt;) は書き込みません。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">これには、要素の開始タグのマークアップ属性の書き込みが実行できます。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant to close the opening tag when calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph>定数を呼び出すときに開始タグを閉じる、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constant when you write markup elements that are self-closing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph>自己終了は、マークアップ要素を記述するときに定数です。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>せずタグや属性のマッピングを許可する、各要求に対して同じ方法でマークアップ要素を表示するカスタムのサーバー コントロールがメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">次のコード例に示しますレンダリング、<ph id="ph1">`&lt;img&gt;`</ph>の両方をオーバー ロード内の要素、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">コード例では、次のプロセスを使用します。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドで、要素の開始文字を表示します。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph>過負荷、書き込みが、<ph id="ph2">`alt`</ph>属性とその値を<ph id="ph3">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>カスタムを表示するためにオーバー ロード<ph id="ph2">`myattribute`</ph>属性の値と<ph id="ph3">`No "encoding" required`</ph>、し、設定<ph id="ph4">`fEncode`</ph>に<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">要素の開始タグが閉じを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>を終了するメソッド、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Writes a <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> markup element to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> マークアップ要素を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph>カスタム コントロールまたはアダプターのマークアップ内の行を表示するためにメソッドが中断します。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes a space between the <ph id="ph2">`br`</ph> and <ph id="ph3">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph>メソッドは、間に空白を書き込みます、<ph id="ph2">`br`</ph>と<ph id="ph3">`/`</ph>HTML 互換性を高めるためです。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to write a <ph id="ph2">`&lt;br /&gt;`</ph> element to the requesting browser after the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method writes the encoded <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</source>
          <target state="translated">次のコード例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph>書き込みます、<ph id="ph2">`&lt;br /&gt;`</ph>要素の後に要求元のブラウザーを<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph>メソッドは、エンコードされた書き込みます<ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph>マークアップ。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">エンコードして出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">要求元のデバイスで指定したテキストをエンコードし、それを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method when a string contains angle brackets (<ph id="ph2">\&lt;</ph> or &gt;) or an ampersand (&amp;).</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph>メソッド (string) には、山かっこが含まれている場合 (<ph id="ph2">\&lt;</ph>または &gt;) または、アンパサンド (&amp;)。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to perform the encoding and also converts Unicode character <ph id="ph3">`00A0`</ph> to <ph id="ph4">`&amp;nbsp;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph>メソッドを使用、<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph>エンコードを実行するメソッドも Unicode 文字に変換し、<ph id="ph3">`00A0`</ph>に<ph id="ph4">`&amp;nbsp;`</ph>です。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method to write the encoded markup <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> to the output stream.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph>エンコード済みのマークアップを書き込みます<ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph>出力ストリームにします。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes <ph id="ph2">`&lt;br /&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph>メソッド書き込み<ph id="ph2">`&lt;br /&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">エンコードして出力ストリームに書き込む URL 文字列。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">指定された URL をエンコードしてから、出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL might include parameters.</source>
          <target state="translated">URL にはパラメーターが含まれている場合があります。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method encodes the string in the <ph id="ph2">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph>メソッドは、文字列で、 <ph id="ph2">`url`</ph> URL エンコード仕様に従ってパラメーター。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">疑問符 (?) の区切り記号に続くパラメーターはエンコードされません。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph>メソッドで、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">エンコードして出力ストリームに書き込む URL パラメーターの文字列。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">指定した URL パラメーターを要求側のデバイスに合わせてエンコードし、それを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">URL のパラメーター部分に含まれるスペース、正符号 (+) としてエンコードされており、等号 (=) としてエンコード<ph id="ph1">`%3d`</ph>です。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph>メソッドで、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The element to write the closing tag for.</source>
          <target state="translated">終了タグを書き込む要素。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">タブ空白文字と指定したマークアップ要素の終了タグを書き込みます。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">異なり、 <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>メソッドには、対応する開始タグと一致する要素の終了タグを作成するためのロジックがありません。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">次のコード例に示しますレンダリング、<ph id="ph1">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">コード例では、次のプロセスを使用します。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method to render the opening characters of the element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>要素の開始文字を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write attributes to the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">2 つのオーバー ロードを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph>メソッドに属性を書き込む、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph>を終了するメソッド、<ph id="ph2">`&lt;img&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The element to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む要素。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which does not write the closing angle bracket.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>メソッドに自動的に右山かっこ (&gt;) の書き込みでは、要素の開始タグとは異なり、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>メソッドで、終わり山かっは書き込まれません。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> for markup elements that have no attributes.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>マークアップ要素の属性がないためです。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes data to an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream, as specified by the overloaded parameters, followed by a line terminator string.</source>
          <target state="translated">オーバーロードされたパラメーターで指定されたデータを <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>All versions of this method write any pending tab spacing to the output stream.</source>
          <target state="translated">このメソッドのすべてのバージョンで、保留中のタブ空白文字が出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">行終端文字列を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to insert a line after an <ph id="ph2">`&lt;img&gt;`</ph> element is rendered.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>後の行を挿入するメソッドを<ph id="ph2">`&lt;img&gt;`</ph>要素が表示されます。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むブール値。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字とブール値のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The character to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と Unicode 文字を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The character array to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字配列。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と Unicode 文字の配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">このセクションでは、2 つのコード例を示します。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The first one demonstrates how to create an array.</source>
          <target state="translated">最初の例では、配列を作成する方法を示しています。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The second one demonstrates how to use that array.</source>
          <target state="translated">2 番目の例では、その配列を使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">これらのコード例では、次のマークアップを生成します。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">次のコード例を略さずに文字の配列を作成する方法を示しています。<ph id="ph1">`hello world`</ph>です。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">配列に含まれるが、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドには、2 つの単語の間にスペースを作成します。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example renders the <ph id="ph1">`hello world`</ph> character array that was created in the preceding example by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例での表示、<ph id="ph1">`hello world`</ph>文字配列を使用して、前の例で作成された、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と倍精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む 32 バイト符号付き整数。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">指定したタブ文字列と 32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む 64 バイト符号付き整数。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">指定したタブ文字列と 64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むオブジェクト。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字とオブジェクトのテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property to a control.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>プロパティ、コントロールをします。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と単精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの値を表示するために、<ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>フィールドで、最小有効値は、の<ph id="ph3">&lt;xref:System.Single&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">このコード例では、次のマークアップが生成されます。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字とテキスト文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む 4 バイト符号なし整数。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">指定したタブ文字列と 4 バイトの符号なし整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字とオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドと同じセマンティクスを使用して、<ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの値を持つ書式設定された文字列を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">書式設定するオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字とオブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドと同じセマンティクスを使用して、<ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">このセクションには、2 つのコード例が含まれています。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The first one demonstrates how to render a string and an array to the output stream.</source>
          <target state="translated">最初の例では、文字列および配列を出力ストリームに表示する方法を示しています。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The second one shows how to declare the array.</source>
          <target state="translated">2 つ目は、配列を宣言する方法を示します。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the contents of an object array to the output stream.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>書式設定された文字列とオブジェクトの配列を出力ストリームの内容を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example shows how to declare the object array that was rendered in the preceding code example.</source>
          <target state="translated">次のコード例では、前のコード例では、表示されているオブジェクトの配列を宣言する方法を示します。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">出力ストリームにテキストを書き込む文字配列。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">書き込みを開始する文字配列内の位置。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む配列内の文字数。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と Unicode 文字の部分配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This section contains two code examples.</source>
          <target state="translated">このセクションには、2 つのコード例が含まれています。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">最初の例では、文字配列を作成する方法を示しています。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">2 番目の例では、配列を使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">これらのコード例では、次のマークアップを生成します。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">次のコード例を略さずに文字の配列を作成する方法を示しています<ph id="ph1">`hello world`</ph>です。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">配列に含まれるが、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph>フィールドには、2 つの単語の間にスペースを作成します。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the first five characters of the array created in the preceding code example.</source>
          <target state="translated">次のコード例では、<ph id="ph1">`index`</ph>と<ph id="ph2">`count`</ph>のパラメーター、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの前のコード例で作成された配列の最初の 5 文字を表示するためにします。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">0 個以上の書式項目を格納している文字列。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">保留中のタブ空白文字と 2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドと同じセマンティクスを使用して、<ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドの値および書式設定された文字列を表示するために、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>プロパティおよび<ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">このメソッドは、指定されたタブ空白文字を無視します。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method when you do not want to render any tab spacing ahead of the rendered string <ph id="ph3">`s`</ph>.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph>メソッドではなく、<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph>メソッドは、レンダリングされた文字列の前、タブの空白文字を表示したくないと<ph id="ph3">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">既定の行終端記号の文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>書き込む基本メソッドが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a style attribute and its value to the output stream.</source>
          <target state="translated">スタイル属性とその値を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むスタイル属性。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">スタイル属性に割り当てられた値。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">指定したスタイル属性を出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph>メソッドは、次の形式でスタイル属性を書き込みます。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むスタイル属性。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">スタイル属性に割り当てられた値。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the style attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">スタイル属性と割り当てられた値をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">指定したスタイル属性と値を出力ストリームに書き込み、さらに指定されている場合は値をエンコードします。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph>メソッドは、次の形式でスタイル属性を書き込みます。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method is used to encode the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph>メソッドのエンコードが使用される、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">エンコードして出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the string as a part of the parameter section of the URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to encode the string as part of the path section of the URL.</source>
          <target state="translated">URL のパラメーター セクションの一部として文字列をエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。URL のパス セクションの一部として文字列をエンコードする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">指定された文字列を書き込んで、URL の要件に従ってエンコードします。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph2">`argument`</ph>) into strings of the form <ph id="ph3">`%xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph4">`%uxxxx`</ph>, where <ph id="ph5">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph>メソッドは、URL の区切り記号と見なすことが文字をエンコード (の設定に依存する<ph id="ph2">`argument`</ph>) 形式の文字列に<ph id="ph3">`%xx`</ph>ASCII コードがより小さい 128、それ以外の場合、<ph id="ph4">`%uxxxx`</ph>ここで、<ph id="ph5">`x`</ph>は 16 進数。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> methods use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method as a utility method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph>メソッドを使用して、<ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph>ユーティリティ メソッドとしてメソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>