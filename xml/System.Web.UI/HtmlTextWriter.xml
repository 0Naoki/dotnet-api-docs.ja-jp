<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44d22ce4543ab006b821a6656fb1fc02ea5b139d" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52614581" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f33f0-101">マークアップ文字とテキストを ASP.NET サーバー コントロールの出力ストリームに書き込みます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f33f0-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="f33f0-102">このクラスには、ASP.NET サーバー コントロールがマークアップをクライアントにレンダリングするときに使用する書式設定機能が用意されています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f33f0-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-103"><xref:System.Web.UI.HtmlTextWriter>クラスは、デスクトップ ブラウザーに HTML 4.0 を表示するために使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="f33f0-104"><xref:System.Web.UI.HtmlTextWriter>内のすべてのマークアップ ライターの基本クラスも、<xref:System.Web.UI>名前空間を含む、 <xref:System.Web.UI.ChtmlTextWriter>、 <xref:System.Web.UI.Html32TextWriter>、および<xref:System.Web.UI.XhtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="f33f0-105">これらのクラスは、要素、属性、およびマークアップのさまざまな種類のスタイルとレイアウト情報の書き込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="f33f0-106">さらに、これらのクラスは、各マークアップ言語に関連付けられているページおよびコントロール アダプター クラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="f33f0-107">ほとんどの状況で ASP.NET によって、要求元のデバイスの適切なライターが自動的に使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="f33f0-108">ただし、カスタム テキスト ライターを作成する場合、または特定のデバイス ページを表示するために特定のライターを指定する場合は、割り当てる必要があります、ライターのページに、`controlAdapters`アプリケーション .browser ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="f33f0-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-109">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.Control.Render%2A>から派生したカスタム コントロールのメソッド、<xref:System.Web.UI.Control>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="f33f0-110">コード例は、さまざまなを使用する方法を示しています。<xref:System.Web.UI.HtmlTextWriter>メソッド、プロパティ、およびフィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-111">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f33f0-112">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-113">既定のタブ文字列を使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>コンス トラクターを使用して、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>定数 1 行のインデントが必要とします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="f33f0-115">呼び出す、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>の新しいインスタンスを初期化するためにオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-116">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>カスタムを作成するコンス トラクター<xref:System.Web.UI.HtmlTextWriter>という名前のオブジェクト`StyledLabelHtmlWriter.`ときに、`MyPage`から派生するカスタムのクラス、<xref:System.Web.UI.Page>クラス、クライアントの要求は、使用して、ブラウザー、`StyledLabelHtmlWriter`出力ストリームには、そのコンテンツをレンダリングするクラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f33f0-117">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="f33f0-118">行のインデントをレンダリングするために使用する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-119">タブ文字列を指定して、<see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>コンス トラクターを使用して`tabString`行のインデントが必要な場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="f33f0-121">呼び出す、<xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType>の新しいインスタンスを初期化するために、基本コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-122">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>カスタムを作成するコンス トラクター<xref:System.Web.UI.HtmlTextWriter>という名前のオブジェクト`StyledLabelHtmlWriter.`ときに、`MyPage`から派生するカスタムのクラス、<xref:System.Web.UI.Page>クラス、クライアントの要求は、使用して、ブラウザー、`StyledLabelHtmlWriter`出力ストリームには、そのコンテンツをレンダリングするクラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-123">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-124">追加する属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-125">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-126">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-127">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>メソッド、属性は、のいずれかでがない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>値、または実行時までに、属性が不明である場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="f33f0-128">任意の指定したマークアップ要素のインスタンスを<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性のリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="f33f0-129">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-130">属性の一覧がから消去し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="f33f0-131">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-132">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-133"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-134">要素のタグと終了タグ間にあるコンテンツを表示するために、必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-135"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-136">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドを呼び出す前に、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="f33f0-137">コードの 2 つの異なるオーバー ロードを呼び出して<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>の 2 つの異なるオーバー ロードと<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を呼び出す前に、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>をレンダリングするメソッド、`<span>`要素を出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="f33f0-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="f33f0-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>という名前のカスタム属性を定義するメソッドが使用される`CustomAttribute`とという名前のカスタム値`CustomAttributeValue`の`<span>`このコードをレンダリングする要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-139">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-140">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-141">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-142">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>標準マークアップ属性をレンダリングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="f33f0-143">任意の指定したマークアップ要素のインスタンスを<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性のリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="f33f0-144">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、によって追加されたすべての属性、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-145">属性の一覧がから消去し、<xref:System.Web.UI.HtmlTextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="f33f0-146">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-147">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-148"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-149">要素のタグと終了タグ間にあるコンテンツを表示するために、必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-150"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-151">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>を追加するメソッド、`Onclick`マークアップ要素に属性し、次の ECMAScript コードをその値を設定。</span><span class="sxs-lookup"><span data-stu-id="f33f0-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-152">追加する属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-153">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="f33f0-154">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-155">オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-156">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッド、属性は、のいずれかでがない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>値、または実行時までエンコーディング属性が不明である場合を必要とします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="f33f0-157">任意の指定したマークアップ要素のインスタンスを<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性のリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="f33f0-158">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-159">属性の一覧がから消去し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="f33f0-160">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッド`fEncode`に設定`true`属性では、引用符 (")、小なり記号 (<) を含めることができます可能性がある場合や、アンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="f33f0-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="f33f0-161">メソッドの呼び出しでは、要求元のデバイスの要件を満たす属性がエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="f33f0-162">設定できる`fEncode`に`false`属性が既にエンコードされていることがわかっている場合、またはこれらの文字のいずれもが生成されることをわかっている場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="f33f0-163">属性の型が場合`Style`、値をエンコードしない場合でも`fEndode`は`true`。</span><span class="sxs-lookup"><span data-stu-id="f33f0-163">If the attribute type is `Style`, the value won't be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="f33f0-164">スタイルの値は CSS に準拠して、悪意のあるコードが含まれていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-164">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>
  
 <span data-ttu-id="f33f0-165">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-166">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-167"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-168">要素のタグと終了タグ間にあるコンテンツを表示するために、必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-169"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-170">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッドという名前のカスタム属性を`myattribute`の値がエンコードされていないと、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-171">追加する属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-172">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-173">属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-174">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、<see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値と共に、指定されたマークアップ属性および値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-175">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29>メソッドから継承する場合にのみ、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-176">新規作成することもできる`name`と`key`属性のペア。</span><span class="sxs-lookup"><span data-stu-id="f33f0-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-177">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-178">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="f33f0-179">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-180">オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-181">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>オプションのエンコーディングでの標準マークアップ属性をレンダリングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="f33f0-182">任意の指定したマークアップ要素のインスタンスを<xref:System.Web.UI.HtmlTextWriter>クラスは、その要素の属性のリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="f33f0-183">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、任意の属性によって追加された、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-184">属性の一覧がから消去し、<xref:System.Web.UI.HtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="f33f0-185">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>メソッド`fEncode`に設定`true`属性では、引用符 (")、小なり記号 (<) を含めることができます可能性がある場合や、アンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="f33f0-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="f33f0-186">メソッドの呼び出しでは、要求元のデバイスの要件を満たす属性がエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="f33f0-187">設定できる`fEncode`に`false`属性が既にエンコードされていることがわかっている場合、またはこれらの文字のいずれもが生成されることをわかっている場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="f33f0-188">属性の型が場合`Style`、値をエンコードしない場合でも`fEncode`は`true`。</span><span class="sxs-lookup"><span data-stu-id="f33f0-188">If the attribute type is `Style`, the value won't be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="f33f0-189">スタイルの値は CSS に準拠して、悪意のあるコードが含まれていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-189">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>

  
 <span data-ttu-id="f33f0-190">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-191">使用して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>要素に属性を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-192"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-193">要素のタグと終了タグ間にあるコンテンツを表示するために、必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-194"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-195">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>文字列値に割り当てられていることを確認する方法、`Alt`属性、`<img>`要素が要求元のデバイスのエンコードします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-196">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ スタイル属性を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-197">追加するスタイル属性を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-198">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-199">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始タグに、指定されたマークアップ スタイル属性および属性値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-200">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>スタイルのメンバーでない場合、メソッド、<xref:System.Web.UI.HtmlTextWriterStyle>列挙型か、実行時まで不明します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="f33f0-201"><xref:System.Web.UI.HtmlTextWriter>クラスが表示されるマークアップ要素のスタイルのリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="f33f0-202">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、によって追加された任意のスタイル、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-203">スタイルの一覧は、クリアされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="f33f0-204">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-205">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>要素に属性を任意のスタイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-206"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-207">要素の開始と終了タグの間にあるコンテンツを表示するために必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-208"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-209">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>メソッド`font-size`と`color`にスタイル属性を`<p>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="f33f0-210">このコード例では、<xref:System.Web.UI.HtmlTextWriter>コントロールの内容を表示するクラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-211">出力ストリームに追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-212">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-213">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 値および属性値に関連付けられたマークアップ スタイル属性を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-214">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29>スタイルがのメンバーであるメソッド、<xref:System.Web.UI.HtmlTextWriterStyle>列挙され、実行する前に呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="f33f0-215"><xref:System.Web.UI.HtmlTextWriter>クラスが表示されるマークアップ要素のスタイルのリストを保持します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="f33f0-216">ときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されると、によって追加された任意のスタイル、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、要素の開始タグに表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-217">スタイルの一覧は、クリアされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="f33f0-218">マークアップ要素をレンダリングするためのコーディング パターンは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="f33f0-219">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>要素に属性を任意のスタイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="f33f0-220"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="f33f0-221">要素の開始と終了タグの間にあるコンテンツを表示するために必要に応じてその他のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="f33f0-222"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-223">次のコード例は、のオーバーライドの一部を使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-224">コードのチェックするかどうかを`<Label>`レンダリングされる要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="f33f0-225">そうである場合、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>を確認するメソッドが呼び出されるかどうかを`Color`スタイル属性が定義されている、`<Label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="f33f0-226">場合、`Color`属性が定義されていない、コードのこのオーバー ロードを呼び出して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を追加するメソッド、`Color`スタイル属性に属性し、その値を設定し、`red`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-227">追加されるスタイル属性を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-228">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-229">追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-230">後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、<see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値と共に、指定されたマークアップ スタイル属性および属性値を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-231">使用して、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29>メソッドから継承する場合にのみ、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-232">新規作成することもできる`name`と`value`のペアを<xref:System.Web.UI.HtmlTextWriterStyle>属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-233">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールが出力されようとしていることを通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-234"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>メソッドには、機能がありません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="f33f0-235">オーバーライドする必要があります、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>から派生したクラスのメソッドで<xref:System.Web.UI.HtmlTextWriter>独自のレンダリング機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="f33f0-236">必要となるマークアップ言語などで`<p>`場合でも、コントロールの前にすぐに表示する要素の必要性、`<p>`要素は、前に特定した、使用する可能性があります、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-237">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを閉じ、関連付けられているシステム リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-238">この実装の<xref:System.Web.UI.HtmlTextWriter.Close%2A>メソッドの呼び出し、<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="f33f0-239">呼び出しに続く、<xref:System.Web.UI.HtmlTextWriter.Close%2A>メソッドは、すべての操作で、<xref:System.Web.UI.HtmlTextWriter>オブジェクトにそのすべてのリソースが解放されたため、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-240">単一のタブ文字を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-241">1 つのタブは、9 の ASCII 文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-242">受け取るコンス トラクターを作成する方法を次のコード例に示します、<xref:System.IO.TextWriter>パス パラメーターとしてオブジェクト、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>コンス トラクターの 2 番目のバージョンへのパラメーターの引数としてフィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="f33f0-243">このコンス トラクターは、コードから呼び出されたときに、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>フィールドは、ページまたはアダプタで使用されるマークアップ ライターのインスタンスのインデント ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-244">引用符 (") を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-245"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>属性を閉じます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-246">次のコード例は、レンダリングする方法を示します、`border`属性、`<table>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="f33f0-247">コードの呼び出し、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド、属性とその値、および使用方法を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A>をレンダリングするメソッド、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>と<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="f33f0-248">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-249">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-250">エンコードする属性値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="f33f0-251">属性値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-252">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-253">
            <paramref name="value" /> が空の場合は、エンコードされた属性値を含む文字列 <see langword="null" />。または <paramref name="fEncode" /> が <see langword="false" /> の場合は、エンコードされていない属性値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-254">使用して、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>メソッド、属性がない場合、<xref:System.Web.UI.HtmlTextWriterAttribute>列挙値か、実行時まで不明です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="f33f0-255"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドは、二重引用符 (")、アンパサンドを削除します。 (&)、および、入力に関係なく、記号 (<) ため、その無効なタグは生成されませんよりも少ない。</span><span class="sxs-lookup"><span data-stu-id="f33f0-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="f33f0-256">によって実行が実際のエンコード、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-257">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドのパラメーターとして、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出しをエンコードし、`color:blue`スタイル属性の値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="f33f0-258">マークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-259">エンコードする属性値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-260">現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-261">エンコードされた属性値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-262"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>メソッドは、二重引用符 (")、アンパサンドを削除します。 (&)、および、入力に関係なく、記号 (<) ため、その無効なタグは生成されませんよりも少ない。</span><span class="sxs-lookup"><span data-stu-id="f33f0-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="f33f0-263">によって実行が実際のエンコード、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="f33f0-264">エンコードする URL を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-265">指定した URL 内の空白文字列を "%20" に変換して、最小限の URL エンコーディングを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-266">エンコードされた URL を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-267">文字を URL エンコードは、パーセント記号 (%) の後に、2 桁の 16 進表現 (大文字) 文字の ISO ラテン コード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="f33f0-268">スペースの 16 進表現には 20 です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-269">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A>内のパラメーターとして渡された URL に含まれるスペースに変換するメソッド、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f33f0-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-270">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトがページにコンテンツを書き込むために使用するエンコーディングを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-271">マークアップをページに書き込むときに使用される <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-272"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A>プロパティ ベースからその値を取得する<xref:System.IO.TextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-273">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Encoding%2A>カスタム コントロールが含まれているページにテキストを表示するために使用するエンコードの種類を記述するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-274">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールのレンダリングが完了したことを通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="f33f0-275">このメソッドを使用して、<see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> メソッドで開かれたすべてのマークアップ要素を閉じることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-276"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>メソッドには、機能がありません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="f33f0-277">オーバーライドする必要があります<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>から派生したクラスで、<xref:System.Web.UI.HtmlTextWriter>独自のレンダリング機能を提供するクラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="f33f0-278">使用することができます、<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>で開かれているすべてのマークアップ要素を終了するメソッド、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-279">マークアップ要素の終了タグの左山かっことスラッシュ記号 (&lt;/) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-280"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>マークアップ要素の終了タグを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-281">次のコード例の終了タグをレンダリングする方法を示しています、`<table>`マークアップ要素を使用して、<xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>と<xref:System.Web.UI.HtmlTextWriter.TagRightChar>フィールドへの呼び出しでパラメーター値として、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="f33f0-282">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-283">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="f33f0-284">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-285">指定されたスタイルのレイアウトと文字書式を実装するための属性を含む <see langword="&lt;span&gt;" /> 要素の開始タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-286">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法。</span><span class="sxs-lookup"><span data-stu-id="f33f0-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="f33f0-287"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="f33f0-288">同じ値を使用して、`style`で、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用して、対応する<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="f33f0-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>メソッドの開始タグをレンダリングする、`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="f33f0-290">このメソッドは、必要な属性とスタイル属性を追加するとの開始タグを`<span>`要素で指定した設定を表示する、<xref:System.Web.UI.WebControls.Style>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="f33f0-291">属性とスタイル属性を含む、使用する異なるマークアップ要素をレンダリングする場合、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-292">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用するクラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを適用する、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルをテキスト文字列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="f33f0-293"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドは、HTML をレンダリング`<span style="color:Navy;">`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="f33f0-294"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しを閉じます、`<span>`要素、テキストがレンダリングされた後です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="f33f0-295">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="f33f0-296">
            <paramref name="style" /> で指定されたスタイル オブジェクトを含んだマークアップ要素の開始タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <paramref name="style" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-297">指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-298">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>マークアップのブロックに背景色や境界線の幅などのスタイルを適用する方法。</span><span class="sxs-lookup"><span data-stu-id="f33f0-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="f33f0-299"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを指定したスタイルの文字書式を使用するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="f33f0-300">同じ値を使用して、`style`で、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用して、対応する<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="f33f0-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドで指定された要素の開始タグをレンダリングする、`tag`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="f33f0-302"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドし、必要な属性とスタイル属性を追加で指定されている設定を表示する要素の開始タグ、<xref:System.Web.UI.WebControls.Style>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="f33f0-303">使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>の開始タグを表示するためにオーバー ロードを`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-304">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用するクラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを適用する、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルをテキスト文字列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="f33f0-305"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドは、HTML をレンダリング`<span style="color:Navy;">`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="f33f0-306"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しを閉じます、`<span>`要素、テキストがレンダリングされた後です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-307">等号 (<see langword="=" />) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-308">使用する、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>フィールドの代わりに、<xref:System.Web.UI.HtmlTextWriter.EqualsChar>フィールドの属性値の区切り記号を構築するときにします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-309">次のコード例は、レンダリングする方法を示します、`src`属性とその値の部分を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="f33f0-310">コードを使用して、<xref:System.Web.UI.HtmlTextWriter.EqualsChar>フィールドに、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの呼び出しの間で、等号 (=) を表示するために、`src`属性とその値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="f33f0-311">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-312">文字列 (=") の等号 (=) と二重引用符文字 (") の両方を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-313"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>を属性値の区切り記号を構築するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-314">次のコード例は、レンダリングする方法を示します、`border`属性、`<table>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="f33f0-315">コードの呼び出し、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド、属性とその値、および使用方法を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A>をレンダリングするメソッド、<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>と<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="f33f0-316">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-317">指定したレイアウトと文字書式を終了するマークアップ要素の終了タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="f33f0-318">閉じるレイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-319">指定したレイアウトと文字書式を終了する <see langword="&lt;span&gt;" /> 要素の終了タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-320"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29>メソッドの終了タグの表示、 `<span>` 、対応する要素を閉じる開くコントロールの終了タグの直前後の要素、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="f33f0-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="f33f0-322">同じ値を使用して、`style`で、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用して、対応する<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-323">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用するクラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを適用する、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルをテキスト文字列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="f33f0-324"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドは、HTML をレンダリング`<span style="color:Navy;">`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="f33f0-325"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しを閉じます、`<span>`要素、テキストがレンダリングされた後です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="f33f0-326">出力テキストへの適用を停止するよう、レイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="f33f0-327">指定されたスタイルを適用した属性を含んだマークアップ要素の終了タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="f33f0-328">これは、対応する <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 呼び出しで渡されたキーに一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-329">指定されたマークアップ要素の終了タグを書き込んで、指定されたレイアウトと文字書式を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-330"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドで指定されている要素の終了タグをレンダリングする`tag`、コントロールの終了タグの後に、対応するによって開かれた要素を閉じる<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>メソッドの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f33f0-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="f33f0-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>と<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用する、デバイス アダプターまたはコントロールを開始し、指定したスタイルの文字書式を使用してブロックを終了するマークアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="f33f0-332">同じ値を使用して、`style`で、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを使用して、対応する<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-333">次のコード例は、という名前のカスタム クラスを使用する方法を示します`TextSample`から派生した、<xref:System.Web.UI.WebControls.WebControl>を使用するクラス、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドを適用する、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>スタイルをテキスト文字列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="f33f0-334"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>メソッドは、HTML をレンダリング`<span style="color:Navy;">`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="f33f0-335"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッドの呼び出しを閉じます、`<span>`要素、テキストがレンダリングされた後です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-336">ページまたは Web サーバー コントロールのすべてのプロパティで、すべてのマークアップとスタイル属性を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-337">マークアップ要素に属性がレンダリングされる前に、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="f33f0-338">さらに、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>と<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>属性とスタイルをレンダリングするためのメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-339">次のコード例から派生したカスタム クラスを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="f33f0-340">が呼び出されると、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかを確認します。`<label>`または`<a>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="f33f0-341">場合、 `<label>` 、要素が表示される、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッド チェックかどうかを`style`属性は要素に表示され、そうでない場合は、作成、`style`属性し、それに設定します`color: blue`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="f33f0-342">場合、 `<a>` 、要素が表示される、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドを判断するかどうか、`href`属性が含まれると、そうでない場合は、追加、 `href` URL にhttp://www.cohowinery.comします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-343">現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトのすべてのバッファーをクリアし、バッファー内のすべてのデータを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-344"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.Flush%2A>メソッドを呼び出すだけです、<xref:System.IO.TextWriter.Flush%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="f33f0-345">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> の取得対象となる属性を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-346">指定した属性に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-347">指定した属性の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値。属性が列挙型のメンバーでない場合は無効な <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-348">場合`attrName`は`null`または空の文字列 ("")、または属性の名前、値-1 の場合に型指定されたテーブルで見つからない、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-349">派生したクラスを使用する次のコード例には、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="f33f0-350">上書きのチェックするかどうか`tagKey`と等しい、<xref:System.Web.UI.HtmlTextWriterTag.Font>フィールドには、ことを示します、`<font>`マークアップ要素がレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="f33f0-351">そのため、オーバーライドを呼び出す場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>かどうかを確認するメソッド、`<font>`要素が含まれています、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="f33f0-352">場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>返します`false`、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>メソッドを定義する、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>し、その値に設定`30pt`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="f33f0-353">マークアップ属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-354">指定した <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値に関連付けられたマークアップ属性の名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-355">マークアップ属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-356"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>メソッドは空の文字列を返します ("") 場合は、`attrKey`は無効な<xref:System.Web.UI.HtmlTextWriterAttribute>値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-357">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>に変換するメソッドを<xref:System.Web.UI.HtmlTextWriterAttribute.Size>列挙体の値、文字列名。</span><span class="sxs-lookup"><span data-stu-id="f33f0-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="f33f0-358">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> の取得対象のスタイル属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-359">指定したスタイルの <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-360">
            <paramref name="styleName" /> に対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-361"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>メソッドは-1 として型指定された値を返します、<xref:System.Web.UI.HtmlTextWriterStyle>場合は、値`styleName`いずれかに対応していない<xref:System.Web.UI.HtmlTextWriterStyle>列挙値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-362">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-363"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>オーバーライドによりかどうかを`<label>`マークアップを表示して、そうである場合は、要素を確認、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="f33f0-364">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が定義されていません、<xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>メソッドへの呼び出しの最初のパラメーターとして使用されます、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドを追加する、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性を`<label>`マークアップ要素とセット、 <xref:System.Web.UI.HtmlTextWriterStyle.Color> する属性`red`.</span><span class="sxs-lookup"><span data-stu-id="f33f0-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="f33f0-365">スタイル属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-366">指定した <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたマークアップ スタイル属性名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-367">
            <paramref name="styleKey" /> で指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたスタイル属性名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-368">場合`styleKey`は無効な<xref:System.Web.UI.HtmlTextWriterStyle>オブジェクト、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>メソッドは空の文字列を返します ("")。</span><span class="sxs-lookup"><span data-stu-id="f33f0-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-369">次のコード例を確認する方法を示して かどうかを`<label>`要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="f33f0-370">場合、チェック、かどうかを<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性が要素で定義されています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="f33f0-371">属性が定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>メソッドに変換します、<xref:System.Web.UI.HtmlTextWriterStyle.Color>列挙型のメンバーに渡すには、その文字列形式へ、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="f33f0-372">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> の取得対象のマークアップ要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-373">指定したマークアップ要素に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-374">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値。<paramref name="tagName" /> が特定の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値に関連付けられていない場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-375">場合`tagName`は`null`、空の文字列 ("")、またはマークアップ タグの名前のテーブルに見つかりません、<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>メソッドが返す、<xref:System.Web.UI.HtmlTextWriterTag.Unknown>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-376">次のコード例は、のオーバー ロードをオーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>をパラメーターとして文字列を受け取るメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="f33f0-377">文字列が渡される、<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>メソッドで、対応に変換します<xref:System.Web.UI.HtmlTextWriterTag>列挙型メンバー、しに渡す、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>を受け取るオーバー ロード、<xref:System.Web.UI.HtmlTextWriterTag>列挙値をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f33f0-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="f33f0-378">マークアップ要素の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-379">指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-380">マークアップ要素を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-381">場合`tagKey`は無効な<xref:System.Web.UI.HtmlTextWriterTag>値、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>メソッドは空の文字列を返します ("")。</span><span class="sxs-lookup"><span data-stu-id="f33f0-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-382">次のコード例は、閉じる方法を示します、`<font>`要素を使用して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="f33f0-383"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>に変換するメソッド、<xref:System.Web.UI.HtmlTextWriterTag.Font>値を文字列にします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-384">マークアップの各行の開始位置のインデントを設定するタブ位置の数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-385">各行のインデントを設定するタブ位置の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-386">インデントがで指定された文字列を記述することで実行される、`tabString`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>コンス トラクターで指定されている回数、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="f33f0-387">場合、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティが負の値に設定、保存される前に 0 に変更されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-388">割り当てられている値をインクリメントする方法を次のコード例に示します、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>プロパティの開始タグに属性が追加されたときに、`<span>`要素と<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f33f0-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="f33f0-389">これにより、内にレンダリングするすべてのマークアップでインデント、`<span>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-390">マークアップ要素の内部コンテンツを書き込むテキスト ライターを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-391">内部マークアップの内容を書き込む <see cref="T:System.IO.TextWriter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-392">内部マークアップの内容は、開始と終了タグのマークアップ言語の要素の間にあるテキストです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="f33f0-393">場合、<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>プロパティに設定されて、<xref:System.IO.TextWriter>オブジェクトのインスタンスでは、<xref:System.Web.HttpWriter>クラス、このことが記載されてさらに別の参照を保存します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-394">次のコード例から派生したカスタム Web サーバー コントロールを使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl>をオーバーライドするクラス、<xref:System.Web.UI.Control.Render%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="f33f0-395">使用して、<xref:System.Web.UI.HtmlTextWriter>書き込むクラスを`<font>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="f33f0-396">使用して、要素の開始タグを書き込み、後に、<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>文字列に書き込むプロパティ`"<br> The time on the server:"`の値を持つには、この文字列を連結し、<xref:System.DateTime.Now%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-397">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-398">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-399">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-400">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-401">割り当てられる値を取得する、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトを使用して、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>この 1 つではなく、オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-402">次のコード例のオーバーライドを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>から継承するクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-403"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>チェックをオーバーライドするかどうかを`<font>`マークアップ要素がレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="f33f0-404">そのため、オーバーライドを呼び出す場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>メソッドを確認するかどうか、`<font>`要素が含まれています、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="f33f0-405">ない場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>メソッドを定義する、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`30pt`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-406">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-407">属性に代入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-408">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-409">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-410">場合、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>メソッドを返します。 `true`、に割り当てられる値、<xref:System.Web.UI.HtmlTextWriterAttribute>オブジェクトが返され、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-411">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、マークアップ スタイル属性をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-412">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-413">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-414">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-415">指定したスタイル属性に表示される値を取得する、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-416">次のコード例を確認する方法を示して かどうかを`<label>`要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="f33f0-417">そうである場合、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッド チェックかどうかを<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性が要素で定義されています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="f33f0-418">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が定義されていません、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドを定義、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性し、その値に設定`red`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f33f0-419">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-420">スタイル属性に割り当てられた値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-421">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性とその値をレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-422">
            <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性とその値をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-423">場合、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>メソッドを返します。 `true`、に割り当てられる値、<xref:System.Web.UI.HtmlTextWriterStyle>で属性が返される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="f33f0-424">確認する属性の名前が格納されている文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-425">
            <see langword="&lt;form&gt;" /> マークアップ要素の開始タグに確実に属性がレンダリングされるようにするために、属性を確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-426">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-427"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>メソッドを返します。`true`すべての属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="f33f0-428">上書き、<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>の開始タグで表示できる属性を制限する、`<form>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-429">上書き、<see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />メソッドを返す<see langword="true" />属性に含めることがある場合のみ、<see langword="&lt;form&gt;" />から派生したクラスをマークアップの要素、<see cref="T:System.Web.UI.HtmlTextWriter" />クラスが対象としています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-429">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-430">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトで使用される行終端文字列を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-431">現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> で使用される行終端文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-432">既定の行終端記号文字列は、ライン フィード ("\r\n") の後にキャリッジ リターンのです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="f33f0-433">たびに 1 つの出力ストリームに書き込まれる行終端記号の文字列の<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="f33f0-434">場合、<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>プロパティに設定されて`null`既定の新しい改行文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-435">次のコード例から派生したカスタム クラスを使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter>をオーバーライドするクラス、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="f33f0-436">が呼び出されると、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>オーバーライドは、いずれかのテキスト ライターをレンダリングするかどうかを確認します。`<label>`または`<a>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="f33f0-437">そうである場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドは、ラベルのスタイル属性が定義されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="f33f0-438">スタイルが定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドの既定値の設定、`style:color`を青の属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="f33f0-439"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>メソッドを使用し、<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>行を挿入するプロパティは、マークアップ タグでが動作して、その他の定義済みの属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-440">レンダリングする属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-441">属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-442">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-443">指定したマークアップ属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-444">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-445"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>メソッドは常に返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="f33f0-446"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>上書きがページに、属性をレンダリングするかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-447">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="f33f0-448">場合、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性をレンダリングするが、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>値が`30pt`、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>呼び出しをオーバーライド、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>を追加するメソッド、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`30pt`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-449">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />オーバーライドするクラス、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />を返すメソッドを<see langword="false" />属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップに表示されるようにします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-449">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span>
            </span>
            <span data-ttu-id="f33f0-450">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="bgcolor" />属性を<see langword="&lt;table&gt;" />、要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />戻って<see langword="false" />とき<paramref name="name" />渡します<see langword="bgcolor" />と<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />プロパティの値が<see langword="table" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-450">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-451">レンダリングするスタイル属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-451">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-452">スタイル属性に割り当てる値を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-452">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-453">スタイル属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-453">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-454">指定されたマークアップ スタイル属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-454">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-455">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-455">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-456"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>メソッドは常に返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-456">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="f33f0-457"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>上書きがページにスタイル属性を表示するかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-457">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-458">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-458">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="f33f0-459">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>スタイル属性をレンダリングするが、<xref:System.Web.UI.HtmlTextWriterStyle.Color>値が`purple`、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>オーバーライドは、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>を設定するメソッド、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性を`purple`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-459">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-460">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />オーバーライドするクラス、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />メソッドを返す<see langword="false" />スタイル属性をまったく表示されている、特定の要素をレンダリングする、または特定のマークアップ言語に表示されるようにします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-460">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span>
            </span>
            <span data-ttu-id="f33f0-461">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="color" />するスタイル属性を<see langword="&lt;p&gt;" />要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />戻って<see langword="false" />とき<paramref name="name" />を渡します<see langword="color" />と<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />プロパティの値が<see langword="p" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-461">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-462">レンダリングする要素の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-462">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-463">要素に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-463">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-464">指定したマークアップ要素を要求側のページにレンダリングするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-464">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-465">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-465">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-466"><xref:System.Web.UI.HtmlTextWriter>のクラスの実装、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>メソッドは常に返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-466">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="f33f0-467"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>上書きが要素をページに表示するかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-467">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-468">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-468">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="f33f0-469">場合、 <xref:System.Web.UI.HtmlTextWriterTag.Font> 、要素が表示される、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>オーバーライドは、<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>判断するメソッドかどうかを<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-469">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="f33f0-470">そうでないを使用する場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>を作成する方法、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性し、その値に設定`20pt`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-470">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-471">継承する場合、<see cref="T:System.Web.UI.HtmlTextWriter" />オーバーライドするクラス、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />を返すメソッドを<see langword="false" />マークアップ要素がまったく、または特定のマークアップ言語用に表示されないようにします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-471">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span>
            </span>
            <span data-ttu-id="f33f0-472">派生したオブジェクトしたくない場合など<see cref="T:System.Web.UI.HtmlTextWriter" />表示するために、<see langword="&lt;font&gt;" />要素をオーバーライドできます、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />メソッドを返す<see langword="false" />を含むページが要求された場合、<see langword="&lt;font&gt;" />要素。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-472">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-473">マークアップ文字の行のインデント レベルを表す一連のタブ文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-473">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-474"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>メソッドは、<xref:System.Web.UI.HtmlTextWriter.Indent%2A>目的のインデントを取得する記述する数のタブ文字列を決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="f33f0-475">タブ文字列がで指定された、<xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-475">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="f33f0-476">タブ文字列を指定しない場合、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>定数 (`\t`) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-476">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-477">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-477">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-478"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>オーバーライド使用では常に、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>インデントを実行する定数。</span><span class="sxs-lookup"><span data-stu-id="f33f0-478">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-479">レンダリングする要素のリストから、最近保存したマークアップ要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-479">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-480">最近レンダリングしたマークアップ要素を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-480">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-481">要素によって出力されるマークアップ要素の一覧に追加されます、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-481">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="f33f0-482"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドは、呼び出すことによって、一覧からマークアップ要素を削除、<xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-482">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f33f0-483">レンダリングする要素のリストが空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-483">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="f33f0-484">マークアップ要素の終了タグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-484">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-485">マークアップ要素の終了タグを生成するときに、後で使用できるように、指定されたマークアップ要素を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-485">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-486">要素が出力されるマークアップ要素の一覧に追加されたときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドの呼び出し、<xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-486">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="f33f0-487"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドは、要素の終了タグを表示した後に、一覧からマークアップ要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-487">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-488">登録するマークアップ属性の名前を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-488">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-489">属性名に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-489">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-490">リテラルの、または動的に生成されたマークアップ属性をソース ファイルから登録して、これらの属性を要求側のクライアントに適切にレンダリングできるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-490">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-491">HTML マークアップ言語の定義済みの属性がへの呼び出しによって登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>メソッドと最初の<xref:System.Web.UI.HtmlTextWriter>オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-491">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="f33f0-492">動的な属性を使用して登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>メソッド以外の時期です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-492">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="f33f0-493">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>メソッドは`static`属性の登録はすべてに適用されますので、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-493">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-494">スタイル名を指定するソース ファイルから渡された文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-494">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-495">指定したスタイルに対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-495">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-496">リテラルの、または動的に生成されたマークアップ スタイル プロパティをソース ファイルから登録して、これらのプロパティを要求側のクライアントに適切にレンダリングできるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-496">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-497">HTML マークアップ言語のカスケード スタイル シート (CSS) の定義済み属性がへの呼び出しによって登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>メソッドと最初の<xref:System.Web.UI.HtmlTextWriter>オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-497">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="f33f0-498">動的なスタイル属性を使用して登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>メソッド以外の時期です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-498">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="f33f0-499">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>メソッドは`static`属性の登録はすべてに適用されますので、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-499">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-500">HTML タグを格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-500">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f33f0-501">レンダリングする要素を指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-501">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-502">リテラルの、または動的に生成されたマークアップ タグをソース ファイルから登録して、それらのタグを要求側のクライアントに適切にレンダリングできるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-502">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-503">HTML 言語の定義済みのマークアップ タグがへの呼び出しによって登録されている、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>メソッドと最初の<xref:System.Web.UI.HtmlTextWriter>オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-503">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="f33f0-504">使用して動的なマークアップ タグを登録することができます、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>メソッド以外の時期です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-504">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="f33f0-505">使用される登録テーブル、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>メソッドは`static`タグの登録はすべてに適用されますので、<xref:System.Web.UI.HtmlTextWriter>ホスト コンピューター上のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-505">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-506">マークアップ要素のコンテンツの後および終了タグの前に出現するテキストまたは空白文字をマークアップの出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-506">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-507">要素のコンテンツの後に書き込む空白文字またはテキストを格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-507">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-508"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>メソッドは現在のマークアップ要素に子要素を挿入する場合に便利にできます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-508">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-509">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスを決定するかどうかを`<label>`レンダリングされる要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-509">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="f33f0-510">そうである場合、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>上書き挿入の終了タグ、`<font>`の終了タグの直前の要素、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-510">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="f33f0-511">要素以外の場合`<label>`、表示される、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-511">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-512">
              <see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />メソッドを返します。<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-512">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f33f0-513">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />テキストまたは要素のコンテンツの後、終了タグの前に空白文字を記述するかどうか。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-513">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-514">マークアップ要素の終了タグの後に出現する空白文字またはテキストを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-514">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-515">要素の終了タグの後に書き込む空白文字またはテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-515">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-516"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>メソッドは要素のタグの後に追加の終了タグをレンダリングする役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-516">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-517">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>クラスから派生したかどうかを判断するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスをレンダリングする`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-517">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="f33f0-518">そうである場合、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>上書き挿入の終了タグ、`<font>`要素の直後に、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-518">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="f33f0-519">ない場合、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-519">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-520">
              <see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />メソッドを返します。<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-520">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f33f0-521">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />テキストまたは要素の終了タグの後の間隔を記述する場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-521">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-522">マークアップ要素のコンテンツの前および開始タグの後にテキストまたは空白文字を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-522">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-523">要素のコンテンツの前に書き込むテキストまたは空白文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-523">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="f33f0-524">オーバーライドされない場合、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> は <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-524">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-525"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>メソッドは内部マークアップの前に、現在のマークアップ要素に子要素を挿入する場合に便利にできます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-525">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-526">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>クラスから派生したかどうかを判断するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスは、表示しようとする、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-526">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="f33f0-527">そうである場合、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>上書き挿入の開始タグ、`<font>`要素の開始タグの直後後、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-527">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="f33f0-528">ない場合、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-528">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-529">
              <see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />メソッドを返します。<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-529">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f33f0-530">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />テキストまたは空白文字の開始タグの後、前の要素の内容を記述するかどうか。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-530">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-531">マークアップ要素の開始タグの前に出現するテキストまたは空白文字を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-531">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f33f0-532">マークアップ要素の開始タグの前に書き込むテキストまたは空白文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-532">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="f33f0-533">オーバーライドされない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-533">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-534"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>メソッドは目的の要素の開始タグの前に、追加の開始タグをレンダリングする役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-534">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-535">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>クラスから派生したかどうかを判断するメソッド、<xref:System.Web.UI.HtmlTextWriter>クラスは、表示しようとする、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-535">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="f33f0-536">そうである場合、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>上書き挿入の開始タグ、`<font>`要素の直前に、`<label>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-536">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="f33f0-537">場合は表示されません、`<label>`要素、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>基本メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-537">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-538">
              <see cref="T:System.Web.UI.HtmlTextWriter" />のクラスの実装、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />メソッドを返します。<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-538">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="f33f0-539">オーバーライド<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />テキストまたは要素の開始タグの前の空白文字を記述する場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-539">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-540">マークアップ要素の開始タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-540">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="f33f0-541">開始タグをレンダリングするマークアップ要素の名前を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-541">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-542">指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-542">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-543">使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>のオーバーライド、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29>マークアップ要素がないのいずれかの場合、メソッド、<xref:System.Web.UI.HtmlTextWriterTag>列挙値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-543">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="f33f0-544">使用してマークアップ要素を生成する、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、最初の呼び出し、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグで表示するスタイル属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-544">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="f33f0-545">呼び出す内部マークアップを生成した後、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>終了タグを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-545">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-546">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>非標準の開始タグを表示するためにカスタム コントロールのメソッド`MyTag`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-546">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="f33f0-547">コード例を呼び出して、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド内部のマークアップに呼び出しを表示するために、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドは、要素を閉じます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-547">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="f33f0-548">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-548">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="f33f0-549">レンダリングするマークアップ要素の開始タグを定義する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-549">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-550">指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素の開始タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-550">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-551">使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>のオーバー ロード、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29>メソッドのいずれかである、既知の型のマークアップ要素の場合、<xref:System.Web.UI.HtmlTextWriterTag>列挙値。</span><span class="sxs-lookup"><span data-stu-id="f33f0-551">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="f33f0-552">使用してマークアップ要素を生成する、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドは、最初の呼び出し、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>メソッドは、必要に応じて、任意の要素の属性または要素の開始タグで表示するスタイル属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-552">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="f33f0-553">呼び出す内部マークアップを生成した後、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>終了タグを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-553">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-554">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>の開始タグを出力するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-554">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="f33f0-555">によって要素に追加される属性、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>メソッドは、開くときになります`<img>`タグ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-555">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="f33f0-556"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドは、終了タグの生成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-556">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="f33f0-557">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-557">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-558">マークアップ要素の終了タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-558">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-559">呼び出す、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッドの後、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>オーバー ロードが呼び出されますと要素の終了タグ (内部マークアップ) との間のすべてのコンテンツがレンダリングされた後にします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-559">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-560">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>後に両方のメソッド、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>開始タグを生成するメソッドと<xref:System.Web.UI.HtmlTextWriter.Write%2A>とカスタムの終了タグの間の内部マークアップをレンダリングするメソッド`MyTag`要素が呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-560">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="f33f0-561">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-561">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-562">マークアップ タグの空白文字と自己終了スラッシュ記号 (/) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-562">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-563"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars>自己終了マークアップ要素のフィールドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-563">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="f33f0-564">例:</span><span class="sxs-lookup"><span data-stu-id="f33f0-564">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-565">自己終了マークアップ要素の終了スラッシュ記号と右山かっこ (/&gt;) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-565">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-566"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッド自己終了マークアップ要素を構築するときにします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-566">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-567">次のコード例は、カスタムの値をレンダリングする方法を示します`FileName`引用符の後にプロパティとによって表される文字、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-567">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="f33f0-568">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを呼び出し、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>フィールド、パラメーターの引数の要素を閉じます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-568">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="f33f0-569">このコード例が表示される、`FileName`プロパティの値と、次のマークアップ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-569">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-570">セミコロン (;) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-570">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-571">渡す、<xref:System.Web.UI.HtmlTextWriter.SemicolonChar>フィールド パラメーターの引数として、<xref:System.Web.UI.HtmlTextWriter.Write%2A>カスタム コントロールまたはアダプターからセミコロンをレンダリングするときに、メソッド呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f33f0-571">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-572">次のコード例では、手動で一連のマークアップ要素のスタイルをレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-572">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="f33f0-573">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド`font-size`と`border-style`スタイル属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-573">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="f33f0-574"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar>フィールドのパラメーターとして使用されます、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を分離する、`font-size`の先頭からの属性、`border-style`属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-574">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="f33f0-575">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-575">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-576">アポストロフィ (') を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-576">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-577">使用して、<xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>アポストロフィを表示するために必要な場合のフィールドします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-577">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-578">スラッシュ記号 (/) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-578">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-579">使用して、<xref:System.Web.UI.HtmlTextWriter.SlashChar>スラッシュを表示するためにフィールドは、URL を作成する場合をマークします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-579">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="f33f0-580"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドは、<xref:System.Web.UI.HtmlTextWriter.SlashChar>マークアップ要素の終了タグを作成するときのフィールドします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-580">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-581">次のコード例は、手動で描画する方法を示します、`src`の属性、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-581">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="f33f0-582">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.SlashChar>に適用されるパスにスラッシュを表示するために、パラメーターとしてフィールドをマーク、`src`属性。</span><span class="sxs-lookup"><span data-stu-id="f33f0-582">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="f33f0-583">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-583">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-584">空白文字 ( ) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-584">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-585"><xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>要素と属性間の区切り記号を記述するときのメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-585">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-586">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-586">This section provides two code examples.</span></span> <span data-ttu-id="f33f0-587">1 つ目は、文字配列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-587">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="f33f0-588">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-588">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="f33f0-589">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-589">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="f33f0-590">次のコード例を作成する方法を示しています、<xref:System.Char>を含む配列、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-590">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="f33f0-591">次のコード例を呼び出すときに、パラメーターとして上記のコード例で作成された配列を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-591">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-592">スタイル属性を値に等しく設定するために使用するスタイル イコール (<see langword=":" />) 文字を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-592">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-593"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>フィールドを使って、<xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>スタイルの名前と値を区切るためにメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-593">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-594">次のコード例は、表示する方法を示します、`FontWeight`属性と値の`bold`要素の開始タグにします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-594">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="f33f0-595">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>各スタイル属性の値を設定する文字を表示するためにパラメーターとしてフィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-595">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="f33f0-596">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-596">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-597">指定したマークアップ要素の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-597">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-598">開始タグが出力されるマークアップ要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-598">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-599"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A>はから継承するクラスにのみ使用するプロパティ、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-599">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-600">読み取りまたは設定する必要があります、<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>プロパティへの呼び出しでのみ、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドです。 これは、一貫性のある値に設定されている唯一の時間。</span><span class="sxs-lookup"><span data-stu-id="f33f0-600">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-601">次のコード例のオーバーライドされたバージョンを示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-601">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-602">値を使用して、<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>カスタムを使用してサーバー コントロールかどうかを決定するプロパティ<xref:System.Web.UI.HtmlTextWriter>オブジェクトのレンダリングを`<label>`マークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-602">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="f33f0-603">である場合、`<font>`を持つ要素を`color`属性に設定`red`の書式を変更するには、`<label>`要素のテキスト。</span><span class="sxs-lookup"><span data-stu-id="f33f0-603">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f33f0-604">プロパティ値が設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-604">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-605">マークアップ タグの開始山かっこ (&lt;) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-605">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-606"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar>フィールドを使って、 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドのマークアップ タグを記述する場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-606">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-607">次のコード例のレンダリングの開始タグの最初の文字を`<table>`要素の名前を持つ要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-607">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="f33f0-608">コード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.TagLeftChar>をパラメーターとしてフィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-608">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="f33f0-609">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-609">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-610">レンダリングされるマークアップ要素のタグ名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-610">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f33f0-611">出力されるマークアップ要素のタグ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-611">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-612"><xref:System.Web.UI.HtmlTextWriter.TagName%2A>はから継承するクラスにのみ使用するプロパティ、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-612">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-613">読み取りまたは設定する必要があります、<xref:System.Web.UI.HtmlTextWriter.TagName%2A>プロパティでのみ<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>メソッドの呼び出しです。 これは、一貫性のある値に設定されている唯一の時間。</span><span class="sxs-lookup"><span data-stu-id="f33f0-613">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-614">次のコード例のオーバーライドされたバージョンを示します、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>から派生したクラスのメソッド、<xref:System.Web.UI.HtmlTextWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f33f0-614">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="f33f0-615">コード例は、レンダリングする要素がかどうかを確認します。、`<label>`要素を呼び出すことによって、<xref:System.String.Compare%2A?displayProperty=nameWithType>メソッドを渡す、、<xref:System.Web.UI.HtmlTextWriter.TagName%2A>プロパティの値と、文字列`"label"`、パラメーターの引数として。</span><span class="sxs-lookup"><span data-stu-id="f33f0-615">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="f33f0-616">場合、`<label>`要素のレンダリングの開始タグ、`<font>`要素で、`color`属性に設定`red`、前にレンダリング、`<label>`の開始タグの要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-616">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="f33f0-617">レンダリングする要素がない場合、`<label>`要素では、基底クラスのバージョンの<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-617">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-618">マークアップ タグの終了山かっこ (&gt;) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-618">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-619"><xref:System.Web.UI.HtmlTextWriter.TagRightChar>フィールドを使って、 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドのマークアップ タグを記述する場合。</span><span class="sxs-lookup"><span data-stu-id="f33f0-619">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-620">次のコード例の終了タグをレンダリングする方法を示しています、`<table>`要素のオーバー ロードを呼び出して、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-620">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="f33f0-621">コード例を使用して、タグの最後の文字を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.TagRightChar>をパラメーターとしてフィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-621">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="f33f0-622">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-622">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-623">保留中のタブ空白文字と共に、指定したデータ型を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-623">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-624">出力ストリームに書き込む <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-624">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-625">保留中のタブ空白文字と共に、ブール値のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-625">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-626"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-626">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-627">出力ストリームに書き込む Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-627">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-628">保留中のタブ空白文字と共に、Unicode 文字のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-628">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-629"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-629">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-630">次のコード例に示しますを使用して、<xref:System.Web.UI.HtmlTextWriter.Write%2A>の開始タグを終了するメソッド、`<img>`要素を使用して、<xref:System.Web.UI.HtmlTextWriter.TagRightChar>定数。</span><span class="sxs-lookup"><span data-stu-id="f33f0-630">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="f33f0-631">このコード例は、次のマークアップを出力します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-631">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f33f0-632">出力ストリームに書き込む Unicode 文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-632">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-633">保留中のタブ空白文字と共に、Unicode 文字の配列のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-633">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-634"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-634">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-635">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-635">This section provides two code examples.</span></span> <span data-ttu-id="f33f0-636">1 つ目は、文字の配列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-636">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="f33f0-637">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-637">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="f33f0-638">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-638">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="f33f0-639">次のコード例は、out スペル文字の配列を作成する方法を示します`hello world`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-639">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="f33f0-640">配列内に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドで、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-640">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="f33f0-641">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.Write%2A>をレンダリングするメソッド、`hello world`ページで次のコード例を格納しているコントロールが含まれている場合に、ページには、上記のコード例で作成した文字配列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-641">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-642">出力ストリームに書き込む倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-642">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-643">保留中のタブ空白文字と共に、倍精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-643">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-644"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-644">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-645">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Double.MaxValue?displayProperty=nameWithType>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-645">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="f33f0-646">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-646">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-647">出力ストリームに書き込む 32 バイト符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-647">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-648">保留中のタブ空白文字と共に、32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-648">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-649"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-649">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-650">出力ストリームに書き込む 64 バイト符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-650">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-651">保留中のタブ空白文字と共に、64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-651">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-652"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-652">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-653">出力ストリームに書き込むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-653">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-654">保留中のタブ空白文字と共に、オブジェクトのテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-654">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-655"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-655">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-656">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-656">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f33f0-657">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-657">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="f33f0-658">値、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-658">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-659">出力ストリームに書き込む単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-659">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-660">保留中のタブ空白文字と共に、単精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-660">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-661"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-661">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-662">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を表示するために、<xref:System.Single.Epsilon?displayProperty=nameWithType>フィールドで、最小有効値は、の<xref:System.Single>構造体。</span><span class="sxs-lookup"><span data-stu-id="f33f0-662">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="f33f0-663">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-663">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f33f0-664">出力ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-664">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-665">保留中のタブ空白文字と共に、指定した文字列を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-665">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-666"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-666">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-667">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.Write%2A>とカスタム マークアップ要素の終了タグの間の文字列をレンダリングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-667">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="f33f0-668">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-668">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-669">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-669">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="f33f0-670">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-670">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-671">保留中のタブ空白文字と共に、<see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、タブ文字列と書式設定された文字列を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-671">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-672"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-672">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-673">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドの値を持つ書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-673">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-674">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-674">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="f33f0-675">書式設定するオブジェクト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-675">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-676">保留中のタブ空白文字と共に、オブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-676">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="f33f0-677">このメソッドは <see cref="M:System.String.Format(System.String,System.Object[])" /> メソッドと同じセマンティクスを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-677">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-678"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-678">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-679">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-679">This section contains two code examples.</span></span> <span data-ttu-id="f33f0-680">1 つ目は、書式設定された文字列と、配列の内容を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-680">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="f33f0-681">2 番目の例では、配列を宣言する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-681">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="f33f0-682">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>書式設定された文字列とという名前のオブジェクトの配列の内容を表示するためにメソッド`curPriceTime`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-682">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="f33f0-683">メソッドの呼び出しは、最初のメンバーが表示される前に、配列の 2 番目のメンバーを表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-683">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="f33f0-684">次のコード例では、宣言することを示します、`curPriceTime`オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f33f0-684">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f33f0-685">出力ストリームへのテキストの書き込み元となる文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-685">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f33f0-686">書き込みの開始位置を示す配列内のインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-686">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f33f0-687">出力ストリームに書き込む文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-687">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-688">保留中のタブ空白文字と共に、Unicode 文字の部分配列のテキスト形式を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-688">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-689"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-689">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-690">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-690">This section provides two code examples.</span></span> <span data-ttu-id="f33f0-691">1 つ目は、文字配列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-691">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="f33f0-692">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-692">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="f33f0-693">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-693">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="f33f0-694">次のコード例は、out スペル文字の配列を作成する方法を示しています。`hello world`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-694">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="f33f0-695">配列内に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドで、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-695">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="f33f0-696">次のコード例の部分を使用して、`index`と`count`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.Write%2A>前の例で作成された配列の最初の 5 文字を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-696">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-697">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-697">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="f33f0-698">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-698">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f33f0-699">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-699">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-700">保留中のタブ空白文字と共に、2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-700">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="f33f0-701">このメソッドは <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-701">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-702"><xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッドは、タブ、保留になっていると、呼び出しを生成、<xref:System.IO.TextWriter.Write%2A>基本メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-702">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-703">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.Write%2A>メソッド書式設定された文字列との値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>と<xref:System.DateTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-703">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-704">マークアップ属性とその値を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-704">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-705">出力ストリームに書き込む属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-705">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-706">属性に代入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-706">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-707">指定したマークアップ属性と値を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-707">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-708">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>マークアップ属性とエンコードなしでは、その値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-708">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="f33f0-709"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-709">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="f33f0-710">場合`value`は`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、属性名のみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-710">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-711">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-711">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="f33f0-712">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-712">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="f33f0-713">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-713">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="f33f0-714">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>オーバー ロードでの書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-714">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="f33f0-715">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-715">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="f33f0-716">要素の開始タグを閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-716">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="f33f0-717">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-717">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-718">派生クラスでオーバーライドすることができます、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />属性とその値を記述するためのカスタム規則を定義するメソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-718">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="f33f0-719">許可されているコードを記述するなど、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />に空の値を持つ属性を書き込みます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-719">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-720">出力ストリームに書き込むマークアップ属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-720">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-721">属性に代入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-721">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="f33f0-722">属性とその代入値をエンコードする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-722">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-723">指定されたマークアップ属性と値を出力ストリームに書き込みます。また、指定されている場合は、エンコードされた値も書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-723">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-724">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>マークアップ属性とエンコードの有無は、その値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-724">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="f33f0-725"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>することにより、エンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-725">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="f33f0-726"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-726">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="f33f0-727">場合`value`は`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドは、属性名のみを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-727">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-728">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-728">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="f33f0-729">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-729">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="f33f0-730">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-730">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="f33f0-731">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>オーバー ロードでの書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-731">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="f33f0-732">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-732">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="f33f0-733">要素の開始タグを閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-733">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="f33f0-734">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-734">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f33f0-735">派生クラスでオーバーライドすることができます、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />属性とその値を記述するためのカスタム規則を定義するメソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-735">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="f33f0-736">許可されているコードを記述するなど、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />に空の値を持つ属性を書き込みます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f33f0-736">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="f33f0-737">開始タグを書き込むマークアップ要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-737">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-738">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-738">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-739"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドでは、マークアップ要素の開始タグの終了山かっこ (>) は書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="f33f0-740">これにより、要素の開始タグのマークアップ属性の書き込みができます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-740">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="f33f0-741">使用して、<xref:System.Web.UI.HtmlTextWriter.TagRightChar>定数を呼び出すときに、開始タグを閉じる、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-741">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="f33f0-742">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドを<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>は自己終了マークアップ要素を記述するときに定数です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-742">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="f33f0-743"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッド タグや属性のマッピングを許可しないようにし要求ごとに同じ方法でマークアップ要素をレンダリングするカスタム サーバー コントロールによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-743">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-744">次のコード例に示しますレンダリング、`<img>`の両方をオーバー ロード内の要素、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-744">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="f33f0-745">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-745">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="f33f0-746">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドで、要素の開始文字を表示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-746">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="f33f0-747">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>オーバー ロードでの書き込みが、`alt`属性とその値を`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-747">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="f33f0-748">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>カスタムを表示するためにオーバー ロード`myattribute`属性の値と`No "encoding" required`、し、設定`fEncode`に`false`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-748">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="f33f0-749">要素の開始タグを閉じを呼び出して、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-749">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="f33f0-750">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-750">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-751">
            <see langword="&lt;br /&gt;" /> マークアップ要素を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-751">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-752">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>カスタム コントロールまたはアダプターのマークアップで行を表示するためにメソッドが中断されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-752">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="f33f0-753"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>メソッドの間にスペースを書き込み、`br`と`/`HTML 互換性を高めるためです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-753">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-754">次のコード例を呼び出す方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>メソッドを`<br />`要素の後の要求元のブラウザーを<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッドは、エンコードされた書き込みます`&lt;custID&gt; &amp; &lt;invoice#&gt;`マークアップ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-754">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f33f0-755">エンコードして出力ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-755">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-756">要求元のデバイスで指定したテキストをエンコードし、それを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-756">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-757">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッドを文字列には、山かっこが含まれている場合 (\<または >) やアンパサンド (&)。</span><span class="sxs-lookup"><span data-stu-id="f33f0-757">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="f33f0-758"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッドは、<xref:System.Web.HttpUtility.HtmlEncode%2A>エンコードを実行するメソッドも Unicode 文字に変換し、`00A0`に`&nbsp;`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-758">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-759">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>でエンコードされたマークアップを書き込むメソッド`&lt;custID&gt; &amp; &lt;invoice#&gt;`出力ストリームにします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-759">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="f33f0-760"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>メソッド書き込み`<br />`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-760">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f33f0-761">
            <paramref name="text" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-761">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="f33f0-762">エンコードして出力ストリームに書き込む URL 文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-762">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-763">指定された URL をエンコードしてから、出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-763">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="f33f0-764">URL にはパラメーターが含まれている場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-764">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-765"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>メソッドは、文字列で、 `url` URL エンコード仕様に従ってパラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-765">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="f33f0-766">疑問符 (?) 区切り記号に続くパラメーターはエンコードされません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-766">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-767">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>メソッドで、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="f33f0-768">エンコードして出力ストリームに書き込む URL パラメーターの文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-768">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-769">指定した URL パラメーターを要求側のデバイスに合わせてエンコードし、それを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-769">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-770">URL のパラメーター部分のスペースは、プラス記号 (+) としてエンコードし、等号 (=) としてエンコードされます`%3d`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-770">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-771">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>メソッドで、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-771">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="f33f0-772">終了タグを書き込む要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-772">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-773">タブ空白文字と指定したマークアップ要素の終了タグを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-773">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-774">異なり、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>メソッド、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>メソッドには、対応する開始タグと一致する要素の終了タグを作成するためのロジックがありません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-774">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-775">次のコード例に示しますレンダリング、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-775">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="f33f0-776">コード例では、次のプロセスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-776">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="f33f0-777">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>要素の開始文字を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-777">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="f33f0-778">2 つのオーバー ロードを呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>メソッドに属性を書き込む、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-778">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="f33f0-779">呼び出し、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>を終了するメソッド、`<img>`要素。</span><span class="sxs-lookup"><span data-stu-id="f33f0-779">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="f33f0-780">出力ストリームに書き込む要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-780">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-781">タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-781">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-782"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>メソッドに自動的に終了山かっこ (>) の書き込み、要素の開始タグとは異なり、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>メソッドは、終わりの山かっこは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="f33f0-782">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="f33f0-783">使用<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>マークアップ要素の属性がないのです。</span><span class="sxs-lookup"><span data-stu-id="f33f0-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-784">オーバーロードされたパラメーターで指定されたデータを <see cref="T:System.Web.UI.HtmlTextWriter" /> 出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-784">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="f33f0-785">このメソッドのすべてのバージョンで、保留中のタブ空白文字が出力ストリームに書き込まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-785">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-786">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-786">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-787"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-787">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-788">行終端文字列を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-788">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-789">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-790">詳細については、「<xref:System.IO.TextWriter.WriteLine%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f33f0-790">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-791">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>後の行を挿入するメソッドを`<img>`要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-791">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-792">出力ストリームに書き込むブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-792">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-793">保留中のタブ空白文字とブール値のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-793">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-794">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-795"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-796">出力ストリームに書き込む文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-796">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-797">保留中のタブ空白文字と Unicode 文字を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-797">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-798">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-799"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f33f0-800">出力ストリームに書き込む文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-800">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-801">保留中のタブ空白文字と Unicode 文字の配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-801">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-802">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-802">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-803"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-803">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-804">このセクションでは、2 つのコード例を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-804">This section provides two code examples.</span></span> <span data-ttu-id="f33f0-805">1 つ目は、配列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-805">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="f33f0-806">2 番目の例では、その配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-806">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="f33f0-807">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-807">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="f33f0-808">次のコード例は、out スペル文字の配列を作成する方法を示しています。`hello world`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-808">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="f33f0-809">配列内に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドで、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-809">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="f33f0-810">次のコード例のレンダリング、`hello world`文字配列を使用して、前の例で作成された、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-810">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-811">出力ストリームに書き込む倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-811">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-812">保留中のタブ空白文字と倍精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-812">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-813">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-813">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-814"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-814">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-815">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Double.MaxValue?displayProperty=nameWithType>フィールド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-815">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="f33f0-816">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-816">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-817">出力ストリームに書き込む 32 バイト符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-817">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-818">指定したタブ文字列と 32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-818">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-819">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-820"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-821">出力ストリームに書き込む 64 バイト符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-821">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-822">指定したタブ文字列と 64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-822">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-823">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-824"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-825">出力ストリームに書き込むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-825">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-826">保留中のタブ空白文字とオブジェクトのテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-826">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-827">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-827">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-828"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-828">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-829">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>プロパティをコントロールします。</span><span class="sxs-lookup"><span data-stu-id="f33f0-829">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-830">出力ストリームに書き込む単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-830">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-831">保留中のタブ空白文字と単精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-831">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-832">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-832">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-833"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-833">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-834">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を表示するために、<xref:System.Single.Epsilon?displayProperty=nameWithType>フィールドで、最小有効値は、の<xref:System.Single>構造体。</span><span class="sxs-lookup"><span data-stu-id="f33f0-834">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="f33f0-835">このコード例では、次のマークアップが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-835">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f33f0-836">出力ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-836">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-837">保留中のタブ空白文字とテキスト文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-837">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-838">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-839"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f33f0-840">出力ストリームに書き込む 4 バイト符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-840">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-841">指定したタブ文字列と 4 バイトの符号なし整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-841">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-842">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-842">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-843"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-843">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-844">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-844">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="f33f0-845">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-845">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-846">保留中のタブ空白文字とオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-846">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-847">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-847">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-848"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-848">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="f33f0-849"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-849">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-850">次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドの値を持つ書式設定された文字列を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-850">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-851">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-851">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="f33f0-852">書式設定するオブジェクト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-852">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-853">保留中のタブ空白文字とオブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-853">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-854">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-854">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-855"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-855">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="f33f0-856"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-856">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-857">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-857">This section contains two code examples.</span></span> <span data-ttu-id="f33f0-858">1 つ目は、文字列および配列を出力ストリームにレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-858">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="f33f0-859">2 つ目は、配列を宣言する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-859">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="f33f0-860">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>書式設定された文字列とオブジェクトの配列を出力ストリームの内容をレンダリングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-860">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="f33f0-861">次のコード例では、上記のコード例で出力されたオブジェクトの配列を宣言する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-861">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f33f0-862">出力ストリームにテキストを書き込む文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-862">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f33f0-863">書き込みを開始する文字配列内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-863">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f33f0-864">出力ストリームに書き込む配列内の文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-864">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-865">保留中のタブ空白文字と Unicode 文字の部分配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-865">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-866">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-866">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-867"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-867">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-868">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-868">This section contains two code examples.</span></span> <span data-ttu-id="f33f0-869">1 つ目は、文字配列を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-869">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="f33f0-870">2 番目の例では、配列を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f33f0-870">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="f33f0-871">これらのコード例では、次のマークアップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-871">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="f33f0-872">次のコード例は、out スペル文字の配列を作成する方法を示します`hello world`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-872">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="f33f0-873">配列内に含まれるが、<xref:System.Web.UI.HtmlTextWriter.SpaceChar>フィールドで、2 つの単語の間にスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-873">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="f33f0-874">次のコード例では、`index`と`count`のパラメーター、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>上記のコード例で作成された配列の最初の 5 文字を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-874">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="f33f0-875">0 個以上の書式項目を格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-875">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="f33f0-876">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-876">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f33f0-877">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-877">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-878">保留中のタブ空白文字と 2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-878">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-879">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-879">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-880"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドと同じセマンティクスを使用して、<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-880">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="f33f0-881"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-881">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f33f0-882">次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッド書式設定された文字列との値を表示するために、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>プロパティおよび<xref:System.DateTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f33f0-882">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f33f0-883">出力ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-883">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-884">文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-884">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="f33f0-885">このメソッドは、指定されたタブ空白文字を無視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-885">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-886">使用して、<xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A>メソッドではなく、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>メソッドが表示される文字列の前の任意のタブ空白文字を表示したくない場合に`s`します。</span><span class="sxs-lookup"><span data-stu-id="f33f0-886">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="f33f0-887">既定の行終端記号文字列は、キャリッジ リターンとライン フィード ("\r\n") です。</span><span class="sxs-lookup"><span data-stu-id="f33f0-887">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="f33f0-888"><xref:System.IO.TextWriter.WriteLine%2A>基本メソッドを使用して、書き込み、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-888">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f33f0-889">スタイル属性とその値を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-889">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-890">出力ストリームに書き込むスタイル属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-890">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-891">スタイル属性に割り当てられた値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-891">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-892">指定したスタイル属性を出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-892">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-893"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>メソッドは、次の形式でスタイル属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-893">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="f33f0-894">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="f33f0-894">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f33f0-895">出力ストリームに書き込むスタイル属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-895">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f33f0-896">スタイル属性に割り当てられた値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-896">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="f33f0-897">スタイル属性と割り当てられた値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-897">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-898">指定したスタイル属性と値を出力ストリームに書き込み、さらに指定されている場合は値をエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-898">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-899"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>メソッドは、次の形式でスタイル属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f33f0-899">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="f33f0-900">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="f33f0-900">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="f33f0-901"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>メソッドのエンコードが使用される、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f33f0-901">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f33f0-902">エンコードして出力ストリームに書き込む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-902">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f33f0-903">URL のパラメーター セクションの一部として文字列をエンコードする場合は <see langword="true" />。URL のパス セクションの一部として文字列をエンコードする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-903">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f33f0-904">指定された文字列を書き込んで、URL の要件に従ってエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f33f0-904">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f33f0-905"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>メソッドは、URL の区切り記号と文字をエンコードします (の設定に依存する`argument`) 形式の文字列に`%xx`ASCII コードがより小さい 128 それ以外の場合、`%uxxxx`ここで、`x`が、16 進数。</span><span class="sxs-lookup"><span data-stu-id="f33f0-905">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="f33f0-906"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>と<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>メソッドを使用して、<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>ユーティリティ メソッドとしてメソッド。</span><span class="sxs-lookup"><span data-stu-id="f33f0-906">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>