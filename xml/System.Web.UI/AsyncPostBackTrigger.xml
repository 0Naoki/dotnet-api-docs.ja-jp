<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25432cd655e012efbc5b739ab07b061e40e43dab" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69410478" /></Metadata><TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <TypeSignature Language="F#" Value="type AsyncPostBackTrigger = class&#xA;    inherit UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>コントロール、およびオプションでそのコントロールのイベントを <see cref="T:System.Web.UI.UpdatePanel" /> コントロールを更新する非同期ポストバック コントロール トリガーとして定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールを使用し<xref:System.Web.UI.UpdatePanel>て、コントロールのトリガーとしてコントロールを有効にします。 <xref:System.Web.UI.AsyncPostBackTrigger> 更新パネルのトリガーであるコントロールは、非同期ポストバック後にパネルのコンテンツを更新します。 非同期トリガーコントロールの定義は、次のシナリオで役立ちます。  
  
-   パネルの外側にあるコントロールの場合。  
  
-   <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティが`false`の場合に、パネル内にあるコントロールに対して使用します。  
  
-   入れ子になったパネル内にあるコントロールで、親パネルを更新するために使用します。  
  
 <xref:System.Web.UI.AsyncPostBackTrigger>コントロールが参照するコントロールは、トリガーである更新パネルと同じ名前付けコンテナー内にある必要があります。 他の名前付けコンテナー内のコントロールに基づくトリガーはサポートされていません。  
  
 コントロール<xref:System.Web.UI.AsyncPostBackTrigger>を追加するには、デザイナーの **[updateパネルトリガーコレクションエディター]** ダイアログボックスを使用`Triggers`するか、 <xref:System.Web.UI.UpdatePanel>コントロールで要素を宣言によって作成します。 プロパティは必須です<xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>が、プロパティは省略可能です。 <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> プロパティが指定<xref:System.ComponentModel.DefaultEventAttribute>されていない場合は、コントロールの属性を使用して既定のイベントが決定されます。 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> たとえば、 <xref:System.Web.UI.WebControls.Button>コントロールの既定のイベント<xref:System.Web.UI.WebControls.Button.Click>はイベントです。 プロパティ<xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>では、大文字と小文字が区別されません。  
  
 名前付けコンテナーをトリガーとして参照することもできます。 その場合、ポストバックを発生させるコンテナー内のすべての子コントロールが、 <xref:System.Web.UI.UpdatePanel>コントロールのトリガーと見なされます。  
  
 プログラムに<xref:System.Web.UI.AsyncPostBackTrigger>よるコントロールの追加はサポートされていません。 プログラムによって<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>ポストバックコントロールを登録するには、 <xref:System.Web.UI.ScriptManager>コントロールのメソッドを使用します。 次に、 <xref:System.Web.UI.UpdatePanel.Update%2A>コントロールがポスト<xref:System.Web.UI.UpdatePanel>バックされたときに、コントロールのメソッドを呼び出します。  
  
 <xref:System.Web.UI.PostBackTrigger> と<xref:System.Web.UI.AsyncPostBackTrigger>の両方を使用してコントロールを定義すると、例外がスローされます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.AsyncPostBackTrigger>コントロールを宣言によって追加する方法を示しています。 コントロール<xref:System.Web.UI.WebControls.Button>の<xref:System.Web.UI.UpdatePanel>外部にあるコントロールを使用すると、ユーザーは検索`Products`用語を入力して Northwind データベースのテーブルを検索できます。 コントロール内のコントロールに<xref:System.Web.UI.WebControls.GridView>結果が表示されます。 <xref:System.Web.UI.UpdatePanel> コントロールは、 <xref:System.Web.UI.UpdatePanel>コントロールの非同期トリガーとして指定されます。 <xref:System.Web.UI.WebControls.Button>  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.AsyncPostBackTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.AsyncPostBackTrigger>を追加するには、デザイナーの **[updateパネルトリガーコレクションエディター]** ダイアログボックスを使用`Triggers`するか、 <xref:System.Web.UI.UpdatePanel>コントロールで要素を宣言によって作成します。  
  
 プログラム<xref:System.Web.UI.AsyncPostBackTrigger>によるコントロールの追加はサポートされていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの非同期ポストバックのトリガーとなるコントロールの名前を取得または設定します。</summary>
        <value>サーバー コントロール ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールを更新するトリガーとなるポストバック コントロール イベントを取得または設定します。</summary>
        <value>イベントの名前です。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>プロパティは省略可能です。 指定されていない場合<xref:System.ComponentModel.DefaultEventAttribute>は、コントロールの属性を使用して既定のイベントが決定されます。 次の表に、いくつかの一般的な ASP.NET 2.0 コントロールの既定のイベントを示します。  
  
|コントロール|既定のイベント|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberSignature Language="F#" Value="override this.HasTriggered : unit -&gt; bool" Usage="asyncPostBackTrigger.HasTriggered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トリガーが発生したかどうかを示す値を返します。</summary>
        <returns>トリガーが発生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は<xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> 、メソッドをオーバーライドして、トリガーが呼び出されたかどうかを判断するためのカスタムロジックを提供できます。 コントロールの要素`Triggers`にカスタムトリガーを表示するには、ページまたは web.config ファイルの要素にディレクティブを追加します。 <xref:System.Web.UI.UpdatePanel>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="asyncPostBackTrigger.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールを初期化し、トリガー内で指定されたイベントが存在しているかどうか、また有効であるかどうかを判断します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">ページ上に <see cref="T:System.Web.UI.ScriptManager" /> コントロールが見つかりませんでした。  
  
または 
<see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> プロパティで指定されているイベントが、<see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティで指定されているコントロールにありませんでした。  
  
- または - 
<see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> プロパティで指定されているコントロールの、<see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティで指定されているイベントが、標準イベント ハンドラー シグニチャと一致しません。</exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnEvent : obj * EventArgs -&gt; unit" Usage="asyncPostBackTrigger.OnEvent (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントの送信元。</param>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールのポストバックと更新のトリガーとなるイベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="asyncPostBackTrigger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールの文字列形式を返します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールを表す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
