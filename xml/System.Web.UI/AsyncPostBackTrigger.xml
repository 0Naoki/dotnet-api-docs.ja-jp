<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9b2b6a2f8c6ccfeaea2ec0d9768dbb48b0576a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598656" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2a691-101">コントロール、およびオプションでそのコントロールのイベントを <see cref="T:System.Web.UI.UpdatePanel" /> コントロールを更新する非同期ポストバック コントロール トリガーとして定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a691-101">Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <see cref="T:System.Web.UI.UpdatePanel" /> control to refresh.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a691-102">使用して、<xref:System.Web.UI.AsyncPostBackTrigger>コントロールのトリガーを有効にするコントロール、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-102">Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="2a691-103">更新パネル用のトリガーであるコントロールでは、非同期ポストバック後に、パネルのコンテンツの更新を発生させます。</span><span class="sxs-lookup"><span data-stu-id="2a691-103">Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback.</span></span> <span data-ttu-id="2a691-104">非同期トリガー コントロールの定義は、次のシナリオに便利です。</span><span class="sxs-lookup"><span data-stu-id="2a691-104">Defining an asynchronous trigger control is useful in the following scenarios:</span></span>  
  
-   <span data-ttu-id="2a691-105">コントロール パネル内に存在しないにします。</span><span class="sxs-lookup"><span data-stu-id="2a691-105">For controls that are outside a panel.</span></span>  
  
-   <span data-ttu-id="2a691-106">コントロール パネル内にあるときに、<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティは`false`します。</span><span class="sxs-lookup"><span data-stu-id="2a691-106">For controls that are inside a panel when the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="2a691-107">親パネルを更新するために、入れ子になったパネル内にあるコントロールです。</span><span class="sxs-lookup"><span data-stu-id="2a691-107">For controls that are inside nested panels, in order to cause a refresh of parent panels.</span></span>  
  
 <span data-ttu-id="2a691-108">コントロールを<xref:System.Web.UI.AsyncPostBackTrigger>先のトリガーは、更新パネルと同じ名前付けコンテナーである必要がありますコントロールの参照。</span><span class="sxs-lookup"><span data-stu-id="2a691-108">The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger.</span></span> <span data-ttu-id="2a691-109">他の名前付けコンテナー コントロールに基づいているトリガーはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2a691-109">Triggers that are based on controls in other naming containers are not supported.</span></span>  
  
 <span data-ttu-id="2a691-110">追加<xref:System.Web.UI.AsyncPostBackTrigger>を使用していずれかを制御、 **UpdatePanelTrigger コレクション エディター**  ダイアログ ボックスのデザイナーで、または作成することで、`Triggers`要素で宣言によって、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-110">Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="2a691-111"><xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A>プロパティが必要ですが、<xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>プロパティはオプションです。</span><span class="sxs-lookup"><span data-stu-id="2a691-111">The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional.</span></span> <span data-ttu-id="2a691-112">場合、<xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>プロパティが指定されていない、<xref:System.ComponentModel.DefaultEventAttribute>コントロールの属性は既定のイベントの確認に使用します。</span><span class="sxs-lookup"><span data-stu-id="2a691-112">If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event.</span></span> <span data-ttu-id="2a691-113">たとえば、既定のイベントを<xref:System.Web.UI.WebControls.Button>コントロールは、<xref:System.Web.UI.WebControls.Button.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="2a691-113">For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event.</span></span> <span data-ttu-id="2a691-114"><xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>プロパティ小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="2a691-114">The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive.</span></span>  
  
 <span data-ttu-id="2a691-115">名前付けコンテナーは、トリガーとして参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="2a691-115">You can also reference a naming container as a trigger.</span></span> <span data-ttu-id="2a691-116">その場合は、コンテナー内のポストバックを発生させるすべての子コントロールと見なされますのトリガー、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-116">In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="2a691-117">プログラムで追加する<xref:System.Web.UI.AsyncPostBackTrigger>コントロールはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2a691-117">Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported.</span></span> <span data-ttu-id="2a691-118">ポストバック コントロールをプログラムで登録するを使用して、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>のメソッド、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-118">To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="2a691-119">まず、<xref:System.Web.UI.UpdatePanel.Update%2A>のメソッド、<xref:System.Web.UI.UpdatePanel>ときに、コントロールがポストバックを制御します。</span><span class="sxs-lookup"><span data-stu-id="2a691-119">Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.</span></span>  
  
 <span data-ttu-id="2a691-120">両方を使用してコントロールを定義する場合<xref:System.Web.UI.PostBackTrigger>と<xref:System.Web.UI.AsyncPostBackTrigger>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="2a691-120">If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a691-121">次の例は、追加する方法を示します、<xref:System.Web.UI.AsyncPostBackTrigger>宣言によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="2a691-121">The following example shows how to add an <xref:System.Web.UI.AsyncPostBackTrigger> control declaratively.</span></span> <span data-ttu-id="2a691-122">A<xref:System.Web.UI.WebControls.Button>外にあるコントロール、<xref:System.Web.UI.UpdatePanel>コントロール ユーザーを検索する検索用語を入力できるように、 `Products` Northwind データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="2a691-122">A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database.</span></span> <span data-ttu-id="2a691-123">A<xref:System.Web.UI.WebControls.GridView>内にあるコントロール、<xref:System.Web.UI.UpdatePanel>コントロールは、結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2a691-123">A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results.</span></span> <span data-ttu-id="2a691-124"><xref:System.Web.UI.WebControls.Button>コントロールは、非同期のトリガーとして指定されて、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-124">The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a691-125">
            <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-125">Initializes a new instance of an <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a691-126">追加<xref:System.Web.UI.AsyncPostBackTrigger>を使用していずれかを制御、 **UpdatePanelTrigger コレクション エディター**  ダイアログ ボックスのデザイナーで、または作成することで、`Triggers`要素で宣言によって、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="2a691-126">Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="2a691-127">追加<xref:System.Web.UI.AsyncPostBackTrigger>コントロール プログラムではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2a691-127">Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a691-128">
            <see cref="T:System.Web.UI.UpdatePanel" /> コントロールの非同期ポストバックのトリガーとなるコントロールの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-128">Gets or sets the name of the control that triggers an asynchronous postback for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a691-129">サーバー コントロール ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-129">A server control ID.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a691-130">
            <see cref="T:System.Web.UI.UpdatePanel" /> コントロールを更新するトリガーとなるポストバック コントロール イベントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-130">Gets or sets the postback control event that triggers an <see cref="T:System.Web.UI.UpdatePanel" /> control to be updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a691-131">イベントの名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-131">The event name.</span>
          </span>
          <span data-ttu-id="2a691-132">既定値は <see cref="F:System.String.Empty" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-132">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a691-133"><xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>プロパティはオプションです。</span><span class="sxs-lookup"><span data-stu-id="2a691-133">The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional.</span></span> <span data-ttu-id="2a691-134">指定されていない場合、<xref:System.ComponentModel.DefaultEventAttribute>コントロールの属性は既定のイベントの確認に使用します。</span><span class="sxs-lookup"><span data-stu-id="2a691-134">If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event.</span></span> <span data-ttu-id="2a691-135">次の表には、いくつかの一般的な ASP.NET 2.0 コントロールの既定のイベントが一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="2a691-135">The following table lists default events for some common ASP.NET 2.0 controls.</span></span>  
  
|<span data-ttu-id="2a691-136">コントロール</span><span class="sxs-lookup"><span data-stu-id="2a691-136">Control</span></span>|<span data-ttu-id="2a691-137">既定のイベント</span><span class="sxs-lookup"><span data-stu-id="2a691-137">Default event</span></span>|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a691-138">トリガーが発生したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-138">Returns a value that indicates whether the trigger was invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a691-139">トリガーが発生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-139">
              <see langword="true" /> if the trigger was invoked; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a691-140">コントロール開発者、<xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A>トリガーが呼び出されたかどうかを決定するためのカスタム ロジックを提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="2a691-140">Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked.</span></span> <span data-ttu-id="2a691-141">カスタムのトリガーを確認する、`Triggers`の要素、<xref:System.Web.UI.UpdatePanel>コントロール、ページまたは Web.config ファイルの要素には、ディレクティブを追加できます。</span><span class="sxs-lookup"><span data-stu-id="2a691-141">To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a691-142">
            <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールを初期化し、トリガー内で指定されたイベントが存在しているかどうか、また有効であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-142">Initializes the <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control and determines whether the event that is named in the trigger exists and is valid.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a691-143">ページ上に <see cref="T:System.Web.UI.ScriptManager" /> コントロールが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-143">No <see cref="T:System.Web.UI.ScriptManager" /> control was found on the page.</span>
          </span>
          <span data-ttu-id="2a691-144">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-144">\- or -</span>
          </span>
          <span data-ttu-id="2a691-145">
            <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> プロパティで指定されているイベントが、<see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティで指定されているコントロールにありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-145">The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property is not found for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</span>
          </span>
          <span data-ttu-id="2a691-146">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-146">\- or -</span>
          </span>
          <span data-ttu-id="2a691-147">
            <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> プロパティで指定されているコントロールの、<see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティで指定されているイベントが、標準イベント ハンドラー シグニチャと一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-147">The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property does not match a standard event handler signature.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="2a691-148">イベントの送信元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-148">The event sender.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="2a691-149">イベントのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-149">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a691-150">
            <see cref="T:System.Web.UI.UpdatePanel" /> コントロールのポストバックと更新のトリガーとなるイベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-150">Raises the event that will trigger a postback and refresh of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a691-151">現在の <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールの文字列形式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-151">Returns a string representation of the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a691-152">現在の <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a691-152">A string that represents the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>