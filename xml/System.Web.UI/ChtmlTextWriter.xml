<Type Name="ChtmlTextWriter" FullName="System.Web.UI.ChtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a5406e8a29a7c7697a3e1be80da878758e5fba6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37589529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChtmlTextWriter : System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChtmlTextWriter extends System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ChtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ChtmlTextWriter&#xA;Inherits Html32TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChtmlTextWriter : System::Web::UI::Html32TextWriter" />
  <TypeSignature Language="F#" Value="type ChtmlTextWriter = class&#xA;    inherit Html32TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Html32TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>一連の cHTML 固有の文字とテキストを ASP.NET サーバー コントロールの出力ストリームに書き込みます。 <see cref="T:System.Web.UI.ChtmlTextWriter" /> クラスには、ASP.NET サーバー コントロールが cHTML コンテンツをクライアントに表示するときに使用する書式設定機能が用意されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 2.0、HTML 3.2、および HTML 4.0 では、サブセットは、コンパクト HTML、または、cHTML は限られたメモリと CPU パワー、小規模なディスプレイの画面、制限、機能、および入力のオプション (携帯電話などの限られた数の書式設定と共に使用してデバイスを表示するために設計されていますタッチ パッド)。 そのため、cHTML しない以下をサポートしません。  
  
-   JPEG イメージ。  
  
-   テーブル。  
  
-   イメージ マップします。  
  
-   複数の文字のフォントとスタイル。  
  
-   背景色とイメージ。  
  
-   フレームです。  
  
-   スタイル シート。  
  
 <xref:System.Web.UI.ChtmlTextWriter>クラスから派生、<xref:System.Web.UI.Html32TextWriter>クラスとその機能の多くがによって提供される、<xref:System.Web.UI.Html32TextWriter>はすべてのマークアップ テキスト ライターの基本クラスと、<xref:System.Web.UI.HtmlTextWriter>クラス。  
  
   
  
## Examples  
 次のコード例は、という名前のクラスを作成する方法を示します`CustomChtmlTextWriter`から派生する、<xref:System.Web.UI.ChtmlTextWriter>クラス。 2 つのコンス トラクターを作成し、上書き、<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>メソッドを防ぐために、`bgcolor`スタイル属性の出力ストリームに書き込まれてから、<xref:System.Web.UI.ChtmlTextWriter>オブジェクト。 という名前のクラスも作成`ChtmlCustomPageAdapter`1 つのメソッドを定義する`CreateCustomChtmlTextWriter`が作成されのインスタンスを返します、`CustomChtmlTextWriter`クラス。 `CustomChtmlTextWriter` CHTML マークアップを使用するブラウザーを備えたデバイスにページの cHTML コンテンツをレンダリングします。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ChtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" />。</param>
        <summary>行のインデントに <see cref="T:System.Web.UI.ChtmlTextWriter" /> 定数を使用する <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter>クラスが 2 つのコンス トラクターであり、これは、標準から直接または間接的に派生するすべてのクラス、<xref:System.Web.UI.HtmlTextWriter>クラス。  
  
 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>のインスタンスを取得するコンス トラクター、<xref:System.IO.TextWriter>クラスをパラメーターとして 2 つ目のコンス トラクターを呼び出すし、2 つのパラメーター値を渡します。  
  
-   <xref:System.IO.TextWriter>。  
  
-   指定されている文字列値、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>フィールドには、XHTML テキスト ライターによって使用されるタブ空白文字を定義します。  
  
   
  
## Examples  
 次のコード例は、という名前のクラスを作成する方法を示します`ChtmlCustomPageAdapter`1 つのメソッドを定義および`CreateCustomChtmlTextWriter`が作成されのインスタンスを返します、`CustomChtmlTextWriter`クラス。 `CustomChtmlTextWriter` CHTML マークアップを使用するブラウザーを備えたデバイスにページの cHTML コンテンツをレンダリングします。  
  
 このコード例が示されている例の一部、<xref:System.Web.UI.ChtmlTextWriter>クラス。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" />。</param>
        <param name="tabString">
          <see cref="P:System.Web.UI.HtmlTextWriter.Indent" /> で定義されている空白文字数。</param>
        <summary>指定した行インデントを使用して <see cref="T:System.Web.UI.ChtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>コンス トラクターは、両方のインスタンスを受け取り、<xref:System.IO.TextWriter>クラスと、呼び出しのパラメーターとして文字列、<xref:System.Web.UI.Html32TextWriter>のインスタンスを作成するときに、同じパラメーターを受け取るコンス トラクター、<xref:System.Web.UI.ChtmlTextWriter>クラス。  
  
   
  
## Examples  
 次のコード例は、という名前のカスタム クラスを作成する方法を示します`CustomChtmlTextWriter`から派生する、<xref:System.Web.UI.ChtmlTextWriter>クラス。 直接派生するすべてのクラスまたはから間接的には、同じパターンを持つカスタム クラスのインスタンスを作成するのに使用できる 2 つのコンス トラクターを作成、<xref:System.Web.UI.HtmlTextWriter>クラス。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">属性を追加する cHTML 要素。</param>
        <param name="attributeName">
          <c>elementName</c> に追加する属性。</param>
        <summary>
          <see cref="T:System.Web.UI.ChtmlTextWriter" /> オブジェクトの cHTML 要素に属性を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A>メソッド cHTML 要素に属性を追加します。 認識できる属性が認識されている属性に格納されている<xref:System.Collections.Hashtable>のコレクション、<xref:System.Web.UI.ChtmlTextWriter>によって参照されるオブジェクト、<xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalSuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable GlobalSuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable GlobalSuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property GlobalSuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ GlobalSuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalSuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 要素に出力できないグローバル非表示属性の <see cref="T:System.Collections.Hashtable" /> オブジェクトを取得します。</summary>
        <value>グローバル非表示 cHTML 属性の <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の一覧との新しいインスタンスに設定されているグローバル非表示の属性を示しています、<xref:System.Web.UI.ChtmlTextWriter>クラスが作成されます。  
  
|||  
|-|-|  
|`onclick`|`onmousemove`|  
|`ondblclick`|`onmouseout`|  
|`onmousedown`|`onkeypress`|  
|`onmouseup`|`onkeydown`|  
|`onmouseover`|`onkeyup`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="chtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">表示する cHTML 属性。</param>
        <param name="value">
          <c>name</c> に代入する値。</param>
        <param name="key">
          <c>name</c> に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary>指定した cHTML 属性とその値を要求側のページに表示するかどうかを決定します。 <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> クラスの派生クラスで、cHTML 対応デバイスに表示しない属性を除外するように <see cref="T:System.Web.UI.ChtmlTextWriter" /> メソッドをオーバーライドできます。</summary>
        <returns>
          <see cref="T:System.Web.UI.ChtmlTextWriter" /> 出力ストリームにその属性と値を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定で、<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>方法が記載されているグローバル非表示の属性を防止、<xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A>プロパティと記載されている、抑制された、要素に固有の属性、<xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A>から出力ストリームに書き込まれるプロパティ。 動作をオーバーライドすることができます、<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>から派生したクラスのメソッド、<xref:System.Web.UI.ChtmlTextWriter>クラス。  
  
   
  
## Examples  
 次のコード例は、オーバーライドするカスタム クラスを使用する方法を示します、<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>メソッドを防ぐために、 `bgcolor` cHTML 出力ストリームに書き込まれてからの属性。 ベースで提供される機能を呼び出して<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>からメソッド、<xref:System.Web.UI.ChtmlTextWriter>クラスをその既定の動作が使用されるように、すぎます。  
  
 このコード例が示されている例の一部、<xref:System.Web.UI.ChtmlTextWriter>クラス。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="chtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">レンダリングするスタイル属性の名前を格納している文字列。</param>
        <param name="value">
          <c>name</c> に割り当てる値を格納している文字列。</param>
        <param name="key">
          <c>name</c> に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>指定された cHTML マークアップ スタイル属性とその値を現在のマークアップ要素に出力するかどうかを決定します。</summary>
        <returns>スタイルを出力できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A>メソッドを返します。`false`とき`key`がと等しい、<xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration>フィールドとその値は`"line-through"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="chtmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">出力する cHTML 要素の名前を格納している文字列。</param>
        <param name="key">
          <c>name</c> に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</param>
        <summary>指定した cHTML マークアップ要素を要求側のページに表示するかどうかを決定します。</summary>
        <returns>指定した cHTML マークアップ要素を出力できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CHTML 要素がある場合、`span`要素、<xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A>メソッドを返します。`false`します。 その他のすべてのタグを返します`true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      </Docs>
    </Member>
    <Member MemberName="RecognizedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable RecognizedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable RecognizedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RecognizedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ RecognizedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecognizedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 要素に出力できる認識済み属性の <see cref="T:System.Collections.Hashtable" /> オブジェクトを取得します。</summary>
        <value>認識済み cHTML 属性の <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A>認識を追加するメソッドの属性は認識されている属性のコレクションにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">属性を削除する cHTML 要素。</param>
        <param name="attributeName">
          <c>elementName</c> から削除する属性。</param>
        <summary>
          <see cref="T:System.Web.UI.ChtmlTextWriter" /> オブジェクトの cHTML 要素の属性を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A>メソッド cHTML 要素から属性を削除します。 認識されている属性が認識されている属性から削除<xref:System.Collections.Hashtable>のコレクション、<xref:System.Web.UI.ChtmlTextWriter>によって参照されるオブジェクト、<xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 要素に出力されないユーザー指定の非表示属性の <see cref="T:System.Collections.Hashtable" /> オブジェクトを取得します。</summary>
        <value>非表示 cHTML 属性の <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A>メソッドを非表示属性のコレクションに属性を追加します。  
  
 次の一覧が設定されている抑制の既定の属性を示します、`div`要素の新しいインスタンスの場合に、<xref:System.Web.UI.ChtmlTextWriter>クラスが作成されます。  
  
|||  
|-|-|  
|`accesskey`|`gridlines`|  
|`cellspacing`|`rules`|  
|`cellpadding`||  
  
 次の一覧が設定されている抑制の既定の属性を示します、`span`要素の新しいインスタンスの場合に、<xref:System.Web.UI.ChtmlTextWriter>クラスが作成されます。  
  
|||  
|-|-|  
|`cellspacing`|`gridlines`|  
|`cellpadding`|`rules`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="chtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="br" /> 要素を cHTML 出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> cHMTL のストリームに行を挿入するメソッドを中断します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、cHTML クラスおよびカスタム プロパティを作成する方法を示します。 2 番目のコード例では、Web ページのカスタム クラスを使用する方法を示します。  
  
 ユーザー設定を使用する`ChtmlSimplelabelAdapter`アダプター、ブラウザーの .NET Framework 構成ディレクトリまたは App_Browsers ディレクトリの下、Web でカスタムのブラウザー ファイルのサブディレクトリ内の適切なコンピューター全体のファイルに次のコードを追加アプリケーションのルートです。  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.SimpleLabel"  
   adapterType="AspNet.Samples.ChtmlSimpleLabelAdapter" />  
</controlAdapters>  
```  
  
 次のコード例は、という名前の cHTML アダプター クラスを作成する方法を示します`ChtmlSimpleLabelAdapter`という名前のクラスの`SimpleLabel`します。 カスタム作成`Control`により、プロパティ、`ChtmlSimpleLabelAdapter`クラスのメンバーにアクセスする、`SimpleLabel`クラス、さらに上書き、<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>メソッド。 オーバーライドでは、次の処理が行われます。  
  
-   参照を作成、<xref:System.Web.UI.ChtmlTextWriter>という名前のオブジェクト`w`から派生、<xref:System.Web.UI.HtmlTextWriter>オブジェクトとして渡される、`writer`のパラメーター、<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>メソッド。  
  
-   これは、文字列を作成し、設定と等しく、`SimpleLabel.Text`値。  
  
-   呼び出す、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>で定義されているスタイルを適用する方法、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>ストリームを出力する cHTML するラベルのプロパティ。  
  
-   書き込む、`Text`プロパティの値をストリームと呼び出すことによって、スタイル ブロックが閉じ、<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>メソッド。  
  
-   呼び出す、<xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A>をレンダリングするメソッド、`br`テキストとスタイルのレンダリング後の出力ストリームに要素。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.vb#2)]  
  
 次の例では、使用する方法、 `SimpleLabel` Web ページ内のクラス。  
  
 [!code-aspx-csharp[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.aspx#3)]
 [!code-aspx-vb[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public override void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteEncodedText : string -&gt; unit" Usage="chtmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">エンコードして出力ストリームに書き込む文字列。</param>
        <summary>要求元のデバイスで指定したテキストをエンコードし、それを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Text パラメーターとして渡した場合、<xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>メソッドは`null`に何も書き込まれませんが、長さが 0、または。  
  
 使用、<xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>メソッドを文字列には、山かっこが含まれている場合 (\<または >) やアンパサンド (&)、要求元のデバイスに正しくレンダリングされることを保証するとします。  
  
 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>メソッドは、基本クラスを使用して<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
  </Members>
</Type>