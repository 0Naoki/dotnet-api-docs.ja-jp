<Type Name="AuthenticationServiceManager" FullName="System.Web.UI.AuthenticationServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8da60b283eaef300d5cb938f745a2bd7a121e4cf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69410470" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AuthenticationServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationServiceManager" />
  <TypeSignature Language="F#" Value="type AuthenticationServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>認証サービスのカスタム実装の場所を構成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.AuthenticationServiceManager>は、 <xref:System.Web.UI.ScriptManagerProxy> <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> コントロールまたはコントロールのプロパティに<xref:System.Web.UI.ScriptManager>対応します。  
  
 認証 Web サービスは、クライアントスクリプトにログオンしてログオフするために、AJAX 対応アプリケーションによって使用されます。 を使用<xref:System.Web.UI.AuthenticationServiceManager>すると、ASP.NET の AJAX 機能によって提供される組み込み Web サービスを使用する代わりに、認証 web サービスの代替実装のパスを指定できます。  
  
 アプリケーションで認証サービスを使用するには、構成ファイルで認証サービスを有効にする必要があります。 組み込みの認証 Web サービスを使用する場合、ページで認証サービスマネージャーを明示的に宣言する必要はありません。  
  
 独自の認証サービスを作成するには、 `Login`と`Logout`の2つのメソッドを持つ Web サービスを実装する必要があります。 また、これらのメソッドには、組み込みの認証 Web サービスと同じ署名が必要です。  
  
 次の例は、カスタム認証 Web サービスクラスに実装する必要がある基本クラスの構造を示しています。  
  
  
  
 カスタム認証 Web サービスを使用するには、次の例に示すように、ページ`<AuthenticationService>`の`<asp:ScriptManager>`要素内に要素を含めることにより、マークアップでサービスを宣言によって追加できます。  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 プログラムを使用して<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 、カスタム認証 Web サービスを使用するようにを構成することもできます。  
  
 認証サービスの宣言セクションがページ上にあるかどうかに関係なく、構成ファイルで認証サービスが有効になっている場合、AJAX 対応アプリケーションは、表示されるページに ECMAScript (JavaScript) 変数を含めます。 これにより、クライアントスクリプトは、現在のユーザーが認証されているかどうかを判断できます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">ASP.NET AJAX の Web サービス</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c50f7dc5-323c-4c63-b4f3-96edfc1e815e">ASP.NET AJAX でのフォーム認証の使用</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AuthenticationServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.AuthenticationServiceManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証サービスのパスを取得または設定します。</summary>
        <value>カスタム認証 Web サービスのパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが設定されていない場合、戻り値<xref:System.String.Empty?displayProperty=nameWithType>はになります。 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> この場合、ASP.NET の AJAX 機能は、次の内部の既定のパスに対応する組み込みの認証 Web サービスを使用します: ~/scriptサービス名。 を空の値または<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> `null`に設定した場合も、同じ動作が発生します。  
  
 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A><xref:System.Web.UI.ScriptManager>コントロールで指定することも、関連付けら<xref:System.Web.UI.ScriptManagerProxy>れたコントロールに指定することもできます。 が<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> レベル<xref:System.Web.UI.ScriptManagerProxy>で設定されている場合は、次の注意事項が適用されます。  
  
-   コントロール階層に複数のプロキシがある場合は<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 、を各プロキシインスタンスに設定する必要はありません。  
  
-   プロキシ<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>インスタンスでが明示的に設定されている場合、このプロパティが明示的に設定されている他のすべてのプロキシでは、値が同じである必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">複数の一意のパスがコントロール階層で設定されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
