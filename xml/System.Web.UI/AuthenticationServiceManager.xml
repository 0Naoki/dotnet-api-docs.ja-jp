<Type Name="AuthenticationServiceManager" FullName="System.Web.UI.AuthenticationServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="490147ad651ac096dd06da7aa02f1bcfb51e8a33" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37532059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AuthenticationServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationServiceManager" />
  <TypeSignature Language="F#" Value="type AuthenticationServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cafd7-101">認証サービスのカスタム実装の場所を構成します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cafd7-101">Configures the location of a custom implementation of the authentication service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cafd7-102"><xref:System.Web.UI.AuthenticationServiceManager>クラスに対応して、<xref:System.Web.UI.ScriptManager.AuthenticationService%2A>のプロパティ、<xref:System.Web.UI.ScriptManager>または<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="cafd7-102">The <xref:System.Web.UI.AuthenticationServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="cafd7-103">認証 Web サービスにログオンし、クライアント スクリプトからログオフする AJAX 対応のアプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="cafd7-103">The authentication Web service is used by AJAX-enabled applications to log on and log off from client script.</span></span> <span data-ttu-id="cafd7-104">使用することができます<xref:System.Web.UI.AuthenticationServiceManager>ASP.NET の AJAX 機能によって提供される組み込みの Web サービスを使用する代わりに Web サービス認証の代替実装のパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-104">You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.</span></span>  
  
 <span data-ttu-id="cafd7-105">認証サービスをアプリケーションで使用するには、構成ファイルで有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cafd7-105">To use the authentication service in your application, you must enable it in the configuration file.</span></span> <span data-ttu-id="cafd7-106">組み込みの認証 Web サービスを使用する場合、ページ上で、認証サービス マネージャーを明示的に宣言するはありません。</span><span class="sxs-lookup"><span data-stu-id="cafd7-106">If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.</span></span>  
  
 <span data-ttu-id="cafd7-107">独自の認証サービスを作成するには、2 つのメソッドを持つ Web サービスを実装する必要があります:`Login`と`Logout`します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-107">To create your own authentication service, you must implement a Web service that has two methods: `Login` and `Logout`.</span></span> <span data-ttu-id="cafd7-108">さらに、これらのメソッドでは、組み込みの認証 Web サービスの同じシグネチャが必要です。</span><span class="sxs-lookup"><span data-stu-id="cafd7-108">In addition, these methods require the same signature of the built-in authentication Web service.</span></span>  
  
 <span data-ttu-id="cafd7-109">次の例では、カスタム認証 Web サービス クラスで実装する必要がある基本クラス構造を示します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-109">The following example shows the basic class structure that must be implemented in a custom authentication Web service class.</span></span>  
  
  
  
 <span data-ttu-id="cafd7-110">カスタム認証 Web サービスを使用することができますサービスを追加する、宣言によってマークアップを含めることによって、`<AuthenticationService>`内の要素、 `<asp:ScriptManager>`  ページで、次の例に示す要素。</span><span class="sxs-lookup"><span data-stu-id="cafd7-110">To use a custom authentication Web service, you can add the service declaratively in markup by including an `<AuthenticationService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="cafd7-111">プログラムで構成することができます<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>カスタム認証 Web サービスを使用します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-111">You can also programmatically configure <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to use a custom authentication Web service.</span></span>  
  
 <span data-ttu-id="cafd7-112">関係なくがかどうか、認証サービスの宣言セクション ページで、AJAX 対応アプリケーションは、レンダリングされるページで、ECMAScript (JavaScript) の変数を含めるし、構成ファイルで、認証サービスが有効な場合.</span><span class="sxs-lookup"><span data-stu-id="cafd7-112">Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page.</span></span> <span data-ttu-id="cafd7-113">これには、現在のユーザーが認証されたかどうかを判断するスクリプトをクライアントが使用できます。</span><span class="sxs-lookup"><span data-stu-id="cafd7-113">This allows client script to determine whether the current user is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AuthenticationServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cafd7-114">
            <see cref="T:System.Web.UI.AuthenticationServiceManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cafd7-114">Initializes a new instance of the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cafd7-115">認証サービスのパスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cafd7-115">Gets or sets the path of the authentication service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cafd7-116">カスタム認証 Web サービスのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cafd7-116">The path of the custom authentication Web service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cafd7-117">場合、<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>プロパティが設定されていない、戻り値は<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-117">If the <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> property is not set, then the return value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cafd7-118">この場合は、ASP.NET の AJAX 機能では、組み込みの認証に次の内部の既定のパスに対応する Web サービスを使用し: ~/ScriptServices_AuthenticationService.asmx します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-118">In this case, the AJAX functionality in ASP.NET will then use the built-in authentication Web service that corresponds to the following internal default path: ~/ScriptServices_AuthenticationService.asmx.</span></span> <span data-ttu-id="cafd7-119">同じ動作は、設定した場合に発生します。<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>に空の値または`null`します。</span><span class="sxs-lookup"><span data-stu-id="cafd7-119">The same behavior occurs if you set <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to an empty value or `null`.</span></span>  
  
 <span data-ttu-id="cafd7-120"><xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 指定することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="cafd7-120"><xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="cafd7-121">ときに<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>に設定されて、<xref:System.Web.UI.ScriptManagerProxy>レベルで、次の注意事項の適用。</span><span class="sxs-lookup"><span data-stu-id="cafd7-121">When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:</span></span>  
  
-   <span data-ttu-id="cafd7-122">コントロールの階層構造で複数のプロキシがある場合<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>各プロキシ インスタンスに設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cafd7-122">If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> does not have to be set on each proxy instance.</span></span>  
  
-   <span data-ttu-id="cafd7-123">場合<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>が明示的に設定すると、プロキシ インスタンスで、値がありますのこのプロパティが明示的に設定されているその他のすべてのプロキシで同じです。</span><span class="sxs-lookup"><span data-stu-id="cafd7-123">If <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cafd7-124">複数の一意のパスがコントロール階層で設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cafd7-124">More than one unique path was set in the control hierarchy.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>