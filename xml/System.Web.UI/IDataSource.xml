<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bc745508e22af28c1bf4d51ec95afad4d0656fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588642" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロールをバインドする抽象データ ソースを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET では、Web サーバー コントロールを一貫した方法でデータをバインドできるようにするコントロールのデータ バインディング アーキテクチャをサポートします。 データにバインドする web サーバー コントロールは、データ バインド コントロールとバインドはデータ ソース コントロールと呼ばれることを促進するクラスと呼ばれます。 データ ソース コントロールが任意のデータ ソースを表すことができます。 リレーショナル データベース、ファイル、ストリーム、ビジネス オブジェクト、およびなど。 データ ソースは、ソースまたは基になるデータの形式に関係なく、データ バインド コントロールに一貫した方法でデータを制御します。  
  
 実装する、<xref:System.Web.UI.IDataSource>インターフェイスの独自のカスタム ASP.NET データ ソースの管理を実装する場合。  
  
 実装するクラス、<xref:System.Web.UI.IDataSource>インターフェイスは、データ ソース コントロール。 <xref:System.Web.UI.IDataSource>インターフェイスは、すべての ASP.NET データ ソースの基盤を制御し、その 2 つの方法でいずれかの基本的なデータ バインディング アーキテクチャの概念を定義します。、<xref:System.Web.UI.IDataSource.GetView%2A>メソッドと<xref:System.Web.UI.IDataSource.GetViewNames%2A>メソッド。 この概念は、すべてのデータ ソース コントロールがデータへの 1 つまたは複数の名前付きビューをサポートします。 データ ソース ビュー オブジェクトは、のような<xref:System.Data.DataView>で抽象化、<xref:System.Data>名前空間: データ バインディング可能、並べ替え、フィルター処理、およびビューを定義するその他のデータ操作のデータのビューをカスタマイズします。 基本的には、データ ソースは何がコントロールよりもデータのビューを取得します。  
  
 データ ソース コントロールには、1 つまたは複数の関連するデータ ソース ビュー オブジェクトを持つことができます。 一部のデータ ソース コントロールなどのリレーショナル データベースを表すものも含め<xref:System.Web.UI.WebControls.SqlDataSource>と<xref:System.Web.UI.WebControls.AccessDataSource>、1 つのビューをサポートします。 その他のデータ ソース コントロールなどの階層データ ソース コントロールを含む<xref:System.Web.UI.WebControls.SiteMapDataSource>、多くのビューをサポートします。 データ ソース ビューでは、データ ソースとサポートされる操作の機能を定義します。  
  
 要約すると、データ ソース コントロールの実装、<xref:System.Web.UI.IDataSource>インターフェイス、1 つがサポートまたは以上の名前付き、表し、表すデータ ソースからデータの取得をサポートして常にデータのビュー。 データ ソース コントロールが常にする場合など、オンデマンドでデータを取得`DataBind`がデータ バインド コントロールで呼び出されます。  
  
   
  
## Examples  
 次のコード例では、クラスがによって定義されたメソッドを実装する方法を示します、<xref:System.Web.UI.IDataSource>データ バインド コントロールにデータを提供するインターフェイス。 この例では、データ ソース コントロールでは、コンマ区切り値ファイルでは、上のデータ ソースとして機能し、コンマ区切りのファイル データを表示する任意のデータ バインド コントロールで使用できます。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceControl>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールに影響を与える変更がデータ ソース コントロールに加えられたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged>イベントは、データ バインド コントロールとそのデータ間のデータ バインドに影響を与えるいくつかの方法でデータ バインド コントロールまたは基になるデータのプロパティが変更されたとき。 たとえば、ファイルの名前プロパティになどの場合、イベントが発生、<xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>ファイル ベースのデータ ソース コントロールでプロパティが変更されました。  
  
 イベントの処理についての詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。</param>
        <summary>データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</summary>
        <returns>
          <see cref="T:System.Web.UI.DataSourceView" /> に関連付けられた名前付きの <see cref="T:System.Web.UI.IDataSource" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ ソース コントロール クラスには、基になるデータの 1 つまたは複数のビューをサポートできます。 これらのビューがのインスタンスによって表される、<xref:System.Web.UI.DataSourceView>クラス。 データ ソース ビューでは、データ ソース コントロールの機能を定義し、基になるデータ ストアからデータを取得し、並べ替え、挿入、削除、および更新などの操作を実行するために必要なすべての作業を実行します。  
  
 実装するクラスのデータ ソース コントロール、<xref:System.Web.UI.IDataSource>インターフェイスの実装、<xref:System.Web.UI.IDataSource.GetView%2A>厳密に型を返すメソッドをクラスに関連付けられているオブジェクトを表示します。  
  
   
  
## Examples  
 次のコード例は、データ ソース コントロール クラスを実装する方法を示して、<xref:System.Web.UI.IDataSource>インターフェイスの実装、<xref:System.Web.UI.IDataSource.GetView%2A>の厳密に型指定されたインスタンスを返すメソッド、<xref:System.Web.UI.DataSourceView>クラス。 データ ソース コントロールでは、1 つのビューをサポートするため、名前が無視され、既定のビュー名が指定されたビューを返します。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceControl>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.IDataSource" /> インターフェイスに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> に関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.IDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ ソース コントロール クラスには、基になるデータの 1 つまたは複数の名前付きビューをサポートできます。 <xref:System.Web.UI.IDataSource.GetViewNames%2A>メソッドは、データ ソース コントロールのインスタンスに関連付けられているビューの名前のコレクションを返します。 呼び出し元はビュー名のコレクションを反復処理でき、個々 の取得<xref:System.Web.UI.DataSourceView>オブジェクトを<xref:System.Web.UI.IDataSource.GetView%2A>メソッド。  
  
 実装するクラスのデータ ソース コントロール、<xref:System.Web.UI.IDataSource>インターフェイスの実装、<xref:System.Web.UI.IDataSource.GetViewNames%2A>すべてのデータ ソースを表す名前のコレクションを返すメソッドは、データ ソース コントロールのクラスに関連付けられているオブジェクトを表示します。  
  
   
  
## Examples  
 次のコード例は、データ ソース コントロールを実装する方法を示します、<xref:System.Web.UI.IDataSource>インターフェイスの実装、<xref:System.Web.UI.IDataSource.GetViewNames%2A>を返すメソッドを<xref:System.Collections.ICollection>名のコレクション。 データ ソースは、1 つのビューをサポートするため、メソッドは、ビューの既定の名前を使用して 1 つの要素のコレクションを返します。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceControl>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>