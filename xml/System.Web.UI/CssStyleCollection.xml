<Type Name="CssStyleCollection" FullName="System.Web.UI.CssStyleCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5d7f25928f37a5d0ea80b8690bc7f20bc4030f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CssStyleCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CssStyleCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.CssStyleCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CssStyleCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class CssStyleCollection sealed" />
  <TypeSignature Language="F#" Value="type CssStyleCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定した HTML サーバー コントロールの HTML カスケード スタイル シート (CSS: Cascading-Style Sheets) インライン スタイル属性を保持します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定の HTML サーバー コントロールの宣言されたスタイルは、Web フォーム ページが解析されるときにコレクションに追加されます。 自動的に解析され、ディクショナリ パターン API を通じて CSS プロパティを公開します。 使用して、サーバー コントロールの任意の CSS プロパティを操作することができます、<xref:System.Web.UI.HtmlControls.HtmlControl.Style%2A>プロパティです。 単にインデックス付きコレクションで、CSS プロパティのキーと値を使用します。  
  
   
  
## Examples  
 次のコード例を反復処理、<xref:System.Web.UI.CssStyleCollection>オブジェクトに対して、<xref:System.Web.UI.HtmlControls.HtmlInputText>サーバー コントロールです。 <xref:System.Web.UI.CssStyleCollection.Keys%2A>サーバー コントロールにスタイル属性が宣言されているを決定するプロパティを使用し、バインド、属性の名前し値を<xref:System.Web.UI.WebControls.DataList>Web フォーム ページ上のオブジェクト。  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スタイル項目をコントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> に追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="cssStyleCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">コレクションに追加する新しいスタイル属性の名前。</param>
        <param name="value">コレクションに追加するスタイル属性の値。</param>
        <summary>指定された名前と値のペアを使用して、スタイル項目をコントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加するスタイルの項目が存在する場合、<xref:System.Web.UI.HtmlTextWriterStyle>列挙型のオーバー ロードを使用して、<xref:System.Web.UI.CssStyleCollection.Add%2A>を受け取るメソッド、<xref:System.Web.UI.HtmlTextWriterStyle>パラメーターは厳密に型指定するためです。 つまりの get アクセサーを持つ項目を表示するときに追加される項目を含めるがあること、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例は、の両方のオーバー ロードを使用する方法を示します、<xref:System.Web.UI.CssStyleCollection.Add%2A>するカスケード スタイル シートを追加するメソッドを<xref:System.Web.UI.HtmlControls.HtmlSelect>、 <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>、および<xref:System.Web.UI.WebControls.Label>をプログラムで制御します。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> は <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="cssStyleCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">コレクションに追加する <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</param>
        <param name="value">コレクションに追加するスタイル属性の値。</param>
        <summary>指定された <see cref="T:System.Web.UI.CssStyleCollection" /> 列挙値と対応する値を使用して、スタイル項目をコントロールの <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> コレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加するスタイルの項目が存在する場合、<xref:System.Web.UI.HtmlTextWriterStyle>列挙型、これを使用して<xref:System.Web.UI.CssStyleCollection.Add%2A>のオーバー ロード、<xref:System.Web.UI.CssStyleCollection.Add%2A>を受け取らないオーバー ロードではなく、メソッド、<xref:System.Web.UI.HtmlTextWriterStyle>パラメーター。  
  
   
  
## Examples  
 次のコード例は、の両方のオーバー ロードを使用する方法を示します、<xref:System.Web.UI.CssStyleCollection.Add%2A>するカスケード スタイル シートを追加するメソッドを<xref:System.Web.UI.HtmlControls.HtmlSelect>、 <xref:System.Web.UI.HtmlControls.HtmlInputSubmit>、および<xref:System.Web.UI.WebControls.Label>をプログラムで制御します。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cssStyleCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトからすべてのスタイル項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.CssStyleCollection.Clear%2A>からすべての CSS をプログラムで削除するメソッドのスタイル、<xref:System.Web.UI.HtmlControls.HtmlSelect>コントロール。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.CssStyleCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクト内の項目の数を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクト内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を作成、`CountStyleFunc`の現在の値を取得する関数、<xref:System.Web.UI.CssStyleCollection.Count%2A>プロパティを<xref:System.Web.UI.HtmlControls.HtmlInputText>サーバー コントロールし、ASP.NET ページを表示します。  
  
 [!code-aspx-csharp[CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CssStyleCollection/CS/cssstylecollection_4.cs.aspx#1)]
 [!code-aspx-vb[CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CssStyleCollection/VB/cssstylecollection_4.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>HTML サーバー コントロールに対する CSS 値を取得または設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.CssStyleCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">CSS 属性へのインデックス。</param>
        <summary>HTML サーバー コントロールに対して指定された CSS 値を取得または設定します。</summary>
        <value>
          <paramref name="key" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティが設定されているスタイルの値を返す、<xref:System.Web.UI.HtmlControls.HtmlInputText>コントロール。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[System.Web.UI.HtmlTextWriterStyle key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(valuetype System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::Web::UI::HtmlTextWriterStyle] { System::String ^ get(System::Web::UI::HtmlTextWriterStyle key); void set(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Web.UI.HtmlTextWriterStyle) : string with get, set" Usage="System.Web.UI.CssStyleCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>HTML サーバー コントロールに対して指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 値を取得または設定します。</summary>
        <value>
          <paramref name="key" /> 値。<paramref name="key" /> がサーバー コントロールのコレクション内に存在しない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プログラムに追加される項目のスタイルを設定、<xref:System.Web.UI.CssStyleCollection>を持つコントロールのコレクション、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティまたは<xref:System.Web.UI.CssStyleCollection.Add%2A>メソッドを<xref:System.Web.UI.HtmlTextWriterStyle>にあるスタイル アイテムの数の入力としての列挙値が含まれています。と共に返される、<xref:System.Web.UI.CssStyleCollection.Count%2A>と共に返される、文字列リテラルに含まれているプロパティとは、<xref:System.Web.UI.CssStyleCollection.Value%2A>プロパティです。 これらの属性は厳密型指定されました。 サーバー コントロールを追加するカスケード スタイル シートの属性が存在する場合、<xref:System.Web.UI.HtmlTextWriterStyle>列挙型、これらの厳密に型指定されたメソッドを使用します。 追加する属性が存在しない場合、<xref:System.Web.UI.HtmlTextWriterStyle>列挙体を使用して、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティまたは<xref:System.Web.UI.CssStyleCollection.Add%2A>メソッドです。  
  
 アクセスしようとして、<xref:System.Web.UI.HtmlTextWriterStyle>の列挙値に、<xref:System.Web.UI.CssStyleCollection>コントロールが追加されていないをまたはに追加されている CSS 属性にアクセスする、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティまたは<xref:System.Web.UI.CssStyleCollection.Add%2A>メソッドを返します`null`を使用します。<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.CssStyleCollection.Item%2A>プロパティが設定されているスタイルの値を返す、<xref:System.Web.UI.HtmlControls.HtmlInputText>コントロール。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.CssStyleCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の HTML サーバー コントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトに格納されている全スタイルに対するキーのコレクションを取得します。</summary>
        <value>指定した HTML サーバー コントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> に格納されているキーのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を反復処理する方法を示しています、<xref:System.Web.UI.CssStyleCollection>のコレクション、<xref:System.Web.UI.HtmlControls.HtmlInputText>サーバー コントロールです。 <xref:System.Web.UI.CssStyleCollection.Keys%2A>プロパティを使用するスタイル属性は、サーバー コントロールで宣言されていますが判断されるとバインド属性の名前と値を<xref:System.Web.UI.WebControls.DataList>Web フォーム ページ上のオブジェクト。  
  
 [!code-aspx-csharp[System.Web.UI.CssStyleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.CssStyleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スタイル項目をコントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> から削除します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="cssStyleCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">削除するスタイル項目の文字列リテラル。</param>
        <summary>指定されたスタイル キーを使用して、コントロールの <see cref="T:System.Web.UI.CssStyleCollection" /> からスタイル項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.CssStyleCollection.Remove%2A>からスタイルの CSS をプログラムで削除するメソッドを<xref:System.Web.UI.HtmlControls.HtmlSelect>コントロール。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="cssStyleCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">削除する <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</param>
        <summary>指定された <see cref="T:System.Web.UI.CssStyleCollection" /> 列挙値を使用して、コントロールの <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> コレクションからスタイル項目を削除します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.CssStyleCollection.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML サーバー コントロールの <see langword="style" /> 属性の値を取得または設定します。</summary>
        <value>スタイルの文字列リテラル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.CssStyleCollection.Value%2A>プロパティのスタイル属性の一覧を<xref:System.Web.UI.HtmlControls.HtmlSelect>ユーザーが [送信] ボタンをクリックしたときを制御します。  
  
 [!code-aspx-csharp[Classic CssStyleCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CssStyleCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Item" />
      </Docs>
    </Member>
  </Members>
</Type>