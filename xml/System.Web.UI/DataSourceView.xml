<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="155e77fb0955b2c08636e9ebfefe2a6f26e2209f" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394253" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ソース コントロールの機能を定義するすべてのデータ ソース ビュー クラスの基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET では、Web サーバー コントロールを一貫した方法でデータをバインドできるようにするためのデータ バインディング アーキテクチャをサポートします。 データにバインドする web サーバー コントロールは、データ バインド コントロールとバインドはデータ ソース コントロールと呼ばれることを促進するクラスと呼ばれます。 データ ソース コントロールが任意のデータ ソースを表すことができます。 リレーショナル データベース、ファイル、ストリーム、ビジネス オブジェクト、およびなど。 データ ソースは、ソースまたは基になるデータの形式に関係なく、データ バインド コントロールに一貫した方法でデータを制御します。  
  
 ASP.NET で提供されているデータ ソース コントロールを使用してなど<xref:System.Web.UI.WebControls.SqlDataSource>、 <xref:System.Web.UI.WebControls.AccessDataSource>、および<xref:System.Web.UI.WebControls.XmlDataSource>、ほとんどの Web 開発タスクを実行します。 ベースを使用する<xref:System.Web.UI.DataSourceControl>と<xref:System.Web.UI.DataSourceView>クラス独自のカスタム データを実装する場合にソース管理。  
  
 データ ソース コントロールの組み合わせと考えることができますできます、<xref:System.Web.UI.IDataSource>オブジェクトおよびデータ ソース ビューと呼ばれるデータの関連付けられているリスト。 データの各リストは、によって表される、<xref:System.Web.UI.DataSourceView>オブジェクト。 <xref:System.Web.UI.DataSourceView>クラスはすべてのデータ ソース ビュー、またはデータ ソース コントロールに関連付けられているデータのリストの基本クラスです。 データ ソース ビューでは、データ ソース コントロールの機能を定義します。 基になるデータ ストレージにデータの 1 つまたは複数のリストが含まれているため、データ ソース コントロールは 1 つまたは複数の名前付きのデータ ソース ビューに関連付けられては常にします。 データ ソース コントロールを使用して、<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>データを列挙するメソッドのソース ビューのデータ ソース コントロールに関連付けられている、<xref:System.Web.UI.DataSourceControl.GetView%2A>名前によって、特定のデータ ソース ビューのインスタンスを取得します。  
  
 すべて<xref:System.Web.UI.DataSourceView>オブジェクトから、基になるデータ ソースを使用して、データの取得をサポートする、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッド。 すべてのビューは、操作、操作をなどの基本セットを必要に応じてサポート<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>、 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>、および<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>します。 データ バインド コントロールを使用して表示する、関連付けられているデータ ソースを取得することによってデータ ソース コントロールの機能を検出することができます、<xref:System.Web.UI.DataSourceControl.GetView%2A>と<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>メソッド、およびデザイン時または実行時、ビューに対してクエリを実行します。  
  
   
  
## Examples  
 次のコード例を拡張する方法を示します、<xref:System.Web.UI.DataSourceView>データ ソース コントロールの厳密に型指定されたビュー クラスを作成するクラス。 `CsVDataSourceView`クラスの機能を定義する、`CsvDataSource`データ ソース コントロールと、コンマ区切り値 (.csv) ファイルに格納されたデータを使用するデータ バインド コントロールの実装を提供します。 詳細については、`CsvDataSource`データ ソース コントロールを参照してください、<xref:System.Web.UI.DataSourceControl>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.DataSourceView" /> に関連付けられているデータ ソース コントロール。</param>
        <param name="viewName"><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトの名前。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="viewName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられている <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 基本クラスの実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティに反映されますだけでなく、データ ソース コントロールの機能も、操作を実行する適切なが現在あるかどうか。 などの場合でもデータ ソース ビューをサポートしています、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>に必要なプロパティまたはその他のいくつかのデータが設定されていない場合、一般的な操作、<xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティが返す`false`、削除操作が失敗しました。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>を拡張するクラスのメソッド、<xref:System.Web.UI.DataSourceView>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">コマンドの名前。</param>
        <summary>指定したコマンドを実行できるかどうかを判断します。</summary>
        <returns>コマンドが実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられている <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 基本クラスの実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanInsert%2A>プロパティに反映されますだけでなく、データ ソース コントロールの機能も、操作を実行する適切なが現在あるかどうか。 たとえば、データ ソース コントロールをサポート場合でも、 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 、必要な insert コマンドやその他のいくつかのデータが設定されていない場合は、操作、<xref:System.Web.UI.DataSourceView.CanInsert%2A>プロパティから返さ`false`、挿入操作は失敗します。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.DataSourceView.CanInsert%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>を拡張するクラスのメソッド、<xref:System.Web.UI.DataSourceView>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられている <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで、<see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドで取得したデータを使用するページングがサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 基本クラスの実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することで、データ バインド コントロールがページングを要求できます、<xref:System.Web.UI.DataSourceCapabilities.Page>フィールドを<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトに渡される、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッド。 データ バインド コントロールのページングを要求する場合が、<xref:System.Web.UI.DataSourceView.CanPage%2A>プロパティが返す`false`、データ ソース ビューは、例外をスローします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられた <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで、データではなく行の合計数を取得する操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 基本クラスの実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することで、データ バインド コントロールが行の合計数を要求できます、<xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType>フィールドを<xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType>オブジェクトに渡される、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッド。 データ バインド コントロールが、行の合計数を要求する場合が、<xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A>プロパティが返す`false`、データ ソース ビューは、例外をスローします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられている <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで、基になるデータ ソースに対する並べ替え済みのビューがサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定の実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロールが追加することで並べ替えを要求することができます、<xref:System.Web.UI.DataSourceCapabilities.Sort>フィールドを<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトに渡される、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッド。 場合は、データにバインドされたコントロールの並べ替え、要求が、<xref:System.Web.UI.DataSourceView.CanSort%2A>プロパティが返す`false`、データ ソース ビューは、例外をスローします。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.DataSourceView.CanSort%2A>を拡張するクラスのプロパティ、<xref:System.Web.UI.DataSourceView>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.DataSourceControl" /> オブジェクトに関連付けられている <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定の実装では、<see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanUpdate%2A>プロパティに反映されますだけでなく、データ ソース コントロールの機能も、操作を実行する適切なが現在あるかどうか。 などの場合でも、データ バインド コントロールをサポートしています、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>操作、必要な更新プログラムのコマンド、またはその他のデータが設定されていない場合、<xref:System.Web.UI.DataSourceView.CanUpdate%2A>プロパティが返す`false`、更新操作は失敗します。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.DataSourceView.CanUpdate%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>を拡張するクラスのメソッド、<xref:System.Web.UI.DataSourceView>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ビューが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ ソース ビューを変更またはデータ ソース ビューで実行されるデータ操作によるデータの変更に、そのプロパティの値の変更が考えられます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクト キーまたは行キーで構成される <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues">データ要素およびその元の値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="callback">非同期操作の完了時にデータ バインド コントロールに通知するために使用される <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> デリゲート。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、削除操作を非同期に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Delete%2A>メソッドは、すべてのデータ ソース ビュー オブジェクトの非同期データ削除のインターフェイス。 <xref:System.Web.UI.DataSourceView.Delete%2A>メソッドの呼び出し、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッドのいずれかを使用して`keys`と`oldValues`パラメーター値を指定します。 `callback`パラメーターは、データ バインド コントロールがデータ ソースに渡されるデリゲートを使用してデータ バインドの通知のビューが制御、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>操作が完了しました。 メソッドのパラメーターを使用して、<xref:System.Web.UI.DataSourceViewOperationCallback>と影響を受けるレコードの数を返すデリゲート<xref:System.Exception>によってスローされる例外、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ビューのイベント ハンドラー デリゲートのリストを取得します。</summary>
        <value>イベント ハンドラー デリゲートのリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの型は<xref:System.ComponentModel.EventHandlerList>、一方向の検索アルゴリズムを使用するデリゲートの一覧でエントリを検索します。 多数のエントリを使用する場合、一方向の検索アルゴリズムは効率的ではありません。 そのため、大きなリストがある場合は、このプロパティを持つエントリが速度が遅くなりますを検索します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたコマンドを実行します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">コマンドの名前。</param>
        <param name="keys">対象となるオブジェクト キーまたは行キーのディクショナリ。</param>
        <param name="values">データ要素およびその値を表す名前と値のペアで構成されるディクショナリ。</param>
        <summary>指定されたコマンドを実行します。</summary>
        <returns>操作の影響を受けた項目の数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">コマンドの名前。</param>
        <param name="keys">対象となるオブジェクト キーまたは行キーのディクショナリ。</param>
        <param name="values">データ要素およびその値を表す名前と値のペアで構成されるディクショナリ。</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> オブジェクト。</param>
        <summary>指定されたコマンドを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは値を返しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクト キーまたは行キーで構成される <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues">データ要素およびその元の値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、削除操作を実行します。</summary>
        <returns>基になるデータ ストレージから削除された項目数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロールを調べるかどうか、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>取得することによって、データ ソース コントロールによって操作がサポートされている、<xref:System.Web.UI.DataSourceView>オブジェクトを使用して、<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>メソッド、およびチェック、<xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティ。  
  
 `keys`パラメーターを削除するデータのキー オブジェクトまたは行キーを表します。 データ ソースの場合など、リレーショナル データを表す、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、`keys`パラメーターは、データベースのプライマリ キーのコレクション。 他のシナリオで、`keys`パラメーターは、名前/値ペアのコレクションであるし、データの一覧をフィルター処理するために使用します。 名前/値ペアに一致するすべてのデータが削除されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>クラスの既定の実装をスローする、<xref:System.NotSupportedException>例外。 拡張する場合、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッド、クラスは、基になるデータ ストレージからの削除をサポートしている場合。  
  
   
  
## Examples  
 次のコード例は、方法を拡張するクラスについて説明します。、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッド。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 操作は <see cref="T:System.Web.UI.DataSourceView" /> ではサポートされません。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">挿入操作で使用する名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、挿入操作を実行します。</summary>
        <returns>基になるデータ ストレージに挿入された項目数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロールを調べるかどうか、<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>取得することによって、データ ソース コントロールによって操作がサポートされている、<xref:System.Web.UI.DataSourceView>オブジェクトを使用して、<xref:System.Web.UI.DataSourceControl.GetView%2A>メソッド、およびチェック、<xref:System.Web.UI.DataSourceView.CanInsert%2A>プロパティ。  
  
 `values`パラメーターは、データ列またはフィールド、および挿入する対応する値を表す名前/値ペアのセット。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>クラスの既定の実装をスローする、<xref:System.NotSupportedException>例外。 拡張する場合、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>メソッド、クラスは、基になるデータ ストレージへの挿入をサポートしている場合。  
  
   
  
## Examples  
 次のコード例は、方法を拡張するクラスについて説明します。、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.CanInsert%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>メソッド。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 操作は <see cref="T:System.Web.UI.DataSourceView" /> ではサポートされません。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</param>
        <summary>基になるデータ ストレージからデータのリストを取得します。</summary>
        <returns>基になるデータ ストレージのデータで構成される <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>基になるデータ ストアからデータを取得し、としてそれを返すメソッドが呼び出され、<xref:System.Collections.IEnumerable>オブジェクト。 すべてのデータ ソース コントロールは、挿入や並べ替えなどの他の操作がサポートされていない場合でも、基になるデータ ストレージからデータの取得をサポートします。 結果として、いつでも、データ バインド コントロールがデータの一覧を要求できますので、<xref:System.Web.UI.IDataSource.DataSourceChanged>イベントまたは<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッドの呼び出し、必要に応じて、データの取得を実行する必要があります。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>を拡張するクラスのメソッド、<xref:System.Web.UI.DataSourceView>クラス。 `CsvDataSourceView`コンマ区切り値 (.csv) ファイルを開き、行ごとに解析し、作成、<xref:System.Data.DataTable>オブジェクトと<xref:System.Data.DataView>メモリにデータを保持するオブジェクト。 提供されている場合に、並べ替え式を最後に、適用、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクト、および<xref:System.Data.DataView>としてオブジェクトが返されます、<xref:System.Collections.IEnumerable>インスタンス。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">更新操作で更新するオブジェクト キーまたは行キーで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="values">データ要素およびその新しい値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="oldValues">データ要素およびその元の値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、更新操作を実行します。</summary>
        <returns>基になるデータ ストレージで更新された項目数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロールを調べるかどうか、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>を使用してデータ ソース コントロールによって操作がサポートされている、<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Web.UI.DataSourceView>オブジェクトとの値をチェック、<xref:System.Web.UI.DataSourceView.CanUpdate%2A>プロパティ。  
  
 `keys`パラメーターを更新するデータのキー オブジェクトまたは行キーを表します。 データ ソースの場合など、リレーショナル データを表す、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、`keys`パラメーターは、データベースのプライマリ キーのコレクション。 他のシナリオで、`keys`パラメーターは、名前/値ペアのコレクションであるし、データの一覧をフィルター処理するために使用します。 見つかった値を持つ名前/値ペアに一致する任意のデータが更新される、`values`パラメーターで、既存のフィールドまたは列の新しい値を表す名前/値ペアのセットです。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>クラスの既定の実装をスローする、<xref:System.NotSupportedException>例外。 拡張する場合、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>メソッド、クラスは、基になるデータ ストレージでデータの更新をサポートしている場合。  
  
   
  
## Examples  
 次のコード例は、方法を拡張するクラスについて説明します。、<xref:System.Web.UI.DataSourceView>クラスでオーバーライド、<xref:System.Web.UI.DataSourceView.CanUpdate%2A>プロパティおよび<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>メソッド。 このコード例が示されている例の一部、<xref:System.Web.UI.DataSourceView>クラス。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 操作は <see cref="T:System.Web.UI.DataSourceView" /> ではサポートされません。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">挿入操作で使用する名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="callback">非同期操作の完了時にデータ バインド コントロールに通知するために使用される <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> デリゲート。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、挿入操作を非同期に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Insert%2A>メソッドは、すべてのデータ ソース ビュー オブジェクトの非同期データ挿入のインターフェイス。 <xref:System.Web.UI.DataSourceView.Insert%2A>メソッドの呼び出し、<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>メソッドのいずれかを使用して`values`指定します。 `callback`パラメーターは、データ バインド コントロールがデータ ソースに渡されるデリゲートを使用してデータ バインドの通知のビューが制御、<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>操作が完了しました。 メソッドのパラメーターを使用して、<xref:System.Web.UI.DataSourceViewOperationCallback>と影響を受けるレコードの数を返すデリゲート<xref:System.Exception>によってスローされる例外、<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>メソッドの呼び出し。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ビュー名を取得します。</summary>
        <value><see cref="T:System.Web.UI.DataSourceView" /> の名前 (名前がある場合)。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>メソッドは、データ バインド コントロールを通知、基になるデータ ソースが変更されたことと、コントロールが再バインドし必要な作業を実行する必要があります。 通常、<xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>データ ソース ビューのプロパティが変更されたときに、メソッドが呼び出されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">ビューでサポートされている機能と比較される、<see cref="T:System.Web.UI.DataSourceCapabilities" /> のいずれかの値。</param>
        <summary><see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> メソッドによって呼び出され、ビューでサポートされている機能と <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作に必要な機能を比較します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A>メソッドは、データ ソース ビューの各によって表される、データ バインド コントロールによって要求された機能を確認する使用、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトに渡される、<xref:System.Web.UI.DataSourceView.Select%2A>メソッド、およびデータでサポートされている機能を比較ソースを表示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">データ ソース ビューで、指定したデータ ソースの機能がサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</param>
        <param name="callback">非同期操作の完了時にデータ バインド コントロールに通知するために使用される <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> デリゲート。</param>
        <summary>基になるデータ ストレージからデータのリストを非同期に取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Select%2A>メソッドは、すべてのデータ ソース ビュー オブジェクトの非同期のデータの取得インターフェイス。 <xref:System.Web.UI.DataSourceView.Select%2A>メソッドの呼び出し、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッドのいずれかを渡す<xref:System.Web.UI.DataSourceSelectArguments>指定します。 `callback`パラメーターは、データ バインド コントロールがデータ ソースに渡されるデリゲートを使用してデータ バインドの通知のビューが制御、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>操作が完了しました。 によって返されるデータ、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>のパラメーターで呼び出しが返される、<xref:System.Web.UI.DataSourceViewSelectCallback>を委任します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">更新操作で更新するオブジェクト キーまたは行キーで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="values">データ要素およびその新しい値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="oldValues">データ要素およびその元の値を表す名前/値ペアで構成される <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="callback">非同期操作の完了時にデータ バインド コントロールに通知するために使用される <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> デリゲート。</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> オブジェクトで表されたデータのリストに対して、更新操作を非同期に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Update%2A>メソッドは、すべてのデータ ソース ビュー オブジェクトの非同期のデータ変更インターフェイス。 <xref:System.Web.UI.DataSourceView.Update%2A>メソッドの呼び出し、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>メソッドのいずれかを使用して`keys`、 `values`、および`oldValues`に指定されたパラメーターの値。 `callback`パラメーターは、データ バインド コントロールがデータ ソースに渡されるデリゲートを使用してデータ バインドの通知のビューが制御、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>操作が完了しました。 メソッドのパラメーターを使用して、<xref:System.Web.UI.DataSourceViewOperationCallback>と影響を受けるレコードの数を返すデリゲート<xref:System.Exception>によってスローされる例外、<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>呼び出します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定された <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>