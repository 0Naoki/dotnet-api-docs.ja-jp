<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11f9da00e1db58b810ad7406fda179db97cc1e02" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET Web ページで使用する ECMAScript (JavaScript) ファイルを登録します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 登録することによって、ASP.NET Web ページ上の JavaScript ファイルを含めることができます、<xref:System.Web.UI.ScriptReference>オブジェクト。 Web サイトの .js ファイル (静的なスクリプト ファイル) として配置されているスクリプト ファイルを登録することができます。 アセンブリ内のリソースとして埋め込まれているスクリプト ファイルを登録することもできます。 スクリプト ファイルを登録すると、Web ページ上のクライアント スクリプトでその機能を使用できます。  
  
 静的なスクリプト ファイルを登録するには、次のように設定します。、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>のプロパティ、<xref:System.Web.UI.ScriptReference>ファイルの相対的な位置にオブジェクト。  
  
 アセンブリ内のリソースとして埋め込まれているスクリプト ファイルを登録するには、設定、<xref:System.Web.UI.ScriptReference.Assembly%2A>プロパティ ファイルが含まれているアセンブリの名前にします。 設定して、<xref:System.Web.UI.ScriptReference.Name%2A>プロパティをアセンブリに埋め込まれている .js ファイルの名前にします。 その場合は、スクリプト ファイル埋め込む必要がある、リンクされていません。  
  
 設定する、<xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>をデバッグまたはスクリプトのバージョンをリリースするかどうかを示すプロパティです。  
  
 <xref:System.Web.UI.ScriptMode.Auto>値には、スタンドアロンのスクリプト ファイルまたはリソースとしてアセンブリに埋め込まれているスクリプト ファイルを参照しているかどうかに応じて異なる結果が生成されます。 スタンドアロンのスクリプト ファイルが定義されて、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>プロパティです。 アセンブリ参照はからアクセスする必要があります、<xref:System.Web.UI.ScriptReference.Name%2A>と<xref:System.Web.UI.ScriptReference.Assembly%2A>プロパティです。 結果、<xref:System.Web.UI.ScriptMode.Auto>値が次に示します。  
  
-   スタンドアロンのスクリプト ファイルに適用される場所、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>プロパティが指定されて、<xref:System.Web.UI.ScriptMode.Auto>値と等価です<xref:System.Web.UI.ScriptMode.Release>です。  
  
-   アセンブリでは、スクリプト参照に適用されたときに<xref:System.Web.UI.ScriptMode.Auto>は等価<xref:System.Web.UI.ScriptMode.Inherit>です。 ときにのみ<xref:System.Web.UI.ScriptReference.Name%2A>を指定すると、スクリプトの参照に使用されます。 ときに<xref:System.Web.UI.ScriptReference.Name%2A>と<xref:System.Web.UI.ScriptReferenceBase.Path%2A>プロパティの両方を指定、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>の代わりにプロパティを使用して<xref:System.Web.UI.ScriptReference.Name%2A>、ですが、<xref:System.Web.UI.ScriptMode.Auto>値はまだと同等<xref:System.Web.UI.ScriptMode.Inherit>です。  
  
   
  
## Examples  
 次の例では、カスタム コントロールおよびコントロール アセンブリに埋め込まれている JavaScript ファイルを参照する方法を示します。 アセンブリは、Web サイトの Bin フォルダー内にあると見なされます。 カスタム コントロールをアニメーション化<xref:System.Web.UI.UpdatePanel>コントロール。 JavaScript ファイルは、SampleControl.UpdatePanelAnimation.js という埋め込みリソースとしてコンパイルされます。 使用して、埋め込みの JavaScript ファイルを登録する、<xref:System.Web.UI.ScriptReference.Assembly%2A>と<xref:System.Web.UI.ScriptReference.Name%2A>プロパティです。  
  
 この例を使用するには、カスタム コントロールの埋め込みリソースとしての例に示す JavaScript ファイルをコンパイルします。 結果として得られるアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例は、次を参照してください。[チュートリアル: リソースとしてアセンブリ内の JavaScript ファイルの埋め込み](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)です。  
  
 次の例では、カスタム コントロールを使用するページを示します。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例では、カスタム コントロールのクラス定義を示します。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例では、サポートの JavaScript ファイルを示します。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、コードをカスタム コントロールを含むプロジェクトの AssemblyInfo ファイルと JavaScript ファイルに追加する必要があります。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Web ページを基準とした相対的なクライアント スクリプト ファイルのパス。</param>
        <summary>指定されたパスを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">アセンブリに埋め込まれているスクリプト ファイルの名前。</param>
        <param name="assembly">クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前。</param>
        <summary>指定された名前とアセンブリを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前を取得または設定します。</summary>
        <value>クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの完全修飾名または部分修飾名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定する、<xref:System.Web.UI.ScriptReference.Assembly%2A>プロパティ アセンブリ内の埋め込みリソースとして含まれているクライアント スクリプト ファイルを参照するときにします。 設定<xref:System.Web.UI.ScriptReference.Assembly%2A>完全修飾名または部分修飾アセンブリ名にします。 完全修飾アセンブリ名には、名前、カルチャ、公開キー、およびバージョン番号が含まれています。 部分修飾アセンブリ名には、名前のみが含まれています。  
  
 値を指定すると<xref:System.Web.UI.ScriptReference.Assembly%2A>、内の埋め込みリソースの名前を指定する必要がありますも、<xref:System.Web.UI.ScriptReference.Name%2A>プロパティです。 それ以外の場合、<xref:System.InvalidOperationException>がスローされます。  
  
 参照されるアセンブリは、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに配置する必要があります。  
  
   
  
## Examples  
 次の例では、カスタム コントロールおよびコントロール アセンブリに埋め込まれている JavaScript ファイルを参照する方法を示します。 アセンブリは、Web サイトの Bin フォルダー内にあると見なされます。 カスタム コントロールをアニメーション化<xref:System.Web.UI.UpdatePanel>コントロール。 JavaScript ファイルは、SampleControl.UpdatePanelAnimation.js という埋め込みリソースとしてコンパイルされます。 使用して、埋め込みの JavaScript ファイルを登録する、<xref:System.Web.UI.ScriptReference.Assembly%2A>と<xref:System.Web.UI.ScriptReference.Name%2A>プロパティです。  
  
 この例を使用するには、カスタム コントロールの埋め込みリソースとしての例に示す JavaScript ファイルをコンパイルします。 結果として得られるアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例は、次を参照してください。[チュートリアル: リソースとしてアセンブリ内の JavaScript ファイルの埋め込み](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)です。  
  
 次の例では、カスタム コントロールを使用するページを示します。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例では、カスタム コントロールのクラス定義を示します。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例では、サポートの JavaScript ファイルを示します。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、コードをカスタム コントロールを含むプロジェクトの AssemblyInfo ファイルと JavaScript ファイルに追加する必要があります。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">対象 Web ページ上の <see langword="ScriptManager" /> コントロール。</param>
        <param name="zip">
          スクリプトを圧縮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>
          <see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を取得します。</summary>
        <returns>
          <see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を含む文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースからクライアント スクリプト ファイルを登録する場合に、URL に <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> プロパティが含まれるかどうかを示す値を取得または設定します。</summary>
        <value>
          クライアント スクリプトの登録時にスクリプト パスを使用しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定する<xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A>に`true`を含めずに、クライアント スクリプト ファイルを登録する場合、<xref:System.Web.UI.ScriptManager.ScriptPath%2A>スクリプト ファイルの URL の値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager">
          <see cref="T:System.Web.UI.ScriptManager" /> オブジェクト。</param>
        <summary>スクリプト参照が AJAX スクリプトであるかどうかを判断します。</summary>
        <returns>
          指定されたスクリプト参照が AJAX スクリプトである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれているかどうかを示します。</summary>
        <returns>
          複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント スクリプト ファイルが含まれる埋め込みリソースの名前を取得または設定します。</summary>
        <value>アセンブリにリソースとして埋め込まれているクライアント スクリプト ファイルの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定する、<xref:System.Web.UI.ScriptReference.Name%2A>プロパティをリソースとしてアセンブリに埋め込まれているクライアント スクリプト ファイルを参照します。  
  
 両方の値を定義する場合、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>と<xref:System.Web.UI.ScriptReference.Name%2A>参照では、同じスクリプト、プロパティ、<xref:System.Web.UI.ScriptReferenceBase.Path%2A>プロパティが優先されます。  
  
   
  
## Examples  
 次の例では、カスタム コントロールおよびコントロール アセンブリに埋め込まれている JavaScript ファイルを参照する方法を示します。 アセンブリは、Web サイトの Bin フォルダー内にあると見なされます。 カスタム コントロールをアニメーション化<xref:System.Web.UI.UpdatePanel>コントロール。 JavaScript ファイルは、SampleControl.UpdatePanelAnimation.js という埋め込みリソースとしてコンパイルされます。 使用して、埋め込みの JavaScript ファイルを登録する、<xref:System.Web.UI.ScriptReference.Assembly%2A>と<xref:System.Web.UI.ScriptReference.Name%2A>プロパティです。  
  
 この例を使用するには、カスタム コントロールの埋め込みリソースとしての例に示す JavaScript ファイルをコンパイルします。 結果として得られるアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例は、次を参照してください。[チュートリアル: リソースとしてアセンブリ内の JavaScript ファイルの埋め込み](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)です。  
  
 次の例では、カスタム コントロールを使用するページを示します。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例では、カスタム コントロールのクラス定義を示します。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例では、サポートの JavaScript ファイルを示します。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、コードをカスタム コントロールを含むプロジェクトの AssemblyInfo ファイルと JavaScript ファイルに追加する必要があります。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティ、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティ、または型名の値を表す文字列を返します。</summary>
        <returns>
          <see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティが定義されていれば、そのプロパティの値。<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティが定義されていれば、そのプロパティの値。それ以外の場合は、<see cref="P:System.Reflection.MemberInfo.Name" /> プロパティの値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>