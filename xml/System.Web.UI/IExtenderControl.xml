<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b16adaf9256788e09771f7d1d6c588334a3bea22" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70644024" /></Metadata><TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <TypeSignature Language="F#" Value="type IExtenderControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>エクステンダー コントロールの動作を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ExtenderControl>クラスから派生するエクステンダーコントロールでは、 <xref:System.Web.UI.ScriptManager>コントロールをページ上に配置する必要があります。 基本<xref:System.Web.UI.ExtenderControl>クラスは、 <xref:System.Web.UI.ScriptManager>コントロールがページ上に存在することを確認するために、明示的なテストを実行します。  
  
 ただし、エクステンダーコントロールを作成するときに、そのページに<xref:System.Web.UI.ScriptManager>コントロールが含まれていない場合は、 <xref:System.Web.UI.IExtenderControl>インターフェイスを直接実装するクラスを作成できます。 また、から<xref:System.Web.UI.Control>派生するクラスを作成する場合、またはから<xref:System.Web.UI.Control>派生した既存のコントロールを拡張する場合は、 <xref:System.Web.UI.IExtenderControl>クライアント機能をサポートするインターフェイスを実装できます。  
  
 インターフェイス<xref:System.Web.UI.IExtenderControl>は、 <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A>メソッドを呼び出してコントロールのスクリプトライブラリを登録し、 <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>メソッドを<xref:System.Web.UI.ScriptDescriptor>呼び出すことによってオブジェクトを登録します。 メソッド<xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>は、オブジェクト<xref:System.Collections.IEnumerable>の<xref:System.Web.UI.ScriptDescriptor>一覧を返します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl>クラスから派生した既存のコントロール型を拡張する場合は、 <xref:System.Web.UI.IScriptControl>インターフェイスを実装します。  
  
 を実装<xref:System.Web.UI.IExtenderControl>してエクステンダーコントロールを作成するには、次の操作を行います。  
  
-   コントロールの`OnInit`イベントのコードを記述して、 <xref:System.Web.UI.ScriptManager>コントロールがページ上で使用可能な場合はそれを検出して使用します。  
  
-   がページで使用できない場合は、 <xref:System.Web.UI.ScriptManager>クラスの静的メソッドを呼び出すことによって、必要なスクリプトを登録するための代替手段を提供します。 <xref:System.Web.UI.ScriptManager>  
  
-   メンバーの保護され<xref:System.Web.UI.IExtenderControl>た仮想メンバーを指定してください。  
  
-   インスタンススクリプトを、 <xref:System.Web.UI.ScriptManager>コントロールに登録するスクリプトブロックとして指定します。 この操作は、コントロールの`PreRender`、 `PreRenderComplete`、または`Render`イベントの実行中に行う必要があります。  
  
-   コントロールの`Render`イベント中にスクリプト記述子を登録します。  
  
> [!NOTE]
>  ページに<xref:System.Web.UI.UpdatePanel>コントロールが含まれている場合、そのページ<xref:System.Web.UI.ScriptManager>にはコントロールが含まれている必要があります。 <xref:System.Web.UI.IExtenderControl>インターフェイスを実装する必要があるのは、ページに<xref:System.Web.UI.ScriptManager>コントロールが含まれていない場合のみです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : System.Web.UI.Control -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="iExtenderControl.GetScriptDescriptors targetControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">エクステンダーが関連付けられたサーバー コントロール。</param>
        <summary>コントロールの <see cref="T:System.Web.UI.ScriptDescriptor" /> オブジェクトを登録し、コントロールの <see cref="T:System.Web.UI.ScriptDescriptor" /> オブジェクトを格納しているオブジェクトを返します。</summary>
        <returns><see cref="T:System.Collections.IEnumerable" /> オブジェクトを格納している <see cref="T:System.Web.UI.ScriptDescriptor" /> コレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="iExtenderControl.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのスクリプト ライブラリを登録し、埋め込みリソースとして登録された ECMAScript (JavaScript) ファイルの列挙体を返します。</summary>
        <returns>埋め込みリソースとして登録された JavaScript ファイルを格納する <see cref="T:System.Collections.IEnumerable" /> コレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
