<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0f3fc840e967f8ff4cbd96cb6c8a4b78d32c37c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70559683" /></Metadata><TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ポストバックせずにページのセクションを部分的にレンダリングできるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [UpdatePanel コンテンツの更新](#refreshing_updatepanel_content)  
  
-   [UpdatePanel の使用状況](#updatepanel_usage)  
  
-   [スタイルの適用](#applying_styles)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.UpdatePanel>コントロールは、ASP.NET の AJAX 機能の中核となる部分です。 部分ページレンダリングを有効<xref:System.Web.UI.ScriptManager>にするために、コントロールと共に使用されます。 部分ページレンダリングを使用すると、ページの一部だけを更新する必要がある場合に、同期ポストバックとページ全体の更新の必要性が軽減されます。 部分ページレンダリングでは、ページ全体のポストバック中に発生する画面のちらつきを減らし、Web ページの対話機能を向上させるため、ユーザーエクスペリエンスが向上します。  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>UpdatePanel コンテンツの更新  
 部分ページレンダリングが有効になっている場合、コントロールは、ページ全体または1つ<xref:System.Web.UI.UpdatePanel>以上のコントロールのコンテンツを更新する非同期ポストバックを更新するポストバックを実行できます。 コントロールが非同期ポストバックを発生させ、 <xref:System.Web.UI.UpdatePanel>コントロールを更新するかどうかは、次のように異なります。  
  
-   コントロールのプロパティがに<xref:System.Web.UI.UpdatePanelUpdateMode.Always>設定されている場合、ページからのポストバックごとにコントロールのコンテンツが更新されます。 <xref:System.Web.UI.UpdatePanel>  <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> <xref:System.Web.UI.UpdatePanel> これには、他のコントロール内にある<xref:System.Web.UI.UpdatePanel>コントロールからの非同期ポストバックや、コントロール<xref:System.Web.UI.UpdatePanel>の内部にないコントロールからのポストバックが含まれます。  
  
-   プロパティがに設定され<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>ている<xref:System.Web.UI.UpdatePanel>場合、コントロールのコンテンツは次のような状況で更新されます。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>  
  
    -   コントロールのメソッドを<xref:System.Web.UI.UpdatePanel.Update%2A>明示的に呼び出すとき。 <xref:System.Web.UI.UpdatePanel>  
  
    -   コントロールが別<xref:System.Web.UI.UpdatePanel>のコントロール内に入れ子になっていて、親パネルが更新された場合。 <xref:System.Web.UI.UpdatePanel>  
  
    -   コントロールのプロパティ `Triggers` を使用して、トリガーとして定義されているコントロールがポストバックを発生させる場合。 <xref:System.Web.UI.UpdatePanel> このシナリオでは、コントロールによって、パネルコンテンツの更新が明示的にトリガーされます。 コントロールは、トリガーが関連付けられて<xref:System.Web.UI.UpdatePanel>いるコントロールの内側または外側に配置できます。  
  
    -   プロパティがに`true`設定され、 <xref:System.Web.UI.UpdatePanel>コントロールの子コントロールがポストバックを発生させる場合。 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 入れ子になっ<xref:System.Web.UI.UpdatePanel>たコントロールの子コントロールは、明示的に<xref:System.Web.UI.UpdatePanel>トリガーとして定義されていない限り、外側のコントロールを更新しません。  
  
 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティを`false`に<xref:System.Web.UI.UpdatePanelUpdateMode.Always>設定し、プロパティをに設定することは許可されていないため、例外がスローされます。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>  
  
 コントロールが<xref:System.Web.UI.UpdatePanel>非同期 post を実行すると、カスタム HTTP ヘッダーが追加されます。 プロキシによっては、このカスタム HTTP ヘッダーが削除する場合があります。 このような場合、サーバーは要求を通常のポストバックとして処理します。これにより、クライアントエラーが発生します。 この問題を解決するには、非同期ポストを実行するときにカスタムフォームフィールドを挿入します。 次に、サーバーコードでヘッダーまたはカスタムフォームフィールドを確認します。  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>UpdatePanel の使用状況  
 複数<xref:System.Web.UI.UpdatePanel>のコントロールを使用して、複数のページ領域を個別に更新できます。 1つ<xref:System.Web.UI.UpdatePanel>以上のコントロールを含むページが最初に表示されると、すべて<xref:System.Web.UI.UpdatePanel>のコントロールのすべてのコンテンツがレンダリングされ、ブラウザーに送信されます。 後続の非同期ポストバックでは、各<xref:System.Web.UI.UpdatePanel>コントロールのコンテンツが、パネルの設定、および個々のパネルのクライアントまたはサーバーのロジックに応じて更新されない場合があります。  
  
 次のコントロールを<xref:System.Web.UI.UpdatePanel>使用することもできます。
  
-   ユーザーコントロールで。  
  
-   マスターページとコンテンツページ。  
  
-   他の<xref:System.Web.UI.UpdatePanel>コントロール内で入れ子になっています。  
  
-   コントロールや<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.Repeater>コントロールなど、テンプレート化されたコントロール内。  
  
 <xref:System.Web.UI.UpdatePanel>コントロールは、宣言またはプログラムによって追加できます。  
  
 プログラムを使用し<xref:System.Web.UI.UpdatePanel>てコントロールを追加することはできますが、プログラムによってトリガーを追加することはできません。 トリガーに似た動作を作成するには、ページ上のコントロールを非同期ポストバックコントロールとして登録します。 これを行うには、 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> <xref:System.Web.UI.ScriptManager>コントロールのメソッドを呼び出します。 その後、非同期ポストバックに応答して実行されるイベントハンドラーを作成し、ハンドラーで<xref:System.Web.UI.UpdatePanel.Update%2A> <xref:System.Web.UI.UpdatePanel>コントロールのメソッドを呼び出すことができます。  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>スタイルの適用  
 コントロール<xref:System.Web.UI.UpdatePanel>は expando 属性を受け入れます。 これにより、コントロールが表示する HTML 要素の CSS クラスを設定できます。 たとえば、次の例に示すようにマークアップを作成できます。  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 前の例のマークアップでは、ページの実行時に次のような HTML がレンダリングされます。  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.UpdatePanel>コントロールのさまざまな用途を示しています。  
  
 **UpdatePanel コントロール内のコントロール**  
  
 次の例は、コントロール内<xref:System.Web.UI.UpdatePanel>にコントロールを配置して、サーバーへのポスト時に画面のちらつきを軽減する方法を示しています。 この例<xref:System.Web.UI.WebControls.Calendar> <xref:System.Web.UI.UpdatePanel>では、コントロールとコントロールがコントロール内にあります。 <xref:System.Web.UI.WebControls.DropDownList> 既定<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>では、プロパティは<xref:System.Web.UI.UpdatePanelUpdateMode.Always> <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>であり、プロパティ`true`はです。 したがって、パネルの子コントロールは非同期ポストバックを発生させます。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **UpdatePanel コントロールを使用したマスター/詳細シナリオ**  
  
 次の例では、 <xref:System.Web.UI.UpdatePanel> Northwind データベースの注文と注文の詳細を表示するマスター/詳細シナリオで、コントロールを使用します。 1 <xref:System.Web.UI.UpdatePanel>つのコントロール<xref:System.Web.UI.WebControls.GridView>には、注文の一覧を表示するコントロールが含まれています。 2つ<xref:System.Web.UI.UpdatePanel>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>には、1つの注文の詳細を表示するコントロールが含まれています。 最初のテーブルから注文を選択すると、その注文の詳細が2番目のテーブルに表示されます。 2番目のテーブルは、最初のテーブルの選択に基づいて非同期的に更新されます。 Orders 概要テーブルの並べ替え操作とページング操作でも、部分的な更新が発生します。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 コントロールを<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.UpdatePanel>コントロール内に配置した場合、コントロール<xref:System.Web.UI.WebControls.GridView>の<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>プロパティをに`true`設定することはできません。 ただし、コントロールで<xref:System.Web.UI.UpdatePanel>は非同期ポストバックがサポートされている<xref:System.Web.UI.WebControls.GridView>ため、コントロール<xref:System.Web.UI.UpdatePanel>内のコントロールを変更するポストバックでは、並べ替えとページングコールバックと同じ動作が発生します。  
  
 **テンプレートでの UpdatePanel コントロールの使用**  
  
 次の例では、 <xref:System.Web.UI.UpdatePanel>コントロール<xref:System.Web.UI.WebControls.GridView>の項目テンプレートでコントロールが使用されています。 <xref:System.Web.UI.UpdatePanel>各データ行のコントロールは自動的に生成されます。 各行の<xref:System.Web.UI.UpdatePanel>コントロールには<xref:System.Web.UI.WebControls.Label> 、その行の項目の数量を表示するコントロールと<xref:System.Web.UI.WebControls.Button> 、数量を減らすためのコントロールが含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a">UpdatePanel テクノロジの概要</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b0156068-0d33-48e4-80fe-9ef76670ed26">ScriptManager テクノロジの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、 <xref:System.Web.UI.UpdatePanel>クラスの新しいインスタンスを初期化します。 <xref:System.Web.UI.UpdatePanel>コントロールをページに動的に追加するには、新しい<xref:System.Web.UI.UpdatePanel>インスタンスを作成し、そのインスタンスの<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>プロパティによって公開されるコントロールオブジェクトに子コントロールを追加します。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.UpdatePanel>コントロールを動的に作成してページに追加する方法を示しています。 <xref:System.Web.UI.UpdatePanel>コントロール内のボタンをクリックすると、メッセージが日付と時刻で更新されます。 子コントロールは、 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>プロパティを使用して追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールのカスケード スタイル シート (CSS: Cascading Style Sheet) 属性コレクションを取得します。</summary>
        <value>属性コレクション内の CSS スタイル ルールの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.UpdatePanel.Attributes%2A>は、 <xref:System.Web.UI.UpdatePanel>コントロールの外側`div`の要素で使用できる CSS スタイル属性のコレクションを格納します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの直下にある子コントロールから発生したポストバックにより、パネルの内容が更新されるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの直下にある子コントロールから発生したポストバックにより、パネルの内容が更新される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの`true` <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 直接の子コントロールからのポストバックがパネルのコンテンツを更新するようにする場合は、プロパティをに設定します。 <xref:System.Web.UI.UpdatePanel> 入れ子になっ<xref:System.Web.UI.UpdatePanel>たコントロールの子コントロールは、明示的に<xref:System.Web.UI.UpdatePanel>メソッドを<xref:System.Web.UI.UpdatePanel.Update%2A>呼び出すか、または子コントロールをトリガーとして定義する場合を除き、親コントロールのコンテンツを更新しません。  
  
> [!NOTE]
>  <xref:System.Web.UI.UpdatePanelUpdateMode.Always> `false` <xref:System.InvalidOperationException> <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>プロパティがに <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 設定され、プロパティがに設定されている場合、メソッドの実行中に例外がスローされます。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> このプロパティの組み合わせは<xref:System.Web.UI.UpdatePanel>コントロールでは許可されていません。  
  
 をに<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> `false`設定するシナリオは、2つ<xref:System.Web.UI.UpdatePanel>のコントロールがあり、最初のパネルからポストバックを使用して2番目のパネルのコンテンツを更新し、それ自体のコンテンツを更新しない場合です。 たとえば、最初のパネルが購入する製品の一覧であり、2番目のパネルがショッピングカートであることがあります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールのコンテンツを定義するテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールのコンテンツを定義する <see cref="T:System.Web.UI.UpdatePanel" /> インスタンス。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>は、 <xref:System.Web.UI.UpdatePanel>コントロールがレンダリングされるときに、コントロール内に表示されるコンテンツを格納します。 テンプレートのコンテンツは、宣言によって、またはプログラムによって作成できます。 <xref:System.Web.UI.UpdatePanel>コントロールのコンテンツテンプレートは、単一インスタンスのテンプレートです。 したがって、 <xref:System.Web.UI.Page.FindControl%2A>メソッドを使用しなくても、そのコントロールに含まれるコントロールのプロパティに直接アクセスできます。 詳細については、 <xref:System.Web.UI.TemplateInstanceAttribute>クラスの概要に関するトピックを参照してください。  
  
 <xref:System.Web.UI.UpdatePanel>コントロールに項目を宣言によって追加する`<ContentTemplate>`には、 <xref:System.Web.UI.UpdatePanel>コントロールの開始タグと終了タグの間に要素を追加します。 `<ContentTemplate>`要素タグ内で、他のコントロールと HTML 要素を宣言します。  
  
 <xref:System.Web.UI.UpdatePanel>コントロールに項目を動的に追加するには<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> 、プロパティを使用します。これにより、 <xref:System.Web.UI.ITemplate>インターフェイスを実装するカスタムテンプレートを作成しなくても、子コントロールを追加できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> コントロールの <see cref="T:System.Web.UI.UpdatePanel" /> プロパティは、テンプレートのインスタンスが作成された後、またはコンテンツ テンプレート コンテナーが作成された後に設定されます。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">ASP.NET Web サーバーコントロールテンプレート</related>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子コントロールをプログラムにより追加可能なコントロール オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.Control" /> コントロールの内容を定義する <see cref="T:System.Web.UI.UpdatePanel" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用すると、 <xref:System.Web.UI.ITemplate>インターフェイスから継承するカスタム<xref:System.Web.UI.UpdatePanel>テンプレートを定義しなくても、プログラムによって子コントロールをコントロールに追加できます。 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> <xref:System.Web.UI.UpdatePanel>コントロールにコンテンツを宣言によって、またはデザイナーを使用して追加する場合は<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> 、 `<ContentTemplate>`要素を使用してプロパティにコンテンツを追加する必要があります。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> <xref:System.Web.UI.UpdatePanel>コントロールのプロパティをプログラムで指定する方法を示しています。 を<xref:System.Web.UI.WebControls.Label.Text%2A>クリックすると<xref:System.Web.UI.WebControls.Label> `Button1` 、コントロールのプロパティが設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.UpdatePanel" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの子コントロールのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、追加の派生を<xref:System.Web.UI.Control>防ぐために、基底クラスと sealed からオーバーライドされます。 <xref:System.Web.UI.UpdatePanel.Controls%2A> コントロールを宣言によっ<xref:System.Web.UI.UpdatePanel>てコントロールに追加する`<ContentTemplate>`には、 <xref:System.Web.UI.UpdatePanel>コントロールマークアップ内に要素を作成します。 コントロールをプログラムによっ<xref:System.Web.UI.UpdatePanel>てコントロールに追加する<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>には、プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" /> クラスの <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />、または <see cref="T:System.Web.UI.ControlCollection" /> の各メソッドが呼び出されました。 <see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容を変更するには、<see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> プロパティの子コントロールを変更します。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Control" /> コントロールの内容を定義する子コントロールのコンテナーとして機能する <see cref="T:System.Web.UI.UpdatePanel" /> オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Web.UI.Control" /> コントロールの内容の <see cref="T:System.Web.UI.UpdatePanel" /> コンテナー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.UI.UpdatePanel>コントロールを拡張する必要があるコントロールの開発者が使用するためのものです。 たとえば、派生クラスでは、 <xref:System.Web.UI.UpdatePanel>コントロールのコンテンツのコンテナーとして機能する別のルートコントロールを指定できます。 既定の実装では<xref:System.Web.UI.Control> 、オブジェクトが返されます。  
  
   
  
## Examples  
 次の<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>例は、カスタム<xref:System.Web.UI.UpdatePanel> `<fieldset>`コントロールのメソッドをオーバーライドして、パネルのコンテンツの`<legend>`要素と要素を常にレンダリングする方法を示しています。 カスタム<xref:System.Web.UI.UpdatePanel>コントロールは、要素内の`<legend>`文字列`GroupingText`リテラルであるという名前のパブリックプロパティを定義します。  
  
 という<xref:System.Web.UI.UpdatePanel>名前`CustomUpdatePanel`のカスタムコントロール<xref:System.Web.UI.UpdatePanel>は、から<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>派生し、メソッドをオーバーライドします。 クラスの`CustomUpdatePanel`ソースコードを Web サイトの App_Code フォルダーに配置します。  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 <xref:System.Web.UI.UpdatePanel>コントロールと<xref:System.Web.UI.UpdatePanel>同じように、カスタムコントロールがページで使用されます。 次の例は、カスタム<xref:System.Web.UI.UpdatePanel>コントロールを含むページを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールに含まれているすべてのコントロールのコレクションを返します。</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" /> コントロールの内容を定義するすべてのコントロールで構成される <see cref="T:System.Web.UI.UpdatePanel" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A>は、コントロールの開発者によって使用されます。  
  
 このメソッドはプロテクトおよびシールされているため、 <xref:System.Web.UI.UpdatePanel>クラスを継承するクラスからは参照できますが、オーバーライドすることはできません。 このメソッドは、基本実装をオーバーライドして<xref:System.Web.UI.ControlCollection> 、の<xref:System.Web.UI.ControlCollection.Remove%2A> <xref:System.InvalidOperationException> <xref:System.Web.UI.ControlCollection.Clear%2A> <xref:System.Web.UI.ControlCollection.RemoveAt%2A> <xref:System.Web.UI.ControlCollection.AddAt%2A> 、、 <xref:System.Web.UI.ControlCollection.Add%2A> 、、またはの各メソッドで、をスローする特殊なオブジェクトを返します。 <xref:System.Web.UI.ControlCollection> クラスが呼び出されます。 <xref:System.Web.UI.UpdatePanel> コントロールの内容を変更するには、<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> プロパティの子コントロールを変更します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>部分ページ レンダリングが有効な場合、<see cref="T:System.Web.UI.UpdatePanel" /> コントロール トリガー コレクションを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 部分ページレンダリングが有効になっていない場合、 <xref:System.Web.UI.UpdatePanel.Triggers%2A>プロパティで定義されているトリガーは動作しないため、初期化されません。 コントロールのプロパティは<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> 、部分ページレンダリングが有効かどうかを示す値を取得または設定します。 <xref:System.Web.UI.ScriptManager> コントロールのプロパティは、部分ページレンダリングがサポートされているかどうかを示す値を取得または設定します。 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> <xref:System.Web.UI.ScriptManager>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.UpdatePanel.Initialize" />メソッドをオーバーライドする場合は、部分ページレンダリングが有効になっている場合にトリガーが登録されるように、基本クラスを必ず呼び出してください。</para></block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールが非同期ポストバックの結果として更新されるかどうかを示す値を取得します。</summary>
        <value>現在の <see cref="T:System.Web.UI.UpdatePanel" /> コントロールが非同期ポストバックの結果として更新される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A>は、コントロールが非同期ポストバックの結果として更新さ<xref:System.Web.UI.UpdatePanel>れていることを知りたいコントロール開発者が使用するためのものです。 ページの開発シナリオでは、 <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>プロパティを使用して、ページが非同期ポストバックの結果として処理されているかどうかを判断します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>プロパティは、メソッドの<xref:System.Web.UI.UpdatePanel.OnInit%2A>実行時にインスタンス化されます。 <xref:System.Web.UI.UpdatePanel>  
  
 メソッドは、コントロール<xref:System.Web.UI.UpdatePanel>の機能を拡張するためにコントロールの開発者によって使用されます。 <xref:System.Web.UI.UpdatePanel.OnInit%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> プロパティは、<see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> プロパティが既に作成されている場合に定義されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されている<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />デリゲートがイベントを受け取ることができるように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>部分ページ レンダリングが有効でない場合、<see cref="E:System.Web.UI.Control.Load" /> コントロールの <see cref="T:System.Web.UI.UpdatePanel" /> イベントを発生させ、<see cref="M:System.Web.UI.UpdatePanel.Initialize" /> メソッドを呼び出します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />メソッドをオーバーライドする場合は、 <see cref="E:System.Web.UI.Control.Load" />イベントが発生するように、基本クラスを必ず呼び出してください。</para></block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、コントロール<xref:System.Web.UI.UpdatePanel>の機能を拡張するためにコントロールの開発者によって使用されます。 <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> プロパティが <see langword="false" /> に設定され、<see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> プロパティが <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" /> に設定されます。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納する <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>基本 <see cref="E:System.Web.UI.Control.Unload" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は、この<xref:System.Web.UI.UpdatePanel.OnUnload%2A>メソッドを使用して、コントロールの機能を <xref:System.Web.UI.UpdatePanel> 拡張します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをレンダリングする出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary><see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、コントロール<xref:System.Web.UI.UpdatePanel>の機能を拡張するためにコントロールの開発者によって使用されます。 <xref:System.Web.UI.UpdatePanel.Render%2A>  
  
 メソッド<xref:System.Web.UI.UpdatePanel.Render%2A>は、 <xref:System.Web.UI.UpdatePanel> 指定 <xref:System.Web.UI.HtmlTextWriter> されたオブジェクトを使用して、コントロールの描画されたコンテンツをブラウザーに書き込みます。 派生クラスの<xref:System.Web.UI.UpdatePanel.Render%2A>メソッドをオーバーライドする場合は、 <xref:System.Web.UI.UpdatePanel>コントロールの子コントロールが<xref:System.Web.UI.UpdatePanel.Render%2A>レンダリングされるように、基本クラスのメソッドを呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをレンダリングする出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary><see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、コントロール<xref:System.Web.UI.UpdatePanel>の機能を拡張するためにコントロールの開発者によって使用されます。 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A>  
  
 メソッド<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>は、 <xref:System.Web.UI.UpdatePanel> 指定 <xref:System.Web.UI.HtmlTextWriter> されたオブジェクトを使用して、コントロールの描画されたコンテンツをブラウザーに書き込みます。 派生クラスで<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>メソッドをオーバーライドする場合は、 <xref:System.Web.UI.UpdatePanel>コントロールの子コントロールが<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>レンダリングされるように、基本クラスのメソッドを呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容が、HTML <see langword="&lt;div&gt;" /> 要素または <see langword="&lt;span&gt;" /> 要素のどちらで囲まれているのかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanelRenderMode" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> のため、パネルの内容は HTML <see langword="&lt;div&gt;" /> 要素で囲まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが<xref:System.Web.UI.UpdatePanel.RenderMode%2A>に<xref:System.Web.UI.UpdatePanelRenderMode.Inline>設定されている場合は<xref:System.Web.UI.UpdatePanel> 、コントロールの内容が HTML `<span>`要素内に表示されます。 プロパティがに<xref:System.Web.UI.UpdatePanelRenderMode.Block>設定されている場合は、HTML `<div>`要素内に表示されます。 <xref:System.Web.UI.UpdatePanel.RenderMode%2A>  
  
   
  
## Examples  
 次の例は、プロパティを宣言<xref:System.Web.UI.UpdatePanel.RenderMode%2A>によって設定する方法を示しています。 と<xref:System.Web.UI.UpdatePanel>いう名前`UpdatePanel1`のコントロールは、HTML `<span>`要素でレンダリングされます。 プロパティがに<xref:System.Web.UI.UpdatePanelRenderMode.Block>設定されている場合、HTML `<div>`要素のレンダリング方法により、結果として得られる段落が不整合として表示されます。 <xref:System.Web.UI.UpdatePanel.RenderMode%2A>  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容が更新されるかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容が更新される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定<xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A>では、 <xref:System.Web.UI.UpdatePanel.Update%2A>メソッドが`true`明示的に呼び出された場合、また<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>はプロパティがに<xref:System.Web.UI.UpdatePanelUpdateMode.Always>設定されている場合、プロパティはを返します。  
  
 このプロパティは、 <xref:System.Web.UI.UpdatePanel>コントロールを拡張する必要があるコントロールの開発者が使用することを目的としています。 たとえば、派生クラスでは、 <xref:System.Web.UI.UpdatePanel>コントロールを更新する必要があるかどうかを判断するための追加のロジックを指定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">属性の名前。</param>
        <summary>指定された名前を使用して、Web コントロールの属性を取得します。</summary>
        <returns>属性の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.UpdatePanel> のインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">設定する属性名です。</param>
        <param name="value">設定する属性の値。</param>
        <summary>指定したコントロール属性の値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.UpdatePanel> のインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> コントロールの、宣言によって登録された <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> オブジェクトおよび <see cref="T:System.Web.UI.PostBackTrigger" /> オブジェクトを格納する <see cref="T:System.Web.UI.UpdatePanel" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 型および <see cref="T:System.Web.UI.PostBackTrigger" /> 型のオブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.UpdatePanel.Triggers%2A>は、 <xref:System.Web.UI.UpdatePanel>コントロールに対して定義されているすべてのトリガーのコレクションを取得します。 (デザイナーの **[updateパネルトリガーコレクションエディター]** ダイアログボックスを使用するか、 `<Triggers>` <xref:System.Web.UI.UpdatePanel>コントロールの要素を使用して、トリガーを宣言によって定義できます)。コレクションには<xref:System.Web.UI.AsyncPostBackTrigger> 、 <xref:System.Web.UI.PostBackTrigger>オブジェクトとオブジェクトが含まれます。  
  
 コレクションで定義されている<xref:System.Web.UI.UpdatePanel.Triggers%2A>宣言型トリガーは、ビューステートでは追跡されません。  
  
 名前付けコンテナーであるコントロールをトリガーとして使用すると、ポストバックを発生させるすべての子コントロールがトリガーとして動作します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容の更新を行います。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページが部分ページレンダリングに対して有効になっている場合、 <xref:System.Web.UI.UpdatePanel.Update%2A>メソッド<xref:System.Web.UI.UpdatePanel>を呼び出すと、コントロールのコンテンツがブラウザーで更新されます。 コントロールを<xref:System.Web.UI.UpdatePanel.Update%2A>更新する必要があるかどうかを判断するためにを実行する必要があるサーバーコードがある場合は、メソッドを呼び出します。 <xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.UpdatePanel.Update%2A>メソッドを使用する場合は、 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティをに<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>設定します。 サーバーロジックのパネルを更新することを決定する場合は、 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティが`false`であり、パネルに明示的なトリガーが定義されていないことを確認します。  
  
 一般的なページ開発シナリオでは、トリガーを定義する場合や<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 、プロパティ`true`が<xref:System.Web.UI.UpdatePanel>コントロールの場合は<xref:System.Web.UI.UpdatePanel.Update%2A> 、ページのライフサイクル中にメソッドが自動的に呼び出されます。  
  
 プロパティが<xref:System.Web.UI.UpdatePanel>コントロールに対して定義されていない場合、パネルの更新は行われません。 <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>  
  
   
  
## Examples  
 次の例では<xref:System.Web.UI.UpdatePanel.Update%2A> 、前回の更新から5秒<xref:System.Web.UI.UpdatePanel>以上経過した場合に、メソッドを使用してコントロールのコンテンツを更新します。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> プロパティが <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" /> に設定されている。  
  
または 
<see cref="M:System.Web.UI.UpdatePanel.Update" /> メソッドは、ページの <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> イベントの発生時または発生後に呼び出されます。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容がいつ更新されるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが別<xref:System.Web.UI.UpdatePanel>のコントロールの内側にない場合、パネルはプロパティ<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>と<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティの設定によって、トリガーのコレクションと共に更新されます。 <xref:System.Web.UI.UpdatePanel> コントロールが別<xref:System.Web.UI.UpdatePanel>のコントロール内にある場合は、親パネルが更新されると、子パネルが自動的に更新されます。 <xref:System.Web.UI.UpdatePanel>  
  
 <xref:System.Web.UI.UpdatePanel>コントロールの内容は、次のような場合に更新されます。  
  
-   プロパティがに<xref:System.Web.UI.UpdatePanelUpdateMode.Always>設定されている<xref:System.Web.UI.UpdatePanel>場合、コントロールのコンテンツは、ページ上の任意の場所から発生したポストバックごとに更新されます。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> これには、他のコントロール内<xref:System.Web.UI.UpdatePanel>のコントロールからの非同期ポストバックや、 <xref:System.Web.UI.UpdatePanel>コントロールの内部にないコントロールからのポストバックが含まれます。  
  
-   コントロールが別<xref:System.Web.UI.UpdatePanel>のコントロール内に入れ子になっており、親の更新パネルが更新されている場合は。 <xref:System.Web.UI.UpdatePanel>  
  
-   プロパティがに<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>設定されている場合、次のいずれかの条件が発生します。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>  
  
    -   コントロールのメソッド<xref:System.Web.UI.UpdatePanel.Update%2A>を明示的に呼び出します。 <xref:System.Web.UI.UpdatePanel>  
  
    -   ポストバックは、 <xref:System.Web.UI.UpdatePanel.Triggers%2A> <xref:System.Web.UI.UpdatePanel>コントロールのプロパティを使用して、トリガーとして定義されたコントロールによって発生します。 このシナリオでは、コントロールによって、パネルコンテンツの更新が明示的にトリガーされます。 コントロールは、トリガーを定義するコントロールの<xref:System.Web.UI.UpdatePanel>内側または外側のいずれかになります。  
  
    -   プロパティがに`true`設定され、 <xref:System.Web.UI.UpdatePanel>コントロールの子コントロールがポストバックを発生させます。 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> 入れ子になっ<xref:System.Web.UI.UpdatePanel>たコントロールの子コントロールは、トリガーとして明示<xref:System.Web.UI.UpdatePanel>的に定義されていない限り、外側のコントロールを更新しません。  
  
   
  
## Examples  
 次の例では<xref:System.Web.UI.UpdatePanel> 、2つのコントロールを宣言します。 最初のパネルでは、 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティはに<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>設定されています。 2番目のパネル<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>では、 <xref:System.Web.UI.UpdatePanelUpdateMode.Always>がに設定されています。 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 両方 <xref:System.Web.UI.ScriptManager> のパネルの外側のボタンは、コントロールのメソッドを呼び出すことによって、非同期ポストバックコントロールとして登録されます。 ボタンの`Click`イベントハンドラーでは<xref:System.Web.UI.UpdatePanel.Update%2A> 、最後の更新から5秒以上経過した場合に、最初のパネルのメソッドが呼び出されます。 このシナリオでは、パネルの内容が更新されるのは、最後のパネル更新が5秒以上前であった場合のみです。 2番目のパネルのコンテンツは常に更新されます。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した型が、<see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 値ではありません。</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>
