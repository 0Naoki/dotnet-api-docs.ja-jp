<Type Name="TemplateContainerAttribute" FullName="System.Web.UI.TemplateContainerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e278bf0c10a39c1a033e1ba9321b53826ffe5af3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932079" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateContainerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateContainerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateContainerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateContainerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateContainerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateContainerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.ITemplate" /> インターフェイスを返し、<see cref="T:System.Web.UI.TemplateContainerAttribute" /> 属性でマークされるプロパティのコンテナー コントロールの基本型を宣言します。 <see cref="T:System.Web.UI.ITemplate" /> プロパティを持つコントロールは、<see cref="T:System.Web.UI.INamingContainer" /> インターフェイスを実装する必要があります。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type>オブジェクトのパラメーターとして渡される、<xref:System.Web.UI.TemplateContainerAttribute>の種類としてパーサーによってオブジェクトが使用される<xref:System.ComponentModel.Container>データ バインド式で使用されるオブジェクト。 コントロールのプロパティを返します、<xref:System.Web.UI.ITemplate>インターフェイスし、が付いて、 <xref:System.Web.UI.TemplateContainerAttribute>、実装する必要があります、<xref:System.Web.UI.INamingContainer>インターフェイス。  
  
 属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。  
  
   
  
## Examples  
 次のコード例は、という名前のテンプレート化されたコントロールを作成する方法を示します`TemplatedFirstControl`という名前のコンテナーに関連付けると`FirstTemplateContainer`します。 これにより、テンプレートを指定すると、テンプレートが指定されていない場合、サーバー時間を表示するカスタム コントロールとテンプレートの内容を作成できます。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 次の Web フォームでは、上記のコード例で作成されたカスタム コントロールを使用する方法を示します。 2 つのインスタンス、`TemplatedFirstControl`ページ上に配置されます。  
  
-   最初のインスタンスには、テンプレートが含まれています。`<FirstTemplate>`します。  
  
-   2 番目のインスタンスには含まれません`<FirstTemplate>`。 したがって、時間だけが表示されます。  
  
 [!code-aspx-csharp[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#2)]
 [!code-aspx-vb[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">属性を使用したメタデータの拡張</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.TemplateContainerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (containerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.TemplateContainerAttribute : Type -&gt; System.Web.UI.TemplateContainerAttribute" Usage="new System.Web.UI.TemplateContainerAttribute containerType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="containerType">コンテナー コントロールの <see cref="T:System.Type" />。</param>
        <summary>コンテナーの型を指定して、<see cref="T:System.Web.UI.TemplateContainerAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、という名前のテンプレート化されたコントロールを作成する方法を示しています。`TemplatedFirstControl`という名前のコンテナーに関連付けると`FirstTemplateContainer`します。 これにより、テンプレートを指定すると、テンプレートが指定されていない場合、サーバー時間を表示するカスタム コントロールとテンプレートの内容を作成できます。 <xref:System.Web.UI.TemplateContainerAttribute>のクラスが使用される、`FirstTemplate`プロパティ。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET コントロール デザイナーの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/5e601b3d-bb16-4dbe-9e35-7e92a34565ca">Web フォーム ユーザー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType, System.ComponentModel.BindingDirection bindingDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType, valuetype System.ComponentModel.BindingDirection bindingDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType, System::ComponentModel::BindingDirection bindingDirection);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.TemplateContainerAttribute : Type * System.ComponentModel.BindingDirection -&gt; System.Web.UI.TemplateContainerAttribute" Usage="new System.Web.UI.TemplateContainerAttribute (containerType, bindingDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bindingDirection" Type="System.ComponentModel.BindingDirection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="containerType">コンテナー コントロールの <see cref="T:System.Type" />。</param>
        <param name="bindingDirection">コンテナー コントロールの <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />。</param>
        <summary>指定したコンテナーの型と <see cref="T:System.Web.UI.TemplateContainerAttribute" /> プロパティを使用して、<see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
    <Member MemberName="BindingDirection">
      <MemberSignature Language="C#" Value="public System.ComponentModel.BindingDirection BindingDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.BindingDirection BindingDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingDirection As BindingDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::BindingDirection BindingDirection { System::ComponentModel::BindingDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingDirection : System.ComponentModel.BindingDirection" Usage="System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナー コントロールのバインディング方向を取得します。</summary>
        <value>コンテナー コントロールのバインディング方向を示す <see cref="T:System.ComponentModel.BindingDirection" />。 既定値は、<see cref="F:System.ComponentModel.BindingDirection.OneWay" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A>プロパティには、いずれかを指定できる、<xref:System.ComponentModel.BindingDirection.OneWay>フィールドに、テンプレートがプロパティの値だけを受け入れることができます、または<xref:System.ComponentModel.BindingDirection.TwoWay>フィールドに、テンプレートが場所を受け入れるし、プロパティ値を公開します。 後者のシナリオではデータ バインド コントロールに自動的に使用できます、update、delete、および挿入操作を使用してデータ ソースの`Bind`データ バインディング構文。  
  
 データ バインディングの詳細については、次を参照してください。[データベースへのバインド](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)と[データ バインド式の概要](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)します。  
  
   
  
## Examples  
 次のコード例は、という名前のテンプレート化されたコントロールを作成する方法を示します`TemplatedFirstControl`という名前のコンテナーに関連付けると`FirstTemplateContainer`します。 これにより、テンプレートを指定すると、テンプレートが指定されていない場合、サーバー時間を表示するカスタム コントロールの作成と、テンプレートの内容。 <xref:System.Attribute.GetCustomAttribute%2A>メソッドを判断、<xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A>のプロパティ、`FirstTemplate`のプロパティ、`TemplateFirstControl`します。  
  
 このコード例が示されている例の一部、<xref:System.Web.UI.TemplateContainerAttribute>クラス。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#3)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
        <altmember cref="T:System.ComponentModel.BindingDirection" />
        <altmember cref="Overload:System.Attribute.GetCustomAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a">データ バインド式の構文</related>
      </Docs>
    </Member>
    <Member MemberName="ContainerType">
      <MemberSignature Language="C#" Value="public Type ContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContainerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainerType : Type" Usage="System.Web.UI.TemplateContainerAttribute.ContainerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナー コントロールの型を取得します。</summary>
        <value>コンテナー コントロールの <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、という名前のテンプレート化されたコントロールを作成する方法を示します`TemplatedFirstControl`という名前のコンテナーに関連付けると`FirstTemplateContainer`します。 これにより、テンプレートを指定すると、テンプレートが指定されていない場合、サーバー時間を表示するカスタム コントロールとテンプレートの内容を作成できます。 <xref:System.Web.UI.TemplateContainerAttribute>のクラスが使用される、`FirstTemplate`プロパティを指定して、<xref:System.Web.UI.TemplateContainerAttribute.ContainerType%2A>プロパティとして`FirstTemplateContainer`します。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
  </Members>
</Type>