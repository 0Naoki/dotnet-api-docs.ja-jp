<Type Name="PageParserFilter" FullName="System.Web.UI.PageParserFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38331c03f40ebbc4de659f604fcf9c909788f6e0" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394034" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageParserFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageParserFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParserFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageParserFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParserFilter abstract" />
  <TypeSignature Language="F#" Value="type PageParserFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e0f89-101">ASP.NET パーサーで解析時に項目をページ内で使用できるかどうかを判断するために使用されるページ パーサーのフィルターに抽象基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-101">Provides an abstract base class for a page parser filter that is used by the ASP.NET parser to determine whether an item is allowed in the page at parse time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0f89-102">次の例がから派生したクラスを作成する方法を示しています、 <xref:System.Web.UI.PageParserFilter> ASP.NET ページ パーサーの動作を制御するクラス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-102">The following example demonstrates how you can create a class that derives from the <xref:System.Web.UI.PageParserFilter> class to govern the behavior of the ASP.NET page parser.</span></span> <span data-ttu-id="e0f89-103">`CustomPageParserFilter`パーサーが明示的にするフィルターがページ内のコードを拒否します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-103">The `CustomPageParserFilter` is a parser filter that explicitly rejects code in the page.</span></span> <span data-ttu-id="e0f89-104">これはオーバーライドすることによって、<xref:System.Web.UI.PageParserFilter.AllowCode%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e0f89-104">It does this by overriding the <xref:System.Web.UI.PageParserFilter.AllowCode%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.PageParserFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/CS/CustomPageParserFilter.cs#2)]
 [!code-vb[System.Web.UI.PageParserFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/VB/CustomPageParserFilter.vb#2)]  
  
 <span data-ttu-id="e0f89-105">使用する、`CustomPageParserFilter`サンプルを App_Code ディレクトリ内のクラスを配置します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-105">To use the `CustomPageParserFilter` sample, place the class in your App_Code directory.</span></span> <span data-ttu-id="e0f89-106">フィルターを使用して ASP.NET パーサーを構成する必要があります、`pages`サイトの Web.config 構成ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="e0f89-106">You must configure the ASP.NET parsers to use the filter in the `pages` section of your site's Web.config configuration file.</span></span> <span data-ttu-id="e0f89-107">次の構成ファイルの例は、の構成を示しています。`CustomPageParserFilter`します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-107">The following example configuration file shows the configuration for `CustomPageParserFilter`.</span></span> <span data-ttu-id="e0f89-108">パーサー フィルターを使用するように構成ページでコードが発生した場合、ASP.NET パーサーは、ビルド中に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e0f89-108">When configured to use a parser filter, the ASP.NET parser throws an exception during the build if it encounters code in a page.</span></span>  
  
 `<?xml version="1.0" ?>`  
  
 `<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">`  
  
 `<system.web>`  
  
 `<pages`  
  
 `pageParserFilterType="Samples.AspNet.CS.CustomPageParserFilter">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageParserFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageParserFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0f89-109"><see cref="T:System.Web.UI.PageParserFilter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-109">Initializes a new instance of the <see cref="T:System.Web.UI.PageParserFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="protected void AddControl (Type type, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddControl(class System.Type type, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AddControl(System.Type,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddControl(Type ^ type, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddControl : Type * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.AddControl (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e0f89-110"><see cref="T:System.Web.UI.ControlBuilder" /> が表すコントロールの種類。</span><span class="sxs-lookup"><span data-stu-id="e0f89-110">The control type that the <see cref="T:System.Web.UI.ControlBuilder" /> represents.</span></span></param>
        <param name="attributes"><span data-ttu-id="e0f89-111">指定したすべてのタグ属性を保持する <see cref="T:System.Collections.IDictionary" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e0f89-111">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span></span></param>
        <summary><span data-ttu-id="e0f89-112">ページのコントロール ツリー内の現在のページ パーサーの位置に <see cref="T:System.Web.UI.ControlBuilder" /> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-112">Adds a <see cref="T:System.Web.UI.ControlBuilder" /> object in the page control tree at the current page parser position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-114">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-114">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBaseType">
      <MemberSignature Language="C#" Value="public virtual bool AllowBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowBaseType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowBaseType (baseType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowBaseType(Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member AllowBaseType : Type -&gt; bool&#xA;override this.AllowBaseType : Type -&gt; bool" Usage="pageParserFilter.AllowBaseType baseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="e0f89-115">現在のページが派生できるかどうか判断する基本クラスを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-115">A <see cref="T:System.Type" /> that represents the potential base class of the current page.</span></span></param>
        <summary><span data-ttu-id="e0f89-116">指定した <see cref="T:System.Type" /> からページを派生できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-116">Determines whether the page can be derived from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="e0f89-117">指定した型からページを継承できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-117"><see langword="true" /> if the page can inherit from the specified type; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-118">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-118">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-119"><xref:System.Web.UI.TemplateParser>クラスが基本型が許可されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-119">The <xref:System.Web.UI.TemplateParser> class determines whether a base type is permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCode">
      <MemberSignature Language="C#" Value="public virtual bool AllowCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.AllowCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowCode : bool" Usage="System.Web.UI.PageParserFilter.AllowCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-120">ASP.NET パーサー フィルターがページ内のコードを許可するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-120">Gets a value indicating whether an ASP.NET parser filter permits code on the page.</span></span></summary>
        <value><span data-ttu-id="e0f89-121">パーサー フィルターがコードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-121"><see langword="true" /> if a parser filter permits code; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-122">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-122">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-123"><xref:System.Web.UI.TemplateParser>クラスが関連付けられているいずれかを確認します<xref:System.Web.UI.PageParserFilter>ページがコンパイルできるコードを含めるかどうかを判断するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-123">The <xref:System.Web.UI.TemplateParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to determine whether a page can contain code that can be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowControl">
      <MemberSignature Language="C#" Value="public virtual bool AllowControl (Type controlType, System.Web.UI.ControlBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowControl(class System.Type controlType, class System.Web.UI.ControlBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowControl(System.Type,System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowControl (controlType As Type, builder As ControlBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowControl(Type ^ controlType, System::Web::UI::ControlBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool&#xA;override this.AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool" Usage="pageParserFilter.AllowControl (controlType, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="controlType"><span data-ttu-id="e0f89-124">追加するコントロールの型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-124">A <see cref="T:System.Type" /> that represents the type of control to add.</span></span></param>
        <param name="builder"><span data-ttu-id="e0f89-125">指定した型のコントロールの構築に使用される <see cref="T:System.Web.UI.ControlBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-125">A <see cref="T:System.Web.UI.ControlBuilder" /> used to build the specified type of control.</span></span></param>
        <summary><span data-ttu-id="e0f89-126">指定したコントロールの型がこのページで許可されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-126">Gets a value indicating whether the specified control type is allowed for this page.</span></span></summary>
        <returns><span data-ttu-id="e0f89-127">コントロールを現在のページで使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-127"><see langword="true" /> if the control can be used with the current page; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-128">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-128">The default value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-129"><xref:System.Web.UI.TemplateParser>クラスの解析時にページ内のコントロールの使用が許可されているかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="e0f89-129">The <xref:System.Web.UI.TemplateParser> class checks to see whether controls are permitted in a page at parse time.</span></span> <span data-ttu-id="e0f89-130">上書き、<xref:System.Web.UI.PageParserFilter.AllowControl%2A>を拒否またはページ内の特定のコントロールを許可します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-130">Override the <xref:System.Web.UI.PageParserFilter.AllowControl%2A> method to reject or permit specific controls in your pages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowServerSideInclude">
      <MemberSignature Language="C#" Value="public virtual bool AllowServerSideInclude (string includeVirtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowServerSideInclude(string includeVirtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowServerSideInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowServerSideInclude (includeVirtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowServerSideInclude(System::String ^ includeVirtualPath);" />
      <MemberSignature Language="F#" Value="abstract member AllowServerSideInclude : string -&gt; bool&#xA;override this.AllowServerSideInclude : string -&gt; bool" Usage="pageParserFilter.AllowServerSideInclude includeVirtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeVirtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeVirtualPath"><span data-ttu-id="e0f89-131">インクルードされるファイルへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-131">The virtual path to the included file.</span></span></param>
        <summary><span data-ttu-id="e0f89-132">パーサーがページ上の特定のサーバー側インクルードを許可するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-132">Determines whether a parser permits a specific server-side include on a page.</span></span></summary>
        <returns><span data-ttu-id="e0f89-133">パーサーが特定のサーバー側インクルードを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-133"><see langword="true" /> if a parser permits the specific server-side include; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-134">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-134">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-135">オーバーライド、<xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A>をすべて拒否するか、特定のサーバー側が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e0f89-135">Override the <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> method to reject all or specific server-side includes.</span></span> <span data-ttu-id="e0f89-136">サーバー側の詳細については、構文を含めるを参照してください。[サーバー側含めるディレクティブ構文](https://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9)します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-136">For more information about server-side include syntax, see [Server-Side Include Directive Syntax](https://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowVirtualReference">
      <MemberSignature Language="C#" Value="public virtual bool AllowVirtualReference (string referenceVirtualPath, System.Web.UI.VirtualReferenceType referenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowVirtualReference(string referenceVirtualPath, valuetype System.Web.UI.VirtualReferenceType referenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowVirtualReference(System.String,System.Web.UI.VirtualReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowVirtualReference (referenceVirtualPath As String, referenceType As VirtualReferenceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowVirtualReference(System::String ^ referenceVirtualPath, System::Web::UI::VirtualReferenceType referenceType);" />
      <MemberSignature Language="F#" Value="abstract member AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool&#xA;override this.AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool" Usage="pageParserFilter.AllowVirtualReference (referenceVirtualPath, referenceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceVirtualPath" Type="System.String" />
        <Parameter Name="referenceType" Type="System.Web.UI.VirtualReferenceType" />
      </Parameters>
      <Docs>
        <param name="referenceVirtualPath"><span data-ttu-id="e0f89-137">マスター ページ ファイル、ASP.NET ページ、ユーザー コントロールなどのリソースへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-137">The virtual path to a resource, such as a master page file, ASP.NET page, or user control.</span></span></param>
        <param name="referenceType"><span data-ttu-id="e0f89-138">リソースの種類を識別する <see cref="T:System.Web.UI.VirtualReferenceType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-138">A <see cref="T:System.Web.UI.VirtualReferenceType" /> value that identifies the type of resource.</span></span></param>
        <summary><span data-ttu-id="e0f89-139">パーサーが特定の種類のリソースへの仮想参照をページに許可するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-139">Determines whether a parser permits a virtual reference to a specific type of resource on a page.</span></span></summary>
        <returns><span data-ttu-id="e0f89-140">パーサーが特定の種類のリソースへの仮想参照を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-140"><see langword="true" /> if the parser permits a virtual reference to a specific type of resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-141"><xref:System.Web.UI.TemplateParser>クラスは、特定の種類のリソース ページから参照できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-141">The <xref:System.Web.UI.TemplateParser> class determines whether a particular type of resource can be referenced from a page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.VirtualReferenceType" />
      </Docs>
    </Member>
    <Member MemberName="CalledFromParseControl">
      <MemberSignature Language="C#" Value="protected bool CalledFromParseControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalledFromParseControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CalledFromParseControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CalledFromParseControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CalledFromParseControl : bool" Usage="System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-142">パーサー フィルターがページから呼び出されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-142">Gets a value that indicates whether the parser filter was called from the page.</span></span></summary>
        <value><span data-ttu-id="e0f89-143">パーサー フィルターがページから呼び出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-143"><see langword="true" /> if a parser filter was called from the page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-144">このプロパティに設定`true`の実装時に、<xref:System.Web.UI.PageParserFilter>クラスが呼び出すことによって呼び出される、`ParseControl`のメソッド、<xref:System.Web.UI.Page>クラスまたは呼び出すことによって、`ParseControl`のメソッド、 `TemplateControl` の参照<xref:System.Web.UI.Page>クラス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-144">This property is set to `true` when an implementation of the <xref:System.Web.UI.PageParserFilter> class is invoked by calling the `ParseControl` method of the <xref:System.Web.UI.Page> class or by calling the `ParseControl` method of the `TemplateControl` reference of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompilationMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.CompilationMode GetCompilationMode (System.Web.UI.CompilationMode current);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.CompilationMode GetCompilationMode(valuetype System.Web.UI.CompilationMode current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCompilationMode (current As CompilationMode) As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::CompilationMode GetCompilationMode(System::Web::UI::CompilationMode current);" />
      <MemberSignature Language="F#" Value="abstract member GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode&#xA;override this.GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode" Usage="pageParserFilter.GetCompilationMode current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Web.UI.CompilationMode" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="e0f89-145">ページの現在のコンパイル モード。</span><span class="sxs-lookup"><span data-stu-id="e0f89-145">The current compilation mode for the page.</span></span></param>
        <summary><span data-ttu-id="e0f89-146">ページの現在のコンパイル モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-146">Retrieves the current compilation mode for the page.</span></span></summary>
        <returns><span data-ttu-id="e0f89-147"><see cref="T:System.Web.UI.CompilationMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e0f89-147">One of the <see cref="T:System.Web.UI.CompilationMode" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-148"><xref:System.Web.UI.TemplateControlParser>クラスが関連付けられているいずれかを確認します<xref:System.Web.UI.PageParserFilter>コンパイル モードを現在処理されてページに適用するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-148">The <xref:System.Web.UI.TemplateControlParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to apply a compilation mode to the currently processed page.</span></span> <span data-ttu-id="e0f89-149">既定の実装、<xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A>メソッドは単に返します、<xref:System.Web.UI.CompilationMode>現在のパラメーターで渡される値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-149">The default implementation of the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method simply returns the <xref:System.Web.UI.CompilationMode> value that is passed in the current parameter.</span></span> <span data-ttu-id="e0f89-150">上書き、<xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A>メソッドを使用して、特定のまたは異なる<xref:System.Web.UI.CompilationMode>値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-150">Override the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method to use a specific or different <xref:System.Web.UI.CompilationMode> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetNoCompileUserControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetNoCompileUserControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNoCompileUserControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetNoCompileUserControlType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNoCompileUserControlType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetNoCompileUserControlType();" />
      <MemberSignature Language="F#" Value="abstract member GetNoCompileUserControlType : unit -&gt; Type&#xA;override this.GetNoCompileUserControlType : unit -&gt; Type" Usage="pageParserFilter.GetNoCompileUserControlType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0f89-151">動的にコンパイルされないページまたはコントロールに対して使用する必要がある <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-151">Returns a <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span></summary>
        <returns><span data-ttu-id="e0f89-152">動的にコンパイルされないページまたはコントロールに対して使用する必要がある戻り値の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-152">The return <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span> <span data-ttu-id="e0f89-153">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-153">The default is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-154">オーバーライドすることができます、<xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A>ページまたはコントロールに動的にコンパイルされないかのように扱われるは、戻り値の型を指定します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-154">You can override the <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> method to specify the return type of pages or controls that are treated as if they are not dynamically compiled.</span></span> <span data-ttu-id="e0f89-155">既定値は、`null` です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-155">The default is `null`.</span></span>  
  
 <span data-ttu-id="e0f89-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-157">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-157">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="pageParserFilter.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0f89-158">ページに使用されているフィルターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-158">Initializes a filter used for a page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-159"><xref:System.Web.UI.PageParserFilter>クラスが適切に定義されたパブリック コンス トラクターを公開しません、ページ パーサーを使用して初期化される、<xref:System.Web.UI.PageParserFilter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e0f89-159">Because the <xref:System.Web.UI.PageParserFilter> class does not expose well-defined public constructors, it is initialized by the page parsers that use the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method.</span></span> <span data-ttu-id="e0f89-160">上書き、<xref:System.Web.UI.PageParserFilter.Initialize%2A>独自のカスタムの初期化を追加する方法の手順のインスタンス<xref:System.Web.UI.PageParserFilter>が作成され、ASP.NET によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e0f89-160">Override the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method to add your own custom initialization steps when an instance of <xref:System.Web.UI.PageParserFilter> is created and used by ASP.NET.</span></span> <span data-ttu-id="e0f89-161">`virtualPath`に渡されるパラメーター、<xref:System.Web.UI.PageParserFilter.Initialize%2A>メソッドのセット、<xref:System.Web.UI.PageParserFilter.VirtualPath%2A>プロパティ、することはできませんと`null`します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-161">The `virtualPath` parameter passed to the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method sets the <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property, and cannot be `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="protected int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.Line" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Line { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Line : int" Usage="System.Web.UI.PageParserFilter.Line" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-162">ファイル内で現在解析中の行の番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-162">Gets the line number that is currently being parsed in the file.</span></span></summary>
        <value><span data-ttu-id="e0f89-163">パーサー フィルターが現在処理しているファイル内の行を表す整数値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-163">The integer value representing the line in the file that the parser filter is currently processing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-164">カスタム<xref:System.Web.UI.PageParserFilter>実装を使用して、<xref:System.Web.UI.PageParserFilter.Line%2A>プロパティにレポートを解析中にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-164">In a custom <xref:System.Web.UI.PageParserFilter> implementation, use the <xref:System.Web.UI.PageParserFilter.Line%2A> property to report where errors occur during parsing.</span></span>  
  
 <span data-ttu-id="e0f89-165"><xref:System.Web.UI.PageParserFilter.Line%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-165"><xref:System.Web.UI.PageParserFilter.Line%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-166">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-166">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfControlsAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfControlsAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfControlsAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfControlsAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfControlsAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfControlsAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-167">パーサー フィルターが 1 ページで解析できるコントロールの最大数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-167">Gets the maximum number of controls that a parser filter can parse for a single page.</span></span></summary>
        <value><span data-ttu-id="e0f89-168">パーサー フィルターが 1 ページで解析できるコントロールの最大数。</span><span class="sxs-lookup"><span data-stu-id="e0f89-168">The maximum number of controls a parser filter can parse for a page.</span></span> <span data-ttu-id="e0f89-169">既定値は 0 です。コントロールの解析が行われないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-169">The default value is 0, which indicates that no controls are parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-170">ASP.NET ページ パーサーの追跡によって設定された制限を超えた場合、数値を解析するには、コントロール、<xref:System.Web.UI.PageParserFilter>インスタンスがスローされます、<xref:System.Web.HttpException>例外。</span><span class="sxs-lookup"><span data-stu-id="e0f89-170">The ASP.NET page parser keeps track of the controls it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an <xref:System.Web.HttpException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfDirectDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfDirectDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfDirectDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfDirectDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfDirectDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-171">ページ パーサーが 1 ページで許可する直接的なファイル依存関係の最大数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-171">Gets the maximum number of direct file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="e0f89-172">ページ パーサーが 1 ページで解析できる直接的なファイル依存関係の最大数。</span><span class="sxs-lookup"><span data-stu-id="e0f89-172">The maximum number of direct file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="e0f89-173">既定値は 0 です。依存関係が許可されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-173">The default is 0, which that indicates no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-174"><xref:System.Web.UI.TemplateParser>クラスには直接の数の追跡し、間接的なファイルの依存関係を解析するには、番号が、制限を超えています。 の設定、<xref:System.Web.UI.PageParserFilter>インスタンス、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e0f89-174">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="ParseComplete">
      <MemberSignature Language="C#" Value="public virtual void ParseComplete (System.Web.UI.ControlBuilder rootBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseComplete(class System.Web.UI.ControlBuilder rootBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ParseComplete(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ParseComplete (rootBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ParseComplete(System::Web::UI::ControlBuilder ^ rootBuilder);" />
      <MemberSignature Language="F#" Value="abstract member ParseComplete : System.Web.UI.ControlBuilder -&gt; unit&#xA;override this.ParseComplete : System.Web.UI.ControlBuilder -&gt; unit" Usage="pageParserFilter.ParseComplete rootBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="rootBuilder"><span data-ttu-id="e0f89-175">ページの解析に関連付けられている <see cref="T:System.Web.UI.ControlBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-175">The <see cref="T:System.Web.UI.ControlBuilder" /> associated with the page parsing.</span></span></param>
        <summary><span data-ttu-id="e0f89-176">ASP.NET ページ パーサーによって呼び出され、ページの解析が完了したときにフィルターに通知します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-176">Called by an ASP.NET page parser to notify a filter when the parsing of a page is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessDirective">
      <MemberSignature Language="C#" Value="public virtual void PreprocessDirective (string directiveName, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreprocessDirective(string directiveName, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PreprocessDirective (directiveName As String, attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PreprocessDirective(System::String ^ directiveName, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessDirective : string * System.Collections.IDictionary -&gt; unit&#xA;override this.PreprocessDirective : string * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.PreprocessDirective (directiveName, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directiveName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="directiveName"><span data-ttu-id="e0f89-177">ページ ディレクティブ。</span><span class="sxs-lookup"><span data-stu-id="e0f89-177">The page directive.</span></span></param>
        <param name="attributes"><span data-ttu-id="e0f89-178">ページから解析された属性と値のコレクション。</span><span class="sxs-lookup"><span data-stu-id="e0f89-178">A collection of attributes and values parsed from the page.</span></span></param>
        <summary><span data-ttu-id="e0f89-179">ページ パーサーのフィルターがページ ディレクティブを前処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="e0f89-179">Allows the page parser filter to preprocess page directives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-180">ページ パーサーの呼び出し、<xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A>解析中に発生した各ディレクティブのメソッド。</span><span class="sxs-lookup"><span data-stu-id="e0f89-180">The page parser calls the <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> method for each directive encountered during parsing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCodeConstruct">
      <MemberSignature Language="C#" Value="public virtual bool ProcessCodeConstruct (System.Web.UI.CodeConstructType codeType, string code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessCodeConstruct(valuetype System.Web.UI.CodeConstructType codeType, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessCodeConstruct (codeType As CodeConstructType, code As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessCodeConstruct(System::Web::UI::CodeConstructType codeType, System::String ^ code);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool&#xA;override this.ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool" Usage="pageParserFilter.ProcessCodeConstruct (codeType, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.Web.UI.CodeConstructType" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeType"><span data-ttu-id="e0f89-181">コード コンストラクターの型を識別する <see cref="T:System.Web.UI.CodeConstructType" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e0f89-181">One of the <see cref="T:System.Web.UI.CodeConstructType" /> enumeration values that identifies the type of the code construct.</span></span></param>
        <param name="code"><span data-ttu-id="e0f89-182">コード コンストラクター内部のコードを格納する文字列リテラル。</span><span class="sxs-lookup"><span data-stu-id="e0f89-182">The string literal that contains the code inside the code construct.</span></span></param>
        <summary><span data-ttu-id="e0f89-183">コード ブロックを、後続のパーサー フィルターによって処理する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-183">Returns a value that indicates whether a code block should be processed by subsequent parser filters.</span></span></summary>
        <returns><span data-ttu-id="e0f89-184">さらに、パーサーがコード コンストラクターを処理する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-184"><see langword="true" /> if the parser should process a code construct further; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-185">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-185">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-186">オーバーライドすることができます、<xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A>コード コンス トラクターに含まれるカスタムを実装するときにコードを解析するメソッド<xref:System.Web.UI.PageParserFilter>します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-186">You can override the <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> method to parse code contained in code constructs when implementing a custom <xref:System.Web.UI.PageParserFilter>.</span></span> <span data-ttu-id="e0f89-187">コードを処理した後、このメソッドに返します`true`場合は、パーサーがコードを処理する必要があります。 そうしないと、さらに、を返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-187">After processing the code, this method returns `true` if the parser should process the code further; otherwise, it returns `false`.</span></span>  
  
 <span data-ttu-id="e0f89-188">許可されているコード コンス トラクターの型は、<xref:System.Web.UI.CodeConstructType>列挙値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-188">The type of allowed code constructs are the <xref:System.Web.UI.CodeConstructType> enumeration values.</span></span>  
  
 <span data-ttu-id="e0f89-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-190">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-190">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CodeConstructType" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDataBindingAttribute">
      <MemberSignature Language="C#" Value="public virtual bool ProcessDataBindingAttribute (string controlId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessDataBindingAttribute(string controlId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessDataBindingAttribute (controlId As String, name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessDataBindingAttribute(System::String ^ controlId, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataBindingAttribute : string * string * string -&gt; bool&#xA;override this.ProcessDataBindingAttribute : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessDataBindingAttribute (controlId, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e0f89-191">データ バインディング属性が格納されたコントロールの ID。</span><span class="sxs-lookup"><span data-stu-id="e0f89-191">The ID of the control that contains the data binding attribute.</span></span></param>
        <param name="name"><span data-ttu-id="e0f89-192">データ バインディング式を持つ属性の名前。</span><span class="sxs-lookup"><span data-stu-id="e0f89-192">The name of the attribute with the data binding expression.</span></span></param>
        <param name="value"><span data-ttu-id="e0f89-193">データ バインディング式。</span><span class="sxs-lookup"><span data-stu-id="e0f89-193">The data binding expression.</span></span></param>
        <summary><span data-ttu-id="e0f89-194">パーサー フィルターが属性内のデータ バインディング式を処理するかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-194">Returns a value that indicates whether the parser filter processes a data binding expression in an attribute.</span></span></summary>
        <returns><span data-ttu-id="e0f89-195">パーサー フィルターがデータ バインディング属性を処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-195"><see langword="true" /> if the parser filter processes data binding attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-196">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-196">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-197">オーバーライドすることができます、<xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A>カスタムを実装する場合は、データ バインディング式を処理するパーサーのフィルターを許可するメソッド<xref:System.Web.UI.PageParserFilter>クラス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-197">You can override the <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> method to allow the parser filter to process data binding expressions when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="e0f89-198">属性で使用されるデータ バインディング式の例は`<%# expression %>`します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-198">An example of a data binding expression used with an attribute is `<%# expression %>`.</span></span>  
  
 <span data-ttu-id="e0f89-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-200">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-200">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventHookup">
      <MemberSignature Language="C#" Value="public virtual bool ProcessEventHookup (string controlId, string eventName, string handlerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessEventHookup(string controlId, string eventName, string handlerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessEventHookup(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessEventHookup (controlId As String, eventName As String, handlerName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessEventHookup(System::String ^ controlId, System::String ^ eventName, System::String ^ handlerName);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEventHookup : string * string * string -&gt; bool&#xA;override this.ProcessEventHookup : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessEventHookup (controlId, eventName, handlerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handlerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="e0f89-201">イベント ハンドラーが処理するイベントを持つコントロールの ID。</span><span class="sxs-lookup"><span data-stu-id="e0f89-201">The ID of the control whose event has the event handler to process.</span></span></param>
        <param name="eventName"><span data-ttu-id="e0f89-202">フィルター処理する <paramref name="controlId" /> のイベント名。</span><span class="sxs-lookup"><span data-stu-id="e0f89-202">The event name of the <paramref name="controlId" /> to filter on.</span></span></param>
        <param name="handlerName"><span data-ttu-id="e0f89-203">フィルター処理する <paramref name="eventName" /> 名のハンドラー。</span><span class="sxs-lookup"><span data-stu-id="e0f89-203">The handler of the <paramref name="eventName" /> name to filter on.</span></span></param>
        <summary><span data-ttu-id="e0f89-204">イベント ハンドラーをパーサー フィルターによってさらに処理する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-204">Returns a value that indicates whether event handlers should be processed further by the parser filter.</span></span></summary>
        <returns><span data-ttu-id="e0f89-205">パーサーがイベント ハンドラーを処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0f89-205"><see langword="true" /> if the parser processes event handlers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0f89-206">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e0f89-206">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-207">オーバーライドすることができます、<xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A>メソッドをカスタムを実装する場合は、イベント フックアップを処理するためにパーサー<xref:System.Web.UI.PageParserFilter>クラス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-207">You can override the <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> method to allow the parser to process event hookups when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="e0f89-208">イベント ハンドラーの例でのハンドラーを提供すること、<xref:System.Web.UI.WebControls.Button.Click>のイベント、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e0f89-208">An example of an event handler is providing a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e0f89-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-210">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-210">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperty">
      <MemberSignature Language="C#" Value="protected void SetPageProperty (string filter, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPageProperty(string filter, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.SetPageProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPageProperty (filter As String, name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPageProperty(System::String ^ filter, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetPageProperty : string * string * string -&gt; unit" Usage="pageParserFilter.SetPageProperty (filter, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="e0f89-211">式のフィルターの値を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="e0f89-211">A string containing the value of the filter on an expression.</span></span> <span data-ttu-id="e0f89-212">例については、「<see cref="T:System.Web.UI.PropertyEntry" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-212">For an example, see <see cref="T:System.Web.UI.PropertyEntry" />.</span></span></param>
        <param name="name"><span data-ttu-id="e0f89-213">値を設定するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="e0f89-213">The name of the property to set a value for.</span></span></param>
        <param name="value"><span data-ttu-id="e0f89-214">設定するプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="e0f89-214">The value of the property to set.</span></span></param>
        <summary><span data-ttu-id="e0f89-215"><see cref="T:System.Web.UI.TemplateControl" /> クラスから派生したコントロールでプロパティを設定します。<see cref="T:System.Web.UI.Page" /> コントロール、<see cref="T:System.Web.UI.UserControl" />, コントロール、および <see cref="T:System.Web.UI.MasterPage" /> コントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="e0f89-215">Sets a property on a control derived from the <see cref="T:System.Web.UI.TemplateControl" /> class, which includes the <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" />, and <see cref="T:System.Web.UI.MasterPage" /> controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="e0f89-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0f89-217">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e0f89-217">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PropertyEntry" />
      </Docs>
    </Member>
    <Member MemberName="TotalNumberOfDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int TotalNumberOfDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalNumberOfDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalNumberOfDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalNumberOfDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-218">ページ パーサーが 1 ページで許可する直接的および間接的なファイル依存関係の最大数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-218">Gets the maximum number of direct and indirect file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="e0f89-219">ページ パーサーが 1 ページで解析できる直接的および間接的なファイル依存関係の最大数。</span><span class="sxs-lookup"><span data-stu-id="e0f89-219">The maximum number of direct and indirect file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="e0f89-220">既定値は 0 です。依存関係が許可されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-220">The default is 0, which indicates that no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-221"><xref:System.Web.UI.TemplateParser>クラスには直接の数の追跡し、間接的なファイルの依存関係を解析するには、番号が、制限を超えています。 の設定、<xref:System.Web.UI.PageParserFilter>インスタンス、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e0f89-221">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0f89-222">現在解析されているページへの仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-222">Gets the virtual path to the page currently being parsed.</span></span></summary>
        <value><span data-ttu-id="e0f89-223">ASP.NET ページへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="e0f89-223">A virtual path to an ASP.NET page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0f89-224"><xref:System.Web.UI.PageParserFilter.VirtualPath%2A>プロパティは、決して`null`します。</span><span class="sxs-lookup"><span data-stu-id="e0f89-224">The <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property is never `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>