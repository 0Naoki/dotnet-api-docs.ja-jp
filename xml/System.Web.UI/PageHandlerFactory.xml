<Type Name="PageHandlerFactory" FullName="System.Web.UI.PageHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a93d795f2bcd484d91904e570bec22fd2613921" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530569" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageHandlerFactory extends System.Object implements class System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class PageHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageHandlerFactory" />
  <TypeSignature Language="F#" Value="type PageHandlerFactory = class&#xA;    interface IHttpHandlerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a0c1b-101">
        <see cref="T:System.Web.UI.Page" /> クラスから継承し、<see cref="T:System.Web.IHttpHandler" /> インターフェイスを実装するクラスのインスタンスを生成します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0c1b-101">Creates instances of classes that inherit from the <see cref="T:System.Web.UI.Page" /> class and implement the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
      </span>
      <span data-ttu-id="a0c1b-102">インスタンスは、ASP.NET ファイルの要求を処理するために動的に生成されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0c1b-102">Instances are created dynamically to handle requests for ASP.NET files.</span>
      </span>
      <span data-ttu-id="a0c1b-103">
        <see cref="T:System.Web.UI.PageHandlerFactory" /> クラスは、ASP.NET ページの既定のハンドラー ファクトリの実装です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0c1b-103">The <see cref="T:System.Web.UI.PageHandlerFactory" /> class is the default handler factory implementation for ASP.NET pages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c1b-104"><xref:System.Web.UI.PageHandlerFactory>クラスが実装する、 <xref:System.Web.IHttpHandlerFactory> ASP.NET files の既定の HTTP ハンドラーを提供するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-104">The <xref:System.Web.UI.PageHandlerFactory> class implements the <xref:System.Web.IHttpHandlerFactory> interface to provide the default HTTP handler for ASP.NET files.</span></span> <span data-ttu-id="a0c1b-105"><xref:System.Web.UI.PageHandlerFactory>をコンパイルすると、必要に応じて、し、URL に対応する正確な型を返す ASP.NET コンパイル システムを呼び出すし、その型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-105">The <xref:System.Web.UI.PageHandlerFactory> calls the ASP.NET compilation system to compile, if necessary, and return the exact type corresponding to the URL, and then creates an instance of that type.</span></span> <span data-ttu-id="a0c1b-106">ページ型が継承、<xref:System.Web.UI.Page>クラスを実装、<xref:System.Web.IHttpHandler>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-106">The page type inherits from the <xref:System.Web.UI.Page> class and implements the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 <span data-ttu-id="a0c1b-107">カスタム ページ ハンドラー ファクトリを構築するには、実装、 <xref:System.Web.IHttpHandlerFactory> 、カスタムの登録と<xref:System.Web.UI.PageHandlerFactory>内のアプリケーションの Web.config ファイル内のクラス、 [httpHandlers 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/24ca01f3-7141-4fdc-acac-71c0733cf6c2)構成セクション。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-107">To build a custom page handler factory, implement the <xref:System.Web.IHttpHandlerFactory> and register the custom <xref:System.Web.UI.PageHandlerFactory> class in the Web.config file for the application in the [httpHandlers Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/24ca01f3-7141-4fdc-acac-71c0733cf6c2) configuration section.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PageHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; PageHandlerFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0c1b-108">
            <see cref="T:System.Web.UI.PageHandlerFactory" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-108">Initializes a new instance of the <see cref="T:System.Web.UI.PageHandlerFactory" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c1b-109"><xref:System.Web.UI.PageHandlerFactory.%23ctor%2A>コンス トラクターは、既定のコンス トラクターし、任意のフィールドを既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-109">The <xref:System.Web.UI.PageHandlerFactory.%23ctor%2A> constructor is the default constructor and initializes any fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string virtualPath, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandler (context As HttpContext, requestType As String, virtualPath As String, path As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ virtualPath, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler&#xA;override this.GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="pageHandlerFactory.GetHandler (context, requestType, virtualPath, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a0c1b-110">HTTP 要求を処理するために使用する、組み込みのサーバー オブジェクト (たとえば、Request、Response、Session、および Server) への参照を提供する <see cref="T:System.Web.HttpContext" /> クラスのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-110">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</span>
          </span>
        </param>
        <param name="requestType">
          <span data-ttu-id="a0c1b-111">クライアントが使用する HTTP データ転送メソッド (GET または POST)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-111">The HTTP data transfer method (GET or POST) that the client uses.</span>
          </span>
        </param>
        <param name="virtualPath">
          <span data-ttu-id="a0c1b-112">要求されたリソースへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-112">The virtual path to the requested resource.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="a0c1b-113">要求されたリソースへの <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-113">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> property to the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0c1b-114">要求されたリソースを処理するために <see cref="T:System.Web.IHttpHandler" /> インターフェイスのインスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-114">Returns an instance of the <see cref="T:System.Web.IHttpHandler" /> interface to process the requested resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0c1b-115">要求を処理する新しい <see cref="T:System.Web.IHttpHandler" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-115">A new <see cref="T:System.Web.IHttpHandler" /> that processes the request; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c1b-116"><xref:System.Web.UI.PageHandlerFactory.GetHandler%2A>メソッドは、ASP.NET ランタイムによって呼び出されの有効なインスタンスを返します、<xref:System.Web.IHttpHandler>インターフェイスまたは`null`します。</span><span class="sxs-lookup"><span data-stu-id="a0c1b-116">The <xref:System.Web.UI.PageHandlerFactory.GetHandler%2A> method is called by the ASP.NET run time and returns either a valid instance of the <xref:System.Web.IHttpHandler> interface or `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="pageHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="a0c1b-117">再利用する <see cref="T:System.Web.IHttpHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-117">The <see cref="T:System.Web.IHttpHandler" /> to reuse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0c1b-118">ハンドラーの既存のインスタンスをファクトリで再利用できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0c1b-118">Enables a factory to reuse an existing instance of a handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      </Docs>
    </Member>
  </Members>
</Type>