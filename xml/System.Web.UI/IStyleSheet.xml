<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af087a69dc98f500183b7b045c37dab45be584c7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397856" /></Metadata><TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b6590-101">スタイル ルールの作成をサポートするためにクラスで実装する必要があるメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="b6590-101">Defines the methods that a class must implement in order to support the creation of style rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6590-102">このインターフェイスを実装するクラスは、スタイルルールの作成をサポートするために使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6590-102">Classes that implement this interface can use it to support the creation of style rules.</span></span>  
  
 <span data-ttu-id="b6590-103">カスケードスタイルシートを作成および登録する方法をカスタマイズするには、このインターフェイスを実装するクラスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b6590-103">To customize the way cascading style sheets are created and registered, you must create a class that implements this interface.</span></span>  
  
 <span data-ttu-id="b6590-104">クラス<xref:System.Web.UI.HtmlControls.HtmlHead>は、 <xref:System.Web.UI.Page.Header%2A>プロパティを介して ASP.NET で使用するために、このインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="b6590-104">The <xref:System.Web.UI.HtmlControls.HtmlHead> class implements this interface for use by ASP.NET through the <xref:System.Web.UI.Page.Header%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6590-105">非同期ポストバック中にプログラムによってスタイルやスタイルルールを追加または変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b6590-105">Adding or modifying styles or style rules programmatically during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="b6590-106">AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b6590-106">When you add AJAX capabilities to an ASP.NET Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="b6590-107">詳細については、「 [Microsoft Ajax の概要](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6590-107">For more information, see [Microsoft Ajax Overview](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6590-108">次のコード例では<xref:System.Web.UI.Page.Header%2A> 、の<xref:System.Web.UI.IStyleSheet>実装を使用して、プログラムによって新しいスタイル<xref:System.Web.UI.WebControls.Style>ルールを作成し、カスタムオブジェクトを登録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b6590-108">The following code example uses the <xref:System.Web.UI.Page.Header%2A> implementation of <xref:System.Web.UI.IStyleSheet> to demonstrate programmatically creating a new style rule and registering the custom <xref:System.Web.UI.WebControls.Style> object.</span></span>  
  
 <span data-ttu-id="b6590-109">この例の最初の部分では、カスタム<xref:System.Web.UI.WebControls.Style> `labelStyle`オブジェクトを作成し、現在の場所 (URL) に登録します。</span><span class="sxs-lookup"><span data-stu-id="b6590-109">In the first part of the example, a custom <xref:System.Web.UI.WebControls.Style> object, `labelStyle`, is created and then registered for the current location (URL).</span></span> <span data-ttu-id="b6590-110">ラベルは`labelStyle` 、ラベル`label1`に<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>スタイルが適用されるようにメソッドを呼び出します。 `label1`</span><span class="sxs-lookup"><span data-stu-id="b6590-110">Then the `label1` label calls the <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> method so that the `labelStyle` style is applied to the `label1` label.</span></span>  
  
 <span data-ttu-id="b6590-111">この例の2番目の部分で<xref:System.Web.UI.WebControls.Style>は、 `bodyStyle`別のカスタムオブジェクトを定義し、そのプロパティを設定して新しいスタイルルールを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6590-111">The second part of the example defines another custom <xref:System.Web.UI.WebControls.Style> object, `bodyStyle`,and sets its properties to create a new style rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6590-112">このクラスは、主にカスタム実装を作成する開発者を対象としています。</span><span class="sxs-lookup"><span data-stu-id="b6590-112">This class is intended primarily for developers that want to create a custom implementation.</span></span> <span data-ttu-id="b6590-113">この例は、.NET Framework によって提供される実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="b6590-113">This example demonstrates the implementation provided by the .NET Framework.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 <span data-ttu-id="b6590-114">前の例の Web ページの分離コードファイルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="b6590-114">The following is the code-behind file for the Web page in the preceding example.</span></span>  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
    <related type="Article" href="https://msdn.microsoft.com/library/14adecd2-b688-45ec-b942-4a89183b3f91"><span data-ttu-id="b6590-115">チュートリアル: 新しいスタイルの実装</span><span class="sxs-lookup"><span data-stu-id="b6590-115">Walkthrough: Implementing a New Style</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="b6590-116">埋め込みスタイル シートに追加されるスタイル ルール。</span><span class="sxs-lookup"><span data-stu-id="b6590-116">The style rule to be added to the embedded style sheet.</span></span></param>
        <param name="urlResolver"><span data-ttu-id="b6590-117">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b6590-117">An <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL).</span></span></param>
        <param name="selector"><span data-ttu-id="b6590-118">スタイルの影響を受ける HTML ページの部分。</span><span class="sxs-lookup"><span data-stu-id="b6590-118">The part of the HTML page affected by the style.</span></span></param>
        <summary><span data-ttu-id="b6590-119">クラスによって実装された場合は、指定されたドキュメント言語要素型つまりセレクターに対してスタイル ルールを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6590-119">When implemented by a class, creates a style rule for the specified document language element type, or selector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6590-120">メソッド<xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>は、指定されたセレクターのスタイルルールを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6590-120">The <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> method creates a style rule for the specified selector.</span></span> <span data-ttu-id="b6590-121">同じセレクターに対して複数のスタイルルールを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b6590-121">Multiple style rules can be created for the same selector.</span></span>  
  
 <span data-ttu-id="b6590-122">が`urlResolver`に`null`設定されている場合は、 <xref:System.Web.UI.Page>現在のインスタンスの URL が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b6590-122">If `urlResolver` is set to `null`, the URL of the current <xref:System.Web.UI.Page> instance is used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6590-123">非同期ポストバック中にプログラムによってスタイルやスタイルルールを追加または変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b6590-123">Adding or modifying styles or style rules programmatically during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="b6590-124">AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b6590-124">When you add AJAX capabilities to an ASP.NET Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="b6590-125">詳細については、「 [Microsoft Ajax の概要](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6590-125">For more information, see [Microsoft Ajax Overview](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6590-126">次のコード例では<xref:System.Web.UI.Page.Header%2A> 、の<xref:System.Web.UI.IStyleSheet>実装を使用して<xref:System.Web.UI.WebControls.Style> 、新しい`bodyStyle`オブジェクトを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b6590-126">The following code example uses the <xref:System.Web.UI.Page.Header%2A> implementation of <xref:System.Web.UI.IStyleSheet> to demonstrate defining a new <xref:System.Web.UI.WebControls.Style> object, `bodyStyle`.</span></span> <span data-ttu-id="b6590-127">次`bodyStyle`に、を呼び出し<xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>て、現在の URL にを追加します。</span><span class="sxs-lookup"><span data-stu-id="b6590-127">Then `bodyStyle` is added to the current URL by calling <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="b6590-128">埋め込みスタイル シートに追加されるスタイル ルール。</span><span class="sxs-lookup"><span data-stu-id="b6590-128">The style rule to be added to the embedded style sheet.</span></span></param>
        <param name="urlResolver"><span data-ttu-id="b6590-129">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b6590-129">An <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL).</span></span></param>
        <summary><span data-ttu-id="b6590-130">クラスによって実装された場合、Web ページの <see langword="&lt;head&gt;" /> セクション内の埋め込みスタイル シートに新しいスタイル ルールを追加します。</span><span class="sxs-lookup"><span data-stu-id="b6590-130">When implemented by a class, adds a new style rule to the embedded style sheet in the <see langword="&lt;head&gt;" /> section of a Web page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6590-131">このメソッドは、 <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> <xref:System.Web.UI.Page>オブジェクトの`<head>`セクション内の埋め込みスタイルシートに新しいスタイルルールとプロパティ名を追加し、ルールを自動生成されたスタイル名に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b6590-131">This method adds a new style rule and <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> property name to the embedded style sheet within the `<head>` section of a <xref:System.Web.UI.Page> object, and associates the rule with an auto-generated style name.</span></span> <span data-ttu-id="b6590-132">オブジェクトは、指定された`urlResolver`パラメーターを使用して表示されます。 <xref:System.Web.UI.WebControls.Style></span><span class="sxs-lookup"><span data-stu-id="b6590-132">The <xref:System.Web.UI.WebControls.Style> object is rendered using the specified `urlResolver` parameter.</span></span>  
  
 <span data-ttu-id="b6590-133">が`urlResolver`に`null`設定されている場合、現在<xref:System.Web.UI.Page>のの URL が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b6590-133">If `urlResolver` is set to `null`, the URL of the current <xref:System.Web.UI.Page> is used.</span></span>  
  
 <span data-ttu-id="b6590-134"><xref:System.Web.UI.WebControls.Style>オブジェクトが既に登録されている場合は、複数回追加されません。</span><span class="sxs-lookup"><span data-stu-id="b6590-134">If a <xref:System.Web.UI.WebControls.Style> object is already registered, it is not added multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6590-135">非同期ポストバック中にプログラムによってスタイルを追加または変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b6590-135">Adding or modifying styles programmatically during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="b6590-136">AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b6590-136">When you add AJAX capabilities to an ASP.NET Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="b6590-137">詳細については、「 [Microsoft Ajax の概要](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6590-137">For more information, see [Microsoft Ajax Overview](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6590-138">次のコード例では<xref:System.Web.UI.Page.Header%2A> 、の<xref:System.Web.UI.IStyleSheet>実装を使用して<xref:System.Web.UI.WebControls.Style> 、カスタム`labelStyle`オブジェクトを作成し、現在の場所 (URL) に登録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b6590-138">The following code example uses the <xref:System.Web.UI.Page.Header%2A> implementation of <xref:System.Web.UI.IStyleSheet> to demonstrate creating a custom <xref:System.Web.UI.WebControls.Style> object, `labelStyle`, and then registering it for the current location (URL).</span></span> <span data-ttu-id="b6590-139">ラベルは`labelStyle` 、ラベル`label1`に<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>スタイルが適用されるようにメソッドを呼び出します。 `label1`</span><span class="sxs-lookup"><span data-stu-id="b6590-139">Then the `label1` label calls the <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> method so that the `labelStyle` style is applied to the `label1` label.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
