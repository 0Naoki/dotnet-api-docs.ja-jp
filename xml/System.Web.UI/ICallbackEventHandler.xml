<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7b1b41a1d7ac8730ff15ee9421d471cd5ace43" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70447098" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="27a8c-101">コントロールをサーバー上のコールバック イベントの対象にできることを示すために使用します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a8c-102">コールバック<xref:System.Web.UI.ICallbackEventHandler>イベントを受け取る必要があるカスタムコントロールに対して、インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="27a8c-103">詳細については、「[ポストバックを使用しないクライアントコールバックの実装](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27a8c-103">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="27a8c-104"><xref:System.Web.UI.ICallbackEventHandler>インターフェイスを実装するコントロールの例と<xref:System.Web.UI.WebControls.TreeView>し<xref:System.Web.UI.WebControls.GridView>て<xref:System.Web.UI.WebControls.DetailsView>、、、の各コントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="27a8c-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="27a8c-105">コールバックイベントが<xref:System.Web.UI.ICallbackEventHandler>インターフェイスを実装するコントロールを対象としている場合<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 、イベントを処理するためにメソッドが呼び出され、パラメーターと<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>してイベント引数が渡され、メソッドはコールバックの結果を返します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="27a8c-106">コールバック中にデータソースコントロールからデータを取得するコントロールは、同期的または非同期的に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="27a8c-107">、、および<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView>などの <xref:System.Web.UI.WebControls.TreeView>  ASP.NET コントロールは、同期的に実装されます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="27a8c-108">同期コールバックでは、ユーザーがブラウザーで動作するのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="27a8c-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="27a8c-109">同期モードでは、最後のコールバックが優先されるので、一度に1つのコールバックだけを実行できます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="27a8c-110">非同期動作をサポートするために Web コントロールが実装されている場合、複数のコールバックを同時に発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="27a8c-111">非同期プログラミングの詳細については、「[イベントベースの非同期パターン (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27a8c-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="27a8c-112"><xref:System.Web.UI.ICallbackEventHandler>インターフェイスを実装するコントロールによって表示されるユーザーインターフェイスから送信されるコールバックイベントを検証するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="27a8c-113">イベントの検証は、適切なセキュリティプラクティスです。</span><span class="sxs-lookup"><span data-stu-id="27a8c-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="27a8c-114">ただし、パフォーマンス上の理由から無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="27a8c-115">イベントの検証がコールバックイベントに対して実行される`enableEventValidation`かどうかを制御するには`enableEventValidation` 、web.config ファイルの[@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブの属性、または pages 要素の属性[(ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)を設定します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="27a8c-116">コードで<xref:System.Web.UI.Page.EnableEventValidation%2A>プロパティを設定する場合は、ページ処理の`Page_Init`フェーズでプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="27a8c-117">イベント検証のセキュリティ上の利点とパフォーマンスコストのバランスを調整する方法の詳細については、「 [ASP.NET performance の概要](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27a8c-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27a8c-118">コントロールを対象とするコールバック イベントの結果を返します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="27a8c-119">コールバックの結果。</span><span class="sxs-lookup"><span data-stu-id="27a8c-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a8c-120">で<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>スローされた例外<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>は、が呼び出され、結果が返されるのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="27a8c-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="27a8c-121">が結果<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>を返さないようにするには、で<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>例外がスローされたときにフラグを<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>設定し、から空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="27a8c-122">イベント ハンドラーに渡されるイベント引数を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="27a8c-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="27a8c-123">コントロールを対象とするコールバック イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a8c-124">`null`をイベント引数パラメーターとして使用すると、文字列が "null" にシリアル化され、サーバーに返されます。</span><span class="sxs-lookup"><span data-stu-id="27a8c-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="27a8c-125">`null`と "null" を区別する方法がないため、コールバックで引数パラメーター `null`を使用しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="27a8c-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="27a8c-126">で<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>スローされた例外<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>は、が呼び出され、結果が返されるのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="27a8c-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="27a8c-127">が結果<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>を返さないようにするには、で<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>例外がスローされたときにフラグを<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>設定し、から空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="27a8c-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>
