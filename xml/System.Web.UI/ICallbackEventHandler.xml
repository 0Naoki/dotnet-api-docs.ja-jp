<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c825a3f80dfb1fd33e27c2eb4f80d07877ee835" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f2ff8-101">コントロールをサーバー上のコールバック イベントの対象にできることを示すために使用します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2ff8-101">Used to indicate that a control can be the target of a callback event on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2ff8-102">実装、<xref:System.Web.UI.ICallbackEventHandler>コールバック イベントを受信する必要がある任意のカスタム コントロールのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="f2ff8-103">詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="f2ff8-104">実装するコントロールの例については、<xref:System.Web.UI.ICallbackEventHandler>インターフェイスに含まれて、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.TreeView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="f2ff8-105">コールバック イベントを実装するコントロールを対象とすると、<xref:System.Web.UI.ICallbackEventHandler>インターフェイス、<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>イベント引数をパラメーターとして渡すと共に、イベントを処理するメソッドが呼び出されたと<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>メソッドがコールバックの結果を返します。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="f2ff8-106">同期または非同期では、コールバック中にデータ ソース コントロールからデータを取得するコントロールでこれを実行できます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="f2ff8-107">ASP.NET コントロールと同様に<xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.TreeView>同期的に実装されます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="f2ff8-108">同期コールバックは妨げませんユーザー ブラウザーで作業します。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="f2ff8-109">同期モードで最後のコールバックが優先順位で、一度に 1 つだけのコールバックは実行できます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="f2ff8-110">Web コントロールが非同期動作をサポートするために実装されている場合は、複数のコールバックを同時に発生することができます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="f2ff8-111">非同期プログラミングの詳細については、「[イベント ベースの非同期パターン (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="f2ff8-112">ユーザー インターフェイスから送信されたコールバック イベントが実装するコントロールによって表示されるかどうかを指定することができます、<xref:System.Web.UI.ICallbackEventHandler>インターフェイスが検証されます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="f2ff8-113">イベントの検証は、適切なセキュリティ プラクティスです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="f2ff8-114">ただし、パフォーマンス上の理由は無効にできます。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="f2ff8-115">かどうかを制御するは、イベントの検証はコールバック イベントの実行、設定、`enableEventValidation`の属性、 [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブまたは`enableEventValidation`の属性、[要素 (ASP.NET 設定スキーマ) のページ](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)Web.config ファイルのです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="f2ff8-116">設定した場合、<xref:System.Web.UI.Page.EnableEventValidation%2A>でコードでは、プロパティを設定して、`Page_Init`ページ処理の段階です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="f2ff8-117">分散パフォーマンス コストがそのイベントの検証のセキュリティ上の利点の詳細については、次を参照してください。 [ASP.NET パフォーマンス概要](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2ff8-118">コントロールを対象とするコールバック イベントの結果を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2ff8-118">Returns the results of a callback event that targets a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2ff8-119">コールバックの結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2ff8-119">The result of the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2ff8-120">スローされた例外<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>できなくなる<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>呼び出されると、結果を返すからです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="f2ff8-121">防ぐために<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>結果を返すから例外がスローされたときにフラグを設定<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>から空の文字列を返すと<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="f2ff8-122">イベント ハンドラーに渡されるイベント引数を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2ff8-122">A string that represents an event argument to pass to the event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2ff8-123">コントロールを対象とするコールバック イベントを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2ff8-123">Processes a callback event that targets a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2ff8-124">ときに`null`使用、イベントの引数パラメーターとして文字列がシリアル化される、サーバーに"null"と送信のバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="f2ff8-125">区別する手段がないため`null`"null"、および使用を避ける必要があります`null`コールバックの引数のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="f2ff8-126">スローされた例外<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>できなくなる<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>呼び出されると、結果を返すからです。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="f2ff8-127">防ぐために<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>結果を返すから例外がスローされたときにフラグを設定<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>から空の文字列を返すと<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f2ff8-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>