<Type Name="ControlCollection" FullName="System.Web.UI.ControlCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68ed264c9018c25044af295dc123c8d8fa91eeb1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36377939" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ControlCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b8056-101">ASP.NET サーバー コントロールが子コントロールのリストを維持できるようにする、コレクション コンテナーを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8056-101">Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-102">メソッドとプロパティのいずれかにアクセスできる、<xref:System.Web.UI.ControlCollection>クラスを通じて、<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b8056-102">You can access any of the properties and methods of the <xref:System.Web.UI.ControlCollection> class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b8056-103">以降、<xref:System.Web.UI.Control>クラスは、すべての ASP.NET サーバー コントロールの基底クラス、すべてのサーバー コントロールは、このプロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="b8056-103">Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.</span></span>  
  
 <span data-ttu-id="b8056-104">コレクションの詳細については、次を参照してください。[コレクションとデータ構造体](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872)です。</span><span class="sxs-lookup"><span data-stu-id="b8056-104">For more information about collections, see [Collections and Data Structures](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-105">次のコード例の上書き、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>メソッドを 2 つのコントロール、という名前のカスタム クラスの両方のインスタンスを作成`ChildControl`、という名前の文字列プロパティを持つ`Message`します。</span><span class="sxs-lookup"><span data-stu-id="b8056-105">The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`.</span></span> <span data-ttu-id="b8056-106">2 つのコントロールを追加作成すると、<xref:System.Web.UI.ControlCollection>です。</span><span class="sxs-lookup"><span data-stu-id="b8056-106">When created, the two controls are added to the <xref:System.Web.UI.ControlCollection>.</span></span> <span data-ttu-id="b8056-107"><xref:System.Web.UI.ControlCollection.Add%2A>でこれらの各コントロールをこのバージョンを含むクラスに追加するメソッドが呼び出さ<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="b8056-107">The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b8056-108"><xref:System.Web.UI.Control.ChildControlsCreated%2A>プロパティに設定されている`true`できるように、これらのコントロールが不必要に再作成されません。</span><span class="sxs-lookup"><span data-stu-id="b8056-108">The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.</span></span>  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlCollection : System.Web.UI.Control -&gt; System.Web.UI.ControlCollection" Usage="new System.Web.UI.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="b8056-109">コントロール コレクションが作成される対象となる ASP.NET サーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-109">The ASP.NET server control that the control collection is created for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-110">指定した親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-110">Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the specified parent server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-111">次のコード例は、カスタム<xref:System.Web.UI.ControlCollection>メッセージを書き込むためのコンス トラクターをオーバーライドするクラス (の名前が組み込まれている、<xref:System.Web.UI.ControlCollection.Owner%2A>プロパティ)、コレクションのインスタンスが作成されるときのトレース ログにします。</span><span class="sxs-lookup"><span data-stu-id="b8056-111">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="b8056-112">ページのトレースまたはこの例を実行するアプリケーションを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8056-112">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8056-113">
            <paramref name="owner" /> パラメーターが <see langword="null" /> である場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-113">Occurs if the <paramref name="owner" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Web.UI.Control -&gt; unit&#xA;override this.Add : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b8056-114">コレクションに追加する <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-114">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-115">指定した <see cref="T:System.Web.UI.Control" /> オブジェクトをコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-115">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-116">新しいコントロールは、序数に基づくインデックスの配列の末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b8056-116">The new control is added to the end of an ordinal index array.</span></span> <span data-ttu-id="b8056-117">コントロールは、ASP.NET サーバー コントロールを作成すると、カスタム サーバー コントロールまたはリテラル コントロールのインスタンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b8056-117">The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
 <span data-ttu-id="b8056-118">コレクションの特定のインデックス位置にコントロールを追加するには、使用、<xref:System.Web.UI.ControlCollection.AddAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8056-118">To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-119">次のコード例では、<xref:System.Web.UI.ControlCollection.Add%2A>おり、その多くがから取得され、サーバー コントロールのビュー状態、カスタム テンプレート コントロールのテンプレート項目の系列を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b8056-119">The following code example uses the <xref:System.Web.UI.ControlCollection.Add%2A> method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8056-120">
            <paramref name="child" /> パラメーターがコントロールを指定しない場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-120">Thrown if the <paramref name="child" /> parameter does not specify a control.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b8056-121">
            <see cref="T:System.Web.UI.ControlCollection" /> が読み取り専用の場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-121">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public virtual void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member AddAt : int * System.Web.UI.Control -&gt; unit&#xA;override this.AddAt : int * System.Web.UI.Control -&gt; unit" Usage="controlCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b8056-122">子コントロールを追加する配列内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-122">The location in the array at which to add the child control.</span>
          </span>
        </param>
        <param name="child">
          <span data-ttu-id="b8056-123">コレクションに追加する <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-123">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-124">指定したインデックス位置に、指定した <see cref="T:System.Web.UI.Control" /> オブジェクトを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-124">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-125">追加したコントロールには、ASP.NET サーバー コントロールを作成すると、カスタム サーバー コントロールまたはリテラル コントロールのインスタンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b8056-125">The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-126">次のコード例では、<xref:System.Web.UI.ControlCollection.AddAt%2A>メソッドを作成、新しい<xref:System.Web.UI.LiteralControl>という名前`ChildControl2`に追加し、`myButton`コントロールの<xref:System.Web.UI.ControlCollection>1 のインデックス位置にあるコレクション。</span><span class="sxs-lookup"><span data-stu-id="b8056-126">The following code example uses the <xref:System.Web.UI.ControlCollection.AddAt%2A> method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8056-127">
            <paramref name="child" /> パラメーターがコントロールを指定しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-127">The <paramref name="child" /> parameter does not specify a control.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8056-128">
            <paramref name="index" /> パラメーターが 0 未満か、<see cref="P:System.Web.UI.ControlCollection.Count" /> プロパティより大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-128">The <paramref name="index" /> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b8056-129">
            <see cref="T:System.Web.UI.ControlCollection" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-129">The <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8056-130">現在のサーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトからすべてのコントロールを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-130">Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-131">このメソッドを使用して、空のカスタム コントロールの<xref:System.Web.UI.ControlCollection>オーバーライドする場合、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>と<xref:System.Web.UI.Control.DataBind%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8056-131">Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> and <xref:System.Web.UI.Control.DataBind%2A> methods.</span></span> <span data-ttu-id="b8056-132">複合、テンプレートのコントロールまたはテンプレート宣言されたデータ バインド コントロールを開発する際に、これを行います。</span><span class="sxs-lookup"><span data-stu-id="b8056-132">Do this when you develop composite, templated controls or templated data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-133">次のコード例では、オーバーライドを示しています、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>メソッド、およびを使用して、<xref:System.Web.UI.ControlCollection.Clear%2A>メソッドすべての子コントロール以前に削除する場合、<xref:System.Web.UI.ControlCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8056-133">The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method, and using the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="b8056-134">ここで行う必要があります、コントロールの内のオブジェクトを古いように<xref:System.Web.UI.ControlCollection>不適切は表示されません。</span><span class="sxs-lookup"><span data-stu-id="b8056-134">In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.UI.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.UI.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (c As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::UI::Control ^ c);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Web.UI.Control -&gt; bool&#xA;override this.Contains : System.Web.UI.Control -&gt; bool" Usage="controlCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="b8056-135">コレクション内で検索されるサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-135">The server control to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-136">指定したサーバー コントロールが親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクト内にあるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-136">Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8056-137">指定されたサーバー コントロールがコレクションにある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-137">
              <see langword="true" /> if the specified server control exists in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/CS/ctrlcollection_contains.cs.aspx#1)]
 [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/VB/ctrlcollection_contains.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b8056-138">子コントロールのコピー先の <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-138">The <see cref="T:System.Array" /> to copy the child controls to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b8056-139">コピーの開始位置となる、<c>array</c> の 0 から始まる相対インデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-139">The zero-based relative index in <c>array</c> where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-140">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトに格納されている子コントロールを、<see cref="T:System.Array" /> オブジェクトに、<see cref="T:System.Array" /> 内の指定したインデックス位置からコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-140">Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection" /> object to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b8056-141">
            <paramref name="array" /> が <see langword="null" /> ではなく、1 次元でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-141">
              <paramref name="array" /> is not <see langword="null" /> and not one-dimensional.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8056-142">指定された ASP.NET サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクト内にあるサーバー コントロールの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-142">Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection" /> object for the specified ASP.NET server control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-143">
            <see cref="T:System.Web.UI.ControlCollection" /> 内のサーバー コントロールの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-143">The number of server controls in the <see cref="T:System.Web.UI.ControlCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-144">次のコード例を使用する方法を示しています、<xref:System.Web.UI.ControlCollection.Count%2A>プロパティ、コントロールの反復処理に<xref:System.Web.UI.ControlCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8056-144">The following code example demonstrates how to use the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a control's <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="b8056-145">使用、<xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType>プロパティは、コントロールに子コントロールがあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b8056-145">The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> property verifies that the control has child controls.</span></span> <span data-ttu-id="b8056-146">場合<xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType>返します`false`、残りのコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="b8056-146">If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> returns `false`, the remaining code does not run.</span></span>  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8056-147">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを反復処理できる列挙子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8056-148">コレクションを反復処理する列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-148">The enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-149">次のコード例は、列挙するメソッドを作成、<xref:System.Web.UI.ControlCollection>のコレクション、<xref:System.Web.UI.WebControls.Button>コントロール、`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="b8056-149">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="b8056-150">列挙子の作成時に、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>操作がスレッド セーフである場合とがない場合は、表示するプロパティがオン、<xref:System.Web.UI.ControlCollection.SyncRoot%2A>が操作スレッドを安全にすること、オブジェクトを取得するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b8056-150">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="b8056-151">列挙が完了すると、値の<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>としてプロパティの書き込み、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.Label>を含むページ上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-151">When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Web.UI.Control -&gt; int&#xA;override this.IndexOf : System.Web.UI.Control -&gt; int" Usage="controlCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b8056-152">インデックスを返す対象となる <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-152">The <see cref="T:System.Web.UI.Control" /> for which the index is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-153">コレクション内の指定した <see cref="T:System.Web.UI.Control" /> オブジェクトのインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-153">Retrieves the index of a specified <see cref="T:System.Web.UI.Control" /> object in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8056-154">指定したサーバー コントロールのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-154">The index of the specified server control.</span>
          </span>
          <span data-ttu-id="b8056-155">サーバー コントロールが現在コレクションのメンバーではない場合は -1 が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-155">If the server control is not currently a member of the collection, it returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-156">指定されたサーバー コントロールでのインデックス位置を決定するには、このメソッドを使用して、<xref:System.Web.UI.ControlCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8056-156">Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-157">次のコード例では、 <xref:System.Web.UI.ControlCollection.IndexOf%2A> 、コントロールのインデックス位置に書き込むメソッド`myLiteralControl`で、<xref:System.Web.UI.ControlCollection>のコレクション、<xref:System.Web.UI.WebControls.Button>という名前のコントロール`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="b8056-157">The following code example uses the <xref:System.Web.UI.ControlCollection.IndexOf%2A> method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8056-158">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-158">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-159">コントロールが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-159">
              <see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b8056-160">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-160">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-161">次のコード例は、列挙するメソッドを作成、<xref:System.Web.UI.ControlCollection>のコレクション、<xref:System.Web.UI.WebControls.Button>コントロール、`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="b8056-161">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="b8056-162">列挙子の作成時に、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>操作がスレッド セーフである場合とがない場合は、表示するプロパティがオン、<xref:System.Web.UI.ControlCollection.SyncRoot%2A>が操作スレッドを安全にすること、オブジェクトを取得するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b8056-162">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="b8056-163">列挙が完了すると、値の<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>としてプロパティの書き込み、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.Label>を含むページ上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-163">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8056-164">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトの同期がとられているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-164">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-165">このプロパティは常に <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-165">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-166">次のコード例は、列挙するメソッドを作成、<xref:System.Web.UI.ControlCollection>のコレクション、<xref:System.Web.UI.WebControls.Button>コントロール、`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="b8056-166">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="b8056-167">列挙子の作成時に、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>操作がスレッド セーフである場合とがない場合は、表示するプロパティがオン、<xref:System.Web.UI.ControlCollection.SyncRoot%2A>が操作スレッドを安全にすること、オブジェクトを取得するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b8056-167">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="b8056-168">列挙が完了すると、値の<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>としてプロパティの書き込み、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.Label>を含むページ上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-168">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ default[int] { System::Web::UI::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b8056-169">
            <see cref="T:System.Web.UI.ControlCollection" /> 内のサーバー コントロールの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-169">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-170">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトの指定されたインデックス位置にあるサーバー コントロールへの参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-170">Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-171">コントロールへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-171">The reference to the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-172">次のコード例では、<xref:System.Web.UI.ControlCollection.Item%2A>で子のインデックス位置を制御するを指定するプロパティが削除されて、<xref:System.Web.UI.ControlCollection.Remove%2A>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="b8056-172">The following code example uses the <xref:System.Web.UI.ControlCollection.Item%2A> property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call.</span></span> <span data-ttu-id="b8056-173">これを行う、`myButton.Controls.Remove`構文です。</span><span class="sxs-lookup"><span data-stu-id="b8056-173">This is performed by the `myButton.Controls.Remove` syntax.</span></span>  
  
 [!code-aspx-csharp[ControlCollection_ReSubmit_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/CS/controlcollection_copyto.cs.aspx#1)]
 [!code-aspx-vb[ControlCollection_ReSubmit_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/VB/controlcollection_copyto.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8056-174">
            <paramref name="index" /> パラメーターが 0 未満か、<see cref="P:System.Web.UI.ControlCollection.Count" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-174">The <paramref name="index" /> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Owner { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8056-175">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトが属する ASP.NET サーバー コントロールを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-175">Gets the ASP.NET server control to which the <see cref="T:System.Web.UI.ControlCollection" /> object belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-176">
            <see cref="T:System.Web.UI.Control" /> が属する <see cref="T:System.Web.UI.ControlCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-176">The <see cref="T:System.Web.UI.Control" /> to which the <see cref="T:System.Web.UI.ControlCollection" /> belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-177">次のコード例は、カスタム<xref:System.Web.UI.ControlCollection>をオーバーライドするクラス、<xref:System.Web.UI.ControlCollection.%23ctor%2A>メッセージに書き込むメソッド (の名前が組み込まれている、<xref:System.Web.UI.ControlCollection.Owner%2A>プロパティ)、コレクションのインスタンスが作成されるときのトレース ログにします。</span><span class="sxs-lookup"><span data-stu-id="b8056-177">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="b8056-178">ページのトレースまたはこの例を実行するアプリケーションを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8056-178">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Web.UI.Control -&gt; unit&#xA;override this.Remove : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b8056-179">削除されるサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-179">The server control to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-180">親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトから、指定したサーバー コントロールを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-180">Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-181">インデックス位置からコントロールを削除するには、使用、<xref:System.Web.UI.ControlCollection.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8056-181">To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-182">次のコード例では、<xref:System.Web.UI.ControlCollection.Remove%2A>から子コントロールを削除する方法、`myButton`サーバー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-182">The following code example uses the <xref:System.Web.UI.ControlCollection.Remove%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="b8056-183">最初のコードを使用して、<xref:System.Web.UI.ControlCollection.Contains%2A>メソッドを呼び出せば確認するかどうか、`myChildControl`に含まれる、<xref:System.Web.UI.ControlCollection>オブジェクト、およびである場合は削除されます。</span><span class="sxs-lookup"><span data-stu-id="b8056-183">First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#4)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b8056-184">コレクションから削除されるサーバー コントロールの序数インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-184">The ordinal index of the server control to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8056-185">
            <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトから、指定したインデックス位置にある子コントロールを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-185">Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8056-186">コントロール コレクションから削除する、その値に基づいて、使用、<xref:System.Web.UI.ControlCollection.Remove%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8056-186">To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8056-187">次のコード例では、<xref:System.Web.UI.ControlCollection.RemoveAt%2A>から子コントロールを削除する方法、`myButton`サーバー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-187">The following code example uses the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="b8056-188">メソッドの呼び出しは、まずコントロールの削除元となる 1 のインデックス位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="b8056-188">The method call first specifies an index location of 1 from which the control is deleted.</span></span> <span data-ttu-id="b8056-189">次に、親への書き込み、ページから、その場所でコントロールが削除されたことを示すテキスト メッセージ、<xref:System.Web.UI.ControlCollection>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b8056-189">The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#5)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b8056-190">
            <see cref="T:System.Web.UI.ControlCollection" /> が読み取り専用の場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-190">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.ControlCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8056-191">コントロールのコレクションへのアクセスを同期するために使用するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-191">Gets an object that can be used to synchronize access to the collection of controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8056-192">コレクションを同期するために使用する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8056-192">The <see cref="T:System.Object" /> used to synchronize the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8056-193">次のコード例は、列挙するメソッドを作成、<xref:System.Web.UI.ControlCollection>のコレクション、<xref:System.Web.UI.WebControls.Button>コントロール、`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="b8056-193">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="b8056-194">列挙子の作成時に、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>操作がスレッド セーフである場合とがない場合は、表示するプロパティがオン、<xref:System.Web.UI.ControlCollection.SyncRoot%2A>が操作スレッドを安全にすること、オブジェクトを取得するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b8056-194">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="b8056-195">列挙が完了すると、値の<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>としてプロパティの書き込み、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.Label>を含むページ上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="b8056-195">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
  </Members>
</Type>