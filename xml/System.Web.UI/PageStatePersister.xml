<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0281a61e3dd268dd9a9a917b22d7857cea78924b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36376564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5b81b-101">ASP.NET ビューステート永続化機構の基本機能を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5b81b-101">Provides the base functionality for ASP.NET view state persistence mechanisms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-102">HTTP 要求と応答は、本質的にステートレスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-102">The HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="5b81b-103">HTTP 要求の間で状態情報を維持するために ASP.NET サーバー ページを格納できます<xref:System.Web.UI.Page>状態です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-103">To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="5b81b-104">ビュー状態と呼ばれる、この状態は、ページとコントロールの設定、およびページとコントロールのようにいる場合、ユーザーがサーバーに最後のラウンド トリップで対話し、ものと同じものを表示できるようにするデータで構成されます。</span><span class="sxs-lookup"><span data-stu-id="5b81b-104">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.</span></span> <span data-ttu-id="5b81b-105">同じページに後続の要求間でのビュー ステートを格納するいくつかのメカニズムが存在します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-105">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="5b81b-106">抽象<xref:System.Web.UI.PageStatePersister>クラスは、これらの状態情報の記憶域メカニズムの基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-106">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.</span></span>  
  
 <span data-ttu-id="5b81b-107">非表示の HTML 要素に Base64 でエンコードされた文字列としての状態情報を維持するためには、ASP.NET の既定のビュー状態の永続化メカニズム (を持つ要素、`type`属性に設定`"hidden"`) ページ。</span><span class="sxs-lookup"><span data-stu-id="5b81b-107">The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `"hidden"`) on the page.</span></span> <span data-ttu-id="5b81b-108">ASP.NET ページを使用して、<xref:System.Web.UI.HiddenFieldPageStatePersister>これを実行するオブジェクトを使用して、動作、<xref:System.Web.UI.IStateFormatter>およびオブジェクトの状態情報を逆シリアル化するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="5b81b-108">An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information.</span></span> <span data-ttu-id="5b81b-109">ページのビュー ステートを格納する代わりに、<xref:System.Web.HttpContext.Session%2A>を使用して、サーバー上のオブジェクト、<xref:System.Web.UI.SessionPageStatePersister>限られた帯域幅とリソース使用のモバイル クライアント向けのクラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-109">Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources.</span></span> <span data-ttu-id="5b81b-110">場合によっては、完全ビュー状態の永続性無効に可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5b81b-110">In some cases, you might disable view state persistence altogether.</span></span> <span data-ttu-id="5b81b-111">これを行う場合することもありますページおよびコントロールの状態の永続化に依存する動作しない場合は正しく対象となります。</span><span class="sxs-lookup"><span data-stu-id="5b81b-111">If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.</span></span> <span data-ttu-id="5b81b-112">ページの状態の管理と表示状態の詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-112">For more information about page state management and view state, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 <span data-ttu-id="5b81b-113">コントロールを作成している場合は、内のコントロールの状態情報を保存することができます、<xref:System.Web.UI.Control.ViewState%2A>ディクショナリで、これは、<xref:System.Web.UI.StateBag>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b81b-113">If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object.</span></span> <span data-ttu-id="5b81b-114">開発者はを通じてコントロールの状態を取得、<xref:System.Web.UI.PageStatePersister.ControlState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-114">A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="5b81b-115">キーと値を割り当てる、<xref:System.Web.UI.Control.ViewState%2A>プロパティ、および<xref:System.Web.UI.Page>オブジェクト要求間で状態情報をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-115">You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests.</span></span> <span data-ttu-id="5b81b-116">カスタムの状態が、コントロールでの処理を実行するのには、オーバーライド、<xref:System.Web.UI.Control.LoadViewState%2A>と<xref:System.Web.UI.Control.SaveViewState%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-116">To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods.</span></span> <span data-ttu-id="5b81b-117">ページの開発者がビュー状態が無効にすると、このディクショナリに格納されている状態情報は失われます。</span><span class="sxs-lookup"><span data-stu-id="5b81b-117">Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.</span></span> <span data-ttu-id="5b81b-118">これを軽減する、asp.net 2.0 コントロールの状態と呼ばれる個別のオブジェクトで重大な状態情報を格納することができます。</span><span class="sxs-lookup"><span data-stu-id="5b81b-118">To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.</span></span> <span data-ttu-id="5b81b-119">ページの開発者がビュー状態が無効にすると、コントロールの状態オブジェクトは影響はありません。</span><span class="sxs-lookup"><span data-stu-id="5b81b-119">The control state object is not affected when view state is disabled by a page developer.</span></span> <span data-ttu-id="5b81b-120">コントロールの状態オブジェクトの状態情報を格納するには、コントロールをオーバーライドする必要があります、<xref:System.Web.UI.Control.LoadControlState%2A>と<xref:System.Web.UI.Control.SaveControlState%2A>メソッドと状態情報を格納するコントロールは登録されているコントロールが初期化されるたびに状態を制御します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-120">Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized.</span></span> <span data-ttu-id="5b81b-121">オーバーライドすることでコントロールの状態を使用するコントロールを登録することができます、<xref:System.Web.UI.Control.OnInit%2A>メソッドを呼び出し、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-121">You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span> <span data-ttu-id="5b81b-122">使用しての詳細については、<xref:System.Web.UI.Control.ViewState%2A>コントロールを開発する場合は、プロパティとコントロールの状態を参照してください[カスタム ASP.NET サーバー コントロールの開発](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-122">For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).</span></span>  
  
 <span data-ttu-id="5b81b-123">ビュー ステートを保持する既存をサポートできないクライアントが状態の永続化メカニズムをビューで、拡張することができます、<xref:System.Web.UI.PageStatePersister>クラスの独自のビュー状態の永続化方法を紹介し、ページ アダプターを使用するには、ASP.NET アプリケーションを構成するにはページが提供するのにクライアントの種類に基づく別のビュー状態の永続化メカニズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-123">To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.</span></span> <span data-ttu-id="5b81b-124">派生したクラス、<xref:System.Web.UI.PageStatePersister>クラスが抽象をオーバーライドする必要があります<xref:System.Web.UI.PageStatePersister.Save%2A>にビュー ステートとコントロールの状態を永続化中に格納し、オーバーライド メソッド、<xref:System.Web.UI.PageStatePersister.Load%2A>これを展開する方法です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-124">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it.</span></span> <span data-ttu-id="5b81b-125">使用することができますをビュー ステートとを文字列にコントロールの状態をシリアル化する必要がある場合、<xref:System.Web.UI.IStateFormatter>を使用してアクセスされるオブジェクト、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-125">If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property.</span></span> <span data-ttu-id="5b81b-126">効率的に、シリアル化し、オブジェクトの状態情報を Base64 でエンコードされた文字列を逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-126">It efficiently serializes and deserializes object state information to a Base64-encoded string.</span></span> <span data-ttu-id="5b81b-127">オーバーライドすることも、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>独自オブジェクト状態のシリアル化機構を指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-127">You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-128">次のコード例を作成する方法を示しています、 <xref:System.Web.UI.PageStatePersister> Web サーバー上のビューとコントロールの状態を保存するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b81b-128">The following code example demonstrates how to create a <xref:System.Web.UI.PageStatePersister> object that saves view and control state on the Web server.</span></span> <span data-ttu-id="5b81b-129">`StreamPageStatePersister`をオーバーライドする方法を示します、<xref:System.Web.UI.PageStatePersister.Load%2A>と<xref:System.Web.UI.PageStatePersister.Save%2A>状態情報を抽出し、ビューを保存する方法です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-129">The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information.</span></span> <span data-ttu-id="5b81b-130">状態の永続化メカニズムは、アダプティブ レンダリングおよびクライアント機能に関連するため、`MyPageAdapter`をアクティブ化するクラスが提供される、 `StreamPageStatePersister` ASP.NET アプリケーション用。</span><span class="sxs-lookup"><span data-stu-id="5b81b-130">Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application.</span></span> <span data-ttu-id="5b81b-131">有効にするブラウザーの機能 (.browser) ファイルが最後に、提供される、 `MyPageAdapter` (ここで、既定の Web ブラウザー) クライアントの特定のクラスのアダプターです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-131">Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 <span data-ttu-id="5b81b-132">次のコード例を作成する方法を示しています、<xref:System.Web.UI.Adapters.PageAdapter>クラスのインスタンスを返す`StreamPageStatePersister`、ASP.NET Web ページのビューとコントロールの状態を永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b81b-132">The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 <span data-ttu-id="5b81b-133">これら 2 つのクラスを次のコンパイラのコマンドラインを使用して、サンプルの実行に使用できるアセンブリにコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="5b81b-133">Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line.</span></span> <span data-ttu-id="5b81b-134">コンパイル済みのアセンブリが ASP.NET アプリケーションのルートの下に \Bin ディレクトリにあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-134">Ensure that the compiled assembly is in the \Bin directory underneath the ASP.NET application root.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 <span data-ttu-id="5b81b-135">最後に、有効にする、`MyPageAdapter`アダプター、ASP.NET アプリケーションのルートの下にあるブラウザーをという名前のディレクトリを作成し、構成情報を .browser ファイルを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b81b-135">Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information.</span></span> <span data-ttu-id="5b81b-136">`<refid>`構成ファイル内の要素は、構成が Default.browser 構成ファイル内の default ブラウザーの指定した値をオーバーライドすることを示します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-136">The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file.</span></span> <span data-ttu-id="5b81b-137">この例では`MyPageAdapter`ASP.NET Web ページの使用は、(通常アダプターが使用されているありません)。</span><span class="sxs-lookup"><span data-stu-id="5b81b-137">In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).</span></span>  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="5b81b-138">ビューステート永続化機構が作成される <see cref="T:System.Web.UI.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-138">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b81b-139">
            <see cref="T:System.Web.UI.PageStatePersister" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-139">Initializes a new instance of the <see cref="T:System.Web.UI.PageStatePersister" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5b81b-140">
            <paramref name="page" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-140">The <paramref name="page" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-141">オブジェクトを取得または設定します。このオブジェクトは、現在の <see cref="T:System.Web.UI.Page" /> オブジェクトによって格納されているコントロールが Web サーバーへの HTTP 要求間で永続化するために使用しているデータを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-141">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b81b-142">ビューステート データを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-142">An object that contains view state data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-143">コントロールの状態は、Web サーバー コントロールの必要性を関数に、通常のビュー状態情報を別のオブジェクトに含まれている重要なビューステート データの構成オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-143">Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.</span></span> <span data-ttu-id="5b81b-144">ビュー ステートが無効にすると、コントロールの状態データは影響しませんが、<xref:System.Web.UI.Page>レベルに余分な実装を使用する手順が必要です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-144">Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use.</span></span> <span data-ttu-id="5b81b-145">使用する方法について、<xref:System.Web.UI.Control.ViewState%2A>コントロールを開発する場合は、プロパティとコントロールの状態を参照してください[カスタム ASP.NET サーバー コントロールの開発](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-145">For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-146">次のコード例は、方法から派生するクラスについて説明します。、<xref:System.Web.UI.PageStatePersister>クラスの初期化、<xref:System.Web.UI.PageStatePersister.ControlState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-146">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="5b81b-147">この例では、<xref:System.Web.UI.PageStatePersister.ControlState%2A>にプロパティが割り当てられて、<xref:System.Web.UI.Pair.Second>のフィールド、<xref:System.Web.UI.Pair>オブジェクト、および使用してシリアル化、<xref:System.Web.UI.ObjectStateFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-147">In this example, the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="5b81b-148">ときに、<xref:System.Web.UI.PageStatePersister.Load%2A>メソッドが呼び出されると、<xref:System.Web.UI.ObjectStateFormatter>ビュー状態とコントロールの状態については、逆シリアル化するクラスを使用し、<xref:System.Web.UI.PageStatePersister.ControlState%2A>プロパティは、その結果から初期化<xref:System.Web.UI.Pair>オブジェクトの<xref:System.Web.UI.Pair.Second>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-148">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field.</span></span> <span data-ttu-id="5b81b-149">このコード例に示されている例の一部である、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-149">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-150">派生クラスによってオーバーライドされ、<see cref="T:System.Web.UI.Page" /> オブジェクトが自身のコントロール階層を初期化するときに、永続化された状態情報を逆シリアル化して読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-150">Overridden by derived classes to deserialize and load persisted state information when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-151">派生したクラス、<xref:System.Web.UI.PageStatePersister>クラスの実装、<xref:System.Web.UI.PageStatePersister.Load%2A>初期化するメソッドを<xref:System.Web.UI.PageStatePersister.ViewState%2A>と<xref:System.Web.UI.PageStatePersister.ControlState%2A>によって永続化された形式からのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-151">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-152">次のコード例は、方法から派生するクラスについて説明します。、<xref:System.Web.UI.PageStatePersister>クラスが実装する、<xref:System.Web.UI.PageStatePersister.Load%2A>永続媒体からビュー ステートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5b81b-152">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Load%2A> method to load view state from a persistence medium.</span></span> <span data-ttu-id="5b81b-153">`StreamPageStatePersister`ストリームからデータを読み取ろうとします。</span><span class="sxs-lookup"><span data-stu-id="5b81b-153">The `StreamPageStatePersister` attempts to read data from a stream.</span></span> <span data-ttu-id="5b81b-154">使用して、<xref:System.Web.UI.IStateFormatter>ビュー状態データを逆シリアル化および初期化するオブジェクト、<xref:System.Web.UI.PageStatePersister.ViewState%2A>プロパティおよび<xref:System.Web.UI.PageStatePersister.ControlState%2A>プロパティで、コントロールを初期化するために、ページを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-154">It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls.</span></span> <span data-ttu-id="5b81b-155">このコード例に示されている例の一部である、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-155">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-156">ビューステート永続化機構が作成される対象の <see cref="T:System.Web.UI.Page" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-156">Gets or sets the <see cref="T:System.Web.UI.Page" /> object that the view state persistence mechanism is created for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b81b-157">
            <see cref="T:System.Web.UI.Page" /> が関連付けられる <see cref="T:System.Web.UI.PageStatePersister" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-157">The <see cref="T:System.Web.UI.Page" /> that the <see cref="T:System.Web.UI.PageStatePersister" /> is associated with.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-158">使用することができます、<xref:System.Web.UI.PageStatePersister.Page%2A>プロパティ、現在のアクセスを<xref:System.Web.HttpContext>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b81b-158">You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-159">派生クラスによってオーバーライドされ、<see cref="T:System.Web.UI.Page" /> オブジェクトがメモリから読み出されるときに、永続化された状態情報をシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-159">Overridden by derived classes to serialize persisted state information when a <see cref="T:System.Web.UI.Page" /> object is unloaded from memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-160">派生したクラス、<xref:System.Web.UI.PageStatePersister>クラスの実装、<xref:System.Web.UI.PageStatePersister.Save%2A>の内容を保持する、<xref:System.Web.UI.PageStatePersister.ViewState%2A>と<xref:System.Web.UI.PageStatePersister.ControlState%2A>永続メディアへのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-160">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-161">次のコード例は、方法から派生するクラスについて説明します。、<xref:System.Web.UI.PageStatePersister>クラスが実装する、<xref:System.Web.UI.PageStatePersister.Save%2A>永続メディアへのビュー ステートを保持します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-161">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist view state to a persistence medium.</span></span> <span data-ttu-id="5b81b-162">`StreamPageStatePersister`を使用して、<xref:System.Web.UI.IStateFormatter>の内容をシリアル化するオブジェクト、<xref:System.Web.UI.PageStatePersister.ViewState%2A>プロパティおよび<xref:System.Web.UI.PageStatePersister.ControlState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-162">The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="5b81b-163">このコード例に示されている例の一部である、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-163">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-164">
            <see cref="T:System.Web.UI.IStateFormatter" /> メソッドおよび <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> メッソドへの呼び出しで、<see cref="P:System.Web.UI.PageStatePersister.ControlState" /> プロパティおよび <see cref="M:System.Web.UI.PageStatePersister.Save" /> プロパティに格納されている状態情報のシリアル化と逆シリアル化に使用する <see cref="M:System.Web.UI.PageStatePersister.Load" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-164">Gets an <see cref="T:System.Web.UI.IStateFormatter" /> object that is used to serialize and deserialize the state information contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> and <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> properties during calls to the <see cref="M:System.Web.UI.PageStatePersister.Save" /> and <see cref="M:System.Web.UI.PageStatePersister.Load" /> methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b81b-165">オブジェクトの状態のシリアル化と逆シリアル化に使用する <see cref="T:System.Web.UI.IStateFormatter" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-165">An instance of <see cref="T:System.Web.UI.IStateFormatter" /> that is used to serialize and deserialize object state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-166">オーバーライドすることができます、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>プロパティを独自のビュー状態フォーマッタを提供します。</span><span class="sxs-lookup"><span data-stu-id="5b81b-166">You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-167">次のコード例は、方法から派生するクラスについて説明します、<xref:System.Web.UI.PageStatePersister>クラスへのアクセス、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>取得するプロパティを、<xref:System.Web.UI.ObjectStateFormatter>既定の実装では、オブジェクトの、<xref:System.Web.UI.IStateFormatter>ビューをシリアル化のインターフェイス。ストリームの状態とコントロールの状態。</span><span class="sxs-lookup"><span data-stu-id="5b81b-167">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream.</span></span> <span data-ttu-id="5b81b-168">このコード例に示されている例の一部である、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-168">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b81b-169">オブジェクトを取得または設定します。このオブジェクトは、現在の <see cref="T:System.Web.UI.Page" /> オブジェクトによって格納されているコントロールが Web サーバーへの HTTP 要求間で永続化するために使用しているデータを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-169">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b81b-170">ビューステート データを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b81b-170">An object that contains view state data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b81b-171">ビュー ステートは、Web サーバー コントロールが機能し、それ自体をレンダリングする必要がある状態データのディクショナリです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-171">View state is a dictionary of state data that Web server controls need to function and render themselves.</span></span> <span data-ttu-id="5b81b-172">ビュー状態オブジェクトを使用して、コントロールの開発者が通常アクセス、<xref:System.Web.UI.Control.ViewState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-172">Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property.</span></span> <span data-ttu-id="5b81b-173">ビュー ステートが無効になっているときにビュー ステートが影響を受ける、<xref:System.Web.UI.Page>これらのシナリオでレベル、およびその結果、コントロールが正しく動作しない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5b81b-173">View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios.</span></span> <span data-ttu-id="5b81b-174">使用する方法についての<xref:System.Web.UI.Control.ViewState%2A>コントロールを開発するときに状態を制御しを参照してください[カスタム ASP.NET サーバー コントロールの開発](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)です。</span><span class="sxs-lookup"><span data-stu-id="5b81b-174">For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b81b-175">次のコード例は、方法から派生するクラスについて説明します。、<xref:System.Web.UI.PageStatePersister>クラスの初期化、<xref:System.Web.UI.PageStatePersister.ViewState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-175">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property.</span></span> <span data-ttu-id="5b81b-176">この例では、<xref:System.Web.UI.PageStatePersister.ViewState%2A>にプロパティが割り当てられて、<xref:System.Web.UI.Pair.First>のフィールド、<xref:System.Web.UI.Pair>オブジェクト、および使用してシリアル化、<xref:System.Web.UI.ObjectStateFormatter>インスタンスであるオブジェクトの<xref:System.Web.UI.IStateFormatter>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-176">In this example, the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface.</span></span> <span data-ttu-id="5b81b-177">ときに、<xref:System.Web.UI.PageStatePersister.Load%2A>メソッドが呼び出されると、<xref:System.Web.UI.ObjectStateFormatter>インターフェイスは、ビュー状態情報を逆シリアル化に使用され、<xref:System.Web.UI.PageStatePersister.ViewState%2A>プロパティは、その結果から初期化<xref:System.Web.UI.Pair>オブジェクトの<xref:System.Web.UI.Pair.First>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-177">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field.</span></span> <span data-ttu-id="5b81b-178">このコード例に示されている例の一部である、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5b81b-178">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>