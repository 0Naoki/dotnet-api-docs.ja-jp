<Type Name="ControlValuePropertyAttribute" FullName="System.Web.UI.ControlValuePropertyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dced842b31f1f8a562034e49ef91fd5cc4874d0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37531598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlValuePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlValuePropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlValuePropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlValuePropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlValuePropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ControlValuePropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>実行時に <see cref="T:System.Web.UI.WebControls.ControlParameter" /> オブジェクトのバインド先となるコントロールの既定のプロパティを指定します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 定義するときに、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトを通常にバインドするコントロールのプロパティをパラメーター両方を設定して、<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>と<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティ。 場合、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティが設定されていない、既定のプロパティが使用されます。 <xref:System.Web.UI.ControlValuePropertyAttribute>属性が既定のプロパティを指定するコントロールに適用される、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトは、実行時にバインドします。  
  
 属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)します。  
  
 <xref:System.Web.UI.ControlValuePropertyAttribute> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## Examples  
 次のコード例は、適用する方法を示します、<xref:System.Web.UI.ControlValuePropertyAttribute>既定のプロパティとカスタム コントロールに値を指定する属性。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
    <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
    <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
    <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">コントロールの既定のプロパティ。</param>
        <summary>指定したプロパティ名を使用して、<see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して、新しいインスタンスを作成する、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名を使用します。 次の表に、初期プロパティ値のインスタンスを<xref:System.Web.UI.ControlValuePropertyAttribute>クラス。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、適用する方法を示します、<xref:System.Web.UI.ControlValuePropertyAttribute>カスタム コントロールに既定のプロパティを指定する属性。 このコンス トラクターは、作成する ASP.NET によって内部的に呼び出されます、<xref:System.Web.UI.ControlValuePropertyAttribute>属性を表すオブジェクト。  
  
 [!code-csharp[ControlValuePropertyAttributeCtor1Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttributeCtor1Param/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttributeCtor1Param/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string * obj -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute (name, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">コントロールの既定のプロパティ。</param>
        <param name="defaultValue">既定のプロパティの既定値。</param>
        <summary>指定したプロパティ名と既定値を使用して、<see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して、新しいインスタンスを作成する、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名と既定値を使用します。 <xref:System.Web.UI.ControlValuePropertyAttribute> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` パラメーターの値。|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|`defaultValue` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、適用する方法を示します、<xref:System.Web.UI.ControlValuePropertyAttribute>既定のプロパティとカスタム コントロールに値を指定する属性。 このコンス トラクターは、作成する ASP.NET によって内部的に呼び出されます、<xref:System.Web.UI.ControlValuePropertyAttribute>属性を表すオブジェクト。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name, Type type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name, Type ^ type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string * Type * string -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">コントロールの既定のプロパティ。</param>
        <param name="type">既定値の変換先となる <see cref="T:System.Type" />。</param>
        <param name="defaultValue">既定のプロパティの既定値。</param>
        <summary>指定したプロパティ名と既定値を使用して、<see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> クラスの新しいインスタンスを初期化します。 既定値は指定したデータ型に変換されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して、新しいインスタンスを作成する、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名と既定値を使用します。 コンス トラクターのこのバージョンは、データ型を指定する既定値に変換しよう、`type`パラメーター。 既定値を変換できない場合、<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>プロパティは設定されません。 <xref:System.Web.UI.ControlValuePropertyAttribute> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` パラメーターの値。|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|値、`defaultValue`パラメーターを値で指定されたデータ型に変換できる場合、`type`パラメーター。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のプロパティの既定値を取得します。</summary>
        <value>コントロールの既定のプロパティの既定値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが指定されている場合、<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>プロパティが設定されていないを使用して、<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>プロパティの既定値を決定するプロパティ。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>プロパティを適用することで、<xref:System.Web.UI.ControlValuePropertyAttribute>属性をカスタム コントロール。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="controlValuePropertyAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このインスタンスと比較する <see cref="T:System.Object" />。</param>
        <summary>
          <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> オブジェクトの現在のインスタンスが指定したオブジェクトに等しいかどうかを判断します。</summary>
        <returns>
          <paramref name="obj" /> パラメーターに含まれているオブジェクトが <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> の現在のインスタンスに等しい場合は <see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.ControlValuePropertyAttribute.Equals%2A>メソッドを決定するかどうかの現在のインスタンス、<xref:System.Web.UI.ControlValuePropertyAttribute>オブジェクトが、指定したオブジェクトと等しい。 オブジェクトが等しい場合、これらは、次の条件を満たす必要があります。  
  
1.  含まれているオブジェクト、`obj`パラメーターである必要があります、<xref:System.Web.UI.ControlValuePropertyAttribute>オブジェクト。  
  
2.  <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>と<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>両方のオブジェクトのプロパティを等しくする必要があります。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Attribute.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="controlValuePropertyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.ControlValuePropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のプロパティを取得します。</summary>
        <value>コントロールの既定のプロパティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ControlParameter>なしオブジェクトが定義されているその<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティ セットを使用して、<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>プロパティの既定のプロパティにバインドされている、<xref:System.Web.UI.WebControls.ControlParameter>実行時にオブジェクト。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>プロパティを適用することで、<xref:System.Web.UI.ControlValuePropertyAttribute>属性をカスタム コントロール。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
  </Members>
</Type>