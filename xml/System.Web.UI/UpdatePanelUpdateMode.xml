<Type Name="UpdatePanelUpdateMode" FullName="System.Web.UI.UpdatePanelUpdateMode">
  <TypeSignature Language="C#" Value="public enum UpdatePanelUpdateMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdatePanelUpdateMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanelUpdateMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UpdatePanelUpdateMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UpdatePanelUpdateMode" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="698ae-101"><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容の有効な更新モードを表します。</span><span class="sxs-lookup"><span data-stu-id="698ae-101">Represents the possible update modes for the content in an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698ae-102"><xref:System.Web.UI.UpdatePanelUpdateMode>列挙型のコンテンツの利用可能な更新モードを定義する、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="698ae-102">The <xref:System.Web.UI.UpdatePanelUpdateMode> enumeration defines the possible update modes for the content of an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="698ae-103"><xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティの値のいずれかに設定する必要があります、<xref:System.Web.UI.UpdatePanelUpdateMode>列挙します。</span><span class="sxs-lookup"><span data-stu-id="698ae-103">The <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property must be set to one of the values of the <xref:System.Web.UI.UpdatePanelUpdateMode> enumeration.</span></span> <span data-ttu-id="698ae-104"><xref:System.Web.UI.UpdatePanel>コントロールでは、する必要があります、<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>のプロパティ、<xref:System.Web.UI.ScriptManager>コントロールである`true`の部分ページ レンダリングが発生します。</span><span class="sxs-lookup"><span data-stu-id="698ae-104">The <xref:System.Web.UI.UpdatePanel> control requires that the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property of the <xref:System.Web.UI.ScriptManager> control be `true` for partial-page rendering to occur.</span></span>  
  
 <span data-ttu-id="698ae-105">既定値、<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティは常にします。</span><span class="sxs-lookup"><span data-stu-id="698ae-105">The default value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is Always.</span></span>  
  
 <span data-ttu-id="698ae-106">場合、<xref:System.Web.UI.UpdatePanelUpdateMode.Always>コントロールが別の内部が<xref:System.Web.UI.UpdatePanel>コントロールと親パネルを更新、入れ子になったパネルに関係なくも更新されます、<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="698ae-106">If the <xref:System.Web.UI.UpdatePanelUpdateMode.Always> control is inside another <xref:System.Web.UI.UpdatePanel> control and the parent panel is updated, the nested panel will also be updated regardless of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="698ae-107">次の例では、2 つ宣言<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>コントロール。</span><span class="sxs-lookup"><span data-stu-id="698ae-107">The following example declares two <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> controls.</span></span> <span data-ttu-id="698ae-108">パネルの最初のセット、<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>のプロパティ、<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>条件を制御します。</span><span class="sxs-lookup"><span data-stu-id="698ae-108">The first panel sets the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property of an <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> control to Conditional.</span></span> <span data-ttu-id="698ae-109">2 番目のパネルが<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>既定で常に設定します。</span><span class="sxs-lookup"><span data-stu-id="698ae-109">The second panel has <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> set to Always by default.</span></span> <span data-ttu-id="698ae-110">2 つのパネルの外部ボタンを使用して非同期ポストバック コントロールとして登録されている、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>のメソッド、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="698ae-110">A button outside both panels is registered as an asynchronous postback control by using the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="698ae-111">ボタンのクリックしてイベント ハンドラー、<xref:System.Web.UI.UpdatePanel.Update%2A>その最後の更新以降に 5 秒以上が経過した場合、最初のパネルのメソッドが呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="698ae-111">In the button's click event handler, the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the first panel is called if more than five seconds have elapsed since its last update.</span></span> <span data-ttu-id="698ae-112">このシナリオでは、最後のパネルの更新プログラムが 5 秒以上の場合にのみ、パネルのコンテンツが更新されます。</span><span class="sxs-lookup"><span data-stu-id="698ae-112">In this scenario, the panel's content is updated only if the last panel update was more than five seconds ago.</span></span> <span data-ttu-id="698ae-113">2 番目のパネルのコンテンツは常に更新します。</span><span class="sxs-lookup"><span data-stu-id="698ae-113">The second panel's content is always updated.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Always = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="698ae-114"><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容は、ページから発生したすべてのポストバックで更新されます。</span><span class="sxs-lookup"><span data-stu-id="698ae-114">The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated for all postbacks that originate from the page.</span></span> <span data-ttu-id="698ae-115">これには、非同期ポストバックも含まれます。</span><span class="sxs-lookup"><span data-stu-id="698ae-115">This includes asynchronous postbacks.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Conditional">
      <MemberSignature Language="C#" Value="Conditional" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Conditional = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberSignature Language="VB.NET" Value="Conditional" />
      <MemberSignature Language="C++ CLI" Value="Conditional" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="698ae-116"><see cref="T:System.Web.UI.UpdatePanel" /> コントロールの内容は、次の条件で更新されます。</span><span class="sxs-lookup"><span data-stu-id="698ae-116">The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated under the following conditions:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="698ae-117">場合、<xref:System.Web.UI.UpdatePanel.Update%2A>のメソッド、<xref:System.Web.UI.UpdatePanel>コントロールが明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="698ae-117">If the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control is called explicitly.</span></span>  
  
-   <span data-ttu-id="698ae-118">コントロールがのトリガーのプロパティを使用してトリガーとして定義されているかどうか、<xref:System.Web.UI.UpdatePanel>を制御し、ポストバックが発生します。</span><span class="sxs-lookup"><span data-stu-id="698ae-118">If a control is defined as a trigger by using the Triggers property of the <xref:System.Web.UI.UpdatePanel> control and causes a postback.</span></span> <span data-ttu-id="698ae-119">このシナリオでは、コントロールはパネルの内容を更新するため、明示的なトリガーがします。</span><span class="sxs-lookup"><span data-stu-id="698ae-119">In this scenario, the control is an explicit trigger for updating the panel content.</span></span> <span data-ttu-id="698ae-120">トリガーのコントロールが内側または外側のいずれかにすることができます、<xref:System.Web.UI.UpdatePanel>コントロール、トリガーを定義します。</span><span class="sxs-lookup"><span data-stu-id="698ae-120">The trigger control can be either inside or outside the <xref:System.Web.UI.UpdatePanel> control that defines the trigger.</span></span>  
  
-   <span data-ttu-id="698ae-121">場合、<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティに設定されている`true`との子コントロールを<xref:System.Web.UI.UpdatePanel>コントロールがポストバックを発生させます。</span><span class="sxs-lookup"><span data-stu-id="698ae-121">If the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` and a child control of the <xref:System.Web.UI.UpdatePanel> control causes a postback.</span></span> <span data-ttu-id="698ae-122">子コントロールがこのシナリオでは、<xref:System.Web.UI.UpdatePanel>コントロールは、パネルを更新するための暗黙的なトリガー。</span><span class="sxs-lookup"><span data-stu-id="698ae-122">In this scenario, child controls of the <xref:System.Web.UI.UpdatePanel> control are implicit triggers for updating the panel.</span></span> <span data-ttu-id="698ae-123">子コントロールが入れ子になった<xref:System.Web.UI.UpdatePanel>コントロールは、外側引き起こさない<xref:System.Web.UI.UpdatePanel>トリガーとして明示的に定義されている限り、更新を制御します。</span><span class="sxs-lookup"><span data-stu-id="698ae-123">Child controls of nested <xref:System.Web.UI.UpdatePanel> controls do not cause the outer <xref:System.Web.UI.UpdatePanel> control to be updated unless they are explicitly defined as triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>