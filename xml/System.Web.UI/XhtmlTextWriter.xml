<Type Name="XhtmlTextWriter" FullName="System.Web.UI.XhtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33999e69327b007033ffe80d70ed36b9979d0675" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XhtmlTextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XhtmlTextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XhtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XhtmlTextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XhtmlTextWriter : System::Web::UI::HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2cace-101">XTHML から派生した XHTML (Extensible Hypertext Markup Language) モジュールのすべてのバリエーションを含む XHTML 固有文字を、モバイル デバイス用の ASP.NET サーバー コントロールの出力ストリームに書き込みます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2cace-101">Writes Extensible Hypertext Markup Language (XHTML)-specific characters, including all variations of XHTML modules that derive from XTHML, to the output stream for an ASP.NET server control for mobile devices.</span>
      </span>
      <span data-ttu-id="2cace-102">ASP.NET ページとサーバー コントロールにカスタム XHTML レンダリングを行う場合には <see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスをオーバーライドします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2cace-102">Override the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class to provide custom XHTML rendering for ASP.NET pages and server controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-103">XHTML は、HTML 4.1 は、複数のデバイス タイプに適している Web サイトを作成することができますに基づく、XML 対応のマークアップ言語です。</span><span class="sxs-lookup"><span data-stu-id="2cace-103">XHTML is an XML-compliant markup language, based on HTML 4.1, which allows you to create Web sites that are suitable for multiple device types.</span></span> <span data-ttu-id="2cace-104">さまざまな書式とスタイルのオプションと削減マークアップ タグのあいまいさのマークアップ言語を生成する XML によって提供される厳密な要素のガイドラインに HTML によって提供される使いやすさをマージします。</span><span class="sxs-lookup"><span data-stu-id="2cace-104">It merges the ease of use provided by HTML with the strict element guidelines provided by XML to produce a markup language with a wide range of format and style options, and with reduced markup tag ambiguity.</span></span> <span data-ttu-id="2cace-105"><xref:System.Web.UI.XhtmlTextWriter>クラスには、ASP.NET サーバー コントロールの使用をクライアントに XHTML コンテンツをレンダリングするときに書式設定機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="2cace-105">The <xref:System.Web.UI.XhtmlTextWriter> class provides formatting capabilities that ASP.NET server controls use when rendering XHTML content to clients.</span></span> <span data-ttu-id="2cace-106">使用することができます、 <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> XHTML の種類のテキスト ライターのレンダリングを指定します。</span><span class="sxs-lookup"><span data-stu-id="2cace-106">You can use the <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> method to specify which type of XHTML the text writer renders.</span></span> <span data-ttu-id="2cace-107">サポートされているドキュメントの種類が定義されている、<xref:System.Web.UI.XhtmlMobileDocType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="2cace-107">Supported document types are defined in the <xref:System.Web.UI.XhtmlMobileDocType> enumeration.</span></span>  
  
 <span data-ttu-id="2cace-108"><xref:System.Web.UI.XhtmlTextWriter>クラスは、2 つの要素の属性のセットを表示します。</span><span class="sxs-lookup"><span data-stu-id="2cace-108">The <xref:System.Web.UI.XhtmlTextWriter> class renders two sets of attributes for elements.</span></span> <span data-ttu-id="2cace-109">1 つのセットで参照されていると、共通の属性のコレクションとは、<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2cace-109">One set is a collection of common attributes, as referenced in the <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> property.</span></span> <span data-ttu-id="2cace-110">2 番目のセットで参照されていると、要素に固有の属性のコレクションとは、<xref:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2cace-110">The second set is a collection of element-specific attributes, as referenced in the <xref:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes%2A> property.</span></span> <span data-ttu-id="2cace-111">要素とがレンダリングされるスタイルの詳細については、仕様を参照して、XHTML モジュールで、 [World Wide Web コンソーシアム (W3C) の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)です。</span><span class="sxs-lookup"><span data-stu-id="2cace-111">For more information on the elements and styles that are rendered, see the XHTML modularization specification at the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 <span data-ttu-id="2cace-112">メンバーを使用することができます、<xref:System.Web.UI.XhtmlTextWriter>アダプターまたはアダプターのクラスにページ クラスおよび派生クラスをカスタム XHTML で使用するカスタム テキスト ライターを作成します。</span><span class="sxs-lookup"><span data-stu-id="2cace-112">You can use the members of the <xref:System.Web.UI.XhtmlTextWriter> class and any derived classes to create custom text writers to use in custom XHTML page adapters or class adapters.</span></span> <span data-ttu-id="2cace-113">標準の動作をオーバーライドする派生クラスを作成することも、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-113">You can also create derived classes that override the standard behavior of the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="2cace-114">既定では、HTML 4.0 をサポートするブラウザーを使用しているときに ASP.NET ページおよびコントロール マークアップを表示する XHTML 1.1 規格と互換性があります。</span><span class="sxs-lookup"><span data-stu-id="2cace-114">By default, when you are working with browsers that support HTML 4.0, ASP.NET pages and controls render markup that is compatible with the XHTML 1.1 standard.</span></span> <span data-ttu-id="2cace-115">詳細については、次を参照してください。 [Visual Studio および ASP.NET で XHTML 標準](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)です。</span><span class="sxs-lookup"><span data-stu-id="2cace-115">For more information, see [XHTML Standards in Visual Studio and ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).</span></span>  
  
 <span data-ttu-id="2cace-116"><xref:System.Web.UI.HtmlTextWriter>いない XHTML マークアップを表示するには、具体的には ASP.NET を構成していない限り、XHTML を出力します。</span><span class="sxs-lookup"><span data-stu-id="2cace-116">The <xref:System.Web.UI.HtmlTextWriter> outputs XHTML unless you configure ASP.NET specifically to not render XHTML markup.</span></span> <span data-ttu-id="2cace-117">詳細については、次を参照してください。 [NIB: 方法: 構成 XHTML の ASP.NET Web サイトでレンダリング](http://msdn.microsoft.com/library/42483a54-f1ae-44e1-88e6-4370f8690149)です。</span><span class="sxs-lookup"><span data-stu-id="2cace-117">For more information, see [NIB: How to: Configure XHTML Rendering in ASP.NET Web Sites](http://msdn.microsoft.com/library/42483a54-f1ae-44e1-88e6-4370f8690149).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cace-118">このセクションのコード例には、4 つの部分が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2cace-118">The code example in this section contains four parts.</span></span> <span data-ttu-id="2cace-119">最初の例では、派生クラスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2cace-119">The first example demonstrates how to create a derived class.</span></span> <span data-ttu-id="2cace-120">2 番目のコード例では、カスタム コントロールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2cace-120">The second code example demonstrates how to create a custom control.</span></span> <span data-ttu-id="2cace-121">3 番目のコード例では、カスタム コントロールを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="2cace-121">The third code example demonstrates how to use the custom control.</span></span> <span data-ttu-id="2cace-122">4 番目のコード例では、カスタム コントロールを実行するために必要なコードを提供します。</span><span class="sxs-lookup"><span data-stu-id="2cace-122">The fourth code example provides the code that is required to run the custom control.</span></span>  
  
 <span data-ttu-id="2cace-123">次のコード例から派生したカスタム クラスを作成する方法を示します、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-123">The following code example demonstrates how to create a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span> <span data-ttu-id="2cace-124">これは、標準から直接的または間接的に継承するすべてのクラスの 2 つのコンス トラクターが、<xref:System.Web.UI.HtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-124">It has two constructors, which is standard for all classes that inherit directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="2cace-125">最初のコンス トラクターは、<xref:System.IO.TextWriter>オブジェクトをパラメーターとして次の 2 つのパラメーター値を渡す 2 番目のコンス トラクターを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="2cace-125">The first constructor takes a <xref:System.IO.TextWriter> object as a parameter and calls the second constructor, passing the following two parameter values:</span></span>  
  
-   <span data-ttu-id="2cace-126"><xref:System.IO.TextWriter> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2cace-126">The <xref:System.IO.TextWriter> instance.</span></span>  
  
-   <span data-ttu-id="2cace-127">値、 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString?displayProperty=nameWithType> XHTML テキスト ライターによって使用される既定の行のインデントを定義するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="2cace-127">The value of the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString?displayProperty=nameWithType> property, which defines the default line indentation that is used by the XHTML text writer.</span></span>  
  
 <span data-ttu-id="2cace-128">このコード例では、オーバーライドする方法も示しています、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>と<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A>テキストのフィルター処理するメソッドのサイズし、スタイル、色のそれぞれします。</span><span class="sxs-lookup"><span data-stu-id="2cace-128">This code example also shows how to override the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> methods to filter for text size and color style, respectively.</span></span> <span data-ttu-id="2cace-129">さらに、オーバーライド、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>と<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>前に、コントロールが表示された後に文字列のテキストを書き込むメソッド。</span><span class="sxs-lookup"><span data-stu-id="2cace-129">Additionally, it overrides the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> and <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> methods to write a text string before and after a control has rendered.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#1)]  
  
 <span data-ttu-id="2cace-130">次のコード例は、カスタムを作成する方法を示します<xref:System.Web.UI.WebControls.Label>という名前のコントロール`TestLabel`およびという名前のカスタム アダプター `XhtmlTestLabelAdapter` XHTML としてコントロールの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="2cace-130">The following code example demonstrates how to create a custom <xref:System.Web.UI.WebControls.Label> control named `TestLabel` and a custom adapter named `XhtmlTestLabelAdapter` that renders the content of the control as XHTML.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#1)]  
  
 <span data-ttu-id="2cace-131">次のコード例は、カスタム コントロールを使用する方法を示します`TestLabel`ASP.NET Web ページにします。</span><span class="sxs-lookup"><span data-stu-id="2cace-131">The following code example demonstrates how to use the custom control `TestLabel` on an ASP.NET Web page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.aspx#4)]
 [!code-aspx-vb[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.aspx#4)]  
  
 <span data-ttu-id="2cace-132">カスタム コントロールを使用して、前のコード例では、次の追加`<controlAdapters>`要素を 2 つのファイルのいずれか。</span><span class="sxs-lookup"><span data-stu-id="2cace-132">To use the custom control in the preceding code example, add the following `<controlAdapters>` element to one of two files.</span></span> <span data-ttu-id="2cace-133">特定のブラウザーのサブディレクトリに適切なコンピューター全体のファイルに .NET Framework 構成ディレクトリのサブフォルダーとして追加することができます。</span><span class="sxs-lookup"><span data-stu-id="2cace-133">You can add it to the appropriate machine-wide file in the subdirectory for a specific browser, as a subfolder of the .NET Framework configuration directory.</span></span> <span data-ttu-id="2cace-134">代わりに、Web アプリケーション ルートの下の App_Browsers ディレクトリ内のカスタム ブラウザー ファイルを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="2cace-134">Alternatively, you can add it to a custom browser file in the App_Browsers directory under the Web application root.</span></span>  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.TestLabel"  
   adapterType="AspNet.Samples.XhtmlTestLabelAdapter" />  
</controlAdapters>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2cace-135">
            <see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-135">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2cace-136">XHTML コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-136">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-137">
            <see cref="T:System.Web.UI.XhtmlTextWriter" /> フィールドに指定されている行インデントを使用する、<see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-137">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class that uses the line indentation that is specified in the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> field.</span>
          </span>
          <span data-ttu-id="2cace-138">既定の行インデントを変更しない場合に <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" /> コンストラクターを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-138">Use the <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" /> constructor if you do not want to change the default line indentation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-139"><xref:System.Web.UI.XhtmlTextWriter.%23ctor%2A>を受け取るコンス トラクター、<xref:System.IO.TextWriter>オブジェクトのようにパラメーターが 2 つのパラメーター値を渡す、2 番目のコンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2cace-139">The <xref:System.Web.UI.XhtmlTextWriter.%23ctor%2A> constructor that takes a <xref:System.IO.TextWriter> object as a parameter calls the second constructor, passing two parameter values:</span></span>  
  
-   <span data-ttu-id="2cace-140"><xref:System.IO.TextWriter> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2cace-140">The <xref:System.IO.TextWriter> instance.</span></span>  
  
-   <span data-ttu-id="2cace-141">指定されている文字列値、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>フィールドには、XHTML テキスト ライターによって使用されるタブのスペースを定義します。</span><span class="sxs-lookup"><span data-stu-id="2cace-141">The string value that is specified in the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field, which defines the tab spacing that is used by the XHTML text writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cace-142">次のコード例から直接または間接的に派生するすべてのクラスの標準である 2 つのコンス トラクターを作成する方法を示します、<xref:System.Web.UI.HtmlTextWriter>から派生したカスタム クラス用のクラス、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-142">The following code example demonstrates how to create the two constructors, which is standard for all classes that derive directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class, for a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2cace-143">XHTML コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-143">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="2cace-144">行のインデントをレンダリングする際に使用される文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-144">The string used to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-145">指定した行インデントを使用して <see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-145">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class with the specified line indentation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2cace-146">次のコード例から直接または間接的に派生するすべてのクラスの標準である 2 つのコンス トラクターを作成する方法を示します、<xref:System.Web.UI.HtmlTextWriter>から派生したカスタム クラス用のクラス、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-146">The following code example demonstrates how to create the two constructors, which is standard for all classes that derive directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class, for a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="2cace-147">属性を追加する XHTML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-147">The XHTML element to add the attribute to.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="2cace-148">追加する属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-148">The attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-149">属性を XHTML 要素に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-149">Adds an attribute to an XHTML element.</span>
          </span>
          <span data-ttu-id="2cace-150">
            <see cref="T:System.Web.UI.XhtmlTextWriter" /> オブジェクトに対する要素固有属性のコレクションは、<see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> プロパティによって参照されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-150">The collection of element-specific attributes for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object is referenced by the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-151">使用して、 <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> XHTML 要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="2cace-151">Use the <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> method to add an attribute to an XHTML element.</span></span> <span data-ttu-id="2cace-152">追加された属性は、認識し、によって表示される、<xref:System.Web.UI.XhtmlTextWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2cace-152">The added attribute can then be recognized and rendered by the <xref:System.Web.UI.XhtmlTextWriter> object.</span></span> <span data-ttu-id="2cace-153">ライターが XHTML 要素の一般的な属性を表示しないように、使用、<xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-153">To prevent the writer from rendering a common attribute of an XHTML element, use the <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable CommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable CommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ CommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cace-154">
            <see cref="T:System.Collections.Hashtable" /> オブジェクトに対するマークアップ タグの共通属性を格納している <see cref="T:System.Web.UI.XhtmlTextWriter" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-154">Gets a <see cref="T:System.Collections.Hashtable" /> object containing common attributes of the markup tags for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cace-155">共通属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-155">A <see cref="T:System.Collections.Hashtable" /> object containing common attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-156"><xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A>コレクションには、XHTML 要素で許容されるを抑制されない属性が含まれています、<xref:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2cace-156">The <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> collection contains attributes that are allowed in XHTML elements and that are not suppressed in the <xref:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes%2A> property.</span></span> <span data-ttu-id="2cace-157">共通の属性の詳細については、次を参照してください。、 [World Wide Web コンソーシアム (W3C) の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)です。</span><span class="sxs-lookup"><span data-stu-id="2cace-157">For more information on common attributes, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 <span data-ttu-id="2cace-158">新しいインスタンスをときに、<xref:System.Web.UI.XhtmlTextWriter>クラスが作成されると、初期化される共通の属性は。</span><span class="sxs-lookup"><span data-stu-id="2cace-158">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the common attributes that are initialized are:</span></span>  
  
-   `class`  
  
-   `id`  
  
-   `title`  
  
-   `xml:lang`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="ElementSpecificAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ElementSpecificAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable ElementSpecificAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ElementSpecificAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ ElementSpecificAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cace-159">要素固有属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-159">Gets a <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cace-160">要素固有属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-160">A <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-161">使用して、 <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> XHTML 要素に認識されているを追加するメソッドの属性です。</span><span class="sxs-lookup"><span data-stu-id="2cace-161">Use the <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> method to add recognized attributes to an XHTML element.</span></span> <span data-ttu-id="2cace-162">削除するには、XHTML 要素に共通の属性を使用して、<xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-162">To remove common attributes on an XHTML element, use the <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> method.</span></span>  
  
 <span data-ttu-id="2cace-163">新しいインスタンスをときに、<xref:System.Web.UI.XhtmlTextWriter>クラスを作成すると、<xref:System.Collections.Hashtable>要素に固有の属性のオブジェクトには、次の表に示すように属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2cace-163">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the <xref:System.Collections.Hashtable> object of element-specific attributes is populated with the attributes shown in the following table.</span></span>  
  
|<span data-ttu-id="2cace-164">要素</span><span class="sxs-lookup"><span data-stu-id="2cace-164">Element</span></span>|<span data-ttu-id="2cace-165">属性</span><span class="sxs-lookup"><span data-stu-id="2cace-165">Attributes</span></span>|  
|-------------|----------------|  
|`<a>`|<span data-ttu-id="2cace-166">`accesskey`, `href`, `charset`, `hreflang`, `rel`, `type`, `rev`, `title`, `tabindex`</span><span class="sxs-lookup"><span data-stu-id="2cace-166">`accesskey`, `href`, `charset`, `hreflang`, `rel`, `type`, `rev`, `title`, `tabindex`</span></span>|  
|`<base>`|`href`|  
|`<blockquote>`|`cite`|  
|`<br>`|<span data-ttu-id="2cace-167">`id`、`class`、`title`</span><span class="sxs-lookup"><span data-stu-id="2cace-167">`id`, `class`, `title`</span></span>|  
|`<form>`|<span data-ttu-id="2cace-168">`action`、`method`、`enctype`</span><span class="sxs-lookup"><span data-stu-id="2cace-168">`action`, `method`, `enctype`</span></span>|  
|`<head>`|`xml:lang`|  
|`<html>`|<span data-ttu-id="2cace-169">`version`、`xml:lang`、`xmlns`</span><span class="sxs-lookup"><span data-stu-id="2cace-169">`version`, `xml:lang`, `xmlns`</span></span>|  
|`<img>`|<span data-ttu-id="2cace-170">`src`, `alt`, `width`, `longdesc`, `height`</span><span class="sxs-lookup"><span data-stu-id="2cace-170">`src`, `alt`, `width`, `longdesc`, `height`</span></span>|  
|`<input>`|<span data-ttu-id="2cace-171">`size`, `accesskey`, `title`, `name`, `type`, `disabled`, `value`, `src`, `checked`, `maxlength`, `tabindex`</span><span class="sxs-lookup"><span data-stu-id="2cace-171">`size`, `accesskey`, `title`, `name`, `type`, `disabled`, `value`, `src`, `checked`, `maxlength`, `tabindex`</span></span>|  
|`<label>`|<span data-ttu-id="2cace-172">`accesskey`, `for`</span><span class="sxs-lookup"><span data-stu-id="2cace-172">`accesskey`, `for`</span></span>|  
|`<li>`|`value`|  
|`<link>`|<span data-ttu-id="2cace-173">`hreflang`, `rev`, `type`, `charset`, `rel`, `href`, `media`</span><span class="sxs-lookup"><span data-stu-id="2cace-173">`hreflang`, `rev`, `type`, `charset`, `rel`, `href`, `media`</span></span>|  
|`<meta>`|<span data-ttu-id="2cace-174">`content`, `name`, `xml:lang`, `http-equiv`, `scheme`</span><span class="sxs-lookup"><span data-stu-id="2cace-174">`content`, `name`, `xml:lang`, `http-equiv`, `scheme`</span></span>|  
|`<object>`|<span data-ttu-id="2cace-175">`codebase`, `classid`, `data`, `standby`, `name`, `type`, `height`, `archive`, `declare`, `width`, `tabindex`, `codetype`</span><span class="sxs-lookup"><span data-stu-id="2cace-175">`codebase`, `classid`, `data`, `standby`, `name`, `type`, `height`, `archive`, `declare`, `width`, `tabindex`, `codetype`</span></span>|  
|`<ol>`|`start`|  
|`<optgroup>`|<span data-ttu-id="2cace-176">`label`, `disabled`</span><span class="sxs-lookup"><span data-stu-id="2cace-176">`label`, `disabled`</span></span>|  
|`<option>`|<span data-ttu-id="2cace-177">`selected`, `value`</span><span class="sxs-lookup"><span data-stu-id="2cace-177">`selected`, `value`</span></span>|  
|`<param>`|<span data-ttu-id="2cace-178">`id`, `name`, `valuetype`, `value`, `type`</span><span class="sxs-lookup"><span data-stu-id="2cace-178">`id`, `name`, `valuetype`, `value`, `type`</span></span>|  
|`<pre>`|`xml:space`|  
|`<q>`|`cite`|  
|`<select>`|<span data-ttu-id="2cace-179">`name`, `tabindex`, `disabled`, `multiple`, `size`</span><span class="sxs-lookup"><span data-stu-id="2cace-179">`name`, `tabindex`, `disabled`, `multiple`, `size`</span></span>|  
|`<style>`|<span data-ttu-id="2cace-180">`xml:lang`, `xml:space`, `type`, `title`, `media`</span><span class="sxs-lookup"><span data-stu-id="2cace-180">`xml:lang`, `xml:space`, `type`, `title`, `media`</span></span>|  
|`<table>`|<span data-ttu-id="2cace-181">`width`, `summary`</span><span class="sxs-lookup"><span data-stu-id="2cace-181">`width`, `summary`</span></span>|  
|`<textarea>`|<span data-ttu-id="2cace-182">`name`, `cols`, `accesskey`, `tabindex`, `rows`</span><span class="sxs-lookup"><span data-stu-id="2cace-182">`name`, `cols`, `accesskey`, `tabindex`, `rows`</span></span>|  
|`<td>`|<span data-ttu-id="2cace-183">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span><span class="sxs-lookup"><span data-stu-id="2cace-183">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span></span>|  
|`<th>`|<span data-ttu-id="2cace-184">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span><span class="sxs-lookup"><span data-stu-id="2cace-184">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span></span>|  
|`<title>`|`xml:lang`|  
|`<tr>`|<span data-ttu-id="2cace-185">`align`, `valign`</span><span class="sxs-lookup"><span data-stu-id="2cace-185">`align`, `valign`</span></span>|  
  
 <span data-ttu-id="2cace-186">要素とがレンダリングされるスタイルの詳細については、仕様を参照して、XHTML モジュールで、 [World Wide Web コンソーシアム (W3C) の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)です。</span><span class="sxs-lookup"><span data-stu-id="2cace-186">For more information on the elements and styles that are rendered, see the XHTML modularization specification at the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public override bool IsValidFormAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidFormAttribute(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidFormAttribute (attributeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValidFormAttribute(System::String ^ attributeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="2cace-187">確認対象の属性名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-187">The attribute name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-188">XHTML 属性をチェックして、<see langword="&lt;form&gt;" /> 要素の開始タグにその XHTML 属性をレンダリングできるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-188">Checks an XHTML attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2cace-189">属性を <see langword="true" /> 要素に適用できる場合は <see langword="&lt;form&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-189">
              <see langword="true" /> if the attribute can be applied to a <see langword="&lt;form&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-190">このメソッドは、条件付きで要求元のデバイスの XHTML ドキュメントの種類でサポートされているかどうかに応じて属性を表示するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="2cace-190">This method is useful to conditionally render an attribute depending on whether it is supported by the XHTML document type of the requesting device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cace-191">次のコード例は、カスタムを作成する例の一部<xref:System.Web.UI.WebControls.Label>コントロールと XHTML としてコントロールのコンテンツをレンダリングするアダプター。</span><span class="sxs-lookup"><span data-stu-id="2cace-191">The following code example is part of a larger example that creates a custom <xref:System.Web.UI.WebControls.Label> control and an adapter that renders the content of the control as XHTML.</span></span>  
  
 <span data-ttu-id="2cace-192">このコード例は、という名前のブール変数を作成する方法を示します`attTest`呼び出し元から結果の戻り値に設定し、 <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> "style"パラメーターの値を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-192">This code example demonstrates how to create a Boolean variable named `attTest` and set it to the return value that results from calling the <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> method with the parameter value "style".</span></span> <span data-ttu-id="2cace-193">場合、<xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A>メソッドを返します。 `true`、を使用して、コントロールに関連付けられているスタイルが表示される、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-193">If the <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> method returns `true`, the styles that are associated with the control are rendered using the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A?displayProperty=nameWithType> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="2cace-194">場合、`attTest`値は`false`スタイルはレンダリングされません。</span><span class="sxs-lookup"><span data-stu-id="2cace-194">If the `attTest` value is `false`, the styles are not rendered.</span></span> <span data-ttu-id="2cace-195">代わりに、ページには、コントロールのテキストが表示されます、`<br/>`によって表示される要素、<xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A>メソッド、およびコントロールの XHTML コンテンツが条件付きで表示をユーザーに通知をテキスト文字列。</span><span class="sxs-lookup"><span data-stu-id="2cace-195">Instead, the page displays the text for the control, a `<br/>` element that is rendered by the <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> method, and a text string informing the user that the XHTML content of the control has rendered conditionally.</span></span>  
  
 <span data-ttu-id="2cace-196">このコード例に示されている例の一部である、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-196">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2cace-197">レンダリングする XHTML 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-197">The XHTML attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2cace-198">XHTML 属性に代入される値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-198">The value assigned to the XHTML attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="2cace-199">XHTML 属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-199">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value associated with the XHTML attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-200">指定した XHTML 属性とその値を現在のマークアップ要素に出力できるかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-200">Determines whether the specified XHTML attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2cace-201">属性をページにレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-201">
              <see langword="true" /> if the attribute is rendered to the page; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2cace-202">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>を確認するかどうか、`size`このテキスト ライターによってレンダリングされる要素のいずれかの属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2cace-202">The following code example demonstrates how to override the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method to check whether a `size` attribute is rendered for any of the elements that are rendered by this text writer.</span></span> <span data-ttu-id="2cace-203">場合、`size`属性が表示される、コードでは、その値が 8 のポイントであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="2cace-203">If a `size` attribute is rendered, the code checks whether its value is 8 point.</span></span> <span data-ttu-id="2cace-204">場合は、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>メソッドを返します。 `true`、属性、および表示するためにその値を許可します。</span><span class="sxs-lookup"><span data-stu-id="2cace-204">If so, the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method returns `true`, allowing the attribute and its value to render.</span></span> <span data-ttu-id="2cace-205">値が 8 のポイント以外の場合、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>メソッドを返します。 `false`、属性とその値は表示されません。</span><span class="sxs-lookup"><span data-stu-id="2cace-205">If the value is other than 8 point, the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method returns `false`, and the attribute and its value are not rendered.</span></span> <span data-ttu-id="2cace-206">場合、キーのパラメーター、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>メソッドと一致しません、<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性の基本機能、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>で定義されているメソッドを呼び出す、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-206">If the key parameter of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method does not match the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute, the base functionality of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method is called, as defined in the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="2cace-207">このコード例に示されている例の一部である、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-207">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2cace-208">レンダリングする XHTML スタイル属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-208">The XHTML style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2cace-209">XHTML スタイル属性に代入される値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-209">The value assigned to the XHTML style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="2cace-210">XHTML スタイル属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-210">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value associated with the XHTML style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-211">指定した XHTML スタイル属性とその値を現在のマークアップ要素に出力できるかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-211">Determines whether the specified XHTML style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2cace-212">スタイル属性がレンダリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-212">
              <see langword="true" /> if the style attribute is rendered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2cace-213">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A>を確認するかどうか、<xref:System.Web.UI.HtmlTextWriterStyle.Color>このテキスト ライターによってレンダリングされる要素のいずれかの属性を表示しています。</span><span class="sxs-lookup"><span data-stu-id="2cace-213">The following code example demonstrates how to override the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method to check whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is being rendered for any of the elements that are rendered by this text writer.</span></span> <span data-ttu-id="2cace-214">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が表示される、コードは、その値が紫色であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="2cace-214">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is rendered, the code checks whether its value is purple.</span></span> <span data-ttu-id="2cace-215">値が、紫色の場合、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A>メソッドを返します。`false`属性とその値は表示されません。</span><span class="sxs-lookup"><span data-stu-id="2cace-215">If the value is purple, the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method returns `false` and the attribute and its value are not rendered.</span></span> <span data-ttu-id="2cace-216">場合、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性が、他の値に設定されている、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A>メソッドを返します。`true`され、属性とその値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2cace-216">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is set to any other value, the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method returns `true` and the attribute and its value are rendered.</span></span> <span data-ttu-id="2cace-217">場合、キーのパラメーター、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A>メソッドと一致しません、<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性の基本機能、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A>で定義されているメソッドを呼び出す、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-217">If the key parameter of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method does not match the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute, the base functionality of the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method is called, as defined in the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="2cace-218">このコード例に示されている例の一部である、<xref:System.Web.UI.XhtmlTextWriter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2cace-218">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="2cace-219">属性を削除する XHTML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-219">The XHTML element to remove an attribute from.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="2cace-220">指定された XHTML 要素から削除する属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-220">The attribute to remove from the specified XHTML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-221">要素の <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> コレクションから属性を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-221">Removes an attribute from the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> collection of an element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetDocType">
      <MemberSignature Language="C#" Value="public virtual void SetDocType (System.Web.UI.XhtmlMobileDocType docType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocType(valuetype System.Web.UI.XhtmlMobileDocType docType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.SetDocType(System.Web.UI.XhtmlMobileDocType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDocType (docType As XhtmlMobileDocType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDocType(System::Web::UI::XhtmlMobileDocType docType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docType" Type="System.Web.UI.XhtmlMobileDocType" />
      </Parameters>
      <Docs>
        <param name="docType">
          <span data-ttu-id="2cace-222">
            <see cref="T:System.Web.UI.XhtmlMobileDocType" /> 列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-222">One of the <see cref="T:System.Web.UI.XhtmlMobileDocType" /> enumeration values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cace-223">テキスト ライターがページまたはコントロールにレンダリングする XHTML ドキュメント タイプを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-223">Specifies the XHTML document type for the text writer to render to the page or control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-224">使用して、<xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A>要求元のデバイスを表示する XHTML の種類を定義するカスタム ページ アダプター内のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-224">Use the <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> method in a custom page adapter to define the type of XHTML that you want to render to the requesting device.</span></span> <span data-ttu-id="2cace-225">サポートされているドキュメントの種類が定義されている、<xref:System.Web.UI.XhtmlMobileDocType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="2cace-225">Supported document types are defined in the <xref:System.Web.UI.XhtmlMobileDocType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XhtmlMobileDocType" />
      </Docs>
    </Member>
    <Member MemberName="SuppressCommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressCommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressCommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressCommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressCommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cace-226">
            <see cref="T:System.Collections.Hashtable" /> 属性が出力されない要素の <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-226">Gets a <see cref="T:System.Collections.Hashtable" /> object of elements for which <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> attributes are suppressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cace-227">レンダリングされない <see cref="T:System.Collections.Hashtable" /> のコレクションを格納している要素の <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-227">A <see cref="T:System.Collections.Hashtable" /> of elements containing a collection of <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> that are not rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cace-228">抑制された属性のコレクションには XHTML 要素の一覧が含まれます<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A>属性はレンダリングされません。</span><span class="sxs-lookup"><span data-stu-id="2cace-228">The suppressed attribute collection includes a list of XHTML elements for which <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> attributes are not rendered.</span></span>  
  
 <span data-ttu-id="2cace-229">新しいインスタンスをときに、<xref:System.Web.UI.XhtmlTextWriter>クラスを作成すると、<xref:System.Collections.Hashtable>対象の要素のオブジェクト<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A>属性が抑制されますが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2cace-229">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the <xref:System.Collections.Hashtable> object of elements for which <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> attributes are suppressed includes:</span></span>  
  
-   `base`  
  
-   `meta`  
  
-   `br`  
  
-   `head`  
  
-   `title`  
  
-   `html`  
  
-   `style`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2cace-230">
            <see langword="&lt;br/&gt;" /> 要素を XHTML 出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cace-230">Writes a <see langword="&lt;br/&gt;" /> element to the XHTML output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2cace-231">次のコード例では、継承した<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A?displayProperty=nameWithType>でテキスト文字列を記述するメソッド、<xref:System.Web.UI.HtmlTextWriter.Write%2A?displayProperty=nameWithType>メソッドおよび`<br/>`を持つ要素、<xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2cace-231">The following code example demonstrates how to override the inherited <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A?displayProperty=nameWithType> method to write a text string with the <xref:System.Web.UI.HtmlTextWriter.Write%2A?displayProperty=nameWithType> method and a `<br/>` element with the <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> method.</span></span>  
  
 [!code-csharp[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#4)]
 [!code-vb[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>