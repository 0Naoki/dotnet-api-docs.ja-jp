<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IHierarchyData.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54401bd445a98e07a176f0bdd5128240d058c8310.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4401bd445a98e07a176f0bdd5128240d058c8310</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node.</source>
          <target state="translated">階層データ構造のノードを公開します。ノード オブジェクトと、そのノードの特性を示すいくつかのプロパティが含まれます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Objects that implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> interface can be contained in <ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collections, and are used by ASP.NET site navigation and data source controls.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> インターフェイスを実装するオブジェクトは、<ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> コレクションに格納でき、ASP.NET サイト ナビゲーションとデータ ソース コントロールによって使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスは、階層構造のノードを表すし、その親と子ノードへの階層リレーションシップを追跡するクラスによって実装されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>Classes that implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface can be contained in collections that implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> interface.</source>
          <target state="translated">実装するクラス、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスを実装するコレクションに格納できる、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface with a class that wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object.</source>
          <target state="translated">次のコード例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスをラップするクラスを<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> class is a good example of a hierarchical data node, which the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface represents for ASP.NET hierarchical data source controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>クラスは、階層的なデータ ノードの良い例を<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>ASP.NET 階層的なデータ ソース コントロールのインターフェイスを表します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to recursively iterate through an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection, extract the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> item from the enumerator using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method, and perform basic work with the data item.</source>
          <target state="translated">次のコード例を示す方法を再帰的に反復処理、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>コレクション、展開、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>を使用して列挙子からの項目、<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>メソッド、し、データ項目で基本的な作業を実行します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>Gets an enumeration object that represents all the child nodes of the current hierarchical node.</source>
          <target state="translated">現在の階層ノードのすべての子ノードを表す列挙オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collection of child nodes of the current hierarchical node.</source>
          <target state="translated">現在の階層ノードの子ノードの <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node has child nodes.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>プロパティを決定するかどうか、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>ノードが子ノードです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>The following code example demonstrates how to check the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を確認する方法を示しています、 <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> 、現在の階層的なデータ ノードが子ノードを持つかどうかを特定し、資格情報を取得するプロパティを使用して、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated">現在の階層ノードの親ノードを表す <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated">現在の階層ノードの親ノードを表す <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface does not define a HasParent convenience property, so callers must check the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method for <ph id="ph3">`null`</ph> to determine whether the current <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node is the root node of the hierarchical data structure to which the node belongs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスが HasParent 便利なプロパティを定義していないので、呼び出し元の戻り値を確認する必要があります、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>メソッド<ph id="ph3">`null`</ph>を決定するかどうか、現在<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>ノード、ノードが属している、階層データ構造のルート ノードです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">次のコード例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>を実装するクラスのメソッド、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method implementation checks the type of the <ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and returns the appropriate parent object based on the type.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>ラップ、<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクト、および<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>メソッドの実装の種類のチェック、<ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクト、および種類に基づいて、適切な親オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスおよび<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Indicates whether the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents has any child nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> オブジェクトが表す階層データ ノードに子ノードがあるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has child nodes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のノードが子ノードを持っている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is a convenience property that enables callers to avoid checking the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method for <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>プロパティは、呼び出し元の戻り値のチェックを避けるためにできるようにする便利なプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>メソッド<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method to retrieve an <ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection of child nodes.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>プロパティから返される<ph id="ph2">`true`</ph>を呼び出し、<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>を取得する方法、<ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>子ノードのコレクション。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object in a recursive data-binding method.</source>
          <target state="translated">次のコード例では、ASP.NET の階層的なデータ バインド コントロールの使用方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>再帰的なデータ バインディング メソッドのオブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The items in an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection are enumerated, and for each an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object is retrieved using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method.</source>
          <target state="translated">内の項目、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>コレクションは列挙型、および各、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>を使用してオブジェクトを取得、<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is checked to determine whether to recurse.</source>
          <target state="translated">最後に、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>プロパティのチェックが再帰的に検索するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>Gets the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> オブジェクトが表す階層データ ノードを取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> hierarchical data node object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 階層データ ノード オブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>While many classes that represent hierarchical data nodes, such as the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> class, implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface directly, other classes only act as a wrapper for a class that does not implement the interface.</source>
          <target state="translated">多くのクラスなど、階層的なデータ ノードを表すときに、<ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>クラスを実装、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスを直接、その他のクラスは、インターフェイスが実装されているクラスのラッパーとしてのみ機能します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph> property is provided for these design situations, when business objects are functionally equivalent to an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object but cannot be redesigned easily.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph>プロパティは、ビジネス オブジェクトが機能的に等価の場合、これらのデザインの状況では、提供、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>オブジェクトが、簡単に再設計することはできません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The following code example demonstrates how to access <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties, check the type of an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property, and cast the object to perform more type-specific operations.</source>
          <target state="translated">次のコード例は、アクセスする方法を示します<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>プロパティの型を調べて、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>プロパティ、およびキャストをより多くの種類に固有の操作を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>Gets the hierarchical path of the node.</source>
          <target state="translated">ノードの階層パスを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the hierarchical path relative to the current node.</source>
          <target state="translated">現在のノードに相対的な階層パスを示す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property can be passed to the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> method to retrieve the <ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> object that corresponds to the node identified by <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>にプロパティを渡すことができます、<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph>を取得する方法、<ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>オブジェクトで識別されるノードに対応する<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>プロパティ含めることはできません、ホスト環境に関する機密情報がデータ バインド コントロール内のクライアントに表示されるためです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">次のコード例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>を実装するクラスのプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property implementation returns its file system path.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>ラップ、<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>オブジェクト、および<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>プロパティの実装は、ファイル システム パスを返します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスおよび<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>Gets the name of the type of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> プロパティに含まれている <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> の型の名前を取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The name of the type of object that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> オブジェクトが表すオブジェクトの型の名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property does not return the <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> of the object represented in an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>プロパティは返されません、<ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph>で表されるオブジェクトの<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.</source>
          <target state="translated">別のバインド可能なプロパティを持つ階層内の項目を区別するためにデータ バインド コントロールで使用される名前を返します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The following code example demonstrates how to write the basic <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties to an <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> stream, then check the type of an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property and cast the object to perform more type-specific operations.</source>
          <target state="translated">次のコード例は、basic を記述する方法を示します<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph>ストリームの種類を確認して、<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>オブジェクトを使用して、<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>プロパティは、複数の種類に固有の操作を実行するオブジェクトをキャストします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>インターフェイスです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>