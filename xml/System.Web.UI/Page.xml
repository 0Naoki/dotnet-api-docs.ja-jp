<Type Name="Page" FullName="System.Web.UI.Page">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57ad865c267961e0b64c7a4656688a27eb6c1487" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311415" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Web.UI.TemplateControl implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits TemplateControl&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Web::UI::TemplateControl, System::Web::IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("ASPXCodeBehind")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="72e00-101">ASP.NET Web アプリケーションのホストであるサーバーから要求される .aspx ファイル (Web フォーム ページとも呼ばれる) を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="72e00-101">Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-102"><xref:System.Web.UI.Page>クラスは、.aspx 拡張子を持つファイルに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="72e00-102">The <xref:System.Web.UI.Page> class is associated with files that have an .aspx extension.</span></span> <span data-ttu-id="72e00-103">これらのファイルは実行時としてコンパイル<xref:System.Web.UI.Page>オブジェクトし、サーバーのメモリにキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="72e00-103">These files are compiled at run time as <xref:System.Web.UI.Page> objects and cached in server memory.</span></span>  
  
 <span data-ttu-id="72e00-104">コードの分離手法を使用して、Web フォーム ページを作成する場合は、このクラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="72e00-104">If you want to create a Web Forms page using the code-behind technique, derive from this class.</span></span> <span data-ttu-id="72e00-105">Microsoft Visual Studio などのアプリケーションの迅速な development (RAD) デザイナーは、Web フォーム ページを作成するのに、このモデルを自動的に使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-105">Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.</span></span>  
  
 <span data-ttu-id="72e00-106"><xref:System.Web.UI.Page>オブジェクトを実装するものを除く、ページ内のすべてのサーバー コントロールの名前付けコンテナーとして機能、<xref:System.Web.UI.INamingContainer>インターフェイスや、このインターフェイスを実装するコントロールの子コントロールは、します。</span><span class="sxs-lookup"><span data-stu-id="72e00-106">The <xref:System.Web.UI.Page> object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.</span></span>  
  
 <span data-ttu-id="72e00-107"><xref:System.Web.UI.Page>クラスは、コントロールを Web アプリケーションのユーザー インターフェイスとして機能し、そのためのセキュリティで保護されたコードの記述およびアプリケーションのセキュリティ保護が後に確認のベスト プラクティスを調査する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-107">The <xref:System.Web.UI.Page> class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</span></span> <span data-ttu-id="72e00-108">これらのトピックの概要については、次を参照してください。[概要の Web アプリケーション セキュリティの脅威](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a)、 [NIB: セキュリティ ポリシーのベスト プラクティス](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)、および[セキュリティの基本概念](~/docs/standard/security/key-security-concepts.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-108">For general information on these topics, see [Overview of Web Application Security Threats](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/docs/standard/security/key-security-concepts.md).</span></span> <span data-ttu-id="72e00-109">詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)、[する方法: 安全なエラー メッセージを表示](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)、および[検証コントロールの概要](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-109">For more specific information, see [Securing Standard Controls](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [How to: Display Safe Error Messages](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), and [Introduction to the Validation Controls](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-110">Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=192425)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).</span></span>  
  
 <span data-ttu-id="72e00-111">次のコード例を示していますが、どのように<xref:System.Web.UI.Page>クラスは、分離コード ページ モデルで使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-111">The following code example demonstrates how the <xref:System.Web.UI.Page> class is used in the code-behind page model.</span></span> <span data-ttu-id="72e00-112">分離コードのソース ファイルが、ページの基本クラスから継承する部分クラスを宣言することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-112">Note that the code-behind source file declares a partial class that inherits from a base page class.</span></span> <span data-ttu-id="72e00-113">ベース ページのクラスを指定できます<xref:System.Web.UI.Page>、または別のクラスから派生したできます<xref:System.Web.UI.Page>です。</span><span class="sxs-lookup"><span data-stu-id="72e00-113">The base page class can be <xref:System.Web.UI.Page>, or it can be another class that derives from <xref:System.Web.UI.Page>.</span></span> <span data-ttu-id="72e00-114">さらに、部分クラスは、フィールドのメンバーとして定義する必要はありません ページで定義されているコントロールを使用する分離コード ファイルに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-114">Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx.cs#2)]
 [!code-vb[System.Web.UI.Page_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx.vb#2)]  
  
 <span data-ttu-id="72e00-115">次のコード例では、上記のコード ビハインド ソース ファイルに対応する .aspx ファイルを示します。</span><span class="sxs-lookup"><span data-stu-id="72e00-115">The following code example shows the .aspx file that corresponds to the preceding code-behind source file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-116">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-117">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-118">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-118">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx#1)]  
  
 <span data-ttu-id="72e00-119">ディレクティブを使用して、使用する必要があります、`Inherits`と`CodeFile`.aspx ファイルに分離コード ファイルをリンクする属性。</span><span class="sxs-lookup"><span data-stu-id="72e00-119">You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file.</span></span> <span data-ttu-id="72e00-120">この例では、`Inherits`属性を示します、`MyCodeBehind`クラスおよび`CodeFile`属性がクラスを含む言語固有のファイルへのパスを示します。</span><span class="sxs-lookup"><span data-stu-id="72e00-120">In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.</span></span>  
  
 <span data-ttu-id="72e00-121">次のコード例は、単一ファイル ページ モデルおよびへのアクセス方法を示しています、<xref:System.Web.UI.Page.IsPostBack%2A>プロパティおよび<xref:System.Web.UI.Page.Response%2A>のプロパティ、<xref:System.Web.UI.Page>です。</span><span class="sxs-lookup"><span data-stu-id="72e00-121">The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the <xref:System.Web.UI.Page>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/vb/pageexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-122">
            <see cref="T:System.Web.UI.Page" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-122">Initializes a new instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-123">既定のコンス トラクターは、すべてのフィールドを既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e00-123">The default constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">
          <span data-ttu-id="72e00-124">追加するコンテンツ テンプレートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-124">The name of the content template to add.</span>
          </span>
        </param>
        <param name="template">
          <span data-ttu-id="72e00-125">コンテンツ テンプレート</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-125">The content template</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-126">現在のページまたは現在のマスター ページがマスター ページを参照している場合に、ページの初期化中に呼び出され、マスター ページに渡すコンテンツのコレクションを (コンテンツ コントロールから) 作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-126">Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-127">同一の名前を持つ既存のコンテンツ テンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-127">A content template with the same name already exists.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRenderCompleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-128">非同期ページの開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-128">Registers beginning and ending event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="72e00-129">
            <see cref="T:System.Web.BeginEventHandler" /> メソッドへのデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-129">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="72e00-130">
            <see cref="T:System.Web.EndEventHandler" /> メソッドへのデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-130">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-131">非同期ページの状態情報を必要としない開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-131">Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-132">使用して、<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A>非同期 Web ページにハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="72e00-132">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers to an asynchronous Web page.</span></span>  
  
 <span data-ttu-id="72e00-133">複数の非同期ハンドラーを登録することができます。ただし、一度に 1 つだけのハンドラーが実行されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-133">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="72e00-134">同時に複数の非同期メソッドを処理する場合は、1 つを使用する必要があります<xref:System.Web.BeginEventHandler>メソッドとそのハンドラーからの複数の非同期操作を起動します。</span><span class="sxs-lookup"><span data-stu-id="72e00-134">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="72e00-135">間で非同期のハンドラーが呼び出される、<xref:System.Web.UI.Control.PreRender>と<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-135">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="72e00-136">最初に、すべて<xref:System.Web.UI.Page>イベント (を通じて、<xref:System.Web.UI.Control.PreRender>イベント) は、実行、および各し、登録されている<xref:System.Web.BeginEventHandler>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-136">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="72e00-137">ときに、ハンドラーが完了したら、対応する<xref:System.Web.EndEventHandler>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-137">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="72e00-138">複数の非同期ハンドラーがある場合は、[次へ] のハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-138">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="72e00-139">登録済みの非同期イベント ハンドラーが呼び出された後、残りのページのイベントが呼び出されると、以降で、<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-139">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-140">次のコード例では、非同期要求を使ってのローカル Web サーバーの既定のページの HTML ソース コードを表示する、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-140">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-141">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-141">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-142">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-142">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-143">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-143">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-144">
            <see langword="&lt;async&gt;" /> ページ ディレクティブが、<see langword="true" /> に設定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-144">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="72e00-145">\- - または -  <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> メソッドは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後で呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-145">\- or -  The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-146">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> または <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-146">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="72e00-147">
            <see cref="T:System.Web.BeginEventHandler" /> メソッドへのデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-147">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="72e00-148">
            <see cref="T:System.Web.EndEventHandler" /> メソッドへのデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-148">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="72e00-149">イベント ハンドラーの状態情報を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-149">An object containing state information for the event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-150">非同期ページの開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-150">Registers beginning and ending  event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-151">使用して、<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A>メソッドを非同期の Web ページに状態情報を必要とするハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="72e00-151">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers that require state information to an asynchronous Web page.</span></span> <span data-ttu-id="72e00-152">渡されたオブジェクト、`state`パラメーターで指定されたイベント ハンドラー デリゲートの間で情報を転送するアプリケーションに必要な任意のオブジェクトを指定できます、`beginHandler`と`endHandler`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="72e00-152">The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.</span></span>  
  
 <span data-ttu-id="72e00-153">複数の非同期ハンドラーを登録することができます。ただし、一度に 1 つだけのハンドラーが実行されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-153">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="72e00-154">同時に複数の非同期メソッドを処理する場合は、1 つを使用する必要があります<xref:System.Web.BeginEventHandler>メソッドとそのハンドラーからの複数の非同期操作を起動します。</span><span class="sxs-lookup"><span data-stu-id="72e00-154">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="72e00-155">間で非同期のハンドラーが呼び出される、<xref:System.Web.UI.Control.PreRender>と<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-155">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="72e00-156">最初に、すべて<xref:System.Web.UI.Page>イベント (を通じて、<xref:System.Web.UI.Control.PreRender>イベント) は、実行、および各し、登録されている<xref:System.Web.BeginEventHandler>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-156">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="72e00-157">ときに、ハンドラーが完了したら、対応する<xref:System.Web.EndEventHandler>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-157">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="72e00-158">複数の非同期ハンドラーがある場合は、[次へ] のハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-158">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="72e00-159">登録済みの非同期イベント ハンドラーが呼び出された後、残りのページのイベントが呼び出されると、以降で、<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-159">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-160">次のコード例では、非同期要求を使ってのローカル Web サーバーの既定のページの HTML ソース コードを表示する、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-160">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-161">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-161">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-162">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-162">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-163">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-163">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-164">
            <see langword="&lt;async&gt;" /> ページ ディレクティブが、<see langword="true" /> に設定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-164">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="72e00-165">\- - または -  <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> メソッドは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後で呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-165">\- or -  The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-166">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> または <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-166">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected internal void AddWrappedFileDependencies (object virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddWrappedFileDependencies(object virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddWrappedFileDependencies(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddWrappedFileDependencies (virtualFileDependencies As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddWrappedFileDependencies(System::Object ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="72e00-167">ファイル名の一覧を含んでいる <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-167">An <see cref="T:System.Object" /> containing the list of file names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-168">現在のページを構成している依存ファイルの一覧を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-168">Adds a list of dependent files that make up the current page.</span>
          </span>
          <span data-ttu-id="72e00-169">このメソッドは、ASP.NET ページ フレームワークによって内部的に使用されるメソッドであり、コードから直接呼び出すためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-169">This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-170"><xref:System.Web.UI.Page.AddWrappedFileDependencies%2A>メソッドは、現在のページを構成するユーザー コントロール ファイルなどのファイルの一覧を追加します。</span><span class="sxs-lookup"><span data-stu-id="72e00-170">The <xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> method adds a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="72e00-171">これらのページのいずれかを変更する場合、ページ全体には、要求時に、[次へ] がコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-171">If any of these pages is modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="72e00-172">このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-172">This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-173">現在の Web 要求に対する <see cref="T:System.Web.HttpApplicationState" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-173">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-174">
            <see cref="T:System.Web.HttpApplicationState" /> クラス内の現在のデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-174">The current data in the <see cref="T:System.Web.HttpApplicationState" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page.Application_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Application_Sample1/CS/applicationcs.aspx#1)]
 [!code-vb[Page.Application_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Application_Sample1/VB/applicationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="AspCompatBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AspCompatBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AspCompatBeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AspCompatBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="72e00-175">現在の要求に関する情報が含まれている <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-175">An <see cref="T:System.Web.HttpContext" /> with information about the current request.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="72e00-176">コールバック メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-176">The callback method.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="72e00-177">要求を ASP 要求と同様に処理する必要があるその他のデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-177">Any extra data needed to process the request in the same manner as an ASP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-178">Active Server Page (ASP) リソースに対する要求を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-178">Initiates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="72e00-179">このメッソドは、レガシ ASP アプリケーションとの互換性のために用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-179">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-180">
            <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-180">An <see cref="T:System.IAsyncResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-181">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-181">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AspCompatEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AspCompatEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AspCompatEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AspCompatEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="72e00-182">要求によって生成された ASP ページ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-182">The ASP page generated by the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-183">Active Server Page (ASP) リソースに対する要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-183">Terminates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="72e00-184">このメッソドは、レガシ ASP アプリケーションとの互換性のために用意されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-184">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-185">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-185">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatMode">
      <MemberSignature Language="C#" Value="protected bool AspCompatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AspCompatMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AspCompatMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AspCompatMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AspCompatMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-186">ページをシングルスレッド アパートメント (STA: Single-Threaded Apartment) スレッドで実行できるかどうかを示す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-186">Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-187">ページが Active Server Pages (ASP) コードをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-187">
              <see langword="true" /> if the page supports Active Server Pages (ASP) code; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-188">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-188">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-189">設定すると`true`、このプロパティは、シングル スレッド アパートメント (STA) スレッドで実行するページを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-189">When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread.</span></span> <span data-ttu-id="72e00-190">これにより、ページから Visual Basic 6.0 で開発したコンポーネントなどの STA コンポーネントを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-190">This allows the page to call STA components, such as components developed with Visual Basic 6.0.</span></span> <span data-ttu-id="72e00-191">このプロパティを設定`true`ページから、そのアンマネージ ASP 組み込みオブジェクトへのアクセスを必要とする COM + コンポーネントを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-191">Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.</span></span> <span data-ttu-id="72e00-192">これらは、ASP 経由でアクセスできる`ObjectContext`オブジェクトまたは`OnStartPage`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-192">These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.</span></span>  
  
 <span data-ttu-id="72e00-193">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-193">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-194">設定、`aspcompat`属性を`true`.aspx ファイルで、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-194">Set the `aspcompat` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-195">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-195">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncMode">
      <MemberSignature Language="C#" Value="protected bool AsyncMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AsyncMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AsyncMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-196">ページが同期して処理されるのか、非同期に処理されるのかを示す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-196">Sets a value indicating whether the page is processed synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-197">ページが非同期に処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-197">
              <see langword="true" /> if the page is processed asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-198"><xref:System.Web.UI.Page.AsyncMode%2A>プロパティで設定されて、<xref:System.Web.UI.Page>パーサーのページのコードが生成されたときにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-198">The <xref:System.Web.UI.Page.AsyncMode%2A> property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated.</span></span> <span data-ttu-id="72e00-199">使用して、`Async`この値を設定するディレクティブ内の属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-199">Use the `Async` attribute in  directive to set this value.</span></span>  
  
 <span data-ttu-id="72e00-200">非同期ページがうまくできない場合に、`AspCompat`属性に設定されている`true`または`Transaction`属性が以外の値に設定が`Disabled`ディレクティブにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-200">Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AsyncPageBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AsyncPageBeginProcessRequest (context As HttpContext, callback As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AsyncPageBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="72e00-201">要求の <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-201">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="72e00-202">処理がいつ完了するのかを知らせるコールバック メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-202">The callback method to notify when the process is complete.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="72e00-203">非同期メソッドの状態データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-203">State data for the asynchronous method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-204">非同期のページ要求の処理を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-204">Begins processing an asynchronous page request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-205">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-205">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AsyncPageEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AsyncPageEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AsyncPageEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AsyncPageEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="72e00-206">保留中の非同期の要求を参照している <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-206">An <see cref="T:System.IAsyncResult" /> referencing a pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-207">非同期のページ要求の処理を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-207">Ends processing an asynchronous page request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-208">取得または非同期タスクを処理するときに使用されるタイムアウト間隔を示す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-208">Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-209">非同期操作を完了するまでの、許容される時間間隔を格納している <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-209">A <see cref="T:System.TimeSpan" /> that contains the allowed time interval for completion of the asynchronous task.</span>
          </span>
          <span data-ttu-id="72e00-210">既定の時間間隔は 45 秒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-210">The default time interval is 45 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-211">ページの非同期のタイムアウトは、非同期タスクを実行するページが待機する時間を表します。</span><span class="sxs-lookup"><span data-stu-id="72e00-211">The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.</span></span> <span data-ttu-id="72e00-212">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-212">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-213">ページ非同期のタイムアウト間隔を使用して、設定、または Web 構成ファイルのディレクティブにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-213">Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive.</span></span> <span data-ttu-id="72e00-214">ページ ディレクティブでは、ページの構成セクションで設定された値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-214">Values set in the page configuration section are overwritten by the page directive.</span></span>  
  
 <span data-ttu-id="72e00-215">使用して、非同期タスクを定義する、<xref:System.Web.UI.PageAsyncTask>クラスし、開始、終了、およびタイムアウトのハンドラーを登録します。</span><span class="sxs-lookup"><span data-stu-id="72e00-215">Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler.</span></span> <span data-ttu-id="72e00-216">指定された時間間隔で、非同期タスクが完了しない場合、タイムアウトのハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-216">If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-217">使用を次のコード例に示します、<xref:System.Web.UI.Page.AsyncTimeout%2A>を持つプロパティ、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>と<xref:System.Web.UI.Page.RegisterAsyncTask%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-217">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="72e00-218">先頭、末尾、およびタイムアウト ハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-218">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="72e00-219">指定されているタスクの割り当て時刻を超えた場合、非同期タスクのような状況を示す例では、人為的な遅延が導入された、<xref:System.Web.UI.Page.AsyncTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-219">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="72e00-220">現実のシナリオで非同期タスクは、データベースの呼び出しまたはイメージの生成を実行するために使用可能性がありますなどとタイムアウト ハンドラーは、一定の時間で、タスクは実行されない場合に下げるを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-220">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span> <span data-ttu-id="72e00-221">なお、 <xref:System.Web.UI.Page.AsyncTimeout%2A> page ディレクティブでプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-221">Note that the <xref:System.Web.UI.Page.AsyncTimeout%2A> property is set in the page directive.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-222">プロパティは負の値に設定されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-222">The property was set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBackControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control AutoPostBackControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control AutoPostBackControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AutoPostBackControl" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPostBackControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ AutoPostBackControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-223">ポストバックの実行に使用されるページ内のコントロールを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-223">Gets or sets the control in the page that is used to perform postbacks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-224">ポストバックの実行に使用されるコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-224">The control that is used to perform postbacks.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-225">ページ出力がバッファリングされるかどうかを示す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-225">Sets a value indicating whether the page output is buffered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-226">ページ出力がバッファリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-226">
              <see langword="true" /> if page output is buffered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-227">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-227">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-228">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-228">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-229">設定、<xref:System.Web.UI.Page.Buffer%2A>属性を`true`.aspx ファイルで、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-229">Set the <xref:System.Web.UI.Page.Buffer%2A> attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-230">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-230">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-231"><xref:System.Web.UI.Page.Buffer%2A>設定および取得するプロパティ、<xref:System.Web.HttpResponse.BufferOutput%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-231">The <xref:System.Web.UI.Page.Buffer%2A> property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-232">ページが存在するアプリケーションに関連付けられた <see cref="T:System.Web.Caching.Cache" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-232">Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-233">ページのアプリケーションに関連付けられた <see cref="T:System.Web.Caching.Cache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-233">The <see cref="T:System.Web.Caching.Cache" /> associated with the page's application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-234">アプリケーションの<xref:System.Web.Caching.Cache>オブジェクトでは、格納および後続の要求に任意のデータを取得することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-234">An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests.</span></span> <span data-ttu-id="72e00-235">キャッシュ専用に関連付けられていないページやユーザーのセッションです。</span><span class="sxs-lookup"><span data-stu-id="72e00-235">The cache is not specifically associated with a page or user session.</span></span> <span data-ttu-id="72e00-236">アプリケーションのパフォーマンスを強化するには、主に使用されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-236">It is used primarily to enhance application performance.</span></span> <span data-ttu-id="72e00-237">詳細については、次を参照してください。[アプリケーション データをキャッシュ](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-237">For more information, see [Caching Application Data](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d).</span></span> <span data-ttu-id="72e00-238">アプリケーションのキャッシュとページ出力キャッシュの違いの詳細については、次を参照してください。 [ASP.NET のキャッシュの概要](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-238">For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-239">次のコード例に 2 つの整数の合計の挿入、<xref:System.Web.Caching.Cache?displayProperty=nameWithType>オブジェクトを使用して、<xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-239">The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=nameWithType> object using the <xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="72e00-240">さらを使用して値を取得、<xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType>メソッドに書き込むと、 <xref:System.Web.UI.WebControls.Label> Web サーバー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="72e00-240">It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.</span></span>  
  
 [!code-csharp[System.Web.Page.Cache_Replacement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/CS/pagecachecs.aspx#1)]
 [!code-vb[System.Web.Page.Cache_Replacement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/VB/pagecachevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-241">
            <see cref="T:System.Web.Caching.Cache" /> のインスタンスが作成されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-241">An instance of <see cref="T:System.Web.Caching.Cache" /> is not created.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="ClientQueryString">
      <MemberSignature Language="C#" Value="public string ClientQueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientQueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientQueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientQueryString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-242">要求された URL のクエリ文字列部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-242">Gets the query string portion of the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-243">要求された URL のクエリ文字列部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-243">The query string portion of the requested URL.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-244"><xref:System.Web.UI.Page.ClientQueryString%2A>プロパティには、ブラウザーが要求された URL のクエリ文字列の部分が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-244">The <xref:System.Web.UI.Page.ClientQueryString%2A> property contains the query string portion of the URL requested by the browser.</span></span> <span data-ttu-id="72e00-245">たとえば、要求された url"http://www.contoso.com/default.aspx?id=100"では、<xref:System.Web.UI.Page.ClientQueryString%2A>プロパティが格納されます"id = 100"です。</span><span class="sxs-lookup"><span data-stu-id="72e00-245">For example, if the requested URL is "http://www.contoso.com/default.aspx?id=100", the <xref:System.Web.UI.Page.ClientQueryString%2A> property will contain "id=100".</span></span> <span data-ttu-id="72e00-246"><xref:System.Web.UI.Page.ClientQueryString%2A>でエンコードされたプロパティを使用して、<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType>クエリ文字列をデコードするメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-246">The <xref:System.Web.UI.Page.ClientQueryString%2A> property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> method to decode the query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientScriptManager ClientScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ClientScriptManager ClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientScript As ClientScriptManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientScriptManager ^ ClientScript { System::Web::UI::ClientScriptManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientScriptManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-247">スクリプトの管理と登録、およびページへの追加に使用する <see cref="T:System.Web.UI.ClientScriptManager" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-247">Gets a <see cref="T:System.Web.UI.ClientScriptManager" /> object used to manage, register, and add script to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-248">
            <see cref="T:System.Web.UI.ClientScriptManager" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-248">A <see cref="T:System.Web.UI.ClientScriptManager" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-249">使用して、<xref:System.Web.UI.Page.ClientScript%2A>を取得するプロパティ、<xref:System.Web.UI.ClientScriptManager>管理、登録、およびスクリプトを Web ページに追加するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-249">Use the <xref:System.Web.UI.Page.ClientScript%2A> property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page.</span></span> <span data-ttu-id="72e00-250">詳細については、<xref:System.Web.UI.ClientScriptManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-250">For more information, see the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
 <span data-ttu-id="72e00-251"><xref:System.Web.UI.ClientScriptManager>クラスはで新しく[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]置き換えます<xref:System.Web.UI.Page>クラスは使用されなくなりましたスクリプトを管理するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-251">The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-252">例については、次を参照してください。、<xref:System.Web.UI.ClientScriptManager>クラスの概要に関するトピック。</span><span class="sxs-lookup"><span data-stu-id="72e00-252">For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="ClientTarget">
      <MemberSignature Language="C#" Value="public string ClientTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientTarget" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTarget As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientTarget { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-253">ブラウザーの自動検出機能をオーバーライドし、ページが特定のブラウザー クライアントでどのように表示されるかを指定できるようにする値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-253">Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-254">オーバーライドするブラウザー機能を指定する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-254">A <see cref="T:System.String" /> that specifies the browser capabilities that you want to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-255">設定しない場合、 <xref:System.Web.UI.Page.ClientTarget%2A> 、プロパティ、<xref:System.Web.HttpBrowserCapabilities>オブジェクトに関連付けられている、<xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType>プロパティには、クライアント ブラウザーの機能が反映されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-255">If you do not set the <xref:System.Web.UI.Page.ClientTarget%2A> property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> property reflects the capabilities of the client browser.</span></span> <span data-ttu-id="72e00-256">このプロパティを設定すると、クライアント ブラウザーの検出が無効になり、ページは、指定した値 (エイリアス) に関連付けられているブラウザーの機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-256">If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.</span></span>  
  
 <span data-ttu-id="72e00-257">Web サーバー コンピューター上のルート Web.config 構成ファイルには、一般的なユーザー エージェント文字列の代わりに使用できる次の既定のエイリアスを定義します。</span><span class="sxs-lookup"><span data-stu-id="72e00-257">The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:</span></span>  
  
-   <span data-ttu-id="72e00-258">`uplevel`、Internet Explorer 6.0 と同じブラウザーの機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-258">`uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.</span></span>  
  
-   <span data-ttu-id="72e00-259">`downlevel`、クライアント スクリプトをサポートしていない古いブラウザーと同じブラウザーの機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-259">`downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script.</span></span> <span data-ttu-id="72e00-260">このエイリアスを使用して、Web ページがクライアント スクリプトが無効になっているブラウザーでどのように動作する方法を決定することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-260">You can use this alias to determine how Web pages would work in a browser that has client script disabled.</span></span>  
  
 <span data-ttu-id="72e00-261">このプロパティを使用してプログラムからエイリアスを設定することも設定を使用して宣言できるは、`ClientTarget`ディレクティブの属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-261">You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive.</span></span>  
  
 <span data-ttu-id="72e00-262">追加のエイリアスを定義することができます、`clientTarget`アプリケーション レベルの Web.config ファイルのセクションです。</span><span class="sxs-lookup"><span data-stu-id="72e00-262">You can define additional aliases in the `clientTarget` section of the application-level Web.config file.</span></span> <span data-ttu-id="72e00-263">詳細については、次を参照してください。 [clientTarget 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-263">For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-264">次のコード例を定義、`ie302`エイリアス、Web.config ファイルでアプリケーションを構成するために必要なセクションがあります。</span><span class="sxs-lookup"><span data-stu-id="72e00-264">The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file.</span></span> <span data-ttu-id="72e00-265">このエイリアスを使用して設定できます、<xref:System.Web.UI.Page.ClientTarget%2A>プロパティを`ie302`および Internet Explorer 3.02 ブラウザーの専用のページをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="72e00-265">Using this alias, you can set the <xref:System.Web.UI.Page.ClientTarget%2A> property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.</span></span>  
  
```  
<configuration>  
  <system.web>  
   <clientTarget>  
    <add alias="ie302" useragent="Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)" />  
   </clientTarget>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-266">現在の <see cref="T:System.Web.UI.Page" /> のコード ページ ID を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-266">Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-267">現在の <see cref="T:System.Web.UI.Page" /> のコード ページ ID を表す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-267">An integer that represents the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-268">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-268">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-269">設定、`CodePage`属性を .aspx ファイルで、ディレクティブを使用する値にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-269">Set the `CodePage` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-270">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-270">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-271">ページに関連付けられている <see cref="T:System.Web.HttpResponse" /> オブジェクトの HTTP MIME 型を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-271">Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-272">現在のページに関連付けられている HTTP MIME 型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-272">The HTTP MIME type associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-273">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-273">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-274">設定、`ContentType`属性の .aspx ファイルで、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-274">Set the `ContentType` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-275">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-275">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal override System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-276">ページに関連付けられている <see cref="T:System.Web.HttpContext" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-276">Gets the <see cref="T:System.Web.HttpContext" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-277">現在のページに関連付けられた情報が格納されている <see cref="T:System.Web.HttpContext" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-277">An <see cref="T:System.Web.HttpContext" /> object that contains information associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-278">このプロパティは、要求、応答、セッション、およびアプリケーションに関する情報など、ページの実行コンテキストにプログラムでアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-278">This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-279">次のコード例では、<xref:System.Web.UI.Page.Context%2A>プロパティへのアクセスを<xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType>と<xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType>メソッドおよび<xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-279">The following code example uses the <xref:System.Web.UI.Page.Context%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="72e00-280">使用して 3 つのカスタム例外を作成、<xref:System.Web.HttpContext.AddError%2A>メソッドを使用して、<xref:System.Web.HttpContext.AllErrors%2A>プロパティ配列へのこれらの例外を読み込めません。</span><span class="sxs-lookup"><span data-stu-id="72e00-280">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="72e00-281">次に、配列を含むページに書き込み、使用して、<xref:System.Web.HttpContext.ClearError%2A>からすべてのエラーをクリアする方法、<xref:System.Web.UI.Page.Context%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-281">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Context#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Context/CS/pagecontextcs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Context#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Context/VB/pagecontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter tw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateHtmlTextWriter (tw As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ tw);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="72e00-282">
            <see cref="T:System.IO.TextWriter" /> を作成するために使用する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-282">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-283">ページの内容を表示する <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-283">Creates an <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-284">
            <see cref="T:System.Web.UI.HtmlTextWriter" />または<see cref="T:System.Web.UI.Html32TextWriter" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-284">An <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-285"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>メソッドを作成、<xref:System.IO.TextWriter>を通じて、<xref:System.Web.HttpRequest.Browser%2A>のプロパティ、<xref:System.Web.HttpContext.Request%2A>ページ要求に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-285">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request.</span></span> <span data-ttu-id="72e00-286">参照を追加することができます、<xref:System.Web.UI.HtmlTextWriter>で、`browserCaps`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="72e00-286">You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section.</span></span> <span data-ttu-id="72e00-287">上書き、<xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>カスタム検索を実行するメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-287">Override the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to perform custom lookup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-288">次のコード例では、 <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> 、カスタムのインスタンスを作成するメソッド<xref:System.Web.UI.HtmlTextWriter>という名前のオブジェクト`MyHtmlTextWriter`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-288">The following code example uses the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`.</span></span> <span data-ttu-id="72e00-289"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>でメソッドがオーバーライドされる、`MyPage`から派生したクラス<xref:System.Web.UI.Page>できるように、`MyHtmlTextWriter`ページが要求されたときに、ASP.NET サーバー コントロールをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="72e00-289">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested.</span></span> <span data-ttu-id="72e00-290">この例はアダプターしないようにすることに注意してください<xref:System.IO.TextWriter>動作します。</span><span class="sxs-lookup"><span data-stu-id="72e00-290">Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.</span></span>  
  
 [!code-csharp[Page_CreateHtmlTextWriter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/CS/page_createhtmltextwriter.cs#2)]
 [!code-vb[Page_CreateHtmlTextWriter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/VB/page_createhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Html32TextWriter" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriterFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType(class System.IO.TextWriter tw, class System.Type writerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHtmlTextWriterFromType (tw As TextWriter, writerType As Type) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriterFromType(System::IO::TextWriter ^ tw, Type ^ writerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
        <Parameter Name="writerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="72e00-291">
            <see cref="T:System.IO.TextWriter" /> を作成するために使用する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-291">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <param name="writerType">
          <span data-ttu-id="72e00-292">作成するテキスト ライターの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-292">The type of text writer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-293">ページの内容を表示するために指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-293">Creates a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-294">ページの内容を表示する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-294">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-295">このメソッドは、ページ アダプターで内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-295">This method is used internally in page adapters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-296">
            <paramref name="writerType" /> プロパティが無効な型に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-296">The <paramref name="writerType" /> parameter is set to an invalid type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public string Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Culture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Culture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-297">ページに関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのカルチャ ID を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-297">Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-298">有効なカルチャ ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-298">A valid culture ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-299">設定、 `Culture` .aspx ファイルでは、ディレクティブの属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-299">Set the `Culture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-300">ページが要求されたときに、動的に生成されたクラスは、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-300">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="72e00-301">値を明示的に設定するさらに、<xref:System.Web.UI.Page.Culture%2A>ファイル プログラムから、または Web.config の要素のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-301">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.Culture%2A> property programmatically or in the  element of the Web.config file.</span></span>  
  
 <span data-ttu-id="72e00-302"><xref:System.Web.UI.Page.Culture%2A>ヘルプ ページのコンテンツをローカライズするプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-302">The <xref:System.Web.UI.Page.Culture%2A> property is used to help localize page content.</span></span> <span data-ttu-id="72e00-303">任意の有効なカルチャ ID を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-303">You can set it to any valid culture ID.</span></span> <span data-ttu-id="72e00-304">たとえば、`en-us`カルチャ ID では、アメリカ英語、while にページを設定、`fr`カルチャ ID では、フランス語にページを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-304">For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French.</span></span> <span data-ttu-id="72e00-305">値を設定することもできます。`auto`の優先言語と設定するには、ブラウザーの自動検出を実行します。</span><span class="sxs-lookup"><span data-stu-id="72e00-305">You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it.</span></span> <span data-ttu-id="72e00-306">言語の自動検出をなど、既定値で修飾できます`auto:en-us`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-306">The automatic language detection can be qualified with a default value such as `auto:en-us`.</span></span>  
  
 <span data-ttu-id="72e00-307">詳細については、次を参照してください。、<xref:System.Globalization.CultureInfo>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="72e00-307">For more information, see the <xref:System.Globalization.CultureInfo> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
      </Docs>
    </Member>
    <Member MemberName="DesignerInitialize">
      <MemberSignature Language="C#" Value="public void DesignerInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DesignerInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DesignerInitialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub DesignerInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DesignerInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-308">RAD デザイナーによって要求される <see cref="T:System.Web.UI.Page" /> クラスのインスタンスの初期化を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-308">Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers.</span>
          </span>
          <span data-ttu-id="72e00-309">このメソッドは、デザイン時にだけ使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-309">This method is used only at design time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.UserControl.DesignerInitialize" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-310">ポストバックされたデータの <see cref="T:System.Collections.Specialized.NameValueCollection" /> を、POST コマンドまたは GET コマンドのいずれかを使用してページに返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-310">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> of data posted back to the page using either a POST or a GET command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-311">フォーム データを格納している <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-311">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the form data.</span>
          </span>
          <span data-ttu-id="72e00-312">ポストバックが POST コマンドを使用する場合は、フォーム情報が <see cref="P:System.Web.UI.Page.Context" /> オブジェクトから返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-312">If the postback used the POST command, the form information is returned from the <see cref="P:System.Web.UI.Page.Context" /> object.</span>
          </span>
          <span data-ttu-id="72e00-313">ポストバックが GET コマンドを使用する場合は、クエリ文字列情報が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-313">If the postback used the GET command, the query string information is returned.</span>
          </span>
          <span data-ttu-id="72e00-314">初めてページの要求が行われた場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-314">If the page is being requested for the first time, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-315"><xref:System.Web.UI.Page.DeterminePostBackMode%2A>メソッドを返します、<xref:System.Collections.Specialized.NameValueCollection>データを格納しているオブジェクトにポスト バックされたページ。</span><span class="sxs-lookup"><span data-stu-id="72e00-315">The <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page.</span></span> <span data-ttu-id="72e00-316">ページが存在するには、ポストバック イベントが発生したかどうかを決定するために使用される VIEWSTATE と EVENTTARGET フィールドが表示されません。</span><span class="sxs-lookup"><span data-stu-id="72e00-316">The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.</span></span> <span data-ttu-id="72e00-317"><xref:System.Web.UI.Page.IsPostBack%2A>場合、プロパティが設定、<xref:System.Web.UI.Page.DeterminePostBackMode%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-317">The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-318">要求に対して ASP.NET 要求の検証を実行せずに、POST また GET コマンドを使用して、ページにポストされたデータの名前と値のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-318">Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-319">未検証のフォーム データを格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-319">An object that contains the unvalidated form data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-320">詳細については、<xref:System.Web.UnvalidatedRequestValues> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-320">For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-321">ページがポストバック イベントとコールバック イベントを検証するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-321">Gets or sets a value indicating whether the page validates postback and callback events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-322">ページがポストバック イベントとコールバック イベントを検証する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。既定値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-322">
              <see langword="true" /> if the page validates postback and callback events; otherwise, <see langword="false" />.The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-323">ときに、<xref:System.Web.UI.Page.EnableEventValidation%2A>プロパティに設定されている`true`ASP.NET では、コントロールのイベントがそのコントロールによって表示されたユーザー インターフェイスから送られたことを検証します。</span><span class="sxs-lookup"><span data-stu-id="72e00-323">When the <xref:System.Web.UI.Page.EnableEventValidation%2A> property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control.</span></span> <span data-ttu-id="72e00-324">レンダリング時にイベントを登録し、イベントをポストバックまたはコールバックの処理中に検証コントロールです。</span><span class="sxs-lookup"><span data-stu-id="72e00-324">A control registers its events during rendering and then validates the events during postback or callback handling.</span></span> <span data-ttu-id="72e00-325">たとえば、リスト コントロールには、オプション ポストバックの要求が受信した場合は、オプション番号 4 を指定する場合と、ページが表示されると、1、2、または 3 の番号にはが含まれている場合、ASP.NET には、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="72e00-325">For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.</span></span> <span data-ttu-id="72e00-326">ASP.NET のすべてのイベント ドリブン コントロールは、既定ではこの機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-326">All event-driven controls in ASP.NET use this feature by default.</span></span>  
  
 <span data-ttu-id="72e00-327">実行時に、クライアントのコントロールを変更するクライアント スクリプトを記述する場合は、使用する必要があります、 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> false イベント妥当性確認エラーを回避するためにメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-327">If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-328">この機能は、不正なまたは悪意のあるポストバック要求とコールバックのリスクを軽減します。</span><span class="sxs-lookup"><span data-stu-id="72e00-328">This feature reduces the risk of unauthorized or malicious postback requests and callbacks.</span></span> <span data-ttu-id="72e00-329">イベントの検証を無効にしないことを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-329">It is strongly recommended that you do not disable event validation.</span></span>  
  
 <span data-ttu-id="72e00-330">設定する、<xref:System.Web.UI.Page.EnableEventValidation%2A>プロパティを設定して、`enableEventValidation`ディレクティブの属性または`enableEventValidation`Web.config ファイル内の要素の属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-330">You set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file.</span></span> <span data-ttu-id="72e00-331">コードでこのプロパティを設定した場合、ページが初期化される前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-331">If you set this property in code, you must set it before the page is initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-332">ページの初期化後に <see cref="P:System.Web.UI.Page.EnableEventValidation" /> プロパティが設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-332">The <see cref="P:System.Web.UI.Page.EnableEventValidation" /> property was set after the page was initialized.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
        <altmember cref="T:System.Web.UI.SupportsEventValidationAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-333">現在のページ要求が終了したとき、ページがそのビューステート、および格納しているサーバー コントロールのビューステートを維持するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-333">Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-334">ページがビューステートを維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-334">
              <see langword="true" /> if the page maintains its view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-335">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-335">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-336">ビュー ステートを無効にする理由については、次を参照してください。<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="72e00-336">For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="72e00-337">場合でも<xref:System.Web.UI.Page.EnableViewState%2A>は`false`ページがポストバックを検出するために、ASP.NET によって使用される非表示のビュー状態フィールドを含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="72e00-337">Even if <xref:System.Web.UI.Page.EnableViewState%2A> is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-338">次のコード例のセット、<xref:System.Web.UI.Page.EnableViewState%2A>プロパティを`false`ページが読み込まれるときにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-338">The following code example sets the <xref:System.Web.UI.Page.EnableViewState%2A> property to `false` when the page is loaded.</span></span> <span data-ttu-id="72e00-339">ビュー ステートが無効になります、<xref:System.Web.UI.Page>オブジェクト、どちらも、ページのビュー ステート情報もページに含まれるすべてのコントロールを保存することを意味します。</span><span class="sxs-lookup"><span data-stu-id="72e00-339">This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-340">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-340">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-341">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-341">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-342">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-342">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/CS/page_enableviewstate.cs#1)]
 [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/VB/page_enableviewstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-343">ページがクライアントからポストバックされたときに、ASP.NET がページのビューステートのメッセージ認証コード (MAC: Message Authentication Code) をチェックする必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-343">Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-344">ビューステートを MAC でチェックしエンコードする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-344">
              <see langword="true" /> if the view state should be MAC checked and encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-345">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-345">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-346">ビュー ステート MAC は、ページがブラウザーに送信されるときに、ページのビュー状態が保存されている非表示の変数の暗号化されたバージョンです。</span><span class="sxs-lookup"><span data-stu-id="72e00-346">A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</span></span> <span data-ttu-id="72e00-347">このプロパティに設定するときに`true`、暗号化されたビュー ステートがオンになっていることが改ざんされていないクライアントのことを確認します。</span><span class="sxs-lookup"><span data-stu-id="72e00-347">When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.</span></span>  
  
 <span data-ttu-id="72e00-348">コードでこのプロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="72e00-348">Do not set this property in code.</span></span> <span data-ttu-id="72e00-349">設定、`EnableViewStateMac`属性の .aspx ファイルで、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-349">Set the `EnableViewStateMac` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-350">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-350">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-351">この属性設定しないで`false`実稼働 Web サイトで、アプリケーションまたはページがビュー ステートを使用していない場合でもです。</span><span class="sxs-lookup"><span data-stu-id="72e00-351">This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state.</span></span> <span data-ttu-id="72e00-352">により、MAC のビューステートは、ビュー ステートに加えその他の ASP.NET 機能のセキュリティを確保します。</span><span class="sxs-lookup"><span data-stu-id="72e00-352">The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="ErrorPage">
      <MemberSignature Language="C#" Value="public string ErrorPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ErrorPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorPage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorPage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-353">処理されていないページ例外が発生した場合に、要求側のブラウザーがリダイレクトされる対象のエラー ページを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-353">Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-354">ブラウザーがリダイレクトされる対象のエラー ページ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-354">The error page to which the browser is redirected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page_ErrorPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_ErrorPage/CS/page_errorpage.cs.aspx#1)]
 [!code-vb[Page_ErrorPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_ErrorPage/VB/page_errorpage.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteRegisteredAsyncTasks">
      <MemberSignature Language="C#" Value="public void ExecuteRegisteredAsyncTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteRegisteredAsyncTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteRegisteredAsyncTasks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteRegisteredAsyncTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-355">非同期操作の実行を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-355">Starts the execution of an asynchronous task.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-356">使用して、非同期タスクを定義する、<xref:System.Web.UI.PageAsyncTask>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-356">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="72e00-357">タスクが定義され、ページを使用して、登録した後、 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 、メソッド、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>非同期タスクを開始するメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-357">After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can be invoked to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="72e00-358"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>メソッドが自動的に呼び出される非同期以外のページ、ページときの処理に存在する場合、非同期タスクは、登録されているいずれかの時点は呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-358">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.</span></span> <span data-ttu-id="72e00-359">この自動呼び出し<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>直前に発生する、<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-359">This automatic call to <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="72e00-360">呼び出す、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>タスクをこのメソッドが自動的に呼び出されないときに起動するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-360">Call the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method for tasks you want to be invoked at times other than the automatic call to this method.</span></span> <span data-ttu-id="72e00-361">ただし、非同期タスクがのみ 1 回も実行される<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>も複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-361">Note, asynchronous tasks will be executed only once even though <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> may be called more than once.</span></span>  
  
 <span data-ttu-id="72e00-362"><xref:System.Web.UI.Page.AsyncTimeout%2A>プロパティはリセットを呼び出すたびに、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-362">The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="72e00-363">最後の値、<xref:System.Web.UI.Page.AsyncTimeout%2A>を呼び出す前に、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>メソッドが優先されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-363">The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method takes precedence.</span></span> <span data-ttu-id="72e00-364">非同期タスクが受け取る場合よりも多く<xref:System.Web.UI.Page.AsyncTimeout%2A>、後続のタスクを中に呼び出される<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>呼び出しがすぐにタイムアウトします。</span><span class="sxs-lookup"><span data-stu-id="72e00-364">If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> call are timed out immediately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-365">使用を次のコード例に示します、<xref:System.Web.UI.Page.AsyncTimeout%2A>を持つプロパティ、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>と<xref:System.Web.UI.Page.RegisterAsyncTask%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-365">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="72e00-366">先頭、末尾、およびタイムアウト ハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-366">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="72e00-367">指定されているタスクの割り当て時刻を超えた場合、非同期タスクのような状況を示す例では、人為的な遅延が導入された、<xref:System.Web.UI.Page.AsyncTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-367">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="72e00-368">現実のシナリオで非同期タスクは、データベースの呼び出しまたはイメージの生成を実行するために使用可能性がありますなどとタイムアウト ハンドラーは、一定の時間で、タスクは実行されない場合に下げるを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-368">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-369">非同期操作での例外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-369">There is an exception in the asynchronous task.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="FileDependencies">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList FileDependencies { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList FileDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.FileDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Property FileDependencies As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ FileDependencies {  void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is HttpResponse.AddFileDependencies. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-370">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトが依存しているファイルの配列を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-370">Sets an array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-371">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトが依存しているファイルの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-371">The array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-372">このプロパティは非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-372">This property has been deprecated.</span></span> <span data-ttu-id="72e00-373">使用して、<xref:System.Web.HttpResponse.AddFileDependencies%2A>メソッドまたは<xref:System.Web.HttpResponse.AddFileDependency%2A>のメソッド、<xref:System.Web.HttpResponse>クラスの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-373">Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.</span></span>  
  
 <span data-ttu-id="72e00-374">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-374">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-375">設定、`FileDependencies`属性を`true`.aspx ファイルで、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-375">Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-376">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-376">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="72e00-377">検索されるコントロールの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-377">The identifier for the control to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-378">指定した識別子を使用して、サーバー コントロールについてページの名前付けコンテナーを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-378">Searches the page naming container for a server control with the specified identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-379">指定したコントロール。指定したコントロールがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-379">The specified control, or <see langword="null" /> if the specified control does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-380"><xref:System.Web.UI.Page.FindControl%2A>メソッドは、コントロールにアクセスするために使用できますが<xref:System.Web.UI.Control.ID%2A>デザイン時に使用できません。</span><span class="sxs-lookup"><span data-stu-id="72e00-380">The <xref:System.Web.UI.Page.FindControl%2A> method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time.</span></span> <span data-ttu-id="72e00-381">メソッドのみ、ページの即時更新サブスクリプションまたは最上位レベル、コンテナーを検索です。これは、ページに含まれている名前付けコンテナーでのコントロールの再帰的に検索をしません。</span><span class="sxs-lookup"><span data-stu-id="72e00-381">The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.</span></span> <span data-ttu-id="72e00-382">下位の名前付けコンテナー内のコントロールにアクセスするには、呼び出し、`FindControl`そのコンテナーのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-382">To access controls in a subordinate naming container, call the `FindControl` method of that container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-383">次のコード例を使用する方法を示しています、<xref:System.Web.UI.Page.FindControl%2A>テンプレート内部のコントロールを検索します。</span><span class="sxs-lookup"><span data-stu-id="72e00-383">The following code example demonstrates how to use the <xref:System.Web.UI.Page.FindControl%2A> method to locate controls inside templates.</span></span> <span data-ttu-id="72e00-384">この例では 2 つ<xref:System.Web.UI.WebControls.Repeater>コントロールが定義されます。 キャッチするさまざまな方法を示していますそれぞれ、<xref:System.Web.UI.WebControls.LinkButton.Click>のイベント、<xref:System.Web.UI.WebControls.LinkButton>リピータ項目テンプレートの内部です。</span><span class="sxs-lookup"><span data-stu-id="72e00-384">In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/cs/pagefindcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/vb/pagefindcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As HtmlForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlForm ^ Form { System::Web::UI::HtmlControls::HtmlForm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-385">ページの HTML フォームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-385">Gets the HTML form for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-386">ページと関連付けられた <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-386">The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-387">使用して、<xref:System.Web.UI.Page.Form%2A>プロパティ、メソッドとプロパティのアクセスを<xref:System.Web.UI.HtmlControls.HtmlForm>ページ コントロール階層の基本であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-387">Use the <xref:System.Web.UI.Page.Form%2A> property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
      </Docs>
    </Member>
    <Member MemberName="FrameworkInitialize">
      <MemberSignature Language="C#" Value="protected override void FrameworkInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FrameworkInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FrameworkInitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FrameworkInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FrameworkInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-388">ページの生成中に、ページの宣言の性質に基づいてコントロール ツリーを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-388">Initializes the control tree during page generation based on the declarative nature of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-389"><xref:System.Web.UI.Page.FrameworkInitialize%2A>メソッドの初期化、<xref:System.Web.UI.Page>オブジェクトし、ページの宣言型の特性に基づきコントロール ツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="72e00-389">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page.</span></span> <span data-ttu-id="72e00-390"><xref:System.Web.UI.Page.FrameworkInitialize%2A>メソッドは、ページの解析中のコード生成や、<xref:System.Web.UI.Page>宣言型のページのクラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-390">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page.</span></span> <span data-ttu-id="72e00-391">通常、このメソッドをオーバーライドする必要が上にありません必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-391">Ordinarily, you should not over need to override this method.</span></span> <span data-ttu-id="72e00-392">をオーバーライドする場合、基本クラスの呼び出しを必ず<xref:System.Web.UI.Page.FrameworkInitialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-392">If overriding, be sure to call the base class's <xref:System.Web.UI.Page.FrameworkInitialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public object GetDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetDataItem" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataItem () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDataItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-393">データ バインディング コンテキスト スタックの最上部のデータ項目を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-393">Gets the data item at the top of the data-binding context stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-394">データ バインディング コンテキスト スタックの最上部のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-394">The object at the top of the data binding context stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-395">ページのデータ バインディング コンテキストがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-395">There is no data-binding context for the page.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientEvent">
      <MemberSignature Language="C#" Value="public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientEvent(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientEvent(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-396">クライアント イベントのポストバックを受信するサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-396">The server control that receives the client event postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="72e00-397">
            <see cref="T:System.String" /> に渡される<see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-397">A <see cref="T:System.String" /> that is passed to <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-398">指定されたイベント引数を使用して指定したコントロールのサーバーにポストバックするクライアント イベントで使用できる参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-398">Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-399">クライアント イベントを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-399">The string that represents the client event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-400">参照してください、<xref:System.Web.UI.ClientScriptManager>代替方法についてはこのメンバーのクラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-400">See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.OnClientClick" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackClientHyperlink. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-401">ポストバックを処理するサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-401">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="72e00-402">サーバー コントロールに渡されたパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-402">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-403">
            <see langword="javascript:" /> を参照の先頭に追加した上で参照を取得します。この参照をクライアント イベントで使用して、指定したコントロールを、指定したイベント引数を使用してサーバーにポストバックできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-403">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-404">対象のコントロールの ID とイベント引数を保持しているポストバック関数に対する JavaScript 呼び出しを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-404">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-405">参照してください、<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>のこのメンバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-405">See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-406">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-406">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="72e00-407">このメソッドの使用は非推奨とされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-407">This method has been deprecated.</span>
          </span>
          <span data-ttu-id="72e00-408">代わりに <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> クラスの <see cref="T:System.Web.UI.ClientScriptManager" /> メソッドを使用してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-408">Use the <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> method in the <see cref="T:System.Web.UI.ClientScriptManager" /> class instead.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-409">サーバー上でポストバックを処理するサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-409">The server control to process the postback on the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-410">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-410">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="72e00-411">この参照文字列は、指定した <see cref="T:System.Web.UI.Control" /> オブジェクトによって定義されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-411">The reference string is defined by the specified <see cref="T:System.Web.UI.Control" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-412">クライアントでスクリプトとして扱われた場合に、ポストバックを初期化する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-412">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-413">このメソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-413">This method has been deprecated.</span></span> <span data-ttu-id="72e00-414">代わりに <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-414">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#2)]
 [!code-vb[Page_GetPostBackEventReference#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-415">ポストバックを処理するサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-415">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="72e00-416">サーバー コントロールに渡されたパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-416">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-417">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-417">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="72e00-418">この参照文字列は、ポストバックと追加のイベント情報の文字列引数を処理する、指定したコントロールによって定義されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-418">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-419">クライアントでスクリプトとして扱われた場合に、ポストバックを初期化する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-419">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-420">このメソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-420">This method has been deprecated.</span></span> <span data-ttu-id="72e00-421">代わりに <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-421">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#1)]
 [!code-vb[Page_GetPostBackEventReference#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetTypeHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTypeHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetTypeHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTypeHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-422">実行時に生成された <see cref="T:System.Web.UI.Page" /> オブジェクトによって生成されるハッシュ コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-422">Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time.</span>
          </span>
          <span data-ttu-id="72e00-423">このハッシュ コードは、<see cref="T:System.Web.UI.Page" /> オブジェクトのコントロール階層に固有のハッシュ コードです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-423">This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-424">実行時に生成されたハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-424">The hash code generated at run time.</span>
          </span>
          <span data-ttu-id="72e00-425">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-425">The default is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-426">このメソッドをオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-426">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ValidatorCollection GetValidators(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetValidators(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidators (validationGroup As String) As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ValidatorCollection ^ GetValidators(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="72e00-427">既定の検証グループを返す検証グループまたは <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-427">The validation group to return, or <see langword="null" /> to return the default validation group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-428">指定した検証グループの検証コントロールのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-428">Returns a collection of control validators for a specified validation group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-429">指定した検証グループの検証コントロールを格納している <see cref="T:System.Web.UI.ValidatorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-429">A <see cref="T:System.Web.UI.ValidatorCollection" /> that contains the control validators for the specified validation group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-430"><xref:System.Web.UI.Page.GetValidators%2A>メソッドは、特定の検証グループに関連付けられているすべての検証オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="72e00-430">The <xref:System.Web.UI.Page.GetValidators%2A> method returns all the validation objects associated with a specific validation group.</span></span> <span data-ttu-id="72e00-431">既定の検証グループを返すことができます (せずコントロールに関連付けられているすべての検証コントロール、`ValidationGroup`プロパティ セット) を設定して、`validationGroup`パラメーターを`null`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-431">You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.</span></span>  
  
 <span data-ttu-id="72e00-432">検証グループのメンバーを検証するには、コレクションと呼び出しを列挙することができます、<xref:System.Web.UI.IValidator.Validate%2A>各検証メソッドが返されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-432">To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-433">次のコード例では、<xref:System.Web.UI.Page.GetValidators%2A>を既定の検証グループを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-433">The following code example uses the <xref:System.Web.UI.Page.GetValidators%2A> method to return the default validation group.</span></span>  
  
 [!code-csharp[PageGetValidators#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageGetValidators/CS/pagegetvalidatorscs.aspx#1)]
 [!code-vb[PageGetValidators#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageGetValidators/VB/pagegetvalidatorsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate(System.String)" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
      </Docs>
    </Member>
    <Member MemberName="GetWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected object GetWrappedFileDependencies (string[] virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetWrappedFileDependencies(string[] virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetWrappedFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetWrappedFileDependencies (virtualFileDependencies As String()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetWrappedFileDependencies(cli::array &lt;System::String ^&gt; ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="72e00-434">仮想ファイルの場所の文字列配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-434">A string array of virtual file locations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-435">仮想ファイルの場所の一覧に対応する物理ファイル名の一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-435">Returns a list of physical file names that correspond to a list of virtual file locations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-436">物理ファイルの場所の一覧を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-436">An object containing a list of physical file locations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-437"><xref:System.Web.UI.Page.GetWrappedFileDependencies%2A>メソッドは、現在のページを構成するユーザー コントロール ファイルなどのファイルの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="72e00-437">The <xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> method gets a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="72e00-438">これらのページのいずれかが変更された場合、ページ全体には、要求時に、[次へ] がコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-438">If any of these pages are modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="72e00-439">このメソッドをオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-439">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlHead Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlHead Header" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As HtmlHead" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlHead ^ Header { System::Web::UI::HtmlControls::HtmlHead ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlHead</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-440">ページの宣言で <see langword="head" /> 要素が <see langword="runat=server" /> を使用して定義されている場合に、ドキュメントのヘッダーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-440">Gets the document header for the page if the <see langword="head" /> element is defined with a <see langword="runat=server" /> in the page declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-441">ページ ヘッダーを格納している <see cref="T:System.Web.UI.HtmlControls.HtmlHead" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-441">An <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> containing the page header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-442"><xref:System.Web.UI.Page.Header%2A>プロパティへの参照を取得する、<xref:System.Web.UI.HtmlControls.HtmlHead>オブジェクト、ページのドキュメントのヘッダー情報の設定を使用することです。</span><span class="sxs-lookup"><span data-stu-id="72e00-442">The <xref:System.Web.UI.Page.Header%2A> property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page.</span></span> <span data-ttu-id="72e00-443"><xref:System.Web.UI.HtmlControls.HtmlHead>スタイル シート、スタイル ルール、タイトル、およびメタデータをなどの情報を追加することができます、`head`要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-443">The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-444">メソッドを使用してプログラムからスタイルを追加する、<xref:System.Web.UI.IStyleSheet>非同期ポストバック中のインターフェイスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72e00-444">Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="72e00-445">Web ページに AJAX 機能を追加すると、非同期ポストバックはページ全体を更新することがなく、ページの領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="72e00-445">When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="72e00-446">詳細については、次を参照してください。 [Microsoft Ajax 概要](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-446">For more information, see [Microsoft Ajax Overview](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-447">次のコード例は、アクセスする方法を示します、<xref:System.Web.UI.HtmlControls.HtmlHead>を使用したプログラムの制御、<xref:System.Web.UI.Page.Header%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-447">The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the <xref:System.Web.UI.Page.Header%2A> property.</span></span> <span data-ttu-id="72e00-448">A`title`要素および`style`に要素を追加、`head`ページの要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-448">A `title` element and `style` element are added to the `head` element of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/CS/htmlheadclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/VB/htmlheadclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlLink" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-449">
            <see cref="T:System.Web.UI.Page" /> クラスの特定のインスタンスの識別子を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-449">Gets or sets an identifier for a particular instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-450">
            <see cref="T:System.Web.UI.Page" /> クラスのインスタンスの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-450">The identifier for the instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
          <span data-ttu-id="72e00-451">既定値は '_Page' です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-451">The default value is '_Page'.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="public virtual char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char IdSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-452">ページの特定のコントロールに対して一意の ID を作成するときに、コントロールの ID を区別するために使用する文字を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-452">Gets the character used to separate control identifiers when building a unique ID for a control on a page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-453">コントロールの ID を区別するために使用する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-453">The character used to separate control identifiers.</span>
          </span>
          <span data-ttu-id="72e00-454">既定値は、ページをレンダリングする <see cref="T:System.Web.UI.Adapters.PageAdapter" /> インスタンスによって設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-454">The default is set by the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> instance that renders the page.</span>
          </span>
          <span data-ttu-id="72e00-455">
            <see cref="P:System.Web.UI.Page.IdSeparator" /> はサーバー側のフィールドなので、変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-455">The <see cref="P:System.Web.UI.Page.IdSeparator" /> is a server-side field and should not be modified.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.ID" />
      </Docs>
    </Member>
    <Member MemberName="InitComplete">
      <MemberSignature Language="C#" Value="public event EventHandler InitComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.InitComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-456">ページの初期化が完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-456">Occurs when page initialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-457"><xref:System.Web.UI.Page.InitComplete>イベントは、ページの初期化段階の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-457">The <xref:System.Web.UI.Page.InitComplete> event is called at the end of the page's initialization stage.</span></span> <span data-ttu-id="72e00-458">ページのライフ サイクルのこの段階で宣言されたすべて、ページ上のコントロールが初期化されるが、ページの状態はまだ設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-458">At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.</span></span> <span data-ttu-id="72e00-459">サーバー コントロールにアクセスできますが、それらがまだ含まれていませんユーザーから返される情報には。</span><span class="sxs-lookup"><span data-stu-id="72e00-459">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="72e00-460">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-460">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCulture">
      <MemberSignature Language="C#" Value="protected virtual void InitializeCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitializeCulture" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeCulture ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeCulture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-461">ページの現在のスレッドの <see cref="P:System.Web.UI.Page.Culture" /> と <see cref="P:System.Web.UI.Page.UICulture" /> を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-461">Sets the <see cref="P:System.Web.UI.Page.Culture" /> and <see cref="P:System.Web.UI.Page.UICulture" /> for the current thread of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-462"><xref:System.Web.UI.Page.InitializeCulture%2A>メソッドにはコード ロジックは含まれません。</span><span class="sxs-lookup"><span data-stu-id="72e00-462">The <xref:System.Web.UI.Page.InitializeCulture%2A> method contains no coding logic.</span></span> <span data-ttu-id="72e00-463">機能を拡張する開発者の制御、<xref:System.Web.UI.Page>クラスをオーバーライドして、<xref:System.Web.UI.Page.InitializeCulture%2A>初期化するメソッドを<xref:System.Web.UI.Page.Culture%2A>と<xref:System.Web.UI.Page.UICulture%2A>ページの情報です。</span><span class="sxs-lookup"><span data-stu-id="72e00-463">Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the <xref:System.Web.UI.Page.InitializeCulture%2A> method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.Web.UI.Page.FrameworkInitialize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InitOutputCache">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-464">現在のページ要求の出力キャッシュを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-464">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-465">このメソッドはコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-465">This method is not intended to be used directly from your code.</span></span> <span data-ttu-id="72e00-466">を有効にして、ページの出力キャッシュを操作するには、これらのアプローチのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="72e00-466">To enable and manipulate output caching for a page, use one of these approaches:</span></span>  
  
-   <span data-ttu-id="72e00-467">.Aspx ファイルで宣言によって、ディレクティブを使用してオプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-467">Set options declaratively using the  directive in the .aspx file.</span></span>  
  
-   <span data-ttu-id="72e00-468">メソッドとプロパティの使用、<xref:System.Web.HttpCachePolicy>によって公開される、クラス、`Response.Cache`ページのコード内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-468">Use the methods and properties of the <xref:System.Web.HttpCachePolicy> class, which is exposed by the `Response.Cache` object in the page's code.</span></span>  
  
 <span data-ttu-id="72e00-469">詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-469">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected internal virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitOutputCache(class System.Web.UI.OutputCacheParameters cacheSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitOutputCache (cacheSettings As OutputCacheParameters)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitOutputCache(System::Web::UI::OutputCacheParameters ^ cacheSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheSettings" Type="System.Web.UI.OutputCacheParameters" />
      </Parameters>
      <Docs>
        <param name="cacheSettings">
          <span data-ttu-id="72e00-470">キャッシュの設定を格納している <see cref="T:System.Web.UI.OutputCacheParameters" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-470">An <see cref="T:System.Web.UI.OutputCacheParameters" /> that contains the cache settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-471">現在のページ要求の出力キャッシュを <see cref="T:System.Web.UI.OutputCacheParameters" /> オブジェクトに基づいて初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-471">Initializes the output cache for the current page request based on an <see cref="T:System.Web.UI.OutputCacheParameters" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-472">このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-472">You should not call this method.</span></span> <span data-ttu-id="72e00-473">を有効にして、ページの出力キャッシュを操作するには、.aspx ファイルまたはメソッドとプロパティのいずれか、ディレクティブを使用、<xref:System.Web.HttpCachePolicy>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-473">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="72e00-474">後者はを通してアクセス`Response.Cache`ページのコード宣言ブロックまたは分離コード ファイル内の構文。</span><span class="sxs-lookup"><span data-stu-id="72e00-474">The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file.</span></span> <span data-ttu-id="72e00-475">詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-475">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-476">キャッシュのプロファイルが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-476">The cache profile was not found.</span>
          </span>
          <span data-ttu-id="72e00-477">\- - または -  存在しないディレクティブまたは存在しない構成設定プロファイル属性です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-477">\- or -  A missing directive or configuration settings profile attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72e00-478">出力キャッシュ設定の位置が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-478">The output cache settings location is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="72e00-479">出力キャッシュに格納されているオブジェクトが有効である時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-479">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="72e00-480">出力キャッシュの内容の変更に使用されるヘッダーのセミコロン区切りのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-480">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="72e00-481">
            <see langword="Vary" /> HTTP ヘッダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-481">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="72e00-482">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-482">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="72e00-483">出力キャッシュの内容の変更に使用され、GET メソッドまたは POST メソッドが受け取るパラメーターのセミコロン区切りのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-483">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-484">現在のページ要求の出力キャッシュを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-484">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-485">このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-485">You should not call this method.</span></span> <span data-ttu-id="72e00-486">を有効にして、ページの出力キャッシュを操作するには、.aspx ファイルまたはメソッドとプロパティのいずれか、ディレクティブを使用、<xref:System.Web.HttpCachePolicy>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-486">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="72e00-487">後者はを通してアクセス`Response.Cache`ページのコードの構文。</span><span class="sxs-lookup"><span data-stu-id="72e00-487">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="72e00-488">詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-488">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72e00-489">
            <paramref name="location" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-489">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByContentEncoding As String, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByContentEncoding, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByContentEncoding" Type="System.String" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="72e00-490">出力キャッシュに格納されているオブジェクトが有効である時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-490">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByContentEncoding">
          <span data-ttu-id="72e00-491">出力キャッシュの内容の変更に使用される文字セット (コンテンツ エンコーディング) のセミコロン区切りのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-491">A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="72e00-492">出力キャッシュの内容の変更に使用されるヘッダーのセミコロン区切りのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-492">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="72e00-493">
            <see langword="Vary" /> HTTP ヘッダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-493">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="72e00-494">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-494">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="72e00-495">出力キャッシュの内容の変更に使用され、GET メソッドまたは POST メソッドが受け取るパラメーターのセミコロン区切りのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-495">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-496">現在のページ要求の出力キャッシュを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-496">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-497">このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-497">You should not call this method.</span></span> <span data-ttu-id="72e00-498">を有効にして、ページの出力キャッシュを操作するには、.aspx ファイル、またはメソッドとプロパティのいずれか、ディレクティブを使用、<xref:System.Web.HttpCachePolicy>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-498">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="72e00-499">後者はを通してアクセス`Response.Cache`ページのコードの構文。</span><span class="sxs-lookup"><span data-stu-id="72e00-499">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="72e00-500">詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-500">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72e00-501">
            <paramref name="location" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-501">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-502">ページが非同期に処理されるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-502">Gets a value indicating whether the page is processed asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-503">ページが非同期モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-503">
              <see langword="true" /> if the page is in asynchronous mode; otherwise, <see langword="false" />;</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-504">使用して、 <xref:System.Web.UI.Page.IsAsync%2A> Web ページが非同期モードで実行されているかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-504">Use the <xref:System.Web.UI.Page.IsAsync%2A> property to determine whether the Web page is running in asynchronous mode.</span></span> <span data-ttu-id="72e00-505">この情報は、ページのコントロールまたはコード ページが非同期かに応じて、動作を変更する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="72e00-505">This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.</span></span> <span data-ttu-id="72e00-506">非同期プログラミングの詳細については、次を参照してください。[非同期操作](~/docs/framework/data/adonet/sql/asynchronous-operations.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-506">For more information about asynchronous programming, see [Asynchronous Operations](~/docs/framework/data/adonet/sql/asynchronous-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallback">
      <MemberSignature Language="C#" Value="public bool IsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCallback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-507">ページ要求がコールバックの結果であるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-507">Gets a value that indicates whether the page request is the result of a callback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-508">ページ要求がコールバックの結果である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-508">
              <see langword="true" /> if the page request is the result of a callback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-509">詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-509">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsClientScriptBlockRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="72e00-510">検索対象のクライアント スクリプトの文字列キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-510">The string key of the client script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-511">指定したキーを持つクライアント スクリプト ブロックがページに登録されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-511">Determines whether the client script block with the specified key is registered with the page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-512">スクリプト ブロックが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-512">
              <see langword="true" /> if the script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-513">このメソッドを呼び出す前に呼び出します<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType>をクライアント側スクリプトを不必要にまとめることを回避します。</span><span class="sxs-lookup"><span data-stu-id="72e00-513">Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="72e00-514">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="72e00-514">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="72e00-515"><xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-515">The <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-516">使用して、<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-516">Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-517">使用を次のコード例に示します、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>メソッドと組み合わせて、<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-517">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="72e00-518">コード宣言ブロックで記述された ECMAScript が既に登録されていない場合、によって決定される<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="72e00-518">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsCrossPagePostBack">
      <MemberSignature Language="C#" Value="public bool IsCrossPagePostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCrossPagePostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCrossPagePostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCrossPagePostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCrossPagePostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-519">ページが、ページ間のポストバックに関与しているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-519">Gets a value indicating whether the page is involved in a cross-page postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-520">ページが、ページ間の要求に関与している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-520">
              <see langword="true" /> if the page is participating in a cross-page request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-521">ASP.NET では、別の 1 つのページからコントロールを転送するための 2 つのメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-521">ASP.NET provides two mechanisms for transferring control from one page to another.</span></span> <span data-ttu-id="72e00-522">使用することができます、<xref:System.Web.HttpServerUtility.Transfer%2A>ページ、または間での処理を転送する方法は、ページの URL を割り当てることでページ間の要求をすることができます、<xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>を実装するボタン コントロールのプロパティ、<xref:System.Web.UI.WebControls.IButtonControl>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-522">You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.</span></span>  
  
 <span data-ttu-id="72e00-523">どちらの場合、<xref:System.Web.UI.Page.PreviousPage%2A>ページのプロパティには、前または送信元のページを表すオブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-523">In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page.</span></span> <span data-ttu-id="72e00-524">たとえば、ページ A 投稿ページ B まで、ページの A の場合は、<xref:System.Web.UI.Page.IsCrossPagePostBack%2A>プロパティ (経由でアクセスできる、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティ) は`true`ページ b の<xref:System.Web.UI.Page.PreviousPage%2A>プロパティはページ A の名前になります</span><span class="sxs-lookup"><span data-stu-id="72e00-524">If, for example, Page A posts to Page B, Page A's <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.PostBackUrl" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBack">
      <MemberSignature Language="C#" Value="public bool IsPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-525">初めてページを表示しているのか、またはポストバックへの応答としてページを読み込んでいるのかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-525">Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-526">ページがクライアント ポストバックへの応答として読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-526">
              <see langword="true" /> if the page is being loaded in response to a client postback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-527">ポストバックとコールバックの違いの詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-527">For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-528">次の例の値をテストする方法を示しています、<xref:System.Web.UI.Page.IsPostBack%2A>プロパティ ページが最初に表示しているか、ポストバックに応答してかを判断するために、ページが読み込まれるときにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-528">The following example shows how to test the value of the <xref:System.Web.UI.Page.IsPostBack%2A> property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback.</span></span> <span data-ttu-id="72e00-529">コードを呼び出す場合は、ページが最初にレンダリングされて、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-529">If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72e00-530">(非表示) ページのマークアップを含む<xref:System.Web.UI.WebControls.RequiredFieldValidator>エントリがない場合、必要な入力フィールドにアスタリスクを表示するコントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-530">The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field.</span></span> <span data-ttu-id="72e00-531">呼び出す<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>送信 ボタンをクリックするまで待機しているのではなく、ページの表示する際にすぐに表示されるアスタリスクをによりします。</span><span class="sxs-lookup"><span data-stu-id="72e00-531">Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button.</span></span> <span data-ttu-id="72e00-532">ポストバックされた後にを呼び出す必要はありません<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>の一部としてそのメソッドが呼び出されるため、<xref:System.Web.UI.Page>ライフ サイクルです。</span><span class="sxs-lookup"><span data-stu-id="72e00-532">After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Validate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.Page.IsCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBackEventControlRegistered">
      <MemberSignature Language="C#" Value="public bool IsPostBackEventControlRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBackEventControlRegistered" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBackEventControlRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBackEventControlRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBackEventControlRegistered { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-533">ポストバックを実行するページ内のコントロールが登録されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-533">Gets a value that indicates whether the control in the page that performs postbacks has been registered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-534">コントロールが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-534">
              <see langword="true" /> if the control has been registered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-535">
            <see cref="T:System.Web.UI.Page" /> オブジェクトを再利用できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-535">Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-536">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-536">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.IHttpHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsStartupScriptRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="72e00-537">検索対象の起動スクリプトの文字列キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-537">The string key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-538">クライアント起動スクリプトが <see cref="T:System.Web.UI.Page" /> オブジェクトに登録されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-538">Determines whether the client startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-539">スタートアップ スクリプトが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-539">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-540">このメソッドを呼び出す前に呼び出します<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType>をクライアント側スクリプトを不必要にまとめることを回避します。</span><span class="sxs-lookup"><span data-stu-id="72e00-540">Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="72e00-541">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="72e00-541">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="72e00-542"><xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-542">The <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-543">使用して、<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-543">Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-544">使用を次のコード例に示します、<xref:System.Web.UI.Page.RegisterStartupScript%2A>メソッドと組み合わせて、<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-544">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="72e00-545">コード宣言ブロックで記述された ECMAScript が既に登録されていない場合、によって決定される<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>、<xref:System.Web.UI.Page.RegisterStartupScript%2A>呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="72e00-545">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-546">ページ検証が成功したかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-546">Gets a value indicating whether page validation succeeded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-547">ページ検証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-547">
              <see langword="true" /> if page validation succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-548">このプロパティを返すの`true`、現在の検証グループのすべての検証サーバー コントロールが正常に検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-548">For this property to return `true`, all validation server controls in the current validation group must validate successfully.</span></span> <span data-ttu-id="72e00-549">呼び出した後にのみ、このプロパティを確認する必要があります、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>メソッド、またはセット、`CausesValidation`プロパティを`true`で、`OnServerClick`フォーム処理を開始する ASP.NET サーバー コントロールのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="72e00-549">You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing.</span></span> <span data-ttu-id="72e00-550">これらのサーバー コントロールが含まれて、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.HtmlControls.HtmlButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-550">These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.</span></span>  
  
 <span data-ttu-id="72e00-551">使用して検証グループの検証を強制する場合、<xref:System.Web.UI.Page.Validate%2A>メソッドを指定された検証グループ内のすべての検証コントロールも検証する必要がありますが正常にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-551">If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-552">次のコード例では、使用方法を示します、<xref:System.Web.UI.Page.IsValid%2A>条件付きステートメントを設定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-552">The following code example demonstrates using the <xref:System.Web.UI.Page.IsValid%2A> property to set up a conditional statement.</span></span> <span data-ttu-id="72e00-553">プロパティを返す場合`true`、`Text`のプロパティ、 `lblOutput` 「ページが正しく!」に設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-553">If the property returns `true`, the `Text` property of the `lblOutput` control is set to "Page is valid!"</span></span> <span data-ttu-id="72e00-554">それ以外の場合、「一部の必須フィールドが空です」に設定されています。</span><span class="sxs-lookup"><span data-stu-id="72e00-554">Otherwise, it is set to "Some of the required fields are empty."</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Validate#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-555">検証が行われる前に <see cref="P:System.Web.UI.Page.IsValid" /> プロパティが呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-555">The <see cref="P:System.Web.UI.Page.IsValid" /> property is called before validation has occurred.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-556">ページ コンテキストに格納されているオブジェクトの一覧を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-556">Gets a list of objects stored in the page context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-557">ページ コンテキストに格納されたオブジェクトを格納している <see cref="T:System.Collections.IDictionary" /> への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-557">A reference to an <see cref="T:System.Collections.IDictionary" /> containing objects stored in the page context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-558">使用して、<xref:System.Web.UI.Page.Items%2A>ページの要求と同じ有効期間を持つオブジェクトを格納するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-558">Use the <xref:System.Web.UI.Page.Items%2A> property to store objects with the same lifetime as the page request.</span></span> <span data-ttu-id="72e00-559">このプロパティは読み取り専用です。ただし、オブジェクトを追加できる、<xref:System.Collections.IDictionary>オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="72e00-559">This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.</span></span>  
  
 <span data-ttu-id="72e00-560">追加されたオブジェクト、<xref:System.Web.UI.Page.Items%2A>プロパティには、ページの有効期間全体で使用できるオブジェクトを追加できるように、<xref:System.Web.UI.Page.Items%2A>ページ ライフ サイクルの早い段階でイベントのプロパティは、サイクル、後続のイベントでこれらのオブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="72e00-560">Objects added to the <xref:System.Web.UI.Page.Items%2A> property are available throughout the lifetime of the page, so you can add objects to the <xref:System.Web.UI.Page.Items%2A> property in events early in the page life cycle and access those objects in later events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-561">ページと関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのロケール識別子を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-561">Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-562">
            <see cref="T:System.Threading.Thread" /> に渡すロケール識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-562">The locale identifier to pass to the <see cref="T:System.Threading.Thread" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-563">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-563">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-564">`LCID` .Aspx ファイルのディレクティブで属性を設定することができますが、優先ロケール識別子の設定方法を使用すると、<xref:System.Web.UI.Page.Culture%2A>と<xref:System.Web.UI.Page.UICulture%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-564">The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
        <altmember cref="P:System.Web.UI.Page.UICulture" />
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-565">ページの有効期間の読み込み段階が終了するときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-565">Occurs at the end of the load stage of the page's life cycle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-566"><xref:System.Web.UI.Page.LoadComplete>すべてポストバック データの後にイベントが発生し、ビュー状態データが読み込まれるは、ページと後、<xref:System.Web.UI.Control.OnLoad%2A>ページのすべてのコントロールのメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="72e00-566">The <xref:System.Web.UI.Page.LoadComplete> event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.</span></span>  
  
 <span data-ttu-id="72e00-567">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-567">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="LoadPageStateFromPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual object LoadPageStateFromPersistenceMedium ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object LoadPageStateFromPersistenceMedium() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function LoadPageStateFromPersistenceMedium () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ LoadPageStateFromPersistenceMedium();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-568">保存されたすべてのビューステートに関する情報を <see cref="T:System.Web.UI.Page" /> オブジェクトに読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-568">Loads any saved view-state information to the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-569">保存されたビュー ステート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-569">The saved view state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-570"><xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>メソッドを使用、<xref:System.Web.UI.PageStatePersister.Load%2A>のメソッド、<xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType>によって参照されるオブジェクト、<xref:System.Web.UI.Page.PageStatePersister%2A>をロード プロパティのビュー状態情報の保存、<xref:System.Web.UI.Page>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-570">The <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="72e00-571">ASP.NET には 2 つのサブフォルダーが含まれています、<xref:System.Web.UI.PageStatePersister>クラス、 <xref:System.Web.UI.HiddenFieldPageStatePersister> ASP.NET ページに含まれる非表示フィールドの状態情報を保存するクラスと<xref:System.Web.UI.SessionPageStatePersister>で状態を保存するクラス、<xref:System.Web.UI.Page.Session%2A>要求に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-571">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span>  
  
 <span data-ttu-id="72e00-572">任意の場所で状態を保存する必要がありますを作成する新しいの子孫、<xref:System.Web.UI.PageStatePersister>クラスを保存し、任意の永続メディアへの状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="72e00-572">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="72e00-573">新たに作成する例については<xref:System.Web.UI.PageStatePersister>オブジェクトを参照してください、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-573">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="72e00-574">.NET Framework version 1.0 または 1.1 では、ロードする場合は、このメソッドをオーバーライドを使用している場合、<xref:System.Web.UI.Page>状態から非表示フィールド以外のものです。</span><span class="sxs-lookup"><span data-stu-id="72e00-574">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field.</span></span> <span data-ttu-id="72e00-575">またをオーバーライドする必要があるように選択した場合、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-575">If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-576">ポストバック後に、クライアント ブラウザー内の同じ位置にユーザーを返すかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-576">Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.</span>
          </span>
          <span data-ttu-id="72e00-577">このプロパティは、使用が推奨されなくなった <see cref="P:System.Web.UI.Page.SmartNavigation" /> プロパティに代わるものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-577">This property replaces the obsolete <see cref="P:System.Web.UI.Page.SmartNavigation" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-578">クライアント ブラウザー内の位置を維持する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-578">
              <see langword="true" /> if the client position should be maintained; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-579">Web ページは、サーバーにポストバックされる、ユーザーは、ページの上部に返されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-579">When Web pages are posted back to the server, the user is returned to the top of the page.</span></span> <span data-ttu-id="72e00-580">長い Web ページで、つまり、ユーザーは、ページ上の最後の位置にページをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="72e00-580">On long Web pages, this means that the user has to scroll the page back to the last position on the page.</span></span>  
  
 <span data-ttu-id="72e00-581">ときに、<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>プロパティに設定されている`true`ユーザーは、代わりに返される最後の位置 ページでします。</span><span class="sxs-lookup"><span data-stu-id="72e00-581">When the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property is set to `true`, the user is instead returned to the last position on the page.</span></span>  
  
 <span data-ttu-id="72e00-582">設定する、<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>プロパティに、 [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブです。</span><span class="sxs-lookup"><span data-stu-id="72e00-582">You set the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property in the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="72e00-583">仮想パスを表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-583">A <see cref="T:System.String" /> that represents the virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-584">仮想パス (絶対パスまたは相対パス)、またはアプリケーション相対パスの割り当て先の物理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-584">Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-585">仮想パスまたはアプリケーション相対パスに関連付けられている物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-585">The physical path associated with the virtual path or application-relative path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="72e00-586"><xref:System.Web.UI.Page.MapPath%2A>プロパティでは、ホスティング環境に関する機密情報を含めることができます可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-586">The <xref:System.Web.UI.Page.MapPath%2A> property can potentially contain sensitive information about the hosting environment.</span></span> <span data-ttu-id="72e00-587">戻り値をユーザーに表示されません必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-587">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-588">次の例では、<xref:System.Web.UI.Page.MapPath%2A>サブフォルダーの物理パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="72e00-588">The following example uses the <xref:System.Web.UI.Page.MapPath%2A> method to obtain the physical path of a subfolder.</span></span> <span data-ttu-id="72e00-589">読み取られたファイル名を追加し、<xref:System.Web.UI.WebControls.TextBox.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-589">It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="72e00-590">そのファイルへの絶対物理パスになります。</span><span class="sxs-lookup"><span data-stu-id="72e00-590">The result is the absolute physical path to that file.</span></span>  
  
 [!code-csharp[Page_MapPath_ResponseEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/CS/page_mappath_responseencoding.cs.aspx#1)]
 [!code-vb[Page_MapPath_ResponseEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/VB/page_mappath_responseencoding.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-591">ページの全体的な外観を決定するマスター ページを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-591">Gets the master page that determines the overall look of the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-592">存在する場合は、このページに関連付けられた <see cref="T:System.Web.UI.MasterPage" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-592">The <see cref="T:System.Web.UI.MasterPage" /> associated with this page if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-593"><xref:System.Web.UI.Page.Master%2A>プロパティから返される、<xref:System.Web.UI.MasterPage>このページに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-593">The <xref:System.Web.UI.Page.Master%2A> property returns the <xref:System.Web.UI.MasterPage> object associated with this page.</span></span> <span data-ttu-id="72e00-594">このプロパティは読み取り専用です。ただしでのプロパティを設定することができます、<xref:System.Web.UI.MasterPage>オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="72e00-594">This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.</span></span>  
  
 <span data-ttu-id="72e00-595"><xref:System.Web.UI.Page.Master%2A>プロパティはマスター ページを参照するページでのみ有効ですが、<xref:System.Web.UI.Page.MasterPageFile%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-595">The <xref:System.Web.UI.Page.Master%2A> property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property.</span></span> <span data-ttu-id="72e00-596">アクセスする場合、 <xref:System.Web.UI.Page.Master%2A>  プロパティ ページ、マスター ページを参照しないで`null`が返されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-596">If you access the <xref:System.Web.UI.Page.Master%2A> property on a page that does not reference a master page, `null` is returned.</span></span> <span data-ttu-id="72e00-597">マスター ページの内容が後までに使用できる、<xref:System.Web.UI.Page.PreInit>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="72e00-597">The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.MasterPageFile" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public virtual string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-598">マスター ページの仮想パスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-598">Gets or sets the virtual path of the master page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-599">マスター ページの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-599">The virtual path of the master page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-600"><xref:System.Web.UI.Page.MasterPageFile%2A>プロパティは、このページに関連付けられているマスター ページファイルのルートから、アプリケーションの) 仮想パス。</span><span class="sxs-lookup"><span data-stu-id="72e00-600">The <xref:System.Web.UI.Page.MasterPageFile%2A> property is a virtual path (from the root of the application) of the master page file associated with this page.</span></span> <span data-ttu-id="72e00-601"><xref:System.Web.UI.Page.MasterPageFile%2A>プロパティでのみ設定できます、<xref:System.Web.UI.Page.PreInit>イベント; を設定しようとすると、<xref:System.Web.UI.Page.MasterPageFile%2A>後にプロパティ、<xref:System.Web.UI.Page.PreInit>イベントがスローされます、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="72e00-601">The <xref:System.Web.UI.Page.MasterPageFile%2A> property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the <xref:System.Web.UI.Page.MasterPageFile%2A> property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="72e00-602">場合、<xref:System.Web.UI.Page.MasterPageFile%2A>プロパティが有効でない型の例外<xref:System.Web.HttpException>ページ ライフ サイクルの後半でスローされるプロパティ設定されている場合に例外がスローされませんが、<xref:System.Web.UI.Page.PreInit>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-602">If the <xref:System.Web.UI.Page.MasterPageFile%2A> property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.</span></span>  
  
 <span data-ttu-id="72e00-603">持つページ、<xref:System.Web.UI.Page.MasterPageFile%2A>プロパティ セットのコンテンツ ページされ、したがってされる最上位レベルのみのコントロールを含めることができます<xref:System.Web.UI.WebControls.Content>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-603">Pages that have the <xref:System.Web.UI.Page.MasterPageFile%2A> property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-604">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> プロパティは <see cref="E:System.Web.UI.Page.PreInit" /> イベントの完了後に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-604">The <see cref="P:System.Web.UI.Page.MasterPageFile" /> property is set after the <see cref="E:System.Web.UI.Page.PreInit" /> event is complete.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-605">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> プロパティで指定されたファイルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-605">The file specified in the <see cref="P:System.Web.UI.Page.MasterPageFile" /> property does not exist.</span>
          </span>
          <span data-ttu-id="72e00-606">\- - または -  ページに、最上位のコントロールである <see cref="T:System.Web.UI.WebControls.Content" /> コントロールがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-606">\- or -  The page does not have a <see cref="T:System.Web.UI.WebControls.Content" /> control as the top level control.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Master" />
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-607">ページの状態フィールドの最大長を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-607">Gets or sets the maximum length for the page's state field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-608">ページの状態フィールドの最大長 (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-608">The maximum length, in bytes, for the page's state field.</span>
          </span>
          <span data-ttu-id="72e00-609">既定値は -1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-609">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-610">ときに、<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>プロパティが正の数値に設定されている、クライアント ブラウザーに送信されるビュー ステートは、複数の隠しフィールドに分割、および各フィールドの値がで指定されたサイズより小さい、<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-610">When the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property.</span></span>  
  
 <span data-ttu-id="72e00-611">設定、<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>負の数 (既定値) をプロパティでは、ビュー状態フィールドをチャンクに分割されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="72e00-611">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property to a negative number (the default) indicates that the view-state field should not be separated into chunks.</span></span> <span data-ttu-id="72e00-612">設定、<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>少数のパフォーマンスの低下にあります。</span><span class="sxs-lookup"><span data-stu-id="72e00-612">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> to a small number may result in poor performance.</span></span>  
  
 <span data-ttu-id="72e00-613">値を設定、<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>プロパティに、Web.config ファイルのです。</span><span class="sxs-lookup"><span data-stu-id="72e00-613">Set the value of the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-614">
            <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> プロパティが -1 または正の数と等しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-614">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property is not equal to -1 or a positive number.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-615">ページの初期化後に <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> プロパティが設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-615">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property was set after the page was initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MetaDescription">
      <MemberSignature Language="C#" Value="public string MetaDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-616">
            <see langword="meta" /> 要素の "description" の内容を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-616">Gets or sets the content of the "description" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-617">
            <see langword="meta" /> 要素の "description" の内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-617">The content of the "description" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-618">HTML`meta`要素は、検索エンジンの番組表を向上させるために使用できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-618">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="72e00-619">「説明」`meta`要素は一覧のプレビューを向上させるために一部の検索エンジンによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-619">The "description" `meta` element is used by some search engines to improve listing previews.</span></span>  
  
 <span data-ttu-id="72e00-620">「説明」がある場合`meta`内の要素、`head`ページ マークアップの要素、`meta`ページが表示される場合は、要素をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="72e00-620">If there is no "description" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="72e00-621">ページのマークアップは既に"description"場合`meta`要素では、このプロパティを取得または設定、`content`の属性、`meta`要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-621">If the page markup already has a "description" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="72e00-622">ディレクティブに、このプロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-622">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-623">設定した場合、 <xref:System.Web.UI.Page.MetaDescription%2A> 「ASP.NET の概要」ページのプロパティは、次要素は、レンダリングされる HTML に表示されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-623">If you set the <xref:System.Web.UI.Page.MetaDescription%2A> property of a page to "ASP.NET Overview", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="description" content="ASP.NET Overview" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-624">ページには、ヘッダー コントロール ("server" に設定された <see langword="head" /> 属性を持つ <see langword="runat" /> 要素) はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-624">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaKeywords" />
      </Docs>
    </Member>
    <Member MemberName="MetaKeywords">
      <MemberSignature Language="C#" Value="public string MetaKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaKeywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaKeywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-625">
            <see langword="meta" /> 要素の "keywords" の内容を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-625">Gets or sets the content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-626">
            <see langword="meta" /> 要素の "keywords" の内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-626">The content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-627">HTML`meta`要素は、検索エンジンの番組表を向上させるために使用できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-627">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="72e00-628">「キーワード」`meta`要素が使用されていないすべてのまたは主要な検索エンジンではほとんどの重みを指定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-628">The "keywords" `meta` element is either not used at all or is given very little weight by the major search engines.</span></span>  
  
 <span data-ttu-id="72e00-629">「キーワード」がある場合`meta`内の要素、`head`ページ マークアップの要素、`meta`ページが表示される場合は、要素をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="72e00-629">If there is no "keywords" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="72e00-630">ページのマークアップは既に「キーワード」場合`meta`要素では、このプロパティを取得または設定、`content`の属性、`meta`要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-630">If the page markup already has a "keywords" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="72e00-631">ディレクティブに、このプロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-631">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-632">設定した場合、 <xref:System.Web.UI.Page.MetaKeywords%2A> 「HTML、CSS、JavaScript、XML」をページのプロパティは、次の要素は、レンダリングされる HTML に表示されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-632">If you set the <xref:System.Web.UI.Page.MetaKeywords%2A> property of a page to "HTML,CSS,XML,JavaScript", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="keywords" content=" HTML,CSS,XML,JavaScript" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-633">ページには、ヘッダー コントロール ("server" に設定された <see langword="head" /> 属性を持つ <see langword="runat" /> 要素) はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-633">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaDescription" />
      </Docs>
    </Member>
    <Member MemberName="ModelBindingExecutionContext">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelBindingExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBindingExecutionContext As ModelBindingExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelBindingExecutionContext ^ ModelBindingExecutionContext { System::Web::ModelBinding::ModelBindingExecutionContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelBindingExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-634">モデル バインディングの実行コンテキストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-634">Gets the model binding execution context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-635">モデル バインディングの実行コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-635">The model binding execution context.</span>
          </span>
          <span data-ttu-id="72e00-636">モデル バインディングの実行コンテキストが <see langword="null" /> の場合は、新しい実行コンテキストが作成され、それが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-636">If the model binding execution context is <see langword="null" />, a new one is created and returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelStateDictionary ^ ModelState { System::Web::ModelBinding::ModelStateDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-637">モデルの状態およびモデル バインディングの検証の状態を格納するモデル状態ディクショナリ オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-637">Gets the model state dictionary object that contains the state of the model and of model-binding validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-638">モデル状態ディクショナリ オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-638">The model state dictionary object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-639">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-639">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-640">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-640">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-641">
            <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させてページを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-641">Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-642"><xref:System.Web.UI.Page.OnInit%2A>メソッドを作成するために必要な初期化とセットアップの手順を実行、<xref:System.Web.UI.Page>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="72e00-642">The <xref:System.Web.UI.Page.OnInit%2A> method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="72e00-643">このページのライフ サイクル ステージで ページで宣言されたサーバー コントロールは既定の状態に初期化されます。ただし、各コントロールのビュー ステートがまだ設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-643">In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.</span></span> <span data-ttu-id="72e00-644">ページ上のコントロールが中に、ページ上の他のサーバー コントロールにアクセスできない、`Page_Init`フェーズでは、他のコントロールの親または子コントロールがかどうかに関係なく、します。</span><span class="sxs-lookup"><span data-stu-id="72e00-644">A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls.</span></span> <span data-ttu-id="72e00-645">他のサーバー コントロールが作成され、アクセスできる状態である保証はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-645">Other server controls are not guaranteed to be created and ready for access.</span></span>  
  
 <span data-ttu-id="72e00-646"><xref:System.Web.UI.Page.OnInit%2A>メソッドは、<xref:System.Web.UI.Page.OnPreInit%2A>メソッドとの前に、<xref:System.Web.UI.Page.OnInitComplete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-646">The <xref:System.Web.UI.Page.OnInit%2A> method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.</span></span>  
  
 <span data-ttu-id="72e00-647">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-647">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-648">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-648">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-649"><xref:System.Web.UI.Page.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-649">The <xref:System.Web.UI.Page.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-650">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-650">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-651">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-651">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInitComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInitComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-652">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-652">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-653">ページを初期化した後に <see cref="E:System.Web.UI.Page.InitComplete" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-653">Raises the <see cref="E:System.Web.UI.Page.InitComplete" /> event after page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-654"><xref:System.Web.UI.Page.OnInitComplete%2A>ページの初期化が完了した後にメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-654">The <xref:System.Web.UI.Page.OnInitComplete%2A> method is called after page initialization is complete.</span></span> <span data-ttu-id="72e00-655">このページのライフ サイクル ステージで宣言されたすべて、ページ上のコントロールが初期化されるが、ページのビュー ステートがまだ設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-655">In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.</span></span> <span data-ttu-id="72e00-656">サーバー コントロールにアクセスできますが、それらがまだ含まれていませんユーザーから返される情報には。</span><span class="sxs-lookup"><span data-stu-id="72e00-656">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="72e00-657"><xref:System.Web.UI.Page.OnInitComplete%2A>メソッドは、最後の発生、<xref:System.Web.UI.Page>初期化段階と、負荷のステージの前にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-657">The <xref:System.Web.UI.Page.OnInitComplete%2A> method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.</span></span>  
  
 <span data-ttu-id="72e00-658">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-658">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-659">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-659">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-660"><xref:System.Web.UI.Page.OnInitComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-660">The <xref:System.Web.UI.Page.OnInitComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-661">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-661">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-662">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-662">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoadComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-663">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-663">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-664">ページの読み込み段階の終了時に <see cref="E:System.Web.UI.Page.LoadComplete" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-664">Raises the <see cref="E:System.Web.UI.Page.LoadComplete" /> event at the end of the page load stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-665"><xref:System.Web.UI.Page.OnLoadComplete%2A>メソッドは、ページを読み込む段階の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-665">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method is called at the end of the page load stage.</span></span> <span data-ttu-id="72e00-666">この時点でページ ライフ サイクルは、すべてのポストバック データとビューステート データが読み込み済みで、ページ上のコントロールにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-666">At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.</span></span>  
  
 <span data-ttu-id="72e00-667">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-667">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-668">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-668">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-669"><xref:System.Web.UI.Page.OnLoadComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-669">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-670">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-670">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-671">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-671">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreInit">
      <MemberSignature Language="C#" Value="protected virtual void OnPreInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-672">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-672">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-673">ページの初期化の開始時に <see cref="E:System.Web.UI.Page.PreInit" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-673">Raises the <see cref="E:System.Web.UI.Page.PreInit" /> event at the beginning of page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-674"><xref:System.Web.UI.Page.OnPreInit%2A>ページの初期化段階の先頭にメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-674">The <xref:System.Web.UI.Page.OnPreInit%2A> method is called at the beginning of the page initialization stage.</span></span>  
  
 <span data-ttu-id="72e00-675">後に、<xref:System.Web.UI.Page.OnPreInit%2A>メソッドが呼び出される、パーソナル化情報が読み込まれ、ページのテーマが存在する場合は初期化されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-675">After the <xref:System.Web.UI.Page.OnPreInit%2A> method is called, personalization information is loaded and the page theme, if any, is initialized.</span></span> <span data-ttu-id="72e00-676">これは、優先されるステージを動的に定義にも、<xref:System.Web.UI.PageTheme>または<xref:System.Web.UI.MasterPage>ページ。</span><span class="sxs-lookup"><span data-stu-id="72e00-676">This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.</span></span>  
  
 <span data-ttu-id="72e00-677">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-677">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-678">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-678">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-679"><xref:System.Web.UI.Page.OnPreInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-679">The <xref:System.Web.UI.Page.OnPreInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-680">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-680">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-681">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-681">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnPreLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-682">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-682">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-683">ポストバック データがページ上のサーバー コントロールに読み込まれてから <see cref="E:System.Web.UI.Page.PreLoad" /> イベントが発生するまでの間に <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-683">Raises the <see cref="E:System.Web.UI.Page.PreLoad" /> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-684"><xref:System.Web.UI.Page.OnPreLoad%2A>メソッドが呼び出されたユーザーから返されたすべてのポストバック データが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="72e00-684">The <xref:System.Web.UI.Page.OnPreLoad%2A> method is called after all postback data returned from the user is loaded.</span></span> <span data-ttu-id="72e00-685">この段階で、ページのライフ サイクルで、ビュー ステート情報とポストバック データ宣言コントロールと初期化段階で作成されたコントロールがページのコントロールに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="72e00-685">At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.</span></span>  
  
 <span data-ttu-id="72e00-686">作成されたコントロール、<xref:System.Web.UI.Page.OnPreLoad%2A>メソッドは、ビューステートとポストバック データを読み込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-686">Controls created in the <xref:System.Web.UI.Page.OnPreLoad%2A> method will also be loaded with view-state and postback data.</span></span>  
  
 <span data-ttu-id="72e00-687">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-687">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-688">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-688">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-689"><xref:System.Web.UI.Page.OnPreLoad%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-689">The <xref:System.Web.UI.Page.OnPreLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-690">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-690">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-691">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-691">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRenderComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnPreRenderComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreRenderComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreRenderComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreRenderComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-692">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-692">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-693">
            <see cref="E:System.Web.UI.Page.PreRenderComplete" /> イベントが発生してからページが表示されるまでの間に <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-693">Raises the <see cref="E:System.Web.UI.Page.PreRenderComplete" /> event after the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> event and before the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-694"><xref:System.Web.UI.Page.OnPreRenderComplete%2A>プリレンダ リング、ページのライフ サイクルの段階が完了すると、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-694">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method is called when the prerendering stage of the page life cycle is complete.</span></span> <span data-ttu-id="72e00-695">ページのライフ サイクルのこの段階では、すべてのコントロールが作成され、ページは、出力を表示する準備が。</span><span class="sxs-lookup"><span data-stu-id="72e00-695">At this stage of the page life cycle, all controls are created and the page is ready to render the output.</span></span>  
  
 <span data-ttu-id="72e00-696">これは、最後のページのビュー状態を保存する前に呼び出すイベントです。</span><span class="sxs-lookup"><span data-stu-id="72e00-696">This is the last event called before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="72e00-697">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-697">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-698">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-698">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-699"><xref:System.Web.UI.Page.OnPreRenderComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-699">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-700">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-700">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-701">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-701">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSaveStateComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSaveStateComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSaveStateComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSaveStateComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSaveStateComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e00-702">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-702">A <see cref="T:System.EventArgs" /> object containing the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-703">ページの状態が永続媒体に保存された後で <see cref="E:System.Web.UI.Page.SaveStateComplete" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-703">Raises the <see cref="E:System.Web.UI.Page.SaveStateComplete" /> event after the page state has been saved to the persistence medium.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-704"><xref:System.Web.UI.Page.OnSaveStateComplete%2A>メソッドは、コントロールの状態情報がページの永続化中に書き込まれたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-704">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method is called when the state information for the control has been written to the persistence medium for the page.</span></span> <span data-ttu-id="72e00-705">永続化中に呼び出すことによって状態情報が書き込まれる、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-705">State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 <span data-ttu-id="72e00-706">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-706">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e00-707">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-707">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e00-708"><xref:System.Web.UI.Page.OnSaveStateComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-708">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e00-709">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="72e00-709">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-710">
            <para>オーバーライドする場合<see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-710">
              <para>When overriding <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-711">特定の要求側のブラウザーのページをレンダリングするアダプターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-711">Gets the adapter that renders the page for the specific requesting browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-712">ページをレンダリングする <see cref="T:System.Web.UI.Adapters.PageAdapter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-712">The <see cref="T:System.Web.UI.Adapters.PageAdapter" /> that renders the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-713"><xref:System.Web.UI.Page.PageAdapter%2A>プロパティは、固有の仕様を返します<xref:System.Web.UI.Adapters.PageAdapter>の動作を変更するオブジェクト、<xref:System.Web.UI.Page>要求側のブラウザーのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-713">The <xref:System.Web.UI.Page.PageAdapter%2A> property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.</span></span>  
  
 <span data-ttu-id="72e00-714">特定<xref:System.Web.UI.Adapters.PageAdapter>オブジェクトは、入力方向の特性を調べることによって決まります<xref:System.Web.UI.Page.Request%2A>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-714">The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object.</span></span> <span data-ttu-id="72e00-715">要求のライフ サイクル イベントをアダプターが選択された場合、<xref:System.Web.UI.Adapters.PageAdapter>オブジェクトに対応するイベントの上書き、<xref:System.Web.UI.Page>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-715">When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageStatePersister">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.PageStatePersister PageStatePersister" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageStatePersister" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PageStatePersister As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::PageStatePersister ^ PageStatePersister { System::Web::UI::PageStatePersister ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-716">ページに関連付けられている <see cref="T:System.Web.UI.PageStatePersister" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-716">Gets the <see cref="T:System.Web.UI.PageStatePersister" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-717">ページに関連付けられた <see cref="T:System.Web.UI.PageStatePersister" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-717">A <see cref="T:System.Web.UI.PageStatePersister" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-718">HTTP 要求と応答は、本質的にステートレスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-718">HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="72e00-719">HTTP 要求の間で状態を維持するために ASP.NET サーバー ページを格納できます<xref:System.Web.UI.Page>状態です。</span><span class="sxs-lookup"><span data-stu-id="72e00-719">To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="72e00-720">ビュー状態と呼ばれる、この状態は、ページとコントロールの設定、およびページとコントロールのようにいる場合、ユーザーがページに最後のラウンド トリップで対話し、ものと同じものを表示できるようにするデータで構成されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-720">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.</span></span> <span data-ttu-id="72e00-721">同じページに後続の要求間でのビュー ステートを格納するいくつかのメカニズムが存在します。</span><span class="sxs-lookup"><span data-stu-id="72e00-721">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="72e00-722">抽象<xref:System.Web.UI.PageStatePersister>クラスは、これらの状態の記憶域メカニズムの基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="72e00-722">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.</span></span>  
  
 <span data-ttu-id="72e00-723">ページの開発者が通常必要ありませんを使用して、<xref:System.Web.UI.Page.PageStatePersister%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-723">Page developers will typically not need to use the <xref:System.Web.UI.Page.PageStatePersister%2A> property.</span></span> <span data-ttu-id="72e00-724"><xref:System.Web.UI.Page.PageStatePersister%2A>プロパティは、主の機能を拡張するコントロールの開発者によって使用、<xref:System.Web.UI.Page>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-724">The <xref:System.Web.UI.Page.PageStatePersister%2A> property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="postEventArgumentID">
      <MemberSignature Language="C#" Value="public const string postEventArgumentID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventArgumentID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventArgumentID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventArgumentID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventArgumentID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-725">表示されるページの EVENTARGUMENT 非表示フィールドを定義する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-725">A string that defines the EVENTARGUMENT hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventSourceID" />
      </Docs>
    </Member>
    <Member MemberName="postEventSourceID">
      <MemberSignature Language="C#" Value="public const string postEventSourceID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventSourceID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventSourceID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventSourceID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-726">表示されるページの EVENTTARGET 非表示フィールドを定義する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-726">A string that defines the EVENTTARGET hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventArgumentID" />
      </Docs>
    </Member>
    <Member MemberName="PreInit">
      <MemberSignature Language="C#" Value="public event EventHandler PreInit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreInit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreInit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreInit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreInit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-727">ページの初期化前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-727">Occurs before page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-728">このイベントでは、ポストバックへの応答で、ページが読み込まれているかどうかなど、ページ要求の条件を確認することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-728">This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.</span></span> <span data-ttu-id="72e00-729">プロファイルのプロパティの値をチェックすることもできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-729">You can also check the values of profile properties.</span></span>  
  
 <span data-ttu-id="72e00-730">イベントでは、ページのライフ サイクルの後で使用される値を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-730">The event enables you to set values that are used later in the page life cycle.</span></span> <span data-ttu-id="72e00-731">動的に、マスター ページまたは、要求されたページのテーマを設定し、ダイナミック コントロールを作成できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-731">You can dynamically set a master page or a theme for the requested page, and create dynamic controls.</span></span>  
  
 <span data-ttu-id="72e00-732">方法の詳細については<xref:System.Web.UI.Page.PreInit>イベントに組み込まれて、ASP.NET のライフ サイクルは、「 [ASP.NET ページ ライフ サイクルの概要](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-732">For more information about how the <xref:System.Web.UI.Page.PreInit> event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public event EventHandler PreLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreLoad" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreLoad" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreLoad As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreLoad;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-733">ページの<see cref="E:System.Web.UI.Control.Load" /> イベントの前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-733">Occurs before the page <see cref="E:System.Web.UI.Control.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-734"><xref:System.Web.UI.Page.PreLoad>イベントは、すべてのポストバック データの処理後、および、<xref:System.Web.UI.Control.Load>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-734">The <xref:System.Web.UI.Page.PreLoad> event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event.</span></span> <span data-ttu-id="72e00-735">2 回目の試行する前にポストバック データを読み込む、<xref:System.Web.UI.Page.OnLoadComplete%2A>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-735">There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event.</span></span> <span data-ttu-id="72e00-736">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-736">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
      </Docs>
    </Member>
    <Member MemberName="PreRenderComplete">
      <MemberSignature Language="C#" Value="public event EventHandler PreRenderComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRenderComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreRenderComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRenderComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRenderComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-737">ページの内容が表示される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-737">Occurs before the page content is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-738"><xref:System.Web.UI.Page.PreRenderComplete>ページのライフ サイクルの前のレンダリング段階が完了すると、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="72e00-738">The <xref:System.Web.UI.Page.PreRenderComplete> event is raised when the pre-render stage of the page life cycle is complete.</span></span> <span data-ttu-id="72e00-739">ページのライフ サイクルのこの段階ですべてのコントロールを作成、必要なすべての改ページが完了したら、およびページは、出力を表示するために準備ができてです。</span><span class="sxs-lookup"><span data-stu-id="72e00-739">At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.</span></span>  
  
 <span data-ttu-id="72e00-740">これは、最後のページのビュー状態が保存される前に発生するイベントです。</span><span class="sxs-lookup"><span data-stu-id="72e00-740">This is the last event raised before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="72e00-741">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-741">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public System.Web.UI.Page PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousPage As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Page ^ PreviousPage { System::Web::UI::Page ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-742">現在のページにコントロールが渡されるページを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-742">Gets the page that transferred control to the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-743">現在のページにコントロールが渡されるページを表す <see cref="T:System.Web.UI.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-743">The <see cref="T:System.Web.UI.Page" /> representing the page that transferred control to the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-744">使用すると、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドまたはを使用してページ間に 1 つの ASP.NET ページから別の処理を転送します。 投稿、発生元のページに移動先のページに必要な情報を要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-744">When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.</span></span> <span data-ttu-id="72e00-745">使用することができます、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティをその情報にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="72e00-745">You can use the <xref:System.Web.UI.Page.PreviousPage%2A> property to access that information.</span></span>  
  
 <span data-ttu-id="72e00-746">(、転送や別のページからのクロス post)、直接の要求の結果として、現在のページを表示しているかどうか、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティが含まれます`null`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-746">If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the <xref:System.Web.UI.Page.PreviousPage%2A> property contains `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-747">次の例では、2 つの部分です。</span><span class="sxs-lookup"><span data-stu-id="72e00-747">The following example is in two parts.</span></span> <span data-ttu-id="72e00-748">1 つは、使用する ASP.NET ページ、<xref:System.Web.HttpServerUtility.Transfer%2A>としてページ モデルで公開されるメソッド`Server.Transfer("path")`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-748">The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer("path")`.</span></span> <span data-ttu-id="72e00-749">2 番目の部分は、対象のページを使用して、<xref:System.Web.UI.Page.PreviousPage%2A>最初のページのタイトルを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-749">The second part is the target page, which uses the <xref:System.Web.UI.Page.PreviousPage%2A> property to get the title of the first page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Main.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Main.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Notify.aspx#2)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Notify.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-750">現在のユーザーは、前のページにアクセスすることを許可されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-750">The current user is not allowed to access the previous page.</span>
          </span>
          <span data-ttu-id="72e00-751">または、ASP.NET ルーティングが使用中のため、前のページの URL はルーティング URL です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-751">-or-  ASP.NET routing is in use and the previous page's URL is a routed URL.</span>
          </span>
          <span data-ttu-id="72e00-752">ASP.NET がアクセス許可をチェックするときは、その URL がファイルへの実際のパスであることを前提としています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-752">When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.</span>
          </span>
          <span data-ttu-id="72e00-753">ルーティングされた URL には該当しないため、チェックは失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-753">Because this is not the case with a routed URL, the check fails.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="72e00-754">HTTP 要求を処理するために使用する、組み込みのサーバー オブジェクト (<see cref="T:System.Web.HttpContext" />、<see cref="P:System.Web.HttpContext.Request" />、<see cref="P:System.Web.HttpContext.Response" /> など) への参照を提供する <see cref="P:System.Web.HttpContext.Session" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-754">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-755">
            <see cref="T:System.Web.UI.Page" />、<see cref="P:System.Web.UI.Page.Context" />、<see cref="P:System.Web.UI.Page.Request" />、<see cref="P:System.Web.UI.Page.Response" /> の各プロパティなど、<see cref="P:System.Web.UI.Page.Application" /> オブジェクトの組み込みサーバー オブジェクトを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-755">Sets the intrinsic server objects of the <see cref="T:System.Web.UI.Page" /> object, such as the <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, and <see cref="P:System.Web.UI.Page.Application" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-756">このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-756">You should not call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Context" />
        <altmember cref="P:System.Web.UI.Page.Request" />
        <altmember cref="P:System.Web.UI.Page.Response" />
        <altmember cref="P:System.Web.UI.Page.Application" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(class System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (sourceControl As IPostBackEventHandler, eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::Web::UI::IPostBackEventHandler ^ sourceControl, System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControl" Type="System.Web.UI.IPostBackEventHandler" />
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceControl">
          <span data-ttu-id="72e00-757">ポストバックの原因となった ASP.NET サーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-757">The ASP.NET server control that caused the postback.</span>
          </span>
          <span data-ttu-id="72e00-758">このコントロールは、<see cref="T:System.Web.UI.IPostBackEventHandler" /> インターフェイスを実装している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-758">This control must implement the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</span>
          </span>
        </param>
        <param name="eventArgument">
          <span data-ttu-id="72e00-759">ポストバックの引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-759">The postback argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-760">ポストバックの原因となったサーバー コントロールに、受信ポストバック イベントを処理するよう通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-760">Notifies the server control that caused the postback that it should handle an incoming postback event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-761"><xref:System.Web.UI.Page>オブジェクトの呼び出し、<xref:System.Web.UI.Page.RaisePostBackEvent%2A>メソッド ポストバックが発生したときにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-761">The <xref:System.Web.UI.Page> object calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback occurs.</span></span> <span data-ttu-id="72e00-762">この呼び出しは、読み込みと変更の通知が完了した後は、事前に発生する前に、ページのライフ サイクルで発生します。</span><span class="sxs-lookup"><span data-stu-id="72e00-762">This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-763">次の例で、<xref:System.Web.UI.Page.RaisePostBackEvent%2A>ときに、カスタム、ポストバック イベントが発生したことを ASP.NET に通知するメソッド`userButton`サーバー コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="72e00-763">The following example uses the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterArrayDeclaration(string arrayName, string arrayValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="72e00-764">値の宣言が行われる配列の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-764">The name of the array in which to declare the value.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="72e00-765">配列に代入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-765">The value to place in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-766">ページが表示されると、ECMAScript 配列宣言として宣言される値を宣言します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-766">Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-767">このメソッドは、クライアント スクリプト ライブラリの同じ型のすべてのコントロールが扱えるように配列内における自体を宣言するスクリプト ベースのコントロールで使用できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-767">This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.</span></span>  
  
 <span data-ttu-id="72e00-768"><xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-768">The <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-769">使用して、<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-769">Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-770">次のコード例では、 <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> 、配列を宣言するメソッド`myArray`、という 3 つのオブジェクトを格納している`x`、 `y`、および`z`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-770">The following code example uses the <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`.</span></span> <span data-ttu-id="72e00-771">例を定義し、スタートアップ スクリプトを使用して、登録、<xref:System.Web.UI.Page.RegisterStartupScript%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-771">The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="72e00-772">ときに、ECMAScript`doClick`関数はこのコードが含まれるページから呼び出されますが、配列とそのオブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e00-772">When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.</span></span>  
  
 [!code-csharp[Page_RegisterArrayDeclaration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/CS/page_registerarraydeclaration.cs.aspx#1)]
 [!code-vb[Page_RegisterArrayDeclaration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/VB/page_registerarraydeclaration.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncTask">
      <MemberSignature Language="C#" Value="public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAsyncTask(class System.Web.UI.PageAsyncTask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAsyncTask (task As PageAsyncTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAsyncTask(System::Web::UI::PageAsyncTask ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Web.UI.PageAsyncTask" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="72e00-773">非同期操作を定義する <see cref="T:System.Web.UI.PageAsyncTask" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-773">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-774">新しい非同期操作をページに登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-774">Registers a new asynchronous task with the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-775">使用して、非同期タスクを定義する、<xref:System.Web.UI.PageAsyncTask>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-775">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="72e00-776">タスクが定義されている場合を使用して、<xref:System.Web.UI.Page.RegisterAsyncTask%2A>ページで、タスクを登録します。</span><span class="sxs-lookup"><span data-stu-id="72e00-776">When the task is defined, use the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method to register the task with the page.</span></span> <span data-ttu-id="72e00-777">タスクを登録すると、呼び出し、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>メソッドを非同期のタスクを開始します。</span><span class="sxs-lookup"><span data-stu-id="72e00-777">After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="72e00-778"><xref:System.Web.UI.Page.RegisterAsyncTask%2A>メソッドは、同期および非同期の両方のページで使用することができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-778">The <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method can be used with both synchronous and asynchronous pages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-779">使用を次のコード例に示します、<xref:System.Web.UI.Page.AsyncTimeout%2A>を持つプロパティ、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>と<xref:System.Web.UI.Page.RegisterAsyncTask%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-779">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="72e00-780">先頭、末尾、およびタイムアウト ハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-780">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="72e00-781">指定されているタスクの割り当て時刻を超えた場合、非同期タスクのような状況を示す例では、人為的な遅延が導入された、<xref:System.Web.UI.Page.AsyncTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-781">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="72e00-782">現実のシナリオで非同期タスクは、データベースの呼び出しまたはイメージの生成を実行するために使用可能性がありますなどとタイムアウト ハンドラーは、一定の時間で、タスクは実行されない場合に下げるを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-782">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-783">非同期操作は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-783">The asynchronous task is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public virtual void RegisterClientScriptBlock (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterClientScriptBlock(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterClientScriptBlock (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterClientScriptBlock(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterClientScriptBlock(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="72e00-784">スクリプト ブロックを識別する一意のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-784">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="72e00-785">クライアントに送られるスクリプトの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-785">Content of script that is sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-786">応答に対してクライアント側のスクリプト ブロックを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-786">Emits client-side script blocks to the response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-787">開始タグの直後に、クライアント側-スクリプトが生成されます、<xref:System.Web.UI.Page>オブジェクトの`<form runat= server>`要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-787">The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="72e00-788">必ず開始タグと終了を`<script>`スクリプトの周りに要素のブロックで指定した文字列、`script`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="72e00-788">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="72e00-789">このメソッドは、スクリプト ブロックを識別するキーを使用するため、スクリプト ブロックが別のサーバー コントロールのインスタンスから要求されるたびに、出力ストリームに出力する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-789">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.</span></span> <span data-ttu-id="72e00-790">キーを使用すると、別のコントロールのスクリプト ブロックが互いに干渉する可能性も低下します。</span><span class="sxs-lookup"><span data-stu-id="72e00-790">Using a key also decreases the likelihood of different controls' script blocks interfering with each other.</span></span>  
  
 <span data-ttu-id="72e00-791">いずれかのスクリプトで、同じブロック`key`パラメーター値が重複と見なされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-791">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-792">要求側のブラウザーがスクリプトをサポートしていない場合は表示されないように、HTML コメント タグで囲みます、スクリプトを含めるに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-792">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="72e00-793"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-793">The <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-794">代わりに <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-794">Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-795">使用を次のコード例に示します、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>メソッドと組み合わせて、<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-795">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="72e00-796">宣言のコード ブロックに ECMAScript が既に登録されていない場合、によって決定される<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="72e00-796">If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="72e00-797">表示される非表示フィールドの一意の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-797">The unique name of the hidden field to be rendered.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="72e00-798">非表示フォームに出力される値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-798">The value to be emitted in the hidden form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-799">サーバー コントロールがフォームに非表示フィールドを自動的に登録できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-799">Allows server controls to automatically register a hidden field on the form.</span>
          </span>
          <span data-ttu-id="72e00-800">
            <see cref="T:System.Web.UI.Page" /> サーバー コントロールが表示されると、フィールドが <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに送られます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-800">The field will be sent to the <see cref="T:System.Web.UI.Page" /> object when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-801"><xref:System.Web.UI.Page.RegisterHiddenField%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-801">The <xref:System.Web.UI.Page.RegisterHiddenField%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-802">使用して、<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-802">Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-803">次のコード例では、 <xref:System.Web.UI.Page.RegisterHiddenField%2A> ECMAScript コードを作成するためにメソッドが要求側のブラウザーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-803">The following code example uses the <xref:System.Web.UI.Page.RegisterHiddenField%2A> method to help create ECMAScript code that is passed to the requesting browser.</span></span> <span data-ttu-id="72e00-804">非表示フィールドの名前に設定されている`myHiddenField`し、その値が「を Microsoft にようこそ!」に設定されています。</span><span class="sxs-lookup"><span data-stu-id="72e00-804">The name of the hidden field is set to `myHiddenField` and its value is set to "Welcome to Microsoft!"</span></span> <span data-ttu-id="72e00-805"><xref:System.Web.UI.Page.RegisterStartupScript%2A>メソッドの呼び出し、`myHiddenField`値のユーザーがページ上のボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="72e00-805">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-806">この例では、潜在的なセキュリティ上の脅威が、非表示フィールドがあります。</span><span class="sxs-lookup"><span data-stu-id="72e00-806">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="72e00-807">既定では、テキスト ボックスの値と同様、非表示フィールドの値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-807">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="72e00-808">ASP.NET Web ページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。</span><span class="sxs-lookup"><span data-stu-id="72e00-808">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-809">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-809">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#1)]
 [!code-vb[Page_RegisterHiddenField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterOnSubmitStatement (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterOnSubmitStatement(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="72e00-810">スクリプト ブロックを識別する一意のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-810">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="72e00-811">クライアントに送られるクライアント側のスクリプト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-811">The client-side script to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-812">ページがクライアント <see langword="OnSubmit" /> イベントにアクセスできるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-812">Allows a page to access the client <see langword="OnSubmit" /> event.</span>
          </span>
          <span data-ttu-id="72e00-813">スクリプトは、他の場所に登録されているクライアント コードへの関数の呼び出しである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-813">The script should be a function call to client code registered elsewhere.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-814"><xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-814">The <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-815">使用して、<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-815">Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-816">次のコード例では、使用方法を示します、<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>クライアント側の送信 ボタンがクリックされたときに応答するスクリプトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="72e00-816">The following code example demonstrates using the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> to access a script that responds when a client-side Submit button is clicked.</span></span> <span data-ttu-id="72e00-817">このイベントが発生した、クライアントの登録済みの ECMAScript コードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-817">When this event occurs, the registered ECMAScript code is executed on the client.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-818">この例では、潜在的なセキュリティ上の脅威が、非表示フィールドがあります。</span><span class="sxs-lookup"><span data-stu-id="72e00-818">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="72e00-819">既定では、テキスト ボックスの値と同様、非表示フィールドの値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-819">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="72e00-820">ASP.NET Web ページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。</span><span class="sxs-lookup"><span data-stu-id="72e00-820">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-821">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-821">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#2)]
 [!code-vb[Page_RegisterHiddenField#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void RegisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-822">登録するコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-822">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-823">特定のコントロールを、コントロールの状態を維持する必要があるコントロールとして登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-823">Registers a control as one whose control state must be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-824">コントロールの状態を使用するカスタムのサーバー コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>メソッド要求のたびにコントロールの状態のための登録が引き継がれません要求からの要求にポストバック イベントの中であるためです。</span><span class="sxs-lookup"><span data-stu-id="72e00-824">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on each request because registration for control state is not carried over from request to request during a postback event.</span></span> <span data-ttu-id="72e00-825">登録がで実行することをお勧め、<xref:System.Web.UI.Control.Init>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-825">It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-826">次のコード例は、カスタム サーバー コントロールの呼び出しを示しています、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-826">The following code example shows a custom server control calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span>  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-827">登録するコントロールが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-827">The control to register is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-828">
            <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> メソッドを呼び出すことができるのは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの前か中だけです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-828">The <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> method can be called only before or during the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresPostBack">
      <MemberSignature Language="C#" Value="public void RegisterRequiresPostBack (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresPostBack(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresPostBack(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-829">登録するコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-829">The control to be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-830">コントロールを、ページがサーバーにポストバックされたときにポストバック処理を必要とするコントロールとして登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-830">Registers a control as one that requires postback handling when the page is posted back to the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-831">登録するコントロールを実装する必要があります、<xref:System.Web.UI.IPostBackDataHandler>インターフェイスまたは<xref:System.Web.HttpException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="72e00-831">The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised.</span></span> <span data-ttu-id="72e00-832">コントロールで実装された場合、<xref:System.Web.UI.IPostBackDataHandler>ポストバック データの処理や任意の投稿の生成が可能なインターフェイスが変更されたデータ イベントをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="72e00-832">When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events.</span></span> <span data-ttu-id="72e00-833">サーバー コントロールのイベント モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム サーバー コントロールのイベント モデル](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-833">For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).</span></span>  
  
 <span data-ttu-id="72e00-834">以前のページにコントロールを登録、`Page_PreRender`ページのライフ サイクルのイベントです。</span><span class="sxs-lookup"><span data-stu-id="72e00-834">Register controls with the page at or before the `Page_PreRender` event of the page life cycle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-835">次のコード例では、<xref:System.Web.UI.Page.RegisterRequiresPostBack%2A>メソッドをテキスト ボックス コントロールを必要とする`myTextBox`、ポストバックされます、テキスト ボックスに関連付けられているすべてのコードを実行前にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-835">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute.</span></span> <span data-ttu-id="72e00-836"><xref:System.Web.UI.WebControls.TextBox> コントロールは、実装、<xref:System.Web.UI.IPostBackDataHandler>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-836"><xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-837">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-837">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-838">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-838">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-839">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-839">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterRequiresPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/CS/page_registerrequirespostback.cs.aspx#1)]
 [!code-vb[Page_RegisterRequiresPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/VB/page_registerrequirespostback.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-840">登録するコントロールが <see cref="T:System.Web.UI.IPostBackDataHandler" /> インターフェイスを実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-840">The control to register does not implement the <see cref="T:System.Web.UI.IPostBackDataHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresRaiseEvent">
      <MemberSignature Language="C#" Value="public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRequiresRaiseEvent(class System.Web.UI.IPostBackEventHandler control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterRequiresRaiseEvent (control As IPostBackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRequiresRaiseEvent(System::Web::UI::IPostBackEventHandler ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.IPostBackEventHandler" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-841">登録するコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-841">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-842">ASP.NET サーバー コントロールが <see cref="T:System.Web.UI.Page" /> オブジェクトで処理されたときに、このコントロールをイベントの発生を要求するコントロールとして登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-842">Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-843">ページ要求あたり 1 つだけのサーバー コントロールに登録できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-843">Only one server control can be registered per page request.</span></span> <span data-ttu-id="72e00-844"><xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A>コントロールにそのコントロール形式で ID データの投稿にはが含まれていない場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-844">The <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> must be used when the control does not include its control ID in the form post data.</span></span> <span data-ttu-id="72e00-845">また、登録されているコントロールを実装する必要があります、<xref:System.Web.UI.IPostBackEventHandler>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-845">Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-846">次のコード例では、<xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A>を登録するメソッド、 <xref:System.Web.UI.WebControls.Button> Web サーバー コントロールにイベントを発生させる必要であるとします。</span><span class="sxs-lookup"><span data-stu-id="72e00-846">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised.</span></span> <span data-ttu-id="72e00-847">最初に登録した後<xref:System.Web.UI.WebControls.Button>コントロール、2 番目になる<xref:System.Web.UI.WebControls.Button>の最初のボタンの結果を投稿するためのコードで宣言されているコントロールがページにイベントをクリックします。</span><span class="sxs-lookup"><span data-stu-id="72e00-847">After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresViewStateEncryption">
      <MemberSignature Language="C#" Value="public void RegisterRequiresViewStateEncryption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresViewStateEncryption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresViewStateEncryption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresViewStateEncryption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-848">コントロールを、ビューステートの暗号化が必要なコントロールとしてページに登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-848">Registers a control with the page as one requiring view-state encryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-849">機密性の高い情報を処理するカスタム コントロールを開発している場合、<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>ページにコントロールを登録し、コントロールは暗号化の表示状態を保証するメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-849">If you are developing a custom control that deals with potentially sensitive information, call the <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> method to register the control with the page and ensure view state for the control is encrypted.</span></span>  
  
 <span data-ttu-id="72e00-850">場合、ページ全体の状態を暗号化する、<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>に設定されている<xref:System.Web.UI.ViewStateEncryptionMode.Auto>または<xref:System.Web.UI.ViewStateEncryptionMode.Always>です。</span><span class="sxs-lookup"><span data-stu-id="72e00-850">The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode.Auto> or <xref:System.Web.UI.ViewStateEncryptionMode.Always>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-851">ビュー ステートの暗号化モードを設定する次のコード例を示します、<xref:System.Web.UI.Page>オブジェクトおよびからビュー ステートの暗号化を要求している<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72e00-851">The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>.</span></span> <span data-ttu-id="72e00-852">この例では、ビュー ステートをデータベースから顧客情報を取得時に暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-852">In this example, view state will be encrypted when customer information is retrieved from a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/CS/encryptViewState.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/VB/encryptViewState.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-853">
            <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> メソッドは、ページ ライフ サイクルの <see langword="PreRender" />フェーズの前またはこのフェーズで呼び出す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-853">The <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method must be called before or during the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public virtual void RegisterStartupScript (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStartupScript(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStartupScript (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStartupScript(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterStartupScript(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="72e00-854">スクリプト ブロックを識別する一意のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-854">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="72e00-855">クライアントに送られるスクリプトの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-855">Content of script that will be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-856">ページ応答で、クライアント側のスクリプト ブロックを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-856">Emits a client-side script block in the page response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-857">ような<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>メソッド、<xref:System.Web.UI.Page.RegisterStartupScript%2A>メソッドの終了タグの直前に、スクリプトの生成、<xref:System.Web.UI.Page>オブジェクトの`<form runat= server>`要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-857">Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="72e00-858">必ず開始タグと終了を`<script>`スクリプトの周りに要素のブロックで指定した文字列、`script`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="72e00-858">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="72e00-859">このメソッドは、スクリプト ブロックを識別するキーを使用するため、スクリプト ブロックを別のサーバー コントロールのインスタンスから要求されるたびに出力ストリームに出力する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-859">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance</span></span>  
  
 <span data-ttu-id="72e00-860">いずれかのスクリプトで、同じブロック`key`パラメーター値が重複と見なされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-860">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-861">要求側のブラウザーがスクリプトをサポートしていない場合は表示されないように、HTML コメント タグで囲みます、スクリプトを含めるに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-861">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="72e00-862"><xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="72e00-862">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method has been deprecated.</span></span> <span data-ttu-id="72e00-863">代わりに <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-863">Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-864">使用を次のコード例に示します、<xref:System.Web.UI.Page.RegisterStartupScript%2A>メソッドと組み合わせて、<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-864">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="72e00-865">コード宣言ブロックで記述された ECMAScript が既に登録されていない場合、によって決定される、 <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 、メソッド、<xref:System.Web.UI.Page.RegisterStartupScript%2A>呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="72e00-865">If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterViewStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterViewStateHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewStateHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterViewStateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewStateHandler ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewStateHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-866">呼び出されると、ページのビューステートが解析されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-866">Causes page view state to be persisted, if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-867"><xref:System.Web.UI.Page.RegisterViewStateHandler%2A>経由メソッドで自動的に呼び出され、<xref:System.Web.UI.HtmlControls.HtmlForm>サーバー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="72e00-867">The <xref:System.Web.UI.Page.RegisterViewStateHandler%2A> method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control.</span></span> <span data-ttu-id="72e00-868">このメソッドが呼び出されない場合、ページのビュー状態は保持されません。</span><span class="sxs-lookup"><span data-stu-id="72e00-868">If this method is not invoked, the page view state will not be persisted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-869">通常、のみ、<xref:System.Web.UI.HtmlControls.HtmlForm>ページのサーバー コントロールは、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="72e00-869">Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_RegisterViewStateHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterViewStateHandler/CS/page_registerviewstatehandler.cs#1)]
 [!code-vb[Page_RegisterViewStateHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterViewStateHandler/VB/page_registerviewstatehandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="72e00-870">ページの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-870">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the page content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-871">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを初期化して、表示する <see cref="T:System.Web.UI.Page" /> の子コントロールを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-871">Initializes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and calls on the child controls of the <see cref="T:System.Web.UI.Page" /> to render.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-872"><xref:System.Web.UI.Page.Render%2A>メソッドは、テキスト、およびクライアントのブラウザーに送信されるマークアップの作成を担当します。</span><span class="sxs-lookup"><span data-stu-id="72e00-872">The <xref:System.Web.UI.Page.Render%2A> method is responsible for creating the text and markup that is sent to the client browser.</span></span> <span data-ttu-id="72e00-873">既定値<xref:System.Web.UI.Page.Render%2A>メソッド呼び出し<xref:System.Web.UI.Control.RenderChildren%2A>テキストと、ページに含まれるコントロールのマークアップを記述します。</span><span class="sxs-lookup"><span data-stu-id="72e00-873">The default <xref:System.Web.UI.Page.Render%2A> method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-874">要求されたページの <see cref="T:System.Web.HttpRequest" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-874">Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-875">ページに関連付けられている現在の <see cref="T:System.Web.HttpRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-875">The current <see cref="T:System.Web.HttpRequest" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-876"><xref:System.Web.HttpRequest> オブジェクトには、現在の HTTP 要求に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-876">The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-877">次の例では、取得する方法、<xref:System.Web.HttpRequest.Headers%2A>コレクションから、<xref:System.Web.HttpRequest>オブジェクトし、ASP.NET ページへの書き込み。</span><span class="sxs-lookup"><span data-stu-id="72e00-877">The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-878">
            <see cref="T:System.Web.HttpRequest" /> オブジェクトが使用できない場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-878">Occurs when the <see cref="T:System.Web.HttpRequest" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequiresControlState">
      <MemberSignature Language="C#" Value="public bool RequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-879">コントロールの状態を要求するかどうかを確認するための <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-879">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-880">指定した <see cref="T:System.Web.UI.Control" /> オブジェクトが、コントロールの状態管理ができるように登録されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-880">Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-881">指定した <see cref="T:System.Web.UI.Control" /> がコントロールの状態を要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-881">
              <see langword="true" /> if the specified <see cref="T:System.Web.UI.Control" /> requires control state; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-882">コントロールの状態は、Web サーバー コントロールが機能するために必要なビューステート データの重要なので構成されるオブジェクトこれは通常のビュー状態から別のオブジェクトに含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-882">Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.</span></span>  
  
 <span data-ttu-id="72e00-883">コントロールの状態を使用してカスタム コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>コントロールの状態を保存する前にメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-883">Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state.</span></span> <span data-ttu-id="72e00-884">使用して、<xref:System.Web.UI.Page.RequiresControlState%2A>コントロールの状態を必要とすると、ページに登録されているコントロールをチェックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-884">Use the <xref:System.Web.UI.Page.RequiresControlState%2A> method to check for controls that are registered with the page as requiring control state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.PageStatePersister.ControlState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-885">
            <see cref="T:System.Web.UI.Page" /> オブジェクトに関連付けられている <see cref="T:System.Web.HttpResponse" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-885">Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
          <span data-ttu-id="72e00-886">このオブジェクトでは、HTTP 応答データをクライアントに送信し、その応答に関する情報を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-886">This object allows you to send HTTP response data to a client and contains information about that response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-887">ページに関連付けられている現在の <see cref="T:System.Web.HttpResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-887">The current <see cref="T:System.Web.HttpResponse" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72e00-888">次のコード例は、cookie を作成してを使用して、ページの HTTP 出力への追加を示しています、<xref:System.Web.HttpResponse>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-888">The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-889">
            <see cref="T:System.Web.HttpResponse" /> オブジェクトが使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-889">The <see cref="T:System.Web.HttpResponse" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="ResponseEncoding">
      <MemberSignature Language="C#" Value="public string ResponseEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-890">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトのエンコーディング言語を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-890">Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-891">現在の <see cref="T:System.Web.HttpResponse" /> のエンコーディング言語を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-891">A string that contains the encoding language for the current <see cref="T:System.Web.HttpResponse" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-892">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-892">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-893">設定、`ResponseEncoding`属性を .aspx ファイルで、ディレクティブを使用する値にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-893">Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-894">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-894">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData RouteData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteData RouteData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.RouteData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteData As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteData ^ RouteData { System::Web::Routing::RouteData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-895">現在の <see cref="P:System.Web.Routing.RequestContext.RouteData" /> インスタンスの <see cref="T:System.Web.Routing.RequestContext" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-895">Gets the <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-896">現在の <see cref="P:System.Web.Routing.RequestContext.RouteData" /> インスタンスの <see cref="T:System.Web.Routing.RequestContext" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-896">The <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-897">ページが ASP.NET ルーティングを通じて行われた要求に対する応答で実行されている場合、このプロパティは、ルート データとして渡された URL パラメーター値へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-897">If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.</span></span> <span data-ttu-id="72e00-898">このプロパティは、実行する場合、ページのルート URL ではなく物理 URL への応答、`null`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-898">If the page runs in response to a physical URL instead of a route URL, this property is `null`.</span></span> <span data-ttu-id="72e00-899">次の例は、という名前は URL パラメーターの値を抽出する方法を示しています。`year`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-899">The following example shows how to extract the value of a URL parameter that is named `year`.</span></span>  
  
```vb  
Dim year As Integer = Convert.ToInt32(Page.RouteData.Values("year"))  
```  
  
```csharp  
int year = Convert.ToInt32(Page.RouteData.Values["year"])  
```  
  
 <span data-ttu-id="72e00-900">ルートが URL パターンを使用して定義されているかどうかは`{locale}/{year}`ドメインの`contoso.com`、および要求された URL が`contoso.com/US/2010`、 `year` 「2010」このコードを実行すると、値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="72e00-900">If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value "2010" when this code runs.</span></span>  
  
 <span data-ttu-id="72e00-901">ASP.NET ルーティングの詳細については、次を参照してください。 [ASP.NET ルーティング](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-901">For more information about ASP.NET routing, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Routing.RequestContext.RouteData" />
      </Docs>
    </Member>
    <Member MemberName="SavePageStateToPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual void SavePageStateToPersistenceMedium (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SavePageStateToPersistenceMedium(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SavePageStateToPersistenceMedium (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SavePageStateToPersistenceMedium(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="72e00-902">ビューステート情報を格納する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-902">An <see cref="T:System.Object" /> in which to store the view-state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-903">ページのビューステート情報とコントロールの状態情報を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-903">Saves any view-state and control-state information for the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-904"><xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>メソッドを使用、<xref:System.Web.UI.PageStatePersister.Save%2A>のメソッド、<xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType>によって参照されるオブジェクト、<xref:System.Web.UI.Page.PageStatePersister%2A>ページのビュー状態とコントロールの状態情報を格納するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-904">The <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.</span></span>  
  
 <span data-ttu-id="72e00-905">ASP.NET には 2 つのサブフォルダーが含まれています、<xref:System.Web.UI.PageStatePersister>クラス、 <xref:System.Web.UI.HiddenFieldPageStatePersister> ASP.NET ページに含まれる非表示フィールドの状態情報を保存するクラスと<xref:System.Web.UI.SessionPageStatePersister>で状態を保存するクラス、<xref:System.Web.UI.Page.Session%2A>要求に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-905">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span> <span data-ttu-id="72e00-906">使用すると、<xref:System.Web.UI.SessionPageStatePersister>クラスがポストバックを決定するのに使用と、非表示の VIEWSTATE フィールドは引き続きレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-906">Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.</span></span>  
  
 <span data-ttu-id="72e00-907">任意の場所で状態を保存する必要がありますを作成する新しいの子孫、<xref:System.Web.UI.PageStatePersister>クラスを保存し、任意の永続メディアへの状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="72e00-907">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="72e00-908">新たに作成する例については<xref:System.Web.UI.PageStatePersister>オブジェクトを参照してください、<xref:System.Web.UI.PageStatePersister>クラスです。</span><span class="sxs-lookup"><span data-stu-id="72e00-908">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="72e00-909">.NET Framework version 1.0 または 1.1 では、保存する場合は、このメソッドをオーバーライドを使用している場合、<xref:System.Web.UI.Page>で非表示フィールド以外の何かの状態。</span><span class="sxs-lookup"><span data-stu-id="72e00-909">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field.</span></span> <span data-ttu-id="72e00-910">またをオーバーライドする必要があるように選択した場合、<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-910">If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="SaveStateComplete">
      <MemberSignature Language="C#" Value="public event EventHandler SaveStateComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SaveStateComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.SaveStateComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SaveStateComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SaveStateComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-911">ページで、そのページおよびそのページに含まれるコントロールのすべてのビューステート情報とコントロールの状態情報が保存された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-911">Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-912">後に Web ページ上のコントロールの状態情報が保存された、<xref:System.Web.UI.Page.PreRenderComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-912">State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="72e00-913"><xref:System.Web.UI.Page.SaveStateComplete>ビュー状態とページのコントロールの状態の後にイベントが発生し、ページ上のコントロールは、永続化に使用するメディアに保存されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-913">The <xref:System.Web.UI.Page.SaveStateComplete> event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.</span></span>  
  
 <span data-ttu-id="72e00-914">これは、最後のページが要求側のブラウザーにレンダリングされる前に発生するイベントです。</span><span class="sxs-lookup"><span data-stu-id="72e00-914">This is the last event raised before the page is rendered to the requesting browser.</span></span>  
  
 <span data-ttu-id="72e00-915">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-915">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-916">
            <see cref="T:System.Web.HttpServerUtility" /> クラスのインスタンスである <see langword="Server" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-916">Gets the <see langword="Server" /> object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-917">ページに関連付けられている現在の <see langword="Server" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-917">The current <see langword="Server" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-918">このプロパティは、頻繁に使用されるへのアクセスを提供<xref:System.Web.HttpServerUtility.HtmlEncode%2A>と<xref:System.Web.HttpServerUtility.MapPath%2A>の他のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-918">This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-919">次のコード例を使用して、サーバーからエラー情報にアクセスする方法を示しています、`Server`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-919">The following code example demonstrates how to access error information from the server by using the `Server` object.</span></span> <span data-ttu-id="72e00-920">具体的から要求された URL の取得の例、`Request`オブジェクトから最新のエラー、`Server`オブジェクト (を使用して、<xref:System.Web.HttpServerUtility.GetLastError%2A>メソッド) と、その両方をクライアントで表示できる文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="72e00-920">In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client.</span></span> <span data-ttu-id="72e00-921">1 回、`message`変数が、クライアントに書き込まれるを使用して、エラーを削除、<xref:System.Web.HttpServerUtility.ClearError%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-921">Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Error method#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Error method/CS/sourcecs.aspx#1)]
 [!code-vb[System.Web.UI.Page_Error method#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Error method/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-922">ASP.NET が提供している現在の <see langword="Session" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-922">Gets the current <see langword="Session" /> object provided by ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-923">現在のセッション状態データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-923">The current session-state data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-924">このプロパティは、現在の要求のセッションに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72e00-924">This property provides information about the current request's session.</span></span> <span data-ttu-id="72e00-925">A `Session` ASP.NET アプリケーションからのページまたはドキュメントを要求するユーザーごとにオブジェクトが保持されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-925">A `Session` object is maintained for each user that requests a page or document from an ASP.NET application.</span></span> <span data-ttu-id="72e00-926">格納されている変数、`Session`ユーザーがアプリケーションでページ間を移動すると、オブジェクトが破棄されません。 ユーザーは、アプリケーション内のページにアクセスする限り、代わりに、これらの変数を永続化します。</span><span class="sxs-lookup"><span data-stu-id="72e00-926">Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.</span></span> <span data-ttu-id="72e00-927">セッション状態の詳細については、次を参照してください。 [ASP.NET セッション状態の概要](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-927">For more information about session state, see [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-928">次のコード例を作成、 `GetStyle` Web フォーム ページのセッションの状態で格納されているキーを取得し、その値を文字列に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="72e00-928">The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.</span></span>  
  
 [!code-csharp[Page.Session_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Session_Samples1/CS/sessioncs.aspx#1)]
 [!code-vb[Page.Session_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Session_Samples1/VB/sessionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-929">セッション情報が <see langword="null" /> に設定されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-929">Occurs when the session information is set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-930">ブラウザーのフォーカスを、指定したコントロールに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-930">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">
          <span data-ttu-id="72e00-931">フォーカスを設定するコントロールの ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-931">The ID of the control to set focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-932">ブラウザーのフォーカスを、指定した ID を持つコントロールに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-932">Sets the browser focus to the control with the specified identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-933">使用して、<xref:System.Web.UI.Page.SetFocus%2A>ブラウザーで表示される Web ページにアクティブなコントロールの文字列を指定した ID を持つコントロールを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-933">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the control with the specified ID string the active control in the Web page displayed by the browser.</span></span> <span data-ttu-id="72e00-934"><xref:System.Web.UI.Page.SetFocus%2A>ページがクライアントに表示用に準備する前に、メソッドを呼び出す必要があります、<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-934">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-935"><xref:System.Web.UI.Page.SetFocus%2A>メソッドがサポートする ECMAScript バージョン 1.3 またはそれ以降のブラウザーでのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="72e00-935">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-936">次のコード例は、Web ページで、2 つ目のテキスト ボックスに、フォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-936">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-937">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-937">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-938">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-938">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-939">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-939">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbyidcs.aspx#1)]
 [!code-aspx-vb[PageSetFocus#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbyidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-940">
            <paramref name="clientID" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-940">
              <paramref name="clientID" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-941">
            <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> は、コントロールが Web フォーム ページの一部ではない場合に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-941">
              <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="72e00-942">\- - または -  <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> は、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-942">\- or -  <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-943">フォーカスを受け取るコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-943">The control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-944">ブラウザーのフォーカスを、指定したコントロールに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-944">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-945">使用して、<xref:System.Web.UI.Page.SetFocus%2A>を指定したコントロール、ブラウザーで表示される Web ページ上のアクティブ コントロールを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="72e00-945">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the specified control the active control on the Web page displayed by the browser.</span></span> <span data-ttu-id="72e00-946"><xref:System.Web.UI.Page.SetFocus%2A>ページがクライアントに表示用に準備する前に、メソッドを呼び出す必要があります、<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="72e00-946">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-947"><xref:System.Web.UI.Page.SetFocus%2A>メソッドがサポートする ECMAScript バージョン 1.3 またはそれ以降のブラウザーでのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="72e00-947">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-948">次のコード例は、Web ページで、2 つ目のテキスト ボックスに、フォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-948">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-949">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-949">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-950">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-950">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-951">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-951">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbycontrolcs.aspx#2)]
 [!code-aspx-vb[PageSetFocus#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbycontrolvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-952">
            <paramref name="control" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-952">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-953">
            <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> は、コントロールが Web フォーム ページの一部ではない場合に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-953">
              <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="72e00-954">\- - または -  <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> は、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-954">\- or -  <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipFormActionValidation">
      <MemberSignature Language="C#" Value="public bool SkipFormActionValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipFormActionValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SkipFormActionValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipFormActionValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipFormActionValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-955">クエリ文字列値が検証されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-955">Gets or sets a value that indicates whether the query string value is validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-956">クエリ文字列の検証をスキップする場合 (クエリ文字列を検証しません) は <see langword="true" />。それ以外の場合で、クエリ文字列の検証を通常どおりに行う場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-956">
              <see langword="true" /> if query string validation should be skipped (the query string should not be validated); otherwise, <see langword="false" /> if query string validation should take place as normal.</span>
          </span>
          <span data-ttu-id="72e00-957">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-957">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is Page.SetFocus and Page.MaintainScrollPositionOnPostBack. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-958">スマート移動できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-958">Gets or sets a value indicating whether smart navigation is enabled.</span>
          </span>
          <span data-ttu-id="72e00-959">このプロパティの使用は非推奨とされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-959">This property is deprecated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-960">スマート移動が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-960">
              <see langword="true" /> if smart navigation is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-961">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-961">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-962">設定、`SmartNavigation`属性を`true`.aspx ファイルでは、ディレクティブにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-962">Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-963">ページが要求されたときに、動的に生成されたクラスは、このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-963">When the page is requested, the dynamically generated class sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-964">ASP.NET version 2.0 では、<xref:System.Web.UI.Page.SmartNavigation%2A>プロパティは推奨されなくなりました。</span><span class="sxs-lookup"><span data-stu-id="72e00-964">In ASP.NET version 2.0, the <xref:System.Web.UI.Page.SmartNavigation%2A> property is deprecated.</span></span> <span data-ttu-id="72e00-965">使用して、<xref:System.Web.UI.Page.SetFocus%2A>メソッドおよび<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-965">Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.</span></span>  
  
 <span data-ttu-id="72e00-966">Microsoft Internet Explorer 5.5 ブラウザー、または後で、スマート ナビゲーションによってページが要求された場合は、次を実行して、ページのユーザーのエクスペリエンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="72e00-966">When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:</span></span>  
  
-   <span data-ttu-id="72e00-967">ナビゲーションの原因となった flash を排除します。</span><span class="sxs-lookup"><span data-stu-id="72e00-967">Eliminating the flash caused by navigation.</span></span>  
  
-   <span data-ttu-id="72e00-968">ページ間を移動するときは、スクロール位置を保持します。</span><span class="sxs-lookup"><span data-stu-id="72e00-968">Persisting the scroll position when moving from page to page.</span></span>  
  
-   <span data-ttu-id="72e00-969">ナビゲーションの間で要素のフォーカスを保持します。</span><span class="sxs-lookup"><span data-stu-id="72e00-969">Persisting element focus between navigations.</span></span>  
  
-   <span data-ttu-id="72e00-970">ブラウザーの履歴の最後のページ状態のみを保持します。</span><span class="sxs-lookup"><span data-stu-id="72e00-970">Retaining only the last page state in the browser's history.</span></span>  
  
 <span data-ttu-id="72e00-971">スマート ナビゲーションは、頻繁なポストバックを必要とする ASP.NET ページではなく、戻り値の大きな変化はない visual のコンテンツを最も効果的です。</span><span class="sxs-lookup"><span data-stu-id="72e00-971">Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.</span></span> <span data-ttu-id="72e00-972">このプロパティを設定するかどうかを決定する際に慎重に検討この`true`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-972">Consider this carefully when deciding whether to set this property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.SetFocus" />
        <altmember cref="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public virtual string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-973">ページ ライフ サイクルの初期段階でページに適用されるテーマの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-973">Gets or sets the name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-974">ページ ライフ サイクルの初期段階でページに適用されるテーマの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-974">The name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-975">このプロパティは、カスケード スタイル シート (CSS) に直接参照していません。</span><span class="sxs-lookup"><span data-stu-id="72e00-975">This property does not refer directly to a cascading style sheet (CSS).</span></span> <span data-ttu-id="72e00-976">プロパティには、その中の CSS ファイルを含めることができる ASP.NET のテーマの名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-976">The property contains the name of an ASP.NET theme, which can  include CSS files within it.</span></span>  
  
 <span data-ttu-id="72e00-977"><xref:System.Web.UI.Page.StyleSheetTheme%2A>一方、プロパティがページのライフ サイクルの早い段階で、ページに適用されているテーマの名前を指定、<xref:System.Web.UI.Page.Theme%2A>プロパティ ページのライフ サイクルの後半のページに適用されているテーマの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-977">The <xref:System.Web.UI.Page.StyleSheetTheme%2A> property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle.</span></span> <span data-ttu-id="72e00-978">つまり、ページの設定は優先されるスタイル シートのテーマでの設定。</span><span class="sxs-lookup"><span data-stu-id="72e00-978">This means that settings on the page take precedence over settings in the style sheet theme.</span></span> <span data-ttu-id="72e00-979">詳細については、次を参照してください。 [ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-979">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="72e00-980">通常、ページ ディレクティブまたはプロパティをオーバーライドすることでは、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-980">You typically set a value for this property in the page directive or by overriding the property.</span></span> <span data-ttu-id="72e00-981">については、次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-981">For information, see the following topics:</span></span>  
  
-   [<span data-ttu-id="72e00-982">方法: ASP.NET のテーマを適用</span><span class="sxs-lookup"><span data-stu-id="72e00-982">How to: Apply ASP.NET Themes</span></span>](http://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe)  
  
-   <span data-ttu-id="72e00-983">[方法: ASP.NET のテーマをプログラムによって適用](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span><span class="sxs-lookup"><span data-stu-id="72e00-983">[How to: Apply ASP.NET Themes Programmatically](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-984">
            <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> メソッドを呼び出した後で <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> プロパティを設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-984">An attempt was made to set the <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> property after the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-985">
            <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> が無効なテーマ名に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-985">
              <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> is set to an invalid theme name.</span>
          </span>
          <span data-ttu-id="72e00-986">この例外がスローされるのは、<see cref="M:System.Web.UI.Page.FrameworkInitialize" /> メソッドが呼び出されるが、プロパティ Set アクセス操作子によって呼び出されるのではないときです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-986">This exception is thrown when the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method is called, not by the property setter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Theme" />
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public virtual string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-987">ページ テーマの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-987">Gets or sets the name of the page theme.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-988">ページ テーマの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-988">The name of the page theme.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-989"><xref:System.Web.UI.Page.Theme%2A>プロパティ ページを使用するテーマの名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-989">The <xref:System.Web.UI.Page.Theme%2A> property sets the name of the theme used for the page.</span></span> <span data-ttu-id="72e00-990">テーマの設定よりも優先する ページで設定する場合は、使用、<xref:System.Web.UI.Page.StyleSheetTheme%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-990">If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property.</span></span> <span data-ttu-id="72e00-991">詳細については、次を参照してください。 [ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-991">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="72e00-992"><xref:System.Web.UI.Page.Theme%2A>前にプロパティを設定する必要があります、<xref:System.Web.UI.Page.PreInit>イベント以外の設定、<xref:System.Web.UI.Page.Theme%2A>後プロパティ、<xref:System.Web.UI.Page.PreInit>イベントが発生、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="72e00-992">The <xref:System.Web.UI.Page.Theme%2A> property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the <xref:System.Web.UI.Page.Theme%2A> property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="72e00-993">指定されたテーマは、アプリケーションまたはグローバル テーマのいずれかとして存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-993">The specified theme must exist as either an application or a global theme.</span></span> <span data-ttu-id="72e00-994">テーマが存在しない場合、<xref:System.Web.HttpException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="72e00-994">If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-995">次のコード例のセット、<xref:System.Web.UI.Page.Theme%2A>クエリ文字列内の名前プロパティに渡されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-995">The following code example sets the <xref:System.Web.UI.Page.Theme%2A> property to a name passed in the query string.</span></span>  
  
 [!code-csharp[PageTheme#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageTheme/CS/pagethemecs.aspx#1)]
 [!code-vb[PageTheme#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageTheme/VB/pagethemevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-996">
            <see cref="P:System.Web.UI.Page.Theme" /> イベントが発生した後、<see cref="E:System.Web.UI.Page.PreInit" /> を設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-996">An attempt was made to set <see cref="P:System.Web.UI.Page.Theme" /> after the <see cref="E:System.Web.UI.Page.PreInit" /> event has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-997">
            <see cref="P:System.Web.UI.Page.Theme" /> が無効なテーマ名に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-997">
              <see cref="P:System.Web.UI.Page.Theme" /> is set to an invalid theme name.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-998">ページのタイトルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-998">Gets or sets the title for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-999">ページのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-999">The title of the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1000">使用して、<xref:System.Web.UI.Page.Title%2A>プロパティを要求元のブラウザーに送信された HTML ヘッダーのページのタイトルを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1000">Use the <xref:System.Web.UI.Page.Title%2A> property to set the page title in the HTML header sent to the requesting browser.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-1001">ページを含める必要があります、`head`要素、属性を持つ`runat="server"`、それ以外の場合、タイトルが表示されません。</span><span class="sxs-lookup"><span data-stu-id="72e00-1001">The page must contain a `head` element that has the attribute `runat="server"`, otherwise the title will not render.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-1002">
            <see cref="P:System.Web.UI.Page.Title" /> プロパティには、ページ上のヘッダー コントロールが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1002">The <see cref="P:System.Web.UI.Page.Title" /> property requires a header control on the page.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTitle" />
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1003">現在の Web 要求に対する <see cref="T:System.Web.TraceContext" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1003">Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1004">現在の Web 要求に対する <see cref="T:System.Web.TraceContext" /> オブジェクトのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1004">Data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1005">トレースは、追跡し、Web 要求に関する実行の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1005">Tracing tracks and presents the execution details about a Web request.</span></span> <span data-ttu-id="72e00-1006">トレース データをページに表示する、ページまたはアプリケーション レベルでトレースを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-1006">For trace data to be visible in a rendered page, you must enable tracing at the page or application level.</span></span>  
  
 <span data-ttu-id="72e00-1007">既定では、ページのトレースが無効です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1007">Tracing on a page is disabled by default.</span></span> <span data-ttu-id="72e00-1008">ページのトレースを有効にするには、ディレクティブを使って`<% @ Page trace="true" %>`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1008">To enable tracing for a page, use the  directive `<% @ Page trace="true" %>`.</span></span> <span data-ttu-id="72e00-1009">アプリケーション全体のトレースを有効にするには、アプリケーションの構成ファイル、アプリケーションのルート ディレクトリに配置され、web.config ファイルで有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-1009">To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="72e00-1010">詳細については、次を参照してください。 [ASP.NET のトレースの概要](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1010">For more information, see [ASP.NET Tracing Overview](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-1011">次のコード例へのアクセスを示しています、<xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType>プロパティおよび<xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType>メソッドによって、<xref:System.Web.UI.Page.Trace%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1011">The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> method through the <xref:System.Web.UI.Page.Trace%2A> property.</span></span> <span data-ttu-id="72e00-1012">このコードを呼び出す、<xref:System.Diagnostics.Trace.Write%2A>メソッドをトレースする場合にのみが有効になって、<xref:System.Web.UI.Page>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e00-1012">This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object.</span></span> <span data-ttu-id="72e00-1013">これは有効でない場合、このコードは実行されません、アプリケーションのオーバーヘッドの削減に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1013">If it is not enabled, this code will not run, which can help reduce overhead for your application.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Trace#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Trace/CS/trace1cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Trace#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Trace/VB/trace1vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceEnabled">
      <MemberSignature Language="C#" Value="public bool TraceEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1014">
            <see cref="T:System.Web.UI.Page" /> オブジェクトのトレースが有効であるかどうかを示す値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1014">Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1015">ページのトレースが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1015">
              <see langword="true" /> if tracing is enabled for the page; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-1016">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1016">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1017">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1017">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-1018">設定、`Trace`属性を`true`.aspx ファイルでは、ディレクティブにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1018">Set the `Trace` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-1019">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1019">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceModeValue" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceModeValue">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceModeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceModeValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceModeValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceModeValue As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceModeValue { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1020">トレース ステートメントがページ上に表示されるモードを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1020">Sets the mode in which trace statements are displayed on the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1021">
            <see cref="T:System.Web.TraceMode" /> 列挙体メンバーの 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1021">One of the <see cref="T:System.Web.TraceMode" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1022">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1022">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-1023">設定、 `TraceMode` .aspx ファイルでは、ディレクティブの属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1023">Set the `TraceMode` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-1024">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1024">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceEnabled" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TransactionMode">
      <MemberSignature Language="C#" Value="protected int TransactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TransactionMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property TransactionMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TransactionMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1025">ページのトランザクション サポートのレベルを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1025">Sets the level of transaction support for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1026">
            <see cref="T:System.EnterpriseServices.TransactionOption" /> 列挙体メンバーの 1 つを表す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1026">An integer that represents one of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1027">ほとんどの状況では、コードでこのプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1027">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="72e00-1028">設定、 `Transaction` .aspx ファイルでは、ディレクティブの属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1028">Set the `Transaction` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-1029">ページが要求されると、動的に生成されたクラスは、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1029">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryUpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1030">値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1030">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1031">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1031">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="72e00-1032">モデルの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1032">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="72e00-1033">モデル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1033">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1034">データ連結コントロール内の値を使用して、指定されたモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1034">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-1035">モデル バインドが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1035">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1036">このメソッドは、データ バインド コントロールの指定されたメソッドからのみ呼び出す必要があります`UpdateMethod`または`InsertMethod`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1036">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="72e00-1037">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1037">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="72e00-1038">モデルの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1038">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="72e00-1039">モデル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1039">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="72e00-1040">値プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1040">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1041">指定された値プロバイダー内の値を使用してモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1041">Updates the model instance using values from the specified value provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e00-1042">モデル バインドが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1042">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1043">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1043">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public string UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UICulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UICulture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1044">ページに関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのユーザー インターフェイス (UI: User Interface) ID を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1044">Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1045">UI ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1045">The UI ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1046">ショートカットをこのプロパティは、<xref:System.Threading.Thread.CurrentThread%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1046">This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property.</span></span> <span data-ttu-id="72e00-1047">カルチャは、実行中のスレッドのプロパティ</span><span class="sxs-lookup"><span data-stu-id="72e00-1047">The culture is a property of the executing thread</span></span>  
  
 <span data-ttu-id="72e00-1048">設定、 `UICulture` .aspx ファイルでは、ディレクティブの属性です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1048">Set the `UICulture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="72e00-1049">ページが要求されたときに、動的に生成されたクラスは、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1049">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="72e00-1050">値を明示的に設定するさらに、<xref:System.Web.UI.Page.UICulture%2A>プロパティに、Web.config ファイルのです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1050">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.UICulture%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
      </Docs>
    </Member>
    <Member MemberName="UniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="protected internal virtual string UniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property UniqueFilePathSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ UniqueFilePathSuffix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1051">ブラウザーをキャッシュするためのファイル パスに付加する一意のサフィックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1051">Gets a unique suffix to append to the file path for caching browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1052">ファイル パスに追加する一意のサフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1052">A unique suffix appended to the file path.</span>
          </span>
          <span data-ttu-id="72e00-1053">既定値は "__ufps=" と一意の 6 桁の数字で構成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1053">The default is "__ufps=" plus a unique 6-digit number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1054"><xref:System.Web.UI.Page.UniqueFilePathSuffix%2A>プロパティ ブラウザーのキャッシュに必要な場合は、ファイル パスの末尾に追加される文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1054">The <xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> property returns a string that is appended to the end of a file path when required for caching browsers.</span></span> <span data-ttu-id="72e00-1055">文字列を使用して、特定の要求に関連付けられているファイルのパスを識別します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1055">The string is used to identify the file path associated with a specific request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnobtrusiveValidationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UnobtrusiveValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UnobtrusiveValidationMode As UnobtrusiveValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UnobtrusiveValidationMode UnobtrusiveValidationMode { System::Web::UI::UnobtrusiveValidationMode get(); void set(System::Web::UI::UnobtrusiveValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UnobtrusiveValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1056">クライアント側の検証で控えめな JavaScript が使用されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1056">Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1057">控え目な JavaScript が使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1057">
              <see langword="true" /> if unobtrusive JavaScript is used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void UnregisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-1058">コントロールの状態の永続化を中断する <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1058">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1059">指定したコントロールの、コントロールの状態の永続化を中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1059">Stops persistence of control state for the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1060">コントロールの状態を使用するカスタムのサーバー コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>要求のたびに、状態が永続化します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1060">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted.</span></span> <span data-ttu-id="72e00-1061">コントロールの状態のための登録が引き継がれません要求から要求をポストバック時にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1061">Registration for control state is not carried over from request to request during a postback.</span></span> <span data-ttu-id="72e00-1062">使用して、<xref:System.Web.UI.Page.UnregisterRequiresControlState%2A>ポストバックの永続化する必要がなくなったコントロールに対して、コントロールの状態が永続化されないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1062">Use the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.</span></span>  
  
 <span data-ttu-id="72e00-1063">内部的には、<xref:System.Web.UI.Page.UnregisterRequiresControlState%2A>を使用する場合、メソッドが呼び出され、<xref:System.Web.UI.Control.RemovedControl%2A>コントロールをコントロール コレクションから削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1063">Internally, the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e00-1064">
            <see cref="T:System.Web.UI.Control" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1064">The <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1065">値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1065">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1066">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1066">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="72e00-1067">モデルの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1067">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="72e00-1068">モデル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1068">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1069">データ連結コントロール内の値を使用して、指定されたモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1069">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1070">このメソッドは、データ バインド コントロールの指定されたメソッドからのみ呼び出す必要があります`UpdateMethod`または`InsertMethod`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1070">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="72e00-1071">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1071">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="72e00-1072">モデルの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1072">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="72e00-1073">モデル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1073">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="72e00-1074">値プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1074">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1075">指定された値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1075">Updates the specified model instance using values from a specified value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1076">Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1076">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1077">ページ要求を行っているユーザーに関する情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1077">Gets information about the user making the page request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1078">ページ要求を行っているユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1078">An <see cref="T:System.Security.Principal.IPrincipal" /> that represents the user making the page request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1079"><xref:System.Security.Principal.IPrincipal>オブジェクトが、コードが実行されている、そのユーザーの id を含む、ユーザーとが所属するすべての役割のセキュリティ コンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1079">An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 <span data-ttu-id="72e00-1080">このプロパティを使用して、<xref:System.Web.HttpContext>オブジェクトの<xref:System.Web.HttpContext.User%2A>要求の発生源を決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1080">This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-1081">次のコード例では、<xref:System.Web.UI.Page.User%2A>プロパティを現在のユーザーの認証と id 情報にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1081">The following code example uses the <xref:System.Web.UI.Page.User%2A> property to access authentication and identity information for the current user.</span></span> <span data-ttu-id="72e00-1082">ユーザーが認証されていない場合、ログイン ページにリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1082">If the user is not authenticated, it redirects them to a login page.</span></span>  
  
 [!code-csharp[Page_User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_User/CS/page_user.cs.aspx#1)]
 [!code-vb[Page_User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_User/VB/page_user.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1083">ページに含まれている検証コントロールに対して、割り当てられた情報を検証するように指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1083">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1084">ページに含まれている検証コントロールに対して、割り当てられた情報を検証するように指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1084">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1085">ユーザーが任意の ASP.NET サーバー コントロールがクリックしたときに、このメソッドが呼び出される、`CausesValidation`プロパティに設定`true`、既定値です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1085">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="72e00-1086">含まれます、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>Web サーバー コントロールを<xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、および<xref:System.Web.UI.HtmlControls.HtmlButton>HTML サーバー コントロール、および自動的に投稿できるサーバーに戻すなどのコントロール、 <xref:System.Web.UI.WebControls.TextBox>、 <xref:System.Web.UI.WebControls.CheckBox>、 <xref:System.Web.UI.WebControls.ListControl>、および<xref:System.Web.UI.WebControls.BulletedList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-1086">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="72e00-1087">ボタン コントロールの設定 ページで、ボタン コントロールの検証を無効にするには、`CausesValidation`プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1087">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="72e00-1088">このメソッドが呼び出されると、反復に含まれている検証コントロール、<xref:System.Web.UI.ValidatorCollection>オブジェクトに関連付けられている、<xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType>プロパティし、現在の検証グループ内の各検証コントロールの検証ロジックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1088">When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> property and invokes the validation logic for each validation control in the current validation group.</span></span> <span data-ttu-id="72e00-1089">検証グループは、サーバーに、ページのポストバック コントロールによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1089">The validation group is determined by the control that posted the page to the server.</span></span> <span data-ttu-id="72e00-1090">検証グループが指定されていない場合は、検証グループは使用されません。</span><span class="sxs-lookup"><span data-stu-id="72e00-1090">If no validation group is specified, then no validation group is used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-1091">ページの検証の動作が変更されました。</span><span class="sxs-lookup"><span data-stu-id="72e00-1091">The behavior of page validation has changed.</span></span> <span data-ttu-id="72e00-1092">[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]、不要になった呼び出しの制御、<xref:System.Web.UI.Page.Validate?displayProperty=nameWithType>メソッド以外の場合を使用して、<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1092">In [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], controls no longer call the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="72e00-1093">使用する場合、<xref:System.Web.UI.Page.Validate?displayProperty=nameWithType>メソッドを[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] ページで、検証グループは無視され、すべてのコントロールが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1093">If you use the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method on an [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-1094">次のコード例では、<xref:System.Web.UI.Page.Validate%2A>メソッドをいくつかの異なる検証グループのシナリオでのページを定義します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1094">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-1095">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-1095">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-1096">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1096">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-1097">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1097">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="72e00-1098">
            <para>
              <see cref="M:System.Web.UI.Page.Validate" />がメソッドを使用できません [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] です。使用する場合は [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]、オーバーライド、<see cref="M:System.Web.UI.Page.Validate(System.String)" />ページ検証の動作を変更するメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1098">
              <para>The <see cref="M:System.Web.UI.Page.Validate" /> method is not used by [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]. When you are using [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], override the <see cref="M:System.Web.UI.Page.Validate(System.String)" /> method to change page validation behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (validationGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="72e00-1099">検証されるコントロールの検証グループ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1099">The validation group name of the controls to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1100">指定した検証グループの検証コントロールに対して、割り当てられた情報を検証するように指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1100">Instructs the validation controls in the specified validation group to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1101">ユーザーが任意の ASP.NET サーバー コントロールがクリックしたときに、このメソッドが呼び出される、`CausesValidation`プロパティに設定`true`、既定値です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1101">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="72e00-1102">含まれます、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>Web サーバー コントロールを<xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、および<xref:System.Web.UI.HtmlControls.HtmlButton>HTML サーバー コントロール、および自動的に投稿できるサーバーに戻すなどのコントロール、 <xref:System.Web.UI.WebControls.TextBox>、 <xref:System.Web.UI.WebControls.CheckBox>、 <xref:System.Web.UI.WebControls.ListControl>、および<xref:System.Web.UI.WebControls.BulletedList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-1102">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="72e00-1103">ボタン コントロールの設定 ページで、ボタン コントロールの検証を無効にするには、`CausesValidation`プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1103">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="72e00-1104"><xref:System.Web.UI.Page.Validate%2A>メソッドは、指定された検証グループを検証します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1104">The <xref:System.Web.UI.Page.Validate%2A> method validates the specified validation group.</span></span> <span data-ttu-id="72e00-1105">呼び出した後、<xref:System.Web.UI.Page.Validate%2A>検証グループのメソッド、<xref:System.Web.UI.Page.IsValid%2A>メソッドが返す`true`指定された検証グループと、ページがサーバーにポストの原因となったコントロールの検証グループの両方が有効な場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1105">After calling the <xref:System.Web.UI.Page.Validate%2A> method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-1106">次のコード例では、<xref:System.Web.UI.Page.Validate%2A>メソッドをいくつかの異なる検証グループのシナリオでのページを定義します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1106">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e00-1107">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72e00-1107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="72e00-1108">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="72e00-1109">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1109">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1110">ブラウザーからのクライアント入力の安全性をページで調べるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1110">Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1111">ページがクライアントの入力をチェックするかどうかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1111">A value that indicates whether the page checks client input.</span>
          </span>
          <span data-ttu-id="72e00-1112">既定値は、<see cref="F:System.Web.UI.ValidateRequestMode.Enabled" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1112">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1113">値<xref:System.Web.UI.ValidateRequestMode.Inherit>で使用されていない、<xref:System.Web.UI.Page>クラスから継承する項目がないためです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1113">The value <xref:System.Web.UI.ValidateRequestMode.Inherit> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Validators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection Validators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ValidatorCollection Validators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Validators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validators As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidatorCollection ^ Validators { System::Web::UI::ValidatorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1114">要求されたページに含まれているすべての検証コントロールのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1114">Gets a collection of all validation controls contained on the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1115">検証コントロールのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1115">The collection of validation controls.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1116">このプロパティを使用するには、メソッドとプロパティを操作する、<xref:System.Web.UI.ValidatorCollection>オブジェクトに現在関連付けられている<xref:System.Web.UI.Page>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="72e00-1116">You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="72e00-1117">このコレクションには、ページに含まれているすべての検証サーバー コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="72e00-1117">This collection contains all the validation server controls that are contained in a page.</span></span>  
  
 <span data-ttu-id="72e00-1118">呼び出す、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>メソッドは、現在の検証グループ内の各検証サーバー コントロールで実行するための検証ロジックをによりします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1118">Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method causes validation logic to be executed for each validation server control in the current validation group.</span></span> <span data-ttu-id="72e00-1119">これらのコントロールのいずれかに失敗した場合、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>プロパティから返される`false`です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1119">If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property returns `false`.</span></span>  
  
 <span data-ttu-id="72e00-1120">検証コントロールの詳細については、次を参照してください。 [ASP.NET の検証コントロール](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1120">For more information on validation controls, see [ASP.NET Validation Controls](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyRenderingInServerForm">
      <MemberSignature Language="C#" Value="public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyRenderingInServerForm(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void VerifyRenderingInServerForm(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="72e00-1121">
            <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロール内に配置する必要がある ASP.NET サーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1121">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e00-1122">実行時に、指定された ASP.NET サーバー コントロールに <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールが表示されることを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1122">Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1123">内部にある必要があるコントロール`<form runat=server>`タグの外側に配置されるかどうか、エラー メッセージが表示されるように表示されるか前に、タグはこのメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1123">Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags.</span></span> <span data-ttu-id="72e00-1124">ポストバックまたは登録されたスクリプト ブロックに依存しているコントロールのオーバーライドでこのメソッドを呼び出す必要があります、<xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1124">Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="72e00-1125">サーバーのフォーム要素の表示方法が異なるページには、さまざまな条件で例外をスローするには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1125">Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.</span></span>  
  
 <span data-ttu-id="72e00-1126">それらがで囲まれていない場合、ポストバックまたはクライアント側スクリプトを使用するサーバー コントロールは機能しません、<xref:System.Web.UI.HtmlControls.HtmlForm>サーバー コントロール (<`form runat="server">`) タグ。</span><span class="sxs-lookup"><span data-stu-id="72e00-1126">Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat="server">`) tags.</span></span> <span data-ttu-id="72e00-1127">囲まれていない、ときに、クリア エラー メッセージを表示するときに、これらのコントロールはこのメソッドを呼び出すことができます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-1127">These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 <span data-ttu-id="72e00-1128">カスタム サーバー コントロールを開発するときにするが一般的をオーバーライドする場合は、このメソッドを呼び出す、 `Render` input タグの任意の種類の方法です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1128">When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag.</span></span> <span data-ttu-id="72e00-1129">これは、入力コントロールを呼び出す場合に特に重要<xref:System.Web.UI.Page.GetPostBackEventReference%2A>、またはクライアント スクリプトを出力します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1129">This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script.</span></span> <span data-ttu-id="72e00-1130">複合サーバー コントロールは、この呼び出しを行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72e00-1130">A composite server control does not need to make this call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72e00-1131">次のコード例の上書き、<xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType>カスタム サーバー コントロールのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1131">The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> method of a custom server control.</span></span> <span data-ttu-id="72e00-1132">このコントロールは、ページにそのコンテンツを書き込むを使用して、<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>開始タグと終了タグの間、コントロールが表示されることを確認するメソッド、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。</span><span class="sxs-lookup"><span data-stu-id="72e00-1132">When this control writes its content to a page, it uses the <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#3)]
 [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/vb/testlinkbutton.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-1133">実行時に、指定されたサーバー コントロールが <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> サーバー コントロールの開始タグと終了タグの間に含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1133">The specified server control is not contained between the opening and closing tags of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control at run time.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e00-1134">検証するコントロールが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1134">The control to verify is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1135">ビューステートの暗号化モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1135">Gets or sets the encryption mode of the view state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1136">
            <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1136">One of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> values.</span>
          </span>
          <span data-ttu-id="72e00-1137">既定値は <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1137">The default value is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1138"><xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>コードでプロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="72e00-1138">The <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property cannot be set in code.</span></span> <span data-ttu-id="72e00-1139">のみ設定できますディレクティブまたは、< 構成ファイルの要素。</span><span class="sxs-lookup"><span data-stu-id="72e00-1139">It can only be set in the  directive or in the < element of the configuration file.</span></span> <span data-ttu-id="72e00-1140">値は、ディレクティブのオーバーライドで、構成ファイルで設定された値を設定します。</span><span class="sxs-lookup"><span data-stu-id="72e00-1140">Values set in the  directive override any values set in the configuration file.</span></span>  
  
 <span data-ttu-id="72e00-1141">ディレクティブ内でこのプロパティを設定するための構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1141">The syntax for setting this property in the  directive is as follows:</span></span>  
  
```vb  
<%@ Page Language="VB" ViewStateEncryptionMode="Always" %>  
```  
  
```csharp  
<%@ Page Language="C#" ViewStateEncryptionMode="Always" %>  
```  
  
 <span data-ttu-id="72e00-1142">構成ファイルでこのプロパティを設定するための構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="72e00-1142">The syntax for setting this property in the configuration file is as follows:</span></span>  
  
```vb  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
```csharp  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
 <span data-ttu-id="72e00-1143">カスタム コントロールの開発者は、コントロールの状態を表示する機密性の高いデータを保存する前にコードでこのプロパティの値を確認してみてください。</span><span class="sxs-lookup"><span data-stu-id="72e00-1143">Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72e00-1144">設定される値は、<see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 列挙体のメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1144">The value set is not a member of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e00-1145">
            <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> プロパティは、ページの有効期間内の <see langword="PreRender" />フェーズで、またはこのフェーズの前でだけ設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1145">The <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property can be set only in or before the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateUserKey">
      <MemberSignature Language="C#" Value="public string ViewStateUserKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateUserKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateUserKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateUserKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateUserKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1146">現在のページに関連付けられているビューステート変数で、個別のユーザーに ID を割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1146">Assigns an identifier to an individual user in the view-state variable associated with the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1147">個別のユーザーの ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1147">The identifier for the individual user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e00-1148">設定、<xref:System.Web.UI.Page.ViewStateUserKey%2A>プロパティを使用して、悪意のあるユーザーからアプリケーションへの攻撃を防止できます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1148">Setting the <xref:System.Web.UI.Page.ViewStateUserKey%2A> property can help you prevent attacks on your application from malicious users.</span></span> <span data-ttu-id="72e00-1149">これは、識別子、ビュー ステートを変数に割り当てる各ユーザーの攻撃を生成する、変数が使用できないようにすることによりします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1149">It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.</span></span> <span data-ttu-id="72e00-1150">Web 攻撃およびそれらを防ぐために何ができるについての詳細については、次を参照してください。[かかるの ASP.NET 組み込み機能を利用 Web 攻撃オフ何とか](http://go.microsoft.com/fwlink/?LinkId=163557)です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1150">For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557).</span></span>  
  
 <span data-ttu-id="72e00-1151">ユーザーに認証された名前など、このプロパティを任意の文字列値に設定することができます、または<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値。</span><span class="sxs-lookup"><span data-stu-id="72e00-1151">You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e00-1152">中にこのプロパティを設定する必要があります、`Page_Init`ページ処理の段階です。</span><span class="sxs-lookup"><span data-stu-id="72e00-1152">You must set this property during the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="72e00-1153">中にこのプロパティの設定、`Page_Load`フェーズが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1153">Setting this property during the `Page_Load` phase throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="72e00-1154">ページ処理中、<see cref="P:System.Web.UI.Page.ViewStateUserKey" /> プロパティへのアクセスが遅すぎました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1154">The <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> property was accessed too late during page processing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e00-1155">
            <see cref="T:System.Web.UI.Page" /> オブジェクトが表示されているかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1155">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object is rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e00-1156">
            <see cref="T:System.Web.UI.Page" /> が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1156">
              <see langword="true" /> if the <see cref="T:System.Web.UI.Page" /> is to be rendered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="72e00-1157">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e00-1157">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72e00-1158">次の例のセット、<xref:System.Web.UI.Page.Visible%2A>プロパティを`false`ページの表示内容を非表示にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1158">The following example sets the <xref:System.Web.UI.Page.Visible%2A> property to `false` to hide the rendered content of a page.</span></span> <span data-ttu-id="72e00-1159">このページが最初に要求されたときに、データ ソースが設定され、ページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="72e00-1159">When this page is first requested, a data source is populated and displayed in the page.</span></span> <span data-ttu-id="72e00-1160">ユーザーは、ボタンをクリックしたときに、`HideButton_Click`イベント ハンドラーは、レンダリングされたページのコンテンツ全体を非表示にします。</span><span class="sxs-lookup"><span data-stu-id="72e00-1160">When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.</span></span>  
  
 [!code-csharp[Page_Visible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_Visible/CS/page_visible.cs.aspx#1)]
 [!code-vb[Page_Visible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_Visible/VB/page_visible.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.TemplateControl" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
  </Members>
</Type>