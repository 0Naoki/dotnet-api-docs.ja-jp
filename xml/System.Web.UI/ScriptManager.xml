<Type Name="ScriptManager" FullName="System.Web.UI.ScriptManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8ea56d54afc9f623a14493240aa369a28166afe" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55360839" /></Metadata><TypeSignature Language="C#" Value="public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ScriptManager extends System.Web.UI.Control implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptManager&#xA;Inherits Control&#xA;Implements IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptManager : System::Web::UI::Control, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type ScriptManager = class&#xA;    inherit Control&#xA;    interface IPostBackDataHandler&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Scripts")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ca198-101">ASP.NET Ajax スクリプト ライブラリとスクリプト ファイル、部分ページ レンダリング、および Web サービスとアプリケーション サービスのクライアント プロキシ クラス生成を管理します。</span><span class="sxs-lookup"><span data-stu-id="ca198-101">Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="ca198-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="ca198-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="ca198-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="ca198-104">部分ページ レンダリング</span><span class="sxs-lookup"><span data-stu-id="ca198-104">Partial-Page Rendering</span></span>](#partial_page_rendering)  
  
-   [<span data-ttu-id="ca198-105">マスター ページ、ユーザー コントロール、およびその他の子コンポーネントで ScriptManager コントロールの使用</span><span class="sxs-lookup"><span data-stu-id="ca198-105">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  
  
-   [<span data-ttu-id="ca198-106">スクリプトの管理と登録</span><span class="sxs-lookup"><span data-stu-id="ca198-106">Script Management and Registration</span></span>](#script_management_and_registration)  
  
-   [<span data-ttu-id="ca198-107">Web サービスの参照</span><span class="sxs-lookup"><span data-stu-id="ca198-107">Web Service References</span></span>](#web_service_references)  
  
-   [<span data-ttu-id="ca198-108">ローカリゼーション</span><span class="sxs-lookup"><span data-stu-id="ca198-108">Localization</span></span>](#localization)  
  
-   [<span data-ttu-id="ca198-109">エラー処理</span><span class="sxs-lookup"><span data-stu-id="ca198-109">Error Handling</span></span>](#error_handling)  
  
-   [<span data-ttu-id="ca198-110">宣言構文</span><span class="sxs-lookup"><span data-stu-id="ca198-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="ca198-111">はじめに</span><span class="sxs-lookup"><span data-stu-id="ca198-111">Introduction</span></span>  
 <span data-ttu-id="ca198-112"><xref:System.Web.UI.ScriptManager>コントロールは ASP.NET の Ajax 機能の中心となります。</span><span class="sxs-lookup"><span data-stu-id="ca198-112">The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET.</span></span> <span data-ttu-id="ca198-113">コントロールは、ページ上のすべての ASP.NET Ajax リソースを管理します。</span><span class="sxs-lookup"><span data-stu-id="ca198-113">The control manages all ASP.NET Ajax resources on a page.</span></span> <span data-ttu-id="ca198-114">これには、ブラウザーに Microsoft Ajax Library のスクリプトをダウンロードしを使用して有効になっている部分ページ更新をコーディネートが含まれます<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-114">This includes downloading Microsoft Ajax Library scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="ca198-115">さらに、<xref:System.Web.UI.ScriptManager>コントロールでは、以下を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-115">In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:</span></span>  
  
-   <span data-ttu-id="ca198-116">部分ページ更新プログラムと互換性があるスクリプトを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-116">Register script that is compatible with partial-page updates.</span></span> <span data-ttu-id="ca198-117">スクリプトとコア ライブラリ間の依存関係を管理するために登録する必要があるスクリプトは、Microsoft Ajax Library のスクリプトの後に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="ca198-117">In order to manage dependencies between your script and the core library, any script that you register is loaded after the Microsoft Ajax Library script.</span></span>  
  
-   <span data-ttu-id="ca198-118">指定するかどうかのリリースまたはデバッグ スクリプトがブラウザーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-118">Specify whether release or debug scripts are sent to the browser.</span></span>  
  
-   <span data-ttu-id="ca198-119">持つ Web サービスを登録することによって、スクリプトから Web サービス メソッドにアクセスを提供、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-119">Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="ca198-120">これらのサービスを登録することによって ASP.NET 認証、ロール、およびプロファイルへのアクセスをクライアント スクリプトからアプリケーションのサービス提供、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-120">Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="ca198-121">ECMAScript (JavaScript)、およびブラウザーで関数のカルチャに固有の表示を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ca198-121">Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.</span></span>  
  
-   <span data-ttu-id="ca198-122">埋め込みスクリプト ファイル、またはスタンドアロン スクリプト ファイルのローカリゼーション リソースにアクセスを使用して、<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>のプロパティ、<xref:System.Web.UI.ScriptReference>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-122">Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.</span></span>  
  
-   <span data-ttu-id="ca198-123">実装するサーバー コントロールの登録、<xref:System.Web.UI.IExtenderControl>または<xref:System.Web.UI.IScriptControl>とのインターフェイス、<xref:System.Web.UI.ScriptManager>制御によって、クライアント コンポーネントと動作に必要なスクリプトが表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-123">Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.</span></span>  
  
<a name="partial_page_rendering"></a>   
## <a name="partial-page-rendering"></a><span data-ttu-id="ca198-124">部分ページ レンダリング</span><span class="sxs-lookup"><span data-stu-id="ca198-124">Partial-Page Rendering</span></span>  
 <span data-ttu-id="ca198-125">部分ページ レンダリングをサポートする ASP.NET ページの機能は、次の要因によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-125">The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:</span></span>  
  
-   <span data-ttu-id="ca198-126"><xref:System.Web.UI.ScriptManager>コントロールの<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>プロパティである必要があります`true`(既定値)。</span><span class="sxs-lookup"><span data-stu-id="ca198-126">The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value).</span></span>  
  
-   <span data-ttu-id="ca198-127">少なくとも 1 つあります<xref:System.Web.UI.UpdatePanel>ページ上のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-127">There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.</span></span>  
  
-   <span data-ttu-id="ca198-128"><xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>プロパティである必要があります`true`(既定値)。</span><span class="sxs-lookup"><span data-stu-id="ca198-128">The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value).</span></span> <span data-ttu-id="ca198-129">場合、<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>プロパティが明示的に設定されていない、その値はブラウザーの機能に基づいています。</span><span class="sxs-lookup"><span data-stu-id="ca198-129">If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.</span></span>  
  
 <span data-ttu-id="ca198-130">値を上書きすることができます、<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>中またはページの前に、実行時にプロパティ<xref:System.Web.UI.Control.Init>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-130">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="ca198-131">ページの後にこのプロパティを変更しようとする場合<xref:System.Web.UI.Control.Init>イベントが発生した、<xref:System.InvalidOperationException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-131">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 <span data-ttu-id="ca198-132">部分ページ レンダリングがサポートされている場合、<xref:System.Web.UI.ScriptManager>コントロールが非同期ポストバックおよび部分ページ更新を有効にするスクリプトを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-132">When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates.</span></span> <span data-ttu-id="ca198-133">使用して更新するページの領域が指定されている<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-133">The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="ca198-134"><xref:System.Web.UI.ScriptManager>コントロールが非同期ポストバックを処理し、更新する必要があるページの領域のみを更新します。</span><span class="sxs-lookup"><span data-stu-id="ca198-134">The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated.</span></span> <span data-ttu-id="ca198-135">部分ページ レンダリングの詳細については、次を参照してください。[部分ページ レンダリングの概要](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-135">For more information about partial-page rendering, see [Partial-Page Rendering Overview](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span> <span data-ttu-id="ca198-136">更新が発生する条件の詳細については、次を参照してください。 [UpdatePanel コントロールの概要](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-136">For more information about the conditions that cause an update, see [UpdatePanel Control Overview](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).</span></span>  
  
<a name="using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components"></a>   
## <a name="using-the-scriptmanager-control-with-master-pages-user-controls-and-other-child-components"></a><span data-ttu-id="ca198-137">マスター ページ、ユーザー コントロール、およびその他の子コンポーネントで ScriptManager コントロールの使用</span><span class="sxs-lookup"><span data-stu-id="ca198-137">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>  
 <span data-ttu-id="ca198-138">ページは 1 つだけを含めることができます<xref:System.Web.UI.ScriptManager>その階層内のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-138">A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy.</span></span> <span data-ttu-id="ca198-139">親ページで既に場合に、サービスと入れ子になったページやユーザー コントロール、コンポーネントのスクリプトを登録する、<xref:System.Web.UI.ScriptManager>コントロールを使用して、<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-139">To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="ca198-140">詳細については、次を参照してください[でマスター ページの UpdatePanel コントロールの使用。](https://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span><span class="sxs-lookup"><span data-stu-id="ca198-140">For more information, see [Using the UpdatePanel Control with Master Pages](https://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span></span>  
  
<a name="script_management_and_registration"></a>   
## <a name="script-management-and-registration"></a><span data-ttu-id="ca198-141">スクリプトの管理と登録</span><span class="sxs-lookup"><span data-stu-id="ca198-141">Script Management and Registration</span></span>  
 <span data-ttu-id="ca198-142"><xref:System.Web.UI.ScriptManager>コントロールでは、ページの一部として、レンダリングされるスクリプトを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-142">The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page.</span></span> <span data-ttu-id="ca198-143"><xref:System.Web.UI.ScriptManager>コントロール登録メソッドは、次の 3 つのカテゴリに分けることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-143">The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:</span></span>  
  
-   <span data-ttu-id="ca198-144">登録メソッドが Microsoft Ajax Library のスクリプトの依存関係を維持することを保証します。</span><span class="sxs-lookup"><span data-stu-id="ca198-144">Registration methods that guarantee that script dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
-   <span data-ttu-id="ca198-145">登録メソッドは、Microsoft Ajax Library に依存しませんと互換性のある<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-145">Registration methods that are not dependent on the Microsoft Ajax Library, but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
-   <span data-ttu-id="ca198-146">操作をサポートする登録メソッド<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-146">Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
 <span data-ttu-id="ca198-147">作成し、asp.net Ajax スクリプトを使用する方法の詳細については、次を参照してください。 [Microsoft Ajax Library を使用してカスタム クライアント スクリプトを作成する](https://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-147">For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](https://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).</span></span>  
  
### <a name="registering-script-that-is-dependent-on-the-microsoft-ajax-library"></a><span data-ttu-id="ca198-148">Microsoft Ajax ライブラリに依存するスクリプトを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-148">Registering Script That Is Dependent on the Microsoft Ajax Library</span></span>  
 <span data-ttu-id="ca198-149">次のメソッドを使用すると、Microsoft Ajax ライブラリへの依存関係が維持されていることを保証するようにスクリプト ファイルを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-149">You can use the following methods to register script files in a way that guarantees that any dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
|<span data-ttu-id="ca198-150">メソッド</span><span class="sxs-lookup"><span data-stu-id="ca198-150">Method</span></span>|<span data-ttu-id="ca198-151">定義</span><span class="sxs-lookup"><span data-stu-id="ca198-151">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|<span data-ttu-id="ca198-152">実装するサーバー コントロールの登録、<xref:System.Web.UI.IScriptControl>クライアント オブジェクトの定義に使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="ca198-152">Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="ca198-153"><xref:System.Web.UI.ScriptManager>コントロールは、クライアント オブジェクトをサポートするスクリプトを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-153">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|<span data-ttu-id="ca198-154">実装するサーバー コントロールの登録、<xref:System.Web.UI.IExtenderControl>クライアント オブジェクトの定義に使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="ca198-154">Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="ca198-155"><xref:System.Web.UI.ScriptManager>コントロールは、クライアント オブジェクトをサポートするスクリプトを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-155">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
  
### <a name="registering-partial-page-update-compatible-scripts"></a><span data-ttu-id="ca198-156">部分ページ更新プログラムの互換性のあるスクリプトの登録</span><span class="sxs-lookup"><span data-stu-id="ca198-156">Registering Partial-Page Update Compatible Scripts</span></span>  
 <span data-ttu-id="ca198-157">次のメソッドを使用してするは、Microsoft Ajax Library に依存しませんと互換性のあるスクリプト ファイルを登録する<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-157">You can use the following methods to register script files that are not dependent on the Microsoft Ajax Library but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="ca198-158">これらのメソッドは、の同様のメソッドに対応、<xref:System.Web.UI.ClientScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-158">These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control.</span></span> <span data-ttu-id="ca198-159">内部で使用するスクリプトをレンダリングする場合は、<xref:System.Web.UI.UpdatePanel>制御のメソッドを呼び出すかどうかを確認してください、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-159">If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
|<span data-ttu-id="ca198-160">メソッド</span><span class="sxs-lookup"><span data-stu-id="ca198-160">Method</span></span>|<span data-ttu-id="ca198-161">定義</span><span class="sxs-lookup"><span data-stu-id="ca198-161">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|<span data-ttu-id="ca198-162">JavaScript 配列に値を追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-162">Adds a value to a JavaScript array.</span></span> <span data-ttu-id="ca198-163">配列が存在しない場合は作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-163">If the array does not exist, it is created.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|<span data-ttu-id="ca198-164">レンダリングを`script`要素の後に、ページの開始`<form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-164">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="ca198-165">スクリプトは、文字列パラメーターとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-165">The script is specified as a string parameter.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|<span data-ttu-id="ca198-166">レンダリングを`script`要素の後に、ページの開始`<form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-166">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="ca198-167">スクリプトの内容が設定で指定された、`src`属性をスクリプト ファイルを指す URL。</span><span class="sxs-lookup"><span data-stu-id="ca198-167">The script content is specified by setting the `src` attribute to a URL that points to a script file.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|<span data-ttu-id="ca198-168">レンダリングを`script`要素の後に、ページの開始`<form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-168">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="ca198-169">スクリプトの内容は、アセンブリ内のリソース名を指定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-169">The script content is specified with a resource name in an assembly.</span></span> <span data-ttu-id="ca198-170">`src`アセンブリから名前付きのスクリプトを取得する HTTP ハンドラーへの呼び出しによって URL を持つ属性が自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-170">The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|<span data-ttu-id="ca198-171">指定したコントロールのマークアップで名前/値のカスタム (expando) 属性ペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-171">Renders a custom name/value attribute pair (an expando) in the markup for a specified control.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|<span data-ttu-id="ca198-172">非表示フィールドをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="ca198-172">Renders a hidden field.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|<span data-ttu-id="ca198-173">応答で実行されるスクリプトを登録、`form`要素の`submit`イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-173">Registers a script that is executed in response to the `form` element's `submit` event.</span></span> <span data-ttu-id="ca198-174">`onSubmit`属性は、指定したスクリプトを参照します。</span><span class="sxs-lookup"><span data-stu-id="ca198-174">The `onSubmit` attribute references the specified script.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|<span data-ttu-id="ca198-175">ページの終了直前にスタートアップ スクリプト ブロックをレンダリング`</form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-175">Renders a startup script block just before the page's closing `</form>` tag.</span></span> <span data-ttu-id="ca198-176">表示するために、スクリプトは、文字列パラメーターとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-176">The script to render is specified as a string parameter.</span></span>|  
  
 <span data-ttu-id="ca198-177">メソッドを登録するときに、スクリプトの種類/キー ペアを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-177">When you register methods, you specify a type/key pair for that script.</span></span> <span data-ttu-id="ca198-178">同じタイプ/キー ペアのスクリプトが既に登録されている場合、新しいスクリプトが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="ca198-178">If a script with the same type/key pair is already registered, a new script is not registered.</span></span> <span data-ttu-id="ca198-179">同様に、既に型/リソース名のペアをスクリプトを登録した場合に存在、`script`リソースを参照する要素は追加されません。</span><span class="sxs-lookup"><span data-stu-id="ca198-179">Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again.</span></span> <span data-ttu-id="ca198-180">以前に登録された属性の expando 属性を登録するときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-180">When you register an expando attribute of a previously registered attribute, an exception is thrown.</span></span> <span data-ttu-id="ca198-181">配列の値の重複する登録が許可されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-181">Duplicate registration of array values is allowed.</span></span>  
  
 <span data-ttu-id="ca198-182">呼び出すと、<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>または<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>メソッド、インライン関数を実行するスクリプトを登録しないようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-182">When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions.</span></span> <span data-ttu-id="ca198-183">代わりに、イベント ハンドラーのような関数の定義や、アプリケーションのカスタム クラス定義を含むスクリプトを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-183">Instead, register script that contains function definitions like event handlers or custom class definitions for your application.</span></span>  
  
### <a name="registration-methods-for-updatepanel-controls"></a><span data-ttu-id="ca198-184">UpdatePanel コントロールの登録メソッド</span><span class="sxs-lookup"><span data-stu-id="ca198-184">Registration Methods for UpdatePanel Controls</span></span>  
 <span data-ttu-id="ca198-185">次のメソッドを使用して、使用する場合は、部分ページ更新をカスタマイズする<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-185">You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
|<span data-ttu-id="ca198-186">メソッド</span><span class="sxs-lookup"><span data-stu-id="ca198-186">Method</span></span>|<span data-ttu-id="ca198-187">定義</span><span class="sxs-lookup"><span data-stu-id="ca198-187">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|<span data-ttu-id="ca198-188">コントロールを非同期ポストバックのトリガーとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-188">Registers a control as a trigger for asynchronous postbacks.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|<span data-ttu-id="ca198-189">部分ページ レンダリング中にカスタム データをコントロールに送信します。</span><span class="sxs-lookup"><span data-stu-id="ca198-189">Sends custom data to controls during partial-page rendering.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|<span data-ttu-id="ca198-190">内にあるコントロールの破棄スクリプトを登録、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-190">Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-191">このスクリプトは、<xref:System.Web.UI.UpdatePanel> コントロールが更新または削除されるときに実行されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-191">The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span> <span data-ttu-id="ca198-192">Dispose メソッドは、クライアント コンポーネントは、Microsoft Ajax Library の一部であると、あるコンポーネントを使用できなくする場合は、リソースを解放するのに使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-192">The dispose method is used for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|<span data-ttu-id="ca198-193">コントロールは、完全なポストバックのトリガーとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-193">Registers a control as a trigger for a full postback.</span></span> <span data-ttu-id="ca198-194">このメソッドは内部のコントロールの使用、<xref:System.Web.UI.UpdatePanel>それ以外の場合、非同期ポストバックを実行するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-194">This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.</span></span>|  
  
<a name="web_service_references"></a>   
## <a name="web-service-references"></a><span data-ttu-id="ca198-195">Web サービスの参照</span><span class="sxs-lookup"><span data-stu-id="ca198-195">Web Service References</span></span>  
 <span data-ttu-id="ca198-196">作成して、クライアント スクリプトから呼び出される Web サービスを登録することができます、<xref:System.Web.UI.ServiceReference>オブジェクトとに追加すること、<xref:System.Web.UI.ScriptManager.Services%2A>のコレクション、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-196">You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="ca198-197">ASP.NET クライアント プロキシ オブジェクトによって生成される各<xref:System.Web.UI.ServiceReference>オブジェクト、<xref:System.Web.UI.ScriptManager.Services%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-197">ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection.</span></span> <span data-ttu-id="ca198-198">プログラムで追加することができます<xref:System.Web.UI.ServiceReference>オブジェクトを<xref:System.Web.UI.ScriptManager.Services%2A>実行時に Web サービスを登録するコレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-198">You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.</span></span>  
  
 <span data-ttu-id="ca198-199">スクリプトで Web サービスにアクセスする方法の詳細については、次を参照してください。 [ASP.NET AJAX でクライアント スクリプトを Web サービスを公開する](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)と[ASP.NET AJAX でクライアント スクリプトから Web サービスを呼び出す](https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-199">For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0).</span></span>  
  
<a name="localization"></a>   
## <a name="localization"></a><span data-ttu-id="ca198-200">ローカリゼーション</span><span class="sxs-lookup"><span data-stu-id="ca198-200">Localization</span></span>  
 <span data-ttu-id="ca198-201"><xref:System.Web.UI.ScriptManager>コントロールがレンダリングされたページを適切なローカライズされたスクリプト ファイルのアセンブリまたはスタンドアロン スクリプト ファイルに埋め込まれているいずれかのスクリプト ファイルを指す参照を生成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-201">The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.</span></span>  
  
 <span data-ttu-id="ca198-202">ときに、<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>プロパティに設定されて`true`、<xref:System.Web.UI.ScriptManager>コントロールが存在する場合、現在のカルチャ (ローカライズされた文字列) などのローカライズされたリソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-202">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist.</span></span> <span data-ttu-id="ca198-203"><xref:System.Web.UI.ScriptManager>コントロールがローカライズされたリソースを使用するために、次の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="ca198-203">The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:</span></span>  
  
-   <span data-ttu-id="ca198-204">**スクリプト ファイルをアセンブリに埋め込まれている**します。</span><span class="sxs-lookup"><span data-stu-id="ca198-204">**Script files that are embedded in an assembly**.</span></span> <span data-ttu-id="ca198-205"><xref:System.Web.UI.ScriptManager>コントロールがブラウザーに送信するには、どのカルチャに固有またはフォールバック カルチャ スクリプト ファイルを決定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-205">The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser.</span></span> <span data-ttu-id="ca198-206">これは、カルチャに固有を使用して、<xref:System.Resources.NeutralResourcesLanguageAttribute>アセンブリ属性、(ある場合)、アセンブリ、およびブラウザーの UI カルチャをパッケージ化されたリソース。</span><span class="sxs-lookup"><span data-stu-id="ca198-206">It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).</span></span>  
  
-   <span data-ttu-id="ca198-207">**スタンドアロン スクリプト ファイル**します。</span><span class="sxs-lookup"><span data-stu-id="ca198-207">**Stand-alone script files**.</span></span> <span data-ttu-id="ca198-208"><xref:System.Web.UI.ScriptManager>コントロールを使用してサポートされている UI カルチャのリストを定義する、<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>のプロパティ、<xref:System.Web.UI.ScriptReference>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-208">The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.</span></span>  
  
-   <span data-ttu-id="ca198-209">**デバッグ モードで**します。</span><span class="sxs-lookup"><span data-stu-id="ca198-209">**In debug mode**.</span></span> <span data-ttu-id="ca198-210"><xref:System.Web.UI.ScriptManager>コントロールは、デバッグ情報を含むカルチャに固有のスクリプト ファイルを表示しようとしています。</span><span class="sxs-lookup"><span data-stu-id="ca198-210">The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information.</span></span> <span data-ttu-id="ca198-211">たとえば、ページがデバッグ モードでは、現在のカルチャが英語 MX に設定されて、コントロールがレンダリングなどの名前を持つスクリプト ファイル`scriptname`.en いる、ファイルが存在する場合。</span><span class="sxs-lookup"><span data-stu-id="ca198-211">For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists.</span></span> <span data-ttu-id="ca198-212">適切なフォールバック カルチャのデバッグ ファイルを表示するファイルが存在しない場合</span><span class="sxs-lookup"><span data-stu-id="ca198-212">If the file does not exist, the debug file for the appropriate fallback culture is rendered</span></span>  
  
 <span data-ttu-id="ca198-213">リソースをローカライズする方法の詳細については、次を参照してください。[コンポーネント ライブラリの概要のリソースをローカライズ](https://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-213">For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](https://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).</span></span>  
  
<a name="error_handling"></a>   
## <a name="error-handling"></a><span data-ttu-id="ca198-214">エラー処理</span><span class="sxs-lookup"><span data-stu-id="ca198-214">Error Handling</span></span>  
 <span data-ttu-id="ca198-215">非同期ポストバック中にページ エラーが発生した場合、<xref:System.Web.UI.ScriptManager.AsyncPostBackError>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-215">When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised.</span></span> <span data-ttu-id="ca198-216">サーバーでエラーがクライアントに送信される方法によって異なります、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティ、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>プロパティ、および Web.config ファイルのカスタム エラー セクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-216">The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span> <span data-ttu-id="ca198-217">詳細については、次を参照してください。 [UpdatePanel コントロールのエラー処理のカスタマイズ](https://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-217">For more information, see [Customizing Error Handling for UpdatePanel Controls](https://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="ca198-218">宣言構文</span><span class="sxs-lookup"><span data-stu-id="ca198-218">Declarative Syntax</span></span>  
  
```  
<asp:ScriptManager  
    AllowCustomErrorsRedirect="True|False"  
    AsyncPostBackErrorMessage="string"  
    AsyncPostBackTimeout="integer"  
    AuthenticationService-Path="uri"  
    EnablePageMethods="True|False"  
    EnablePartialRendering="True|False"  
    EnableScriptGlobalization="True|False"  
    EnableScriptLocalization="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    LoadScriptsBeforeUI="True|False"  
    OnAsyncPostBackError="AsyncPostBackError event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnResolveScriptReference="ResolveScriptReference event handler"  
    OnUnload="Unload event handler"  
    ProfileService-LoadProperties="string"  
    ProfileService-Path="uri"  
    RoleService-LoadRoles="True|False"  
    RoleService-Path="uri"  
    runat="server"  
    ScriptMode="Auto|Inherit|Debug|Release"  
    ScriptPath="string"  
    SkinID="string"  
    SupportsPartialRendering="True|False"  
    Visible="True|False"  
>  
        <AuthenticationService  
            Path="uri"  
        />  
        <ProfileService  
            LoadProperties="string"  
            Path="uri"  
        />  
        <RoleService  
            LoadRoles="True|False"  
            Path="uri"  
        />  
        <Scripts>  
            <asp:ScriptReference  
                Assembly="string"  
                IgnoreScriptPath="True|False"  
                Name="string"  
                NotifyScriptLoaded="True|False"  
                Path="string"  
                ResourceUICultures="string"  
                ScriptMode="Auto|Debug|Inherit|Release"  
            />  
        </Scripts>  
        <Services>  
            <asp:ServiceReference  
                InlineScript="True|False"  
                Path="string"  
            />  
        </Services>  
</asp:ScriptManager>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ca198-219">次の例では、さまざまなシナリオを使用するため、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-219">The following examples show different scenarios for using the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 <span data-ttu-id="ca198-220">**部分ページ更新を有効にします。**</span><span class="sxs-lookup"><span data-stu-id="ca198-220">**Enabling Partial-Page Updates**</span></span>  
  
 <span data-ttu-id="ca198-221">次の例は、使用する方法を示します、<xref:System.Web.UI.ScriptManager>部分ページ更新を有効にするコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-221">The following example shows how to use the <xref:System.Web.UI.ScriptManager> control to enable partial-page updates.</span></span> <span data-ttu-id="ca198-222">この例で、<xref:System.Web.UI.WebControls.Calendar>と<xref:System.Web.UI.WebControls.DropDownList>コントロール内にある、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-222">In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-223">既定の値で、<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>プロパティは<xref:System.Web.UI.UpdatePanelUpdateMode.Always>、しの値、<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-223">By default, the value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, and the value of the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`.</span></span> <span data-ttu-id="ca198-224">そのため、パネルの子コントロールには、非同期ポストバックが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-224">Therefore, child controls of the panel cause an asynchronous postback.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 <span data-ttu-id="ca198-225">**部分ページ更新エラーを処理して、スクリプトの登録**</span><span class="sxs-lookup"><span data-stu-id="ca198-225">**Handling Partial-Page Update Errors and Registering Script**</span></span>  
  
 <span data-ttu-id="ca198-226">次の例では、カスタムのエラーが部分ページ更新中に処理を提供する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-226">The following example shows how to provide custom error handling during partial-page updates.</span></span> <span data-ttu-id="ca198-227">既定では、部分ページ更新プログラムの中にエラーが発生したときに、JavaScript のメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-227">By default, when an error occurs during partial-page updates, a JavaScript message box is displayed.</span></span> <span data-ttu-id="ca198-228">カスタム エラー ハンドラーを提供することで処理を使用する方法を示します、<xref:System.Web.UI.ScriptManager.AsyncPostBackError>イベント、および設定して、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>イベント ハンドラーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-228">This example demonstrates how to use custom error handling by providing a handler for the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event, and by setting the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property in the event handler.</span></span> <span data-ttu-id="ca198-229">設定することも、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>部分ページ更新中にエラーが発生したときに、Web.config ファイルのカスタム エラー セクションを使用する方法を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-229">You can also set the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property to specify how the custom errors section of the Web.config file is used when an error occurs during partial-page updates.</span></span> <span data-ttu-id="ca198-230">この例では、既定値で、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-230">In this example, the default value of the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property is used.</span></span> <span data-ttu-id="ca198-231">つまり、Web.config ファイルに、要素が含まれている場合は、その要素決まりますエラーを表示する方法。</span><span class="sxs-lookup"><span data-stu-id="ca198-231">This means that if the Web.config file contains a  element, that element determines how errors are displayed.</span></span> <span data-ttu-id="ca198-232">詳細については、次を参照してください。 [customErrors 要素 (ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-232">For more information, see [customErrors Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/VB/default.aspx#1)]  
  
 <span data-ttu-id="ca198-233">**ブラウザーに表示される日時のグローバル化**</span><span class="sxs-lookup"><span data-stu-id="ca198-233">**Globalizing the Date and Time That Are Displayed in the Browser**</span></span>  
  
 <span data-ttu-id="ca198-234">次の例は、設定する方法を示します、<xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A>プロパティ クライアント スクリプトは、ブラウザーで、カルチャ固有の日付と時刻を表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-234">The following example shows how to set the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property so that client script can display a culture-specific date and time in the browser.</span></span> <span data-ttu-id="ca198-235">例では、`Culture`の属性、 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブに設定されている`auto`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-235">In the example, the `Culture` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive is set to `auto`.</span></span> <span data-ttu-id="ca198-236">その結果、カルチャおよび UI カルチャのページの現在のブラウザー設定で指定されている最初の言語を決定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-236">As a result, the first language that is specified in the current browser settings determines the culture and UI culture for the page.</span></span> <span data-ttu-id="ca198-237">詳細については、「[方法 :ASP.NET Web ページのグローバリゼーション用のカルチャおよび UI カルチャを設定する](https://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-237">For more information, see [How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization](https://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ClientScriptManager" />
    <altmember cref="T:System.Web.UI.ScriptMode" />
    <altmember cref="T:System.Web.UI.ScriptReference" />
    <altmember cref="T:System.Web.UI.ServiceReference" />
    <related type="Article" href="https://msdn.microsoft.com/library/fceeb3c5-c59f-46a9-af4f-b0d7155a1efc"><span data-ttu-id="ca198-238">Sys.WebForms.PageRequestManager クラス</span><span class="sxs-lookup"><span data-stu-id="ca198-238">Sys.WebForms.PageRequestManager Class</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-239"><see cref="T:System.Web.UI.ScriptManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ca198-239">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-240">このコンス トラクターで使用される内部フィールドの初期化、<xref:System.Web.UI.ScriptManager>コントロール ページ、コントロール、および展開の情報を追跡します。</span><span class="sxs-lookup"><span data-stu-id="ca198-240">This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHistoryPoint">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-241">履歴ポイントを作成してブラウザーの履歴スタックに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-241">Creates a history point and adds it to the browser's history stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-242">これらのメソッド オーバー ロードを使用すると、ブラウザーで server state、および必要に応じて、履歴エントリのタイトルを定義できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-242">These method overloads enable you to define server state, and optionally the title of the history entry in the browser.</span></span> <span data-ttu-id="ca198-243">履歴ポイントを作成するときに、シリアル化および暗号化されたデータは Web ページの URL に付加され、エントリがブラウザーの履歴スタックに含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-243">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="ca198-244">状態データを使用すると、後続サーバーのナビゲーション イベントが発生したときにページを再作成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-244">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="ca198-245">詳細については、次を参照してください。[ブラウザー履歴サーバーを使用したのコントロールを管理する](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-245">For more information, see [Managing Browser History Using Server Controls](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(class System.Collections.Specialized.NameValueCollection state, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (state As NameValueCollection, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::Collections::Specialized::NameValueCollection ^ state, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : System.Collections.Specialized.NameValueCollection * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (state, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="ca198-246">状態データを含むキーと値のペアのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-246">A collection of key/value pairs that contain the data for the state.</span></span></param>
        <param name="title"><span data-ttu-id="ca198-247">この状態のタイトルとしてブラウザーの履歴スタックに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="ca198-247">The text that will be added to the browser's history stack as the title for this state.</span></span></param>
        <summary><span data-ttu-id="ca198-248">指定した状態データ コレクションおよび状態タイトルを使用して、履歴ポイントを作成し、ブラウザーの履歴スタックに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-248">Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-249">状態データの 1 つ以上のキー/値ペアを保存するときに、履歴ポイントを作成するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-249">Use this method to create a history point when you want to save more than one key/value pair for the state data.</span></span> <span data-ttu-id="ca198-250">履歴ポイントを作成するときに、シリアル化および暗号化されたデータは Web ページの URL に付加され、エントリがブラウザーの履歴スタックに含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-250">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="ca198-251">場合、`title`パラメーターが`null`、Web ページのタイトルの履歴スタックに状態エントリのタイトルとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-251">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="ca198-252">状態データを使用すると、後続サーバーのナビゲーション イベントが発生したときにページを再作成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-252">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="ca198-253">詳細については、次を参照してください。[ブラウザー履歴サーバーを使用したのコントロールを管理する](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-253">For more information, see [Managing Browser History Using Server Controls](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ca198-254">Web ページの状態を識別するキーと値のペアのキー部分。</span><span class="sxs-lookup"><span data-stu-id="ca198-254">The key part of the key/value pair that identifies the state of the Web page.</span></span></param>
        <param name="value"><span data-ttu-id="ca198-255">Web ページの状態を識別するキーと値のペアの値部分。</span><span class="sxs-lookup"><span data-stu-id="ca198-255">The value part of the key/value pair that identifies the state of the Web page.</span></span></param>
        <summary><span data-ttu-id="ca198-256">指定した状態キーおよび状態値を使用して、履歴ポイントを作成し、ブラウザーの履歴スタックに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-256">Creates a history point and adds it to the browser's history stack, using the specified state key and state value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-257">状態を識別するのに値を保存するときに、履歴ポイントを作成するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-257">Use this method to create a history point when you only want to save a value to identify the state.</span></span> <span data-ttu-id="ca198-258">履歴ポイントを作成するときに、シリアル化および暗号化されたデータは Web ページの URL に付加され、エントリがブラウザーの履歴スタックに含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-258">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="ca198-259">Web ページのタイトルは、履歴スタックに状態エントリのタイトルとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-259">The title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="ca198-260">状態データを使用すると、後続サーバーのナビゲーション イベントが発生したときにページを再作成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-260">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="ca198-261">詳細については、次を参照してください。[ブラウザー履歴サーバーを使用したのコントロールを管理する](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-261">For more information, see [Managing Browser History Using Server Controls](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ca198-262">Web ページの状態を識別するキーと値のペアのキー部分。</span><span class="sxs-lookup"><span data-stu-id="ca198-262">The key part of the key/value pair that identifies the state of the Web page.</span></span></param>
        <param name="value"><span data-ttu-id="ca198-263">Web ページの状態を識別するキーと値のペアの値部分。</span><span class="sxs-lookup"><span data-stu-id="ca198-263">The value part of the key/value pair that identifies the state of the Web page.</span></span></param>
        <param name="title"><span data-ttu-id="ca198-264">この状態のタイトルとしてブラウザーの履歴スタックに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="ca198-264">The text that will be added to the browser's history stack as the title for this state.</span></span></param>
        <summary><span data-ttu-id="ca198-265">指定した状態キー、状態値、および状態タイトルを使用して、履歴ポイントを作成し、ブラウザーの履歴スタックに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-265">Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-266">状態と状態のタイトルを識別するのに値を保存するときに、履歴ポイントを作成するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-266">Use this method to create a history point when you want to save a value to identify the state and a title for the state.</span></span> <span data-ttu-id="ca198-267">履歴ポイントを作成するときに、シリアル化および暗号化されたデータは Web ページの URL に付加され、エントリがブラウザーの履歴スタックに含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-267">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="ca198-268">場合、`title`パラメーターが`null`、Web ページのタイトルの履歴スタックに状態エントリのタイトルとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-268">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="ca198-269">状態データを使用すると、後続サーバーのナビゲーション イベントが発生したときにページを再作成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-269">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="ca198-270">詳細については、次を参照してください。[ブラウザー履歴サーバーを使用したのコントロールを管理する](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-270">For more information, see [Managing Browser History Using Server Controls](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AjaxFrameworkAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AjaxFrameworkAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ AjaxFrameworkAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkAssembly : System.Reflection.Assembly" Usage="System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-271">ページのコンポーネントが使用する AJAX フレームワーク アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-271">Gets the Ajax framework assembly that components on the page use.</span></span></summary>
        <value><span data-ttu-id="ca198-272">Ajax フレームワーク アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="ca198-272">The Ajax framework assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AjaxFrameworkMode As AjaxFrameworkMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AjaxFrameworkMode AjaxFrameworkMode { System::Web::UI::AjaxFrameworkMode get(); void set(System::Web::UI::AjaxFrameworkMode value); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkMode : System.Web.UI.AjaxFrameworkMode with get, set" Usage="System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AjaxFrameworkMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-273">Microsoft Ajax クライアント ライブラリのクライアント スクリプトをクライアントに含める方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-273">Gets or sets a value that specifies how client scripts of the Microsoft Ajax client library will be included on the client.</span></span></summary>
        <value><span data-ttu-id="ca198-274"><see cref="T:System.Web.UI.AjaxFrameworkMode" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="ca198-274">An <see cref="T:System.Web.UI.AjaxFrameworkMode" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-275">使用して、<xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A>プロパティをすべての Microsoft Ajax スクリプト ファイルを無効にする、または個々 のスクリプト ファイルを明示的に含める、すべての Microsoft Ajax スクリプト ファイルを有効にします。</span><span class="sxs-lookup"><span data-stu-id="ca198-275">Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all Microsoft Ajax script files, to disable all Microsoft Ajax script files, or to explicitly include individual script files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-276">次の例は、設定する方法を示します、<xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A>プロパティを`Explicit`スクリプトを明示的に指定できることを指定するためにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-276">The following example shows how to set the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to `Explicit` in order to indicate that scripts can be explicitly specified.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" AjaxFrameworkMode="Explicit" runat="server">   
<Scripts>   
    <asp:ScriptReference Name="MicrosoftAjaxCore.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxComponentModel.js" />    
    <asp:ScriptReference Name="MicrosoftAjaxSerialization.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxNetwork.js" />       
</Scripts>   
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AjaxFrameworkMode" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomErrorsRedirect">
      <MemberSignature Language="C#" Value="public bool AllowCustomErrorsRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomErrorsRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomErrorsRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomErrorsRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomErrorsRedirect : bool with get, set" Usage="System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-277">非同期ポストバック中にエラーが発生したときに Web.config ファイルのカスタム エラー セクションを使用するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-277">Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.</span></span></summary>
        <value><span data-ttu-id="ca198-278">Web.config ファイルのカスタム エラー設定を使用して非同期ポストバック中のエラー動作を決定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-278"><see langword="true" /> if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-279">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-279">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-280"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>非同期ポストバック中にページ エラーがある場合に、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-280">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="ca198-281">サーバーでエラーがクライアントに送信する方法によって異なります、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティ、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>プロパティ、および Web.config ファイルのカスタム エラー セクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-281">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AsyncPostBackError As EventHandler(Of AsyncPostBackErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::AsyncPostBackErrorEventArgs ^&gt; ^ AsyncPostBackError;" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackError : EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " Usage="member this.AsyncPostBackError : System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-282">非同期ポストバックの実行中にページ エラーが発生すると発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-282">Occurs when there is a page error during an asynchronous postback.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-283"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>非同期ポストバック中にページ エラーがある場合に、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-283">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="ca198-284">サーバーでエラーがクライアントに送信する方法によって異なります、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティ、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>プロパティ、および Web.config ファイルのカスタム エラー セクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-284">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-285">次の例では、処理する方法を示しています、<xref:System.Web.UI.ScriptManager.AsyncPostBackError>を設定するイベント、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>サーバー例外のエラー メッセージにプロパティ (これは、クライアントに送信されます)。</span><span class="sxs-lookup"><span data-stu-id="ca198-285">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackErrorMessage">
      <MemberSignature Language="C#" Value="public string AsyncPostBackErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackErrorMessage : string with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-286">非同期ポストバック中に未処理のサーバー例外が発生するとクライアントに送信されるエラー メッセージを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-286">Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.</span></span></summary>
        <value><span data-ttu-id="ca198-287">エラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="ca198-287">The error message.</span></span> <span data-ttu-id="ca198-288">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="ca198-288">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-289"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>非同期ポストバック中にページ エラーがある場合に、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-289">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="ca198-290">サーバーでエラーがクライアントに送信する方法によって異なります、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティ、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>プロパティ、および Web.config ファイルのカスタム エラー セクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-290">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-291">次の例では、処理する方法を示しています、<xref:System.Web.UI.ScriptManager.AsyncPostBackError>を設定するイベント、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>サーバー例外のエラー メッセージにプロパティ (これは、クライアントに送信されます)。</span><span class="sxs-lookup"><span data-stu-id="ca198-291">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackSourceElementID">
      <MemberSignature Language="C#" Value="public string AsyncPostBackSourceElementID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackSourceElementID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncPostBackSourceElementID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackSourceElementID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackSourceElementID : string" Usage="System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.AsyncPostBackSourceElementID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-292">非同期ポストバックを発生させたコントロールの一意の ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-292">Gets the unique ID of the control that caused the asynchronous postback.</span></span></summary>
        <value><span data-ttu-id="ca198-293">コントロールに ID がある場合は、コントロールの一意の ID。それ以外の場合は、空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="ca198-293">The unique ID of a control, if the control has an ID; otherwise, an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-294"><xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A>プロパティには、次のいずれかの非同期ポストバックを発生させたコントロール ID の値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-294">The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:</span></span>  
  
-   <span data-ttu-id="ca198-295">内にあるコントロールからポストバックを<xref:System.Web.UI.UpdatePanel>いるコントロール<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>プロパティに設定されて`true`(既定)。</span><span class="sxs-lookup"><span data-stu-id="ca198-295">A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default).</span></span>  
  
-   <span data-ttu-id="ca198-296">ポストバックのトリガーであるコントロールから、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-296">A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
-   <span data-ttu-id="ca198-297">呼び出すことによって登録されているコントロールからポストバック、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>のメソッド、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-297">A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackTimeout">
      <MemberSignature Language="C#" Value="public int AsyncPostBackTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AsyncPostBackTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AsyncPostBackTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackTimeout : int with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(90)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-298">応答がない場合に非同期ポストバックがタイムアウトするまでの時間 (秒単位) を表す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-298">Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.</span></span></summary>
        <value><span data-ttu-id="ca198-299">タイムアウトを秒単位で表す整数。</span><span class="sxs-lookup"><span data-stu-id="ca198-299">An integer that represents the time-out in seconds.</span></span> <span data-ttu-id="ca198-300">既定値は、90 秒です。</span><span class="sxs-lookup"><span data-stu-id="ca198-300">The default value is 90 seconds.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationService">
      <MemberSignature Language="C#" Value="public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AuthenticationServiceManager AuthenticationService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationService As AuthenticationServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AuthenticationServiceManager ^ AuthenticationService { System::Web::UI::AuthenticationServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationService : System.Web.UI.AuthenticationServiceManager" Usage="System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AuthenticationServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-301">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに関連付けられている <see cref="T:System.Web.UI.AuthenticationServiceManager" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-301">Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></summary>
        <value><span data-ttu-id="ca198-302">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに対する <see cref="T:System.Web.UI.AuthenticationServiceManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-302">The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-303"><xref:System.Web.UI.AuthenticationServiceManager>このプロパティによって返されるオブジェクトがページに登録されている認証サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="ca198-303">The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page.</span></span> <span data-ttu-id="ca198-304">認証サービスを定義することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-304">The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="ca198-305">ASP.NET 認証サービスを使用したり、カスタム認証サービスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-305">You can use the ASP.NET authentication service or use a custom authentication service.</span></span> <span data-ttu-id="ca198-306">マークアップで、カスタム サービスを追加するには含めることによって、`AuthenticationService`内の要素、 `asp:ScriptManager`  ページで、次の例に示す要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-306">You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="ca198-307">プログラムで構成することができます、<xref:System.Web.UI.AuthenticationServiceManager>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-307">You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object.</span></span> <span data-ttu-id="ca198-308">サービスに登録されて、<xref:System.Web.UI.ScriptManager>コントロール、ページの中に<xref:System.Web.UI.Control.PreRender>ライフ サイクル ステージ。</span><span class="sxs-lookup"><span data-stu-id="ca198-308">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientNavigateHandler">
      <MemberSignature Language="C#" Value="public string ClientNavigateHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientNavigateHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientNavigateHandler As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientNavigateHandler { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientNavigateHandler : string with get, set" Usage="System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-309">クライアントで <see href="https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93">Sys.Application.navigate</see> イベントを処理するメソッドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-309">Gets or sets the name of the method that handles the <see href="https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93">Sys.Application.navigate</see> event on the client.</span></span></summary>
        <value><span data-ttu-id="ca198-310">処理するメソッドの名前、 [Sys.Application.navigate](https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93)クライアント上のイベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-310">The name of the method that handles the [Sys.Application.navigate](https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompositeScriptReference CompositeScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CompositeScriptReference CompositeScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.CompositeScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeScript As CompositeScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompositeScriptReference ^ CompositeScript { System::Web::UI::CompositeScriptReference ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeScript : System.Web.UI.CompositeScriptReference" Usage="System.Web.UI.ScriptManager.CompositeScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompositeScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-311">Web ページをサポートする複合スクリプトへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-311">Gets a reference to the composite script that supports the Web page.</span></span></summary>
        <value><span data-ttu-id="ca198-312">複合スクリプトへの参照。</span><span class="sxs-lookup"><span data-stu-id="ca198-312">A reference to the composite script.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-313">詳細については、次を参照してください。[複合スクリプトにクライアント スクリプトを組み合わせて](https://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-313">For more information, see [Combining Client Scripts into a Composite Script](https://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPageUrl">
      <MemberSignature Language="C#" Value="public virtual string EmptyPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPageUrl : string with get, set" Usage="System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-314">空白の Web ページの URL を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-314">Gets or sets a URL to a blank Web page.</span></span></summary>
        <value><span data-ttu-id="ca198-315">対象 Web ページが空の場合に使用する URL。</span><span class="sxs-lookup"><span data-stu-id="ca198-315">The URL to use if the target Web page is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-316"><xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A>プロパティは、Ajax ブラウザーの履歴をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ca198-316">The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdn">
      <MemberSignature Language="C#" Value="public bool EnableCdn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdn" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdn : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-317">現在のページがクライアント スクリプト参照を CDN (Content Delivery Network) パスから読み込むかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ca198-317">Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.</span></span></summary>
        <value><span data-ttu-id="ca198-318">クライアント スクリプト参照が CDN パスから読み込まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-318"><see langword="true" /> if client script references are loaded from CDN paths, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-319">このプロパティ設定しないでください`true`設定した場合<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>に`true`既に。</span><span class="sxs-lookup"><span data-stu-id="ca198-319">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdnFallback">
      <MemberSignature Language="C#" Value="public bool EnableCdnFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdnFallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdnFallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdnFallback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdnFallback : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-320">CDN (Content Delivery Network) が使用できない場合にスクリプトのローカル コピーの読み込みを有効にします。</span><span class="sxs-lookup"><span data-stu-id="ca198-320">Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.</span></span></summary>
        <value><span data-ttu-id="ca198-321">フォールバック CDN 値が有効になっている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-321"><see langword="true" /> if the fallback CDN value is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHistory">
      <MemberSignature Language="C#" Value="public bool EnableHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHistory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHistory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHistory : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableHistory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-322">Web ページが履歴ポイントの管理をサポートしているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-322">Gets or sets a value that indicates whether the Web page supports history point management.</span></span></summary>
        <value><span data-ttu-id="ca198-323">Web ページがブラウザーの履歴スタックへの履歴ポイントの追加をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-323"><see langword="true" /> if the Web page supports adding history points to the browser's history stack; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-324">使用して、 <xref:System.Web.UI.ScriptManager.EnableHistory%2A> Web ページの履歴の管理を有効にするプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-324">Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePageMethods">
      <MemberSignature Language="C#" Value="public bool EnablePageMethods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePageMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePageMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePageMethods { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePageMethods : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-325">ASP.NET ページ内のパブリック静的ページ メソッドをクライアント スクリプトから 呼び出せるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-325">Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.</span></span></summary>
        <value><span data-ttu-id="ca198-326">ASP.NET ページ上の静的ページ メソッドをクライアント スクリプトから Web メソッドとして呼び出せる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-326"><see langword="true" /> if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-327">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-327">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-328">ASP.NET ページに静的ページ メソッドを追加でき、Web メソッドとしてマークすることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-328">You can add static page methods to an ASP.NET page and mark them as Web methods.</span></span> <span data-ttu-id="ca198-329">一部の個別の .asmx ファイルを作成することがなく、Web サービスの場合と、スクリプトからこれらのメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-329">You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file.</span></span> <span data-ttu-id="ca198-330">ページ上の Web メソッドを作成するには、インポート、<xref:System.Web.Services>名前空間を追加し、<xref:System.Web.Services.WebMethodAttribute>属性を公開する、各静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-330">To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose.</span></span> <span data-ttu-id="ca198-331">メソッドは public に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-331">The methods must be marked public.</span></span>  
  
 <span data-ttu-id="ca198-332">詳細については、次を参照してください。 [ASP.NET AJAX でクライアント スクリプトを Web サービスを公開する](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-332">For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePartialRendering">
      <MemberSignature Language="C#" Value="public bool EnablePartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-333">ページの部分レンダリングを有効化する値を取得または設定します。これにより、<see cref="T:System.Web.UI.UpdatePanel" /> コントロールを使用してページの各部を個別に更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ca198-333">Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <see cref="T:System.Web.UI.UpdatePanel" /> controls.</span></span></summary>
        <value><span data-ttu-id="ca198-334">部分レンダリングが有効で、ページ全体の更新が実行されない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-334"><see langword="true" /> if partial rendering is enabled and full-page updates are suppressed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-335">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-335">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-336">場合でも、<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>プロパティは`true`、部分ページ レンダリングが発生しないことができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-336">Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur.</span></span> <span data-ttu-id="ca198-337">ブラウザーが部分ページ レンダリングをサポートしていない可能性がありますまたは<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>プロパティに設定されて`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-337">The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="ca198-338">値を上書きすることができます、<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>中またはページの前に、実行時にプロパティ<xref:System.Web.UI.Control.Init>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-338">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="ca198-339">ページの後にこのプロパティを変更しようとする場合<xref:System.Web.UI.Control.Init>イベントが発生した、<xref:System.InvalidOperationException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-339">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-340"><see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> プロパティは、ページの <see cref="E:System.Web.UI.Control.Init" /> イベントが発生した後に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-340">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is set after the page's <see cref="E:System.Web.UI.Control.Init" /> event occurs.</span></span></exception>
        <altmember cref="T:System.Web.UI.UpdatePanel" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="EnableScriptGlobalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptGlobalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptGlobalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptGlobalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptGlobalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptGlobalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-341"><see cref="T:System.Web.UI.ScriptManager" /> コントロールが、カルチャ固有の情報の解析および書式設定をサポートするスクリプトをレンダリングするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-341">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders script that supports parsing and formatting of culture-specific information.</span></span></summary>
        <value><span data-ttu-id="ca198-342">カルチャ固有の情報を表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-342"><see langword="true" /> if culture-specific information can be displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-343">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-343">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-344">ときに、<xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A>プロパティに設定されて`true`など、ECMAScript (JavaScript) 関数をグローバル化された、`Date.localeFormat`メソッド カルチャに固有の情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-344">When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the `Date.localeFormat` method display culture-specific information.</span></span> <span data-ttu-id="ca198-345">ブラウザーで、サーバー コードで、または Web サイトの構成ファイルでは、カルチャを設定できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-345">The culture can be set in the browser, in server code, or in the Web site's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/69b34e6d-d590-4d03-a763-b7ae54b47d74"><span data-ttu-id="ca198-346">クライアント スクリプトを使用して日付のローカライズ</span><span class="sxs-lookup"><span data-stu-id="ca198-346">Localizing a Date Using Client Script</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableScriptLocalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptLocalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptLocalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptLocalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptLocalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptLocalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-347"><see cref="T:System.Web.UI.ScriptManager" /> コントロールが、スクリプト ファイルのローカライズ バージョンをレンダリングするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-347">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders localized versions of script files.</span></span></summary>
        <value><span data-ttu-id="ca198-348">ローカライズされたスクリプト ファイルがレンダリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-348"><see langword="true" /> if localized script files will be rendered; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-349">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-349">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-350">ときに、<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>プロパティに設定されて`true`、<xref:System.Web.UI.ScriptManager>存在する場合にオブジェクトが、現在のカルチャ用スクリプト ファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-350">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist.</span></span> <span data-ttu-id="ca198-351">たとえば、ページは、CustomScript.js というスクリプト ファイルを指定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-351">For example, a page might specify a script file that is named CustomScript.js.</span></span> <span data-ttu-id="ca198-352">カルチャが FR-CA に設定されている場合、 <xref:System.Web.UI.ScriptManager> CustomScript.fr CA.js というスクリプト ファイルを取得するオブジェクトを試みます。</span><span class="sxs-lookup"><span data-stu-id="ca198-352">If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca198-353">スクリプト ファイルが 2 つの時刻が表示されていることを防ぐために、<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>非同期ポストバック中にプロパティを変更する必要がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-353">To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb"><span data-ttu-id="ca198-354">コンポーネント ライブラリの概要のリソースのローカライズ</span><span class="sxs-lookup"><span data-stu-id="ca198-354">Localizing Resources for Component Libraries Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableSecureHistoryState">
      <MemberSignature Language="C#" Value="public bool EnableSecureHistoryState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSecureHistoryState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSecureHistoryState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSecureHistoryState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSecureHistoryState : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-355">履歴状態文字列を暗号化するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-355">Gets or sets a value that indicates whether to encrypt the history state string.</span></span></summary>
        <value><span data-ttu-id="ca198-356">履歴状態文字列を暗号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-356"><see langword="true" /> if the history state string should be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-357">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-357">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="ca198-358">このプロパティにする必要があります***決して***に設定する`false`実稼働 web サイトにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-358">This property should ***never*** be set to `false` on a production web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ScriptManager GetCurrent(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ScriptManager ^ GetCurrent(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Web.UI.Page -&gt; System.Web.UI.ScriptManager" Usage="System.Web.UI.ScriptManager.GetCurrent page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-359"><see cref="T:System.Web.UI.ScriptManager" /> の取得元のページ インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ca198-359">The page instance to retrieve the <see cref="T:System.Web.UI.ScriptManager" /> from.</span></span></param>
        <summary><span data-ttu-id="ca198-360">指定された <see cref="T:System.Web.UI.Page" /> オブジェクトの <see cref="T:System.Web.UI.ScriptManager" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-360">Gets the <see cref="T:System.Web.UI.ScriptManager" /> instance for a given <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-361">選択された <see cref="T:System.Web.UI.Page" /> オブジェクトの現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンス。または、インスタンスが定義されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-361">The current <see cref="T:System.Web.UI.ScriptManager" /> instance for the selected <see cref="T:System.Web.UI.Page" /> object, or <see langword="null" /> if no instance is defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-362">この静的メソッドを使用しているかどうかを<xref:System.Web.UI.ScriptManager>コントロールがページで、またはのメソッドとプロパティにアクセスする、<xref:System.Web.UI.ScriptManager>ときに不明な ID を制御します。</span><span class="sxs-lookup"><span data-stu-id="ca198-362">Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-363"><paramref name="page" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-363"><paramref name="page" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredArrayDeclarations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredArrayDeclarations () As ReadOnlyCollection(Of RegisteredArrayDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredArrayDeclaration ^&gt; ^ GetRegisteredArrayDeclarations();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredArrayDeclarations : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" Usage="scriptManager.GetRegisteredArrayDeclarations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-364"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みの ECMAScript (JavaScript) 配列宣言の読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-364">Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-365">配列宣言を含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-365">A generic collection that contains the array declarations.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterArrayDeclaration" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredClientScriptBlocks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredClientScriptBlocks () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredClientScriptBlocks();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredClientScriptBlocks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredClientScriptBlocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-366"><see cref="T:System.Web.UI.ScriptManager" /> コントロールに既に登録済みのクライアント スクリプト ブロックの読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-366">Retrieves a read-only collection of client script blocks that were previously registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span></span></summary>
        <returns><span data-ttu-id="ca198-367">クライアント スクリプト ブロックを含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-367">A generic collection that contains client script blocks.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-368">クライアント スクリプト ブロックに登録されている、<xref:System.Web.UI.ScriptManager>内にあるコントロールで使用するためのコントロール、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-368">Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDisposeScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredDisposeScripts () As ReadOnlyCollection(Of RegisteredDisposeScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredDisposeScript ^&gt; ^ GetRegisteredDisposeScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredDisposeScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" Usage="scriptManager.GetRegisteredDisposeScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-369"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みの <see langword="dispose" /> スクリプトの読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-369">Retrieves a read-only collection of <see langword="dispose" /> scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-370"><see langword="dispose" /> スクリプトを含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-370">A generic collection that contains <see langword="dispose" /> scripts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-371">A`dispose`スクリプトが実行されるときに、<xref:System.Web.UI.UpdatePanel>コントロールが更新または削除します。</span><span class="sxs-lookup"><span data-stu-id="ca198-371">A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredExpandoAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredExpandoAttributes () As ReadOnlyCollection(Of RegisteredExpandoAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredExpandoAttribute ^&gt; ^ GetRegisteredExpandoAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredExpandoAttributes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" Usage="scriptManager.GetRegisteredExpandoAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-372"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みのカスタム (expando) 属性の読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-372">Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-373">カスタム属性を含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-373">A generic collection that contains custom attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-374">カスタム属性は、読み取りし、クライアント スクリプトによって設定されることができますを名前/値ペアです。</span><span class="sxs-lookup"><span data-stu-id="ca198-374">A custom attribute is a name/value pair that can be read and set by client script.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.RegisteredExpandoAttribute>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredHiddenFields">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredHiddenFields () As ReadOnlyCollection(Of RegisteredHiddenField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredHiddenField ^&gt; ^ GetRegisteredHiddenFields();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredHiddenFields : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" Usage="scriptManager.GetRegisteredHiddenFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-375"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みの隠しフィールドの読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-375">Retrieves a read-only collection of hidden fields that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-376">隠しフィールドを含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-376">A generic collection that contains hidden fields.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.RegisteredHiddenField" />
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterHiddenField" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredOnSubmitStatements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredOnSubmitStatements () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredOnSubmitStatements();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredOnSubmitStatements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredOnSubmitStatements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-377"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みの <see langword="onsubmit" /> ステートメントの読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-377">Retrieves a read-only collection of <see langword="onsubmit" /> statements that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-378"><see langword="onsubmit" /> ステートメントを含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-378">A generic collection that contains <see langword="onsubmit" /> statements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-379">`onsubmit`ステートメントは、フォームが送信されるときに実行される ECMAScript (JavaScript)。</span><span class="sxs-lookup"><span data-stu-id="ca198-379">An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredStartupScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredStartupScripts () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredStartupScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredStartupScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredStartupScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-380"><see cref="T:System.Web.UI.Page" /> オブジェクトに既に登録済みの起動スクリプトの読み取り専用のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-380">Retrieves a read-only collection of startup scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="ca198-381">起動スクリプトを含むジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-381">A generic collection that contains startup scripts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-382">スタートアップ スクリプトは、コントロールの開始時に実行されるコントロールに関連付けられているクライアント スクリプトです。</span><span class="sxs-lookup"><span data-stu-id="ca198-382">A startup script is client script that is associated with a control that executes when the control is started.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ScriptManager.GetRegisteredStartupScripts%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateString">
      <MemberSignature Language="C#" Value="public string GetStateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetStateString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetStateString();" />
      <MemberSignature Language="F#" Value="member this.GetStateString : unit -&gt; string" Usage="scriptManager.GetStateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-383">Web ページの状態を表すキーと値のペアが含まれる文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-383">Retrieves a string that contains key/value pairs that represent the state of the Web page.</span></span></summary>
        <returns><span data-ttu-id="ca198-384">Web ページの状態を表すキーと値のペアが含まれる文字列。</span><span class="sxs-lookup"><span data-stu-id="ca198-384">A string containing the key/value pairs that represent the state of the Web page.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsDebuggingEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-385">クライアント スクリプト ライブラリのデバッグ バージョンがレンダリングされるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-385">Gets a value that indicates whether the debug versions of client script libraries will be rendered.</span></span></summary>
        <value><span data-ttu-id="ca198-386">デバッグ モードで現在の要求が実行されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-386"><see langword="true" /> if the current request is executing in debug mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-387"><xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>プロパティが返す`false`次の条件のいずれかが true の場合。</span><span class="sxs-lookup"><span data-stu-id="ca198-387">The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="ca198-388">[展開](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100))、構成ファイルの要素、`retail`属性に設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-388">In the [deployment](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) element of the configuration file, the `retail` attribute is set to `true`.</span></span> <span data-ttu-id="ca198-389">これには、その他のすべての設定がオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-389">This overrides all other settings.</span></span>  
  
-   <span data-ttu-id="ca198-390"><xref:System.Web.UI.ScriptManager.ScriptMode%2A>プロパティに設定されて`Auto`または`Inherit`、デバッグを有効にしないと、`compilation`アプリケーション ルートの Web.config ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-390">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file.</span></span>  
  
-   <span data-ttu-id="ca198-391"><xref:System.Web.UI.ScriptManager.ScriptMode%2A> プロパティが `Release` に設定されている。</span><span class="sxs-lookup"><span data-stu-id="ca198-391">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ca198-392">`debug`の属性、 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブでは Ajax 対応 ASP.NET アプリケーションには影響しません。</span><span class="sxs-lookup"><span data-stu-id="ca198-392">The `debug` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="ca198-393"><xref:System.Web.UI.ScriptManager>コントロール、Web.config ファイルと設定のみを使用してその<xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>と<xref:System.Web.UI.ScriptManager.ScriptMode%2A>デバッグ スクリプトをレンダリングするかどうかを決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-393">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="ca198-394">詳細については、次を参照してください。[デバッグと Tracing Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-394">For more information, see [Debugging and Tracing Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.IsDebuggingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInAsyncPostBack">
      <MemberSignature Language="C#" Value="public bool IsInAsyncPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInAsyncPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInAsyncPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInAsyncPostBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInAsyncPostBack : bool" Usage="System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsInAsyncPostBack</InterfaceMember>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.IsInAsyncPostBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-395">部分レンダリング モードで現在のポストバックが実行されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-395">Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</span></span></summary>
        <value><span data-ttu-id="ca198-396">部分レンダリング モードで現在のポストバックが実行されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-396"><see langword="true" /> if the current postback is executing in partial-rendering mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-397">使用して、<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>プロパティと組み合わせて、<xref:System.Web.UI.Page.IsPostBack%2A>初期ページの読み込み、部分ページ更新とでページ全体の更新プログラムと区別するためにプロパティ<xref:System.Web.UI.Control.Load>、 <xref:System.Web.UI.Page.InitComplete>、または<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-397">Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsNavigating">
      <MemberSignature Language="C#" Value="public bool IsNavigating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNavigating" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsNavigating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNavigating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNavigating { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNavigating : bool" Usage="System.Web.UI.ScriptManager.IsNavigating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-398"><see cref="E:System.Web.UI.ScriptManager.Navigate" /> イベントが現在処理されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-398">Gets a value that indicates whether a <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event is currently being handled.</span></span></summary>
        <value><span data-ttu-id="ca198-399"><see cref="E:System.Web.UI.ScriptManager.Navigate" /> が処理されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-399"><see langword="true" /> if the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> is being handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-400">使用して、<xref:System.Web.UI.ScriptManager.IsNavigating%2A>プロパティを決定するかどうか、<xref:System.Web.UI.ScriptManager.Navigate>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca198-400">Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="scriptManager.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey"><span data-ttu-id="ca198-401">コントロールのキー識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-401">The key identifier for the control.</span></span></param>
        <param name="postCollection"><span data-ttu-id="ca198-402">受信するすべてのポスト データのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-402">The collection of all the incoming post data.</span></span></param>
        <summary><span data-ttu-id="ca198-403">ブラウザーからサーバーへポストされたフォーム データを読み取り、非同期ポストバックのソースを判断します。</span><span class="sxs-lookup"><span data-stu-id="ca198-403">Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.</span></span></summary>
        <returns><span data-ttu-id="ca198-404">ポストバックの結果、<see cref="T:System.Web.UI.ScriptManager" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-404"><see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-405"><xref:System.Web.UI.ScriptManager.LoadPostData%2A>の機能を拡張するメソッドは主に使用してコントロールの開発者、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-405">The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadScriptsBeforeUI">
      <MemberSignature Language="C#" Value="public bool LoadScriptsBeforeUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadScriptsBeforeUI" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadScriptsBeforeUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadScriptsBeforeUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadScriptsBeforeUI : bool with get, set" Usage="System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-406">ページ UI のマークアップが読み込まれる前と後のどちらにスクリプトが読み込まれるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-406">Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.</span></span></summary>
        <value><span data-ttu-id="ca198-407">UI のマークアップが読み込まれる前にスクリプトが読み込まれる場合は <see langword="true" />。UI のマークアップが読み込まれた後にスクリプトが読み込まれる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-407"><see langword="true" /> if scripts are loaded before markup for the UI is loaded; <see langword="false" /> if scripts are loaded after markup for the UI is loaded.</span></span> <span data-ttu-id="ca198-408">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-408">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-409"><xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>プロパティを決定する方法でスクリプト、<xref:System.Web.UI.ScriptManager.Scripts%2A>コレクションは、ページの UI のマークアップを基準に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="ca198-409">The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.</span></span>  
  
 <span data-ttu-id="ca198-410">ときに、<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>プロパティは`true`、`script`ページの UI のマークアップが読み込まれる前に、要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-410">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded.</span></span> <span data-ttu-id="ca198-411">このシナリオでスクリプトでは、UI 要素が定義されている場合、UI が完全に機能の読み込み時にします。</span><span class="sxs-lookup"><span data-stu-id="ca198-411">In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads.</span></span> <span data-ttu-id="ca198-412">ただし、スクリプトが対象のインスタンスがまだ作成されていないマークアップで UI 要素にアクセスする場合、エラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-412">However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur.</span></span> <span data-ttu-id="ca198-413">アクセスする前に UI 要素が読み込まれるようにするには、処理、`load`のイベント、`Sys.Application`クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-413">To make sure that UI elements are loaded before you access them, handle the `load` event of the `Sys.Application` class.</span></span>  
  
 <span data-ttu-id="ca198-414">ときに、<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>プロパティは`false`、`script`ページの UI のマークアップが表示された後に要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-414">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered.</span></span> <span data-ttu-id="ca198-415">このシナリオで、UI がより迅速に読み込まれるなる場合が、完全に機能追加の UI 要素を定義するスクリプトが読み込みを完了していない場合。</span><span class="sxs-lookup"><span data-stu-id="ca198-415">In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.</span></span>  
  
 <span data-ttu-id="ca198-416">このプロパティ設定しないでください`true`設定した場合<xref:System.Web.UI.ScriptManager.EnableCdn%2A>に`true`既に。</span><span class="sxs-lookup"><span data-stu-id="ca198-416">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.Scripts" />
        <altmember cref="T:System.Web.UI.ScriptReference" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.HistoryEventArgs&gt; Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As EventHandler(Of HistoryEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::HistoryEventArgs ^&gt; ^ Navigate;" />
      <MemberSignature Language="F#" Value="member this.Navigate : EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " Usage="member this.Navigate : System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-417">ユーザーがブラウザーの **[戻る]** ボタンまたは **[進む]** ボタンをクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-417">Occurs when the user clicks the browser's **Back** or **Forward** button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-418">ユーザーがブラウザーの**戻る**ボタンが移動前に表示した Url 履歴ポイントの状態データを含む Url を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-418">When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data.</span></span> <span data-ttu-id="ca198-419">Web ページ内のクライアント コードでは、URL に状態の履歴データが含まれているが検出される場合は、サーバーのページに、要求を行います。</span><span class="sxs-lookup"><span data-stu-id="ca198-419">If client code in the Web page detects that the URL contains history state data, it makes a request to the server page.</span></span> <span data-ttu-id="ca198-420">ポストバックのイベントとして機能し、<xref:System.Web.UI.ScriptManagerProxy>サーバー コントロールを発生させます、`Navigate`イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-420">This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event.</span></span> <span data-ttu-id="ca198-421">このイベントを処理して、イベントに渡される状態データを使用して、Web アプリケーションで、必要に応じてページを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-421">You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAsyncPostBackError">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAsyncPostBackError(class System.Web.UI.AsyncPostBackErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAsyncPostBackError (e As AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAsyncPostBackError(System::Web::UI::AsyncPostBackErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit&#xA;override this.OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit" Usage="scriptManager.OnAsyncPostBackError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.AsyncPostBackErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ca198-422">エラー イベント データ。</span><span class="sxs-lookup"><span data-stu-id="ca198-422">The error event data.</span></span></param>
        <summary><span data-ttu-id="ca198-423"><see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ca198-423">Raises the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-424"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>非同期ポストバック中にページ エラーがある場合に、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-424">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="ca198-425">サーバーでエラーがクライアントに送信する方法によって異なります、<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>プロパティ、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>プロパティ、および Web.config ファイルのカスタム エラー セクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-425">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-426">次の例では、処理する方法を示しています、<xref:System.Web.UI.ScriptManager.AsyncPostBackError>を設定するイベント、<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>サーバー例外のエラー メッセージにプロパティ (これは、クライアントに送信されます)。</span><span class="sxs-lookup"><span data-stu-id="ca198-426">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="scriptManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ca198-427">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="ca198-427">The event data.</span></span></param>
        <summary><span data-ttu-id="ca198-428"><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させ、ページ上に 1 つの <see cref="T:System.Web.UI.ScriptManager" /> コントロールのみ存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ca198-428">Raises the <see cref="E:System.Web.UI.Control.Init" /> event and makes sure that only one <see cref="T:System.Web.UI.ScriptManager" /> control exists on the page.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-429">ページ上には、<see cref="T:System.Web.UI.ScriptManager" /> の複数のインスタンスが存在します。</span><span class="sxs-lookup"><span data-stu-id="ca198-429">More than one instance of <see cref="T:System.Web.UI.ScriptManager" /> exists on the page.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca198-430">このメソッドをオーバーライドするときに呼び出す基本<see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />ファイルのスクリプトを作成するためのメソッドが部分ページ レンダリングを正しく処理します。</span><span class="sxs-lookup"><span data-stu-id="ca198-430">When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" /> method so that script files are correctly handled for partial-page rendering.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991"><span data-ttu-id="ca198-431">ASP.NET ページ ライフ サイクルの概要</span><span class="sxs-lookup"><span data-stu-id="ca198-431">ASP.NET Page Life Cycle Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="scriptManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ca198-432">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="ca198-432">The event data.</span></span></param>
        <summary><span data-ttu-id="ca198-433"><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させ、部分ページ更新用のスクリプト ファイルおよびサービスを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-433">Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and registers script files and services for partial-page updates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-434">DOM の詳細については、次を参照してください。、[ドキュメント オブジェクト モデル (DOM)、レベル 1 の仕様](https://go.microsoft.com/fwlink/?LinkId=73305)、World Wide Web Consortium (W3C) の Web サイト。</span><span class="sxs-lookup"><span data-stu-id="ca198-434">For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](https://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-435">部分ページ要求を行うブラウザーは、少なくとも DOM レベル 1.0 はサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ca198-435">The browser that made the partial-page request does not support at least DOM Level 1.0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca198-436">このメソッドをオーバーライドするときに呼び出す基本<see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />ブロックおよびサービスのスクリプトを作成するためのメソッドが部分ページ レンダリングを正しく処理します。</span><span class="sxs-lookup"><span data-stu-id="ca198-436">When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" /> method so that script blocks and services are correctly handled for partial-page rendering.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991"><span data-ttu-id="ca198-437">ASP.NET ページ ライフ サイクルの概要</span><span class="sxs-lookup"><span data-stu-id="ca198-437">ASP.NET Page Life Cycle Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveCompositeScriptReference(class System.Web.UI.CompositeScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveCompositeScriptReference (e As CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveCompositeScriptReference(System::Web::UI::CompositeScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveCompositeScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.CompositeScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ca198-438">複合スクリプト参照を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-438">An object that represents the composite script reference.</span></span></param>
        <summary><span data-ttu-id="ca198-439"><see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ca198-439">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveScriptReference(class System.Web.UI.ScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveScriptReference (e As ScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveScriptReference(System::Web::UI::ScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ca198-440">現在のスクリプトを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-440">An object that represents the current script.</span></span></param>
        <summary><span data-ttu-id="ca198-441"><see cref="T:System.Web.UI.ScriptManager" /> コントロールによって管理される各スクリプト参照に対して <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ca198-441">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event for each script reference that is managed by the <see cref="T:System.Web.UI.ScriptManager" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-442">このメソッドを呼び出して、<xref:System.Web.UI.ScriptManager.OnPreRender%2A>イベント ハンドラーごとに 1 つ<xref:System.Web.UI.ScriptReference>で、<xref:System.Web.UI.ScriptManager.Scripts%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-442">This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 <span data-ttu-id="ca198-443"><xref:System.Web.UI.ScriptManager.ResolveScriptReference>スクリプトが重複するエントリが解決した後にイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-443">The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.</span></span>  
  
 <span data-ttu-id="ca198-444">ポストバックまたは部分ページ更新中に個々 のスクリプト ブロックの動作を変更するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="ca198-444">Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileService">
      <MemberSignature Language="C#" Value="public System.Web.UI.ProfileServiceManager ProfileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ProfileServiceManager ProfileService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ProfileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProfileService As ProfileServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ProfileServiceManager ^ ProfileService { System::Web::UI::ProfileServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProfileService : System.Web.UI.ProfileServiceManager" Usage="System.Web.UI.ScriptManager.ProfileService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ProfileServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-445">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに関連付けられている <see cref="T:System.Web.UI.ProfileServiceManager" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-445">Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></summary>
        <value><span data-ttu-id="ca198-446">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに対する <see cref="T:System.Web.UI.ProfileServiceManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-446">The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-447"><xref:System.Web.UI.ProfileServiceManager>このプロパティによって返されるオブジェクトがページに登録されているプロファイル サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="ca198-447">The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page.</span></span> <span data-ttu-id="ca198-448">プロファイル サービスを定義することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-448">The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="ca198-449">ASP.NET プロファイル サービスを使用したり、カスタム プロファイル サービスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-449">You can use the ASP.NET profile service or use a custom profile service.</span></span> <span data-ttu-id="ca198-450">マークアップで、カスタム サービスを追加するには含めることによって、`ProfileService`内の要素、 `asp:ScriptManager`  ページで、次の例に示す要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-450">You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB"  
    Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="ca198-451">プログラムで構成することができます、<xref:System.Web.UI.ProfileServiceManager>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-451">You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object.</span></span> <span data-ttu-id="ca198-452">サービスに登録されて、<xref:System.Web.UI.ScriptManager>コントロール、ページの中に<xref:System.Web.UI.Control.PreRender>ライフ サイクル ステージ。</span><span class="sxs-lookup"><span data-stu-id="ca198-452">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="scriptManager.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="ca198-453">Web ページの履歴状態を表すキーと値のペアが含まれる文字列。</span><span class="sxs-lookup"><span data-stu-id="ca198-453">A string of key/value pairs that represent the history state of the Web page.</span></span></param>
        <summary><span data-ttu-id="ca198-454"><see cref="T:System.Web.UI.ScriptManager" /> コントロールによって発生させられたポストバック イベントを処理し、Web ページの履歴状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="ca198-454">Processes a postback event raised by the <see cref="T:System.Web.UI.ScriptManager" /> control and loads the history state of the Web page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="scriptManager.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-455">サーバーへのポストバック時に、<see cref="T:System.Web.UI.ScriptManager" /> コントロールのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ca198-455">Raises events for the <see cref="T:System.Web.UI.ScriptManager" /> control when it posts back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-456"><xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A>の機能を拡張するメソッドは主に使用してコントロールの開発者、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-456">The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="ca198-457">既定の実装の<xref:System.Web.UI.ScriptManager>コントロール、イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="ca198-457">For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterArrayDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-458"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるように ECMAScript (JavaScript) 配列宣言を <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、配列をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-458">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (control, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-459">配列を登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-459">The control that is registering the array.</span></span></param>
        <param name="arrayName"><span data-ttu-id="ca198-460">登録する配列の名前。</span><span class="sxs-lookup"><span data-stu-id="ca198-460">The name of the array to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="ca198-461">登録する配列値。</span><span class="sxs-lookup"><span data-stu-id="ca198-461">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="ca198-462"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるように ECMAScript (JavaScript) 配列宣言を <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、配列をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-462">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-463">使用する、<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>メソッドをおよび部分ページ レンダリングと互換性があるクライアント スクリプトの配列を登録するには、Microsoft Ajax Library の依存関係がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-463">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-464">このメソッドは、配列を登録するときに`control`内にあるコントロールを表します、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-464">This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-465">非同期ポストバックが発生するたびに配列を登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-465">To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-466">部分ページ更新プログラムに関連し、配列の最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して配列を登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-466">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-467">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-467">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-468"><xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>メソッドは、配列で指定されている名前を持つかどうかを判断、`arrayName`パラメーターは既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-468">The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered.</span></span> <span data-ttu-id="ca198-469">そのため、メソッドがで指定された値を追加する場合`arrayValue`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-469">If so, the method adds the values specified in `arrayValue`.</span></span> <span data-ttu-id="ca198-470">登録する配列が基づいているため、<xref:System.Collections.ArrayList>クラス、重複は許可されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-470">Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed.</span></span> <span data-ttu-id="ca198-471">登録済みの配列に名前を持つ場合、`arrayName`が存在しない配列の作成と内の値`arrayValue`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-471">If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.</span></span>  
  
 <span data-ttu-id="ca198-472">文字列リテラルを配列に含めるには、単一引用符 (') を使用して、または二重引用符をエスケープ (\\") で`arrayValue`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-472">To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\") in `arrayValue`.</span></span>  
  
 <span data-ttu-id="ca198-473">JavaScript が、配列内の区切り記号としてコンマ (,) を処理することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ca198-473">Note that JavaScript treats a comma (,) as a delimiter in an array.</span></span> <span data-ttu-id="ca198-474">コンマ区切りの文字列を渡すことによって複数の配列の値を指定する`arrayValue`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-474">You can specify multiple array values by passing a comma-delimited string in `arrayValue`.</span></span> <span data-ttu-id="ca198-475">コンマで 2 つの項目を区切る`arrayValue`呼び出しと同じですが、<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>メソッドの 2 つの時刻ごとに 1 つの項目。</span><span class="sxs-lookup"><span data-stu-id="ca198-475">Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-476"><paramref name="arrayName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-476"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Page page, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Page ^ page, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (page, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-477">配列を登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-477">The page object that is registering the array.</span></span></param>
        <param name="arrayName"><span data-ttu-id="ca198-478">登録する配列の名前。</span><span class="sxs-lookup"><span data-stu-id="ca198-478">The name of the array to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="ca198-479">登録する配列値。</span><span class="sxs-lookup"><span data-stu-id="ca198-479">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="ca198-480"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるように ECMAScript (JavaScript) 配列宣言を <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、配列をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-480">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-481">使用する、<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>メソッドをおよび部分ページ レンダリングと互換性があるクライアント スクリプトの配列を登録するには、Microsoft Ajax Library の依存関係がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-481">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-482">このメソッドは、非同期ポストバックが発生するたびに、配列を登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-482">This method registers the array every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-483">配列内にあるコントロールを登録する、<xref:System.Web.UI.UpdatePanel>制御パネルが更新されたときにのみ、配列が登録されているように、使用、<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-483">To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-484">部分ページ更新プログラムに関連し、配列の最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して配列を登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-484">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-485">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-485">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-486"><paramref name="arrayName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-486"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterAsyncPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAsyncPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAsyncPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterAsyncPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterAsyncPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-487">非同期ポストバック用に登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-487">The control to register for asynchronous postbacks.</span></span></param>
        <summary><span data-ttu-id="ca198-488">コントロールを非同期ポストバックのトリガーとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-488">Registers a control as a trigger for asynchronous postbacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-489"><xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>メソッドでは、同期ポストバックではなく、非同期ポストバックを実行するように、トリガーとしての Web サーバー コントロールを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-489">The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback.</span></span> <span data-ttu-id="ca198-490">ときに、<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>のプロパティ、<xref:System.Web.UI.UpdatePanel>に設定されているコントロール`true`(既定では、) 内のコントロールのポストバック、<xref:System.Web.UI.UpdatePanel>コントロールが非同期ポストバック コントロールとして自動的に登録されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-490">When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.</span></span>  
  
 <span data-ttu-id="ca198-491">使用して、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>外部コントロールを登録するメソッド、<xref:System.Web.UI.UpdatePanel>可能性のある更新パネルのコンテンツを更新して、非同期ポストバックのトリガーとしてコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-491">Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel.</span></span> <span data-ttu-id="ca198-492">更新する、<xref:System.Web.UI.UpdatePanel>プログラムでコントロールを呼び出し、<xref:System.Web.UI.UpdatePanel.Update%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-492">To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.</span></span>  
  
 <span data-ttu-id="ca198-493">使用して宣言によって、トリガーを追加することができます、`Triggers`の要素、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-493">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-494">Visual Studio で、デザイナーを使用して、 **UpdatePanelTrigger コレクション エディター**  ダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="ca198-494">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-495">次の例を呼び出す方法を示しています、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>を登録するメソッド、<xref:System.Web.UI.WebControls.Button>の更新プログラムが実行されるように制御を<xref:System.Web.UI.UpdatePanel>コントロールの内容。</span><span class="sxs-lookup"><span data-stu-id="ca198-495">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a <xref:System.Web.UI.WebControls.Button> control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="ca198-496"><xref:System.Web.UI.WebControls.Button>コントロールが内部ではない、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-496">The <xref:System.Web.UI.WebControls.Button> control is not inside the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-497">2 つのボタンが表示されます:`Button1`と`Button2`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-497">Two buttons are shown: `Button1` and `Button2`.</span></span> <span data-ttu-id="ca198-498">`Button1` パネルのコンテンツを更新し、`Button2`ページ全体を更新します。</span><span class="sxs-lookup"><span data-stu-id="ca198-498">`Button1` refreshes the content of the panel, and `Button2` refreshes the whole page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager1VB.aspx#1)]  
  
 <span data-ttu-id="ca198-499">次の例を呼び出す方法を示しています、<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>の更新プログラムが実行されるようにユーザーを登録するメソッドが制御を<xref:System.Web.UI.UpdatePanel>コントロールの内容。</span><span class="sxs-lookup"><span data-stu-id="ca198-499">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a user control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="ca198-500">最初の例では、ユーザー コントロールを使用してページを示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-500">The first example shows a page using the user control.</span></span> <span data-ttu-id="ca198-501">2 番目の例では、ユーザー コントロールを示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-501">The second example shows the user control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager2VB.aspx#2)]  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-502"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-502"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-503">ページは、非同期ポストバック コントロールとして登録されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-503">The page is registered as an asynchronous postback control.</span></span>
<span data-ttu-id="ca198-504">または</span><span class="sxs-lookup"><span data-stu-id="ca198-504">-or-</span></span>

<span data-ttu-id="ca198-505">登録されたコントロールは、<see cref="T:System.Web.UI.INamingContainer" /> インターフェイス、<see cref="T:System.Web.UI.IPostBackDataHandler" /> インターフェイス、または <see cref="T:System.Web.UI.IPostBackEventHandler" /> インターフェイスを実装しません。</span><span class="sxs-lookup"><span data-stu-id="ca198-505">The registered control does not implement the <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" />, or <see cref="T:System.Web.UI.IPostBackEventHandler" /> interfaces.</span></span></exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-506"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるようにクライアント スクリプト ブロックを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-506">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-507">クライアント スクリプト ブロックを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-507">The control that is registering the client script block.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-508">クライアント スクリプト ブロックの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-508">The type of the client script block.</span></span> <span data-ttu-id="ca198-509">このパラメーターは、通常、<see langword="typeof" /> 演算子 (C#) または <see langword="GetType" /> 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-509">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-510">スクリプト ブロックの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-510">A unique identifier for the script block.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-511">スクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-511">The script.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="ca198-512">スクリプト ブロックを <see langword="&lt;script&gt;" /> タグと <see langword="&lt;/script&gt;" /> タグで囲む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-512"><see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-513"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるようにクライアント スクリプト ブロックを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-513">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-514">使用する、<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>部分ページ レンダリングおよびと互換性があるクライアント スクリプト ブロックを登録するメソッドには、Microsoft Ajax Library の依存関係はありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-514">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-515">このメソッドを使用して登録されているクライアント スクリプト ブロックは、ページに送信される場合にのみ`control`内にあるコントロールを表します、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-515">Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-516">非同期ポストバックが発生するたびに、スクリプト ブロックを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-516">To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-517">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-517">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-518">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-518">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-519">場合`addScriptTags`は`true`、<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>メソッドは、追加`<script>`タグで、スクリプト ブロックを囲みます。</span><span class="sxs-lookup"><span data-stu-id="ca198-519">If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block.</span></span> <span data-ttu-id="ca198-520">渡す`false`を作成する場合`<script>`固有の属性を設定する場合など、自分でタグ`<script>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-520">Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags.</span></span> <span data-ttu-id="ca198-521">場合`addScriptTags`は`false`と`script`パラメーターに複数のスクリプト ブロックが含まれています、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-521">If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.</span></span>  
  
 <span data-ttu-id="ca198-522"><xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>メソッド開始後にスクリプト ブロックをページに追加する`<form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-522">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag.</span></span> <span data-ttu-id="ca198-523">スクリプト ブロックは、登録されているのと同じ順序で出力されるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="ca198-523">The script blocks are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="ca198-524">スクリプト ブロックの順序が重要な場合は、1 つの文字列に、スクリプト ブロックを連結 (たとえばを使用して、<xref:System.Text.StringBuilder>オブジェクト) に、1 つのクライアント スクリプト ブロックとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-524">If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/CS/ScriptManager_RegisterClientScriptBlockCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/vb/ScriptManager_RegisterClientScriptBlockVB.aspx#1)]  
  
 [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/samples/snippets/common/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/Common/App_Data/Contacts.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-525">クライアント スクリプト ブロックの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-525">The client script block <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-526">または</span><span class="sxs-lookup"><span data-stu-id="ca198-526">-or-</span></span> 
<span data-ttu-id="ca198-527">スクリプト ブロックを登録するコントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-527">The control that is registering the script block is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-528">スクリプト ブロックを登録するコントロールがページのコントロール ツリー内にありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-528">The control that is registering the script block is not in the page's control tree.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-529">クライアント スクリプト ブロックを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-529">The page object that is registering the client script block.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-530">クライアント スクリプト ブロックの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-530">The type of the client script block.</span></span> <span data-ttu-id="ca198-531">このパラメーターは、通常、<see langword="typeof" /> 演算子 (C#) または <see langword="GetType" /> 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-531">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-532">スクリプト ブロックの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-532">A unique identifier for the script block.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-533">登録するスクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-533">The script to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="ca198-534">スクリプト ブロックを <see langword="&lt;script&gt;" /> タグと <see langword="&lt;/script&gt;" /> タグで囲む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-534"><see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-535"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるようにクライアント スクリプト ブロックを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-535">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-536">このメソッドを使用して、スクリプト ブロックを登録すると、非同期ポストバックが発生するたびに、スクリプトがレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-536">When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-537">内にあるコントロールのスクリプト ブロックを登録する、<xref:System.Web.UI.UpdatePanel>コントロール スクリプトが登録されている場合にのみ、<xref:System.Web.UI.UpdatePanel>コントロールが更新を使用して、<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-537">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-538">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-538">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-539">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-539">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-540">スクリプト ブロックの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-540">The script block <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-541">または</span><span class="sxs-lookup"><span data-stu-id="ca198-541">-or-</span></span> 
<span data-ttu-id="ca198-542">スクリプト ブロックを登録するページが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-542">The page that is registering the script block is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-543"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるようにクライアント スクリプト ファイルを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ファイルの参照をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-543">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (control, type, key, url)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-544">クライアント スクリプト ファイルを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-544">The control that is registering the client script file.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-545">クライアント スクリプト ファイルの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-545">The type of the client script file.</span></span> <span data-ttu-id="ca198-546">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-546">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-547">スクリプト ファイルの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-547">A unique identifier for the script file.</span></span></param>
        <param name="url"><span data-ttu-id="ca198-548">スクリプト ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="ca198-548">The URL of the script file.</span></span></param>
        <summary><span data-ttu-id="ca198-549"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールで使用できるようにクライアント スクリプト ファイルを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ファイルの参照をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-549">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-550">使用する、<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>部分ページ更新内のページまたは参加しているページの一部のクライアント スクリプト ファイルを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-550">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates.</span></span> <span data-ttu-id="ca198-551">このメソッドを使用して登録されているクライアント スクリプト ファイルが、ページに送信される場合にのみ、`control`内にあるコントロールを表します、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-551">Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-552">非同期ポストバックが発生するたびにスクリプト ファイルを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-552">To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-553">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-553">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-554">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-554">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-555"><xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>メソッドは、レンダリングすることにより、ページ上のクライアント スクリプト ファイルを登録、`script`要素の開始タグが含まれています、`src`属性。</span><span class="sxs-lookup"><span data-stu-id="ca198-555">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute.</span></span> <span data-ttu-id="ca198-556">`url`パラメーターを設定するため、`src`属性。</span><span class="sxs-lookup"><span data-stu-id="ca198-556">The `url` parameter is used to set the `src` attribute.</span></span> <span data-ttu-id="ca198-557">Url を解決するには、使用、<xref:System.Web.UI.Control.ResolveClientUrl%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-557">To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="ca198-558">このメソッドでは、パスを解決するのには呼び出された URL のコンテキストを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-558">This method uses the context of the URL it is called for to resolve the path.</span></span>  
  
 <span data-ttu-id="ca198-559">両方の<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>と<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>メソッドは、ブラウザーにスクリプト ファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-559">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser.</span></span> <span data-ttu-id="ca198-560">同じ型とキー (用スクリプト ファイルの場合) または同じ型と (埋め込みリソース) のリソース名のスクリプトは、既に表示は、スクリプトは再度表示されません。</span><span class="sxs-lookup"><span data-stu-id="ca198-560">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/ScriptManager_RegisterClientScriptIncludeCS.aspx#1)]  
  
 [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/scripts/script_alertdiv.js#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-561">クライアント スクリプト ファイルの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-561">The client script file <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-562">または</span><span class="sxs-lookup"><span data-stu-id="ca198-562">-or-</span></span> 
<span data-ttu-id="ca198-563">スクリプト ファイルを登録するコントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-563">The control that is registering the script file is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-564">スクリプト ファイルを登録するコントロールがページのコントロール ツリー内にありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-564">The control that is registering the script file is not in the page's control tree.</span></span>  
  
<span data-ttu-id="ca198-565">または</span><span class="sxs-lookup"><span data-stu-id="ca198-565">-or-</span></span> 
 <span data-ttu-id="ca198-566"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-566"><paramref name="url" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-567">または</span><span class="sxs-lookup"><span data-stu-id="ca198-567">-or-</span></span> 
 <span data-ttu-id="ca198-568"><paramref name="url" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="ca198-568"><paramref name="url" /> is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Page page, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (page, type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-569">クライアント スクリプト ファイルを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-569">The page object that is registering the client script file.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-570">クライアント スクリプト ファイルの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-570">The type of the client script file.</span></span> <span data-ttu-id="ca198-571">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-571">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-572">スクリプト ファイルの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-572">A unique identifier for the script file.</span></span></param>
        <param name="url"><span data-ttu-id="ca198-573">スクリプト ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="ca198-573">The URL of the script file.</span></span></param>
        <summary><span data-ttu-id="ca198-574">非同期ポストバックが発生するたびにクライアント スクリプトを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ファイルの参照をページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-574">Registers client script with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-575">このメソッドを使用してスクリプト ファイルを登録すると、非同期ポストバックが発生するたびに、スクリプトがレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-575">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-576">内にあるコントロールのスクリプト ファイルを登録する、<xref:System.Web.UI.UpdatePanel>コントロール スクリプトが登録されている場合にのみ、<xref:System.Web.UI.UpdatePanel>コントロールが更新を使用して、<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-576">To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-577">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-577">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-578">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-578">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-579">クライアント スクリプト ファイルの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-579">The client script file <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-580">または</span><span class="sxs-lookup"><span data-stu-id="ca198-580">-or-</span></span> 
<span data-ttu-id="ca198-581">スクリプト ファイルを登録するページが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-581">The page that is registering the script file is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-582"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-582"><paramref name="url" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-583">または</span><span class="sxs-lookup"><span data-stu-id="ca198-583">-or-</span></span> 
 <span data-ttu-id="ca198-584"><paramref name="url" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="ca198-584"><paramref name="url" /> is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-585">部分ページ レンダリングに関係するコントロールで使用できるように、アセンブリに埋め込まれているクライアント スクリプトを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-585">Registers client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Control * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (control, type, resourceName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-586">スクリプトを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-586">The control that is registering the script.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-587">クライアント スクリプトの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-587">The type of the client script.</span></span> <span data-ttu-id="ca198-588">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-588">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="resourceName"><span data-ttu-id="ca198-589">リソースの識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-589">An identifier for the resource.</span></span></param>
        <summary><span data-ttu-id="ca198-590">部分ページ レンダリングに関係するコントロールで使用できるように、アセンブリに埋め込まれているクライアント スクリプトを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-590">Registers the client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-591">使用する、<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>された部分ページ レンダリングを互換性のあるスクリプトを登録するメソッドには Microsoft Ajax Library の依存関係がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-591">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-592">このメソッドを使用して登録されているスクリプト リソースが登録されている場合にのみ`control`内にあるコントロールを表す、<xref:System.Web.UI.UpdatePanel>コントロールが更新されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-592">Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated.</span></span> <span data-ttu-id="ca198-593">非同期ポストバックが発生するたびにスクリプトを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-593">To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-594">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-594">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-595">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-595">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-596"><xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>メソッドが HTTP ハンドラーでのアセンブリからリソースがアクセスされたときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-596">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler.</span></span> <span data-ttu-id="ca198-597">このメソッドには、リソースの URL のコンテンツが含まれています、`script`要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-597">This method includes the content of the resource URL in a `script` element.</span></span>  
  
 <span data-ttu-id="ca198-598">両方の<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>と<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>メソッドは、ブラウザーにスクリプト ファイルを読み込む。</span><span class="sxs-lookup"><span data-stu-id="ca198-598">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser.</span></span> <span data-ttu-id="ca198-599">同じ型とキー (用スクリプト ファイルの場合) または同じ型と (埋め込みリソース) のリソース名のスクリプトは既に読み込まれている場合、スクリプトが再読み込みされません。</span><span class="sxs-lookup"><span data-stu-id="ca198-599">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-600">クライアント リソースの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-600">The client resource <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-601">または</span><span class="sxs-lookup"><span data-stu-id="ca198-601">-or-</span></span> 
<span data-ttu-id="ca198-602">スクリプトを登録するコントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-602">The control that is registering the script is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-603">スクリプトを登録するコントロールがページのコントロール ツリー内にありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-603">The control that is registering the script is not in the page's control tree.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Page page, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Page ^ page, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Page * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (page, type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-604">スクリプトを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-604">The page object that is registering the script.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-605">クライアント スクリプトの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-605">The type of the client script.</span></span> <span data-ttu-id="ca198-606">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-606">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="resourceName"><span data-ttu-id="ca198-607">リソースの識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-607">An identifier for the resource.</span></span></param>
        <summary><span data-ttu-id="ca198-608">ポストバックが発生するたびに、アセンブリに埋め込まれているクライアント スクリプト ファイルを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-608">Registers a client script file that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that a postback occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-609">このメソッドを使用してスクリプト ファイルを登録すると、非同期ポストバックが発生するたびに、スクリプトがレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-609">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-610">内にあるコントロールのスクリプトを登録する、<xref:System.Web.UI.UpdatePanel>コントロール、スクリプトが登録されている場合にのみ、<xref:System.Web.UI.UpdatePanel>コントロールが更新を使用して、<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-610">To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-611">部分ページ更新プログラムに関連し、スクリプト ブロックの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スクリプト ブロックを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-611">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-612">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-612">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-613">クライアント リソースの <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-613">The client resource <paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-614">または</span><span class="sxs-lookup"><span data-stu-id="ca198-614">-or-</span></span> 
<span data-ttu-id="ca198-615">スクリプトを登録するページが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-615">The page that is registering the script is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-616">部分ページ レンダリング中にカスタム データをコントロールに送信します。</span><span class="sxs-lookup"><span data-stu-id="ca198-616">Sends custom data to controls during partial-page rendering.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-617">データを受け取るコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-617">The control that is receiving the data.</span></span></param>
        <param name="dataItem"><span data-ttu-id="ca198-618">コントロールに送信されるデータ。</span><span class="sxs-lookup"><span data-stu-id="ca198-618">The data that is sent to the control.</span></span></param>
        <summary><span data-ttu-id="ca198-619">部分ページ レンダリング中にカスタム データをコントロールに送信します。</span><span class="sxs-lookup"><span data-stu-id="ca198-619">Sends custom data to a control during partial-page rendering.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-620">使用して、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>が内のデータを受け取るコントロールかどうかに関係なく、非同期ポストバック中にデータをサーバーからクライアントに送信する方法、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-620">Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="ca198-621"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>メソッドは、非同期ポストバック中にのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-621">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="ca198-622">ポストバックが非同期かどうかを調べるには、<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-622">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span> <span data-ttu-id="ca198-623">このメソッドをという名前のパラメーターを受け取るオーバー ロードを呼び出す`isJsonSerialized`に設定されている`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-623">This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`.</span></span> <span data-ttu-id="ca198-624">ときに、`isJsonSerialized`にパラメーターが設定されている`false`文字列は JavaScript Object Notation (JSON) としてシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="ca198-624">When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON).</span></span> <span data-ttu-id="ca198-625">JSON 形式の詳細については、次を参照してください。、 [JSON の紹介](https://go.microsoft.com/fwlink/?LinkId=77297)Web サイト。</span><span class="sxs-lookup"><span data-stu-id="ca198-625">For more information about the JSON format, see the [Introducing JSON](https://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="ca198-626">登録されているデータ項目、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>メソッド中にクライアント スクリプトでアクセスできる、 `pageLoading`、 `pageLoaded`、および`endRequest`のイベント、`PageRequestManager`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-626">The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the `pageLoading`, `pageLoaded`, and `endRequest` events of the `PageRequestManager` object.</span></span> <span data-ttu-id="ca198-627">これらのイベントを処理するときに、カスタムのデータは、イベント引数オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-627">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="ca198-628">ハンドラーを指定する場合など、`pageLoading`イベントでカスタム データが渡される、`PageLoadingEventArgs`プロパティを公開するクラスをします。</span><span class="sxs-lookup"><span data-stu-id="ca198-628">For example, if you provide a handler for the `pageLoading` event, the custom data is passed in the `PageLoadingEventArgs` class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-629">次の例では、2 つにデータを送信する方法を示しています。<xref:System.Web.UI.WebControls.Label>非同期ポストバック中にページ上のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-629">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="ca198-630"><xref:System.Web.UI.WebControls.Label>コントロールは、内部、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-630">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca198-631">この例で送信されるデータは、例示のみを目的です。</span><span class="sxs-lookup"><span data-stu-id="ca198-631">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="ca198-632">実際のアプリケーションで使用すると、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>サーバーからカスタム データを送信する方法。</span><span class="sxs-lookup"><span data-stu-id="ca198-632">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-633"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-633"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-634"><see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> メソッドはポストバックの際に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-634">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-635"><paramref name="dataItem" /> は <paramref name="control" /> に既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-635"><paramref name="dataItem" /> is already registered for <paramref name="control" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem, bool isJsonSerialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string * bool -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem, isJsonSerialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
        <Parameter Name="isJsonSerialized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-636">データを受け取るページ コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-636">The page control that is receiving the data.</span></span></param>
        <param name="dataItem"><span data-ttu-id="ca198-637">コントロールに送信されるデータ。</span><span class="sxs-lookup"><span data-stu-id="ca198-637">The data that is sent to the control.</span></span></param>
        <param name="isJsonSerialized"><span data-ttu-id="ca198-638"><paramref name="dataItem" /> が JSON としてシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-638"><see langword="true" /> to indicate that <paramref name="dataItem" /> is serialized as JSON; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-639">部分ページ レンダリング中にカスタム データをコントロールに送信し、データが JSON (JavaScript Object Notation) 形式かどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-639">Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-640">使用する、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>が内のデータを受け取るコントロールかどうかに関係なく、非同期ポストバック中にデータをサーバーからクライアントに送信する方法、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-640">You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="ca198-641">場合、`dataItem`に登録するパラメーター `control` JSON としてシリアル化されない設定、`isJsonSerialized`パラメーターを`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-641">If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`.</span></span> <span data-ttu-id="ca198-642">これを使用する必要がある、`eval`関数の各クライアントに送信される文字列。</span><span class="sxs-lookup"><span data-stu-id="ca198-642">This avoids the need to use the `eval` function for each string that is sent to the client.</span></span> <span data-ttu-id="ca198-643">JSON 形式の詳細については、次を参照してください。、 [JSON の紹介](https://go.microsoft.com/fwlink/?LinkId=77297)Web サイト。</span><span class="sxs-lookup"><span data-stu-id="ca198-643">For more information about the JSON format, see the [Introducing JSON](https://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="ca198-644"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>メソッドは、非同期ポストバック中にのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-644">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="ca198-645">ポストバックが非同期かどうかを調べるには、<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-645">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span>  
  
 <span data-ttu-id="ca198-646">使用して登録されているデータ項目、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>メソッド中にクライアント スクリプトでアクセスできる、 `pageLoading`、 `pageLoaded`、および`endRequest`のイベント、`PageRequestManager`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-646">The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the `pageLoading`, `pageLoaded`, and `endRequest` events of the `PageRequestManager` object.</span></span> <span data-ttu-id="ca198-647">これらのイベントを処理するときに、カスタムのデータは、イベント引数オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-647">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="ca198-648">ハンドラーを指定する場合など、`pageLoading`イベントでカスタム データが渡される、`PageLoadingEventArgs`プロパティを公開するクラスをします。</span><span class="sxs-lookup"><span data-stu-id="ca198-648">For example, if you provide a handler for the `pageLoading` event, the custom data is passed in the `PageLoadingEventArgs` class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-649">次の例では、2 つにデータを送信する方法を示しています。<xref:System.Web.UI.WebControls.Label>非同期ポストバック中にページ上のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-649">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="ca198-650"><xref:System.Web.UI.WebControls.Label>コントロールは、内部、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-650">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-651">この例を受け取らないオーバー ロードを示しています、`isJsonSerialized`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ca198-651">This example shows the overload that does not take the `isJsonSerialized` parameter.</span></span> <span data-ttu-id="ca198-652">それ以外の場合、取得するための手順、`dataItems`のプロパティ、`PageLoadingEventArgs`をオーバー ロードを使用していない場合と同じオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ca198-652">Otherwise, the procedure for retrieving the `dataItems` property of the `PageLoadingEventArgs` object is the same as if you did not use that overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca198-653">この例で送信されるデータは、例示のみを目的です。</span><span class="sxs-lookup"><span data-stu-id="ca198-653">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="ca198-654">実際のアプリケーションで使用すると、<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>サーバーからカスタム データを送信する方法。</span><span class="sxs-lookup"><span data-stu-id="ca198-654">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span> <span data-ttu-id="ca198-655">たとえば、クライアントの内側になっている要素を表示または非表示にするかどうかに関する情報を送信するデータ項目を使用できます、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-655">For example, you could use the data item to send information about whether to hide or show client elements that are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-656"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-656"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-657"><see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> メソッドはポストバックの際に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-657">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-658"><paramref name="dataItem" /> は <paramref name="control" /> に既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-658"><paramref name="dataItem" /> is already registered for <paramref name="control" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDispose">
      <MemberSignature Language="C#" Value="public void RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript);" />
      <MemberSignature Language="F#" Value="member this.RegisterDispose : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDispose (control, disposeScript)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-659"><see langword="dispose" /> スクリプトの目的のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-659">The control that the <see langword="dispose" /> script is for.</span></span></param>
        <param name="disposeScript"><span data-ttu-id="ca198-660"><see langword="dispose" /> スクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-660">The <see langword="dispose" /> script.</span></span></param>
        <summary><span data-ttu-id="ca198-661"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内にあるコントロールに対して <see langword="dispose" /> スクリプトを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-661">Registers a <see langword="dispose" /> script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span></span> <span data-ttu-id="ca198-662">このスクリプトは、<see cref="T:System.Web.UI.UpdatePanel" /> コントロールが更新または削除されるときに実行されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-662">The script is executed when the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated or deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-663">使用して、<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>メソッドを登録する`dispose`内にあるコントロールのスクリプトを<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-663">Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-664">非同期ポストバック中に<xref:System.Web.UI.UpdatePanel>更新、削除、または作成されたコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-664">During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created.</span></span> <span data-ttu-id="ca198-665">パネルが更新または削除する場合に、いずれかの`dispose`内にあるコントロールに登録されているスクリプト、<xref:System.Web.UI.UpdatePanel>と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="ca198-665">When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called.</span></span> <span data-ttu-id="ca198-666">ページの一般的な開発シナ リオでは呼び出しする必要はありません、<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-666">In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.</span></span>  
  
 <span data-ttu-id="ca198-667"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A>メソッドは、使用するためのスクリプトを登録またはコントロールを継承するクラスを作成するコントロールの開発者によって、<xref:System.Web.UI.IScriptControl>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="ca198-667">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface.</span></span> <span data-ttu-id="ca198-668">たとえば、使用する場合があります、 `dispose` composition を使用してクライアントのコントロールを開発する場合のスクリプトを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca198-668">For example, you might use a `dispose` script if you develop a client control by using composition.</span></span> <span data-ttu-id="ca198-669">コントロールを実装する<xref:System.Web.UI.IScriptControl>し、個々 のコントロールをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="ca198-669">In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls.</span></span> <span data-ttu-id="ca198-670">登録する、`dispose`メソッドなど、定義済みのクライアント コンポーネントに対応しない任意の項目の`Sys.TextBox`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-670">You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`.</span></span> <span data-ttu-id="ca198-671">カスタム コントロールが Microsoft Ajax Library 内のクライアント コンポーネントに対応する要素を作成する場合は登録する必要はありません、`dispose`スクリプト、ため`dispose`自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-671">If your custom control composes elements that correspond to client components in the Microsoft Ajax Library, you do not have to register a `dispose` script, because `dispose` is called automatically.</span></span> <span data-ttu-id="ca198-672">そのため、使用、<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>クライアント コンポーネントは、Microsoft Ajax Library の一部であると、あるコンポーネントを使用できなくする場合は、リソースを解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-672">Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>  
  
 <span data-ttu-id="ca198-673"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A>メソッドは、コントロールの複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-673">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control.</span></span> <span data-ttu-id="ca198-674">複数のスクリプトが集計されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-674">Multiple scripts are aggregated.</span></span> <span data-ttu-id="ca198-675">スクリプトの破棄の順序では、スクリプトが登録された順序と一致します。</span><span class="sxs-lookup"><span data-stu-id="ca198-675">The order of disposing scripts matches the order in which the scripts were registered.</span></span>  
  
 <span data-ttu-id="ca198-676">登録する場合、`dispose`内にないコントロールのスクリプトを<xref:System.Web.UI.UpdatePanel>コントロール、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca198-676">If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown.</span></span> <span data-ttu-id="ca198-677">`dispose`間スクリプトが呼び出される、`pageLoading`と`pageLoaded`のイベント、`PageRequestManager`クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-677">The `dispose` script is called between the `pageLoading` and `pageLoaded` events of the `PageRequestManager` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-678"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-678"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-679">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-679">-or-</span></span> 
 <span data-ttu-id="ca198-680"><paramref name="disposeScript" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-680"><paramref name="disposeScript" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-681"><paramref name="control" /> がページ上で見つかりません。</span><span class="sxs-lookup"><span data-stu-id="ca198-681"><paramref name="control" /> is not found on the page.</span></span>  
  
<span data-ttu-id="ca198-682">または</span><span class="sxs-lookup"><span data-stu-id="ca198-682">-or-</span></span> 
 <span data-ttu-id="ca198-683"><paramref name="control" /> が <see cref="T:System.Web.UI.UpdatePanel" /> コントロール内にありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-683"><paramref name="control" /> is not inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span></span></exception>
        <altmember cref="T:System.Web.UI.IScriptControl" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="static member RegisterExpandoAttribute : System.Web.UI.Control * string * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterExpandoAttribute (control, controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-684">expando 属性を登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-684">The control that is registering the expando attribute.</span></span></param>
        <param name="controlId"><span data-ttu-id="ca198-685">カスタム属性を含むページ上のコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-685">The control that contains the custom attribute on the page.</span></span></param>
        <param name="attributeName"><span data-ttu-id="ca198-686">登録するカスタム属性の名前。</span><span class="sxs-lookup"><span data-stu-id="ca198-686">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="ca198-687">カスタム属性の値。</span><span class="sxs-lookup"><span data-stu-id="ca198-687">The value of the custom attribute.</span></span></param>
        <param name="encode"><span data-ttu-id="ca198-688">登録されるカスタム属性をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-688"><see langword="true" /> to encode the custom attribute that is being registered; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-689">指定されたコントロールのカスタム (expando) 属性として名前/値ペアを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-689">Registers a name/value pair with the <see cref="T:System.Web.UI.ScriptManager" /> control as a custom (expando) attribute of a specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-690">使用する、<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>部分ページ レンダリングおよびと互換性があるコントロールのカスタム (expando) プロパティを登録するメソッドには、Microsoft Ajax Library の依存関係はありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-690">You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span>  
  
 <span data-ttu-id="ca198-691"><xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>メソッドは、指定したコントロールのカスタム属性として名前/値ペアを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-691">The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control.</span></span> <span data-ttu-id="ca198-692">プロパティが、レンダリングされたコントロールのマークアップの XHTML の互換性を維持する ECMAScript (JavaScript) から動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-692">The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="ca198-693">設定`encode`に`true`動的プロパティの値に文字をエスケープする必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="ca198-693">Set `encode` to `true` if you have to escape any characters in the dynamic property's value.</span></span>  
  
 <span data-ttu-id="ca198-694">動的プロパティの追加先となるコントロールが見つからない場合、スクリプト エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-694">If the control to which the dynamic property will be added is not found, a script error occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-695"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-695"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-696"><paramref name="control" /> がページのコントロール ツリーにありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-696"><paramref name="control" /> is not in the page's control tree.</span></span>  
  
<span data-ttu-id="ca198-697">または</span><span class="sxs-lookup"><span data-stu-id="ca198-697">-or-</span></span> 
 <span data-ttu-id="ca198-698"><paramref name="controlId" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-698"><paramref name="controlId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-699">または</span><span class="sxs-lookup"><span data-stu-id="ca198-699">-or-</span></span> 
 <span data-ttu-id="ca198-700"><paramref name="controlId" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="ca198-700"><paramref name="controlId" /> is empty.</span></span>  
  
<span data-ttu-id="ca198-701">または</span><span class="sxs-lookup"><span data-stu-id="ca198-701">-or-</span></span> 
 <span data-ttu-id="ca198-702"><paramref name="attributeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-702"><paramref name="attributeName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-703">または</span><span class="sxs-lookup"><span data-stu-id="ca198-703">-or-</span></span> 
 <span data-ttu-id="ca198-704"><paramref name="attributeName" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="ca198-704"><paramref name="attributeName" /> is empty.</span></span>  
  
<span data-ttu-id="ca198-705">または</span><span class="sxs-lookup"><span data-stu-id="ca198-705">-or-</span></span> 
 <span data-ttu-id="ca198-706"><paramref name="attributeName" /> は既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-706"><paramref name="attributeName" /> is already registered.</span></span></exception>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExtenderControl&lt;TExtenderControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterExtenderControl&lt;TExtenderControl&gt; (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterExtenderControl&lt;(class System.Web.UI.Control, class System.Web.UI.IExtenderControl) TExtenderControl&gt;(!!TExtenderControl extenderControl, class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExtenderControl(Of TExtenderControl As {Control, IExtenderControl}) (extenderControl As TExtenderControl, targetControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtenderControl&gt;&#xA; where TExtenderControl : System::Web::UI::Control, System::Web::UI::IExtenderControl virtual void RegisterExtenderControl(TExtenderControl extenderControl, System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)&#xA;override this.RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)" Usage="scriptManager.RegisterExtenderControl (extenderControl, targetControl)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterExtenderControl``1(``0,System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtenderControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IExtenderControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extenderControl" Type="TExtenderControl" />
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <typeparam name="TExtenderControl"><span data-ttu-id="ca198-707"><see cref="T:System.Web.UI.IExtenderControl" /> インターフェイスを実装しているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-707">A control that implements the <see cref="T:System.Web.UI.IExtenderControl" /> interface.</span></span></typeparam>
        <param name="extenderControl"><span data-ttu-id="ca198-708">登録するエクステンダー コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-708">The extender control to register.</span></span></param>
        <param name="targetControl"><span data-ttu-id="ca198-709">エクステンダー コントロールが拡張するスクリプト コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-709">The script control that the extender control extends.</span></span></param>
        <summary><span data-ttu-id="ca198-710">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスにエクステンダー コントロールを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-710">Registers an extender control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-711">このメソッドは、主にコントロールの開発者によって使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-711">This method is primarily for use by control developers.</span></span> <span data-ttu-id="ca198-712">呼び出す、<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>メソッド中にカスタム ASP.NET Ajax エクステンダー コントロールからその`onInit`ページにコントロールを登録するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="ca198-712">Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="ca198-713">ASP.NET Ajax エクステンダー コントロールは、部分ページ レンダリングに参加登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-713">An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="ca198-714"><xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>メソッドを拡張するターゲット スクリプト コントロールとエクステンダー コントロールの内部一覧に、指定したエクステンダー コントロールを追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-714">The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend.</span></span> <span data-ttu-id="ca198-715">この一覧は処理中に、<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-715">This list is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-716"><paramref name="extenderControl" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-716"><paramref name="extenderControl" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-717">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-717">-or-</span></span> 
 <span data-ttu-id="ca198-718"><paramref name="targetControl" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-718"><paramref name="targetControl" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterHiddenField">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-719">隠しフィールドを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-719">Registers a hidden field.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (control, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-720">隠しフィールドを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-720">The control that is registering the hidden field.</span></span></param>
        <param name="hiddenFieldName"><span data-ttu-id="ca198-721">登録する隠しフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="ca198-721">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="ca198-722">隠しフィールドの初期値。</span><span class="sxs-lookup"><span data-stu-id="ca198-722">The initial value of the hidden field.</span></span></param>
        <summary><span data-ttu-id="ca198-723"><see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のコントロールについて、隠しフィールドを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-723">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-724">使用する、<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>部分ページ レンダリングおよびと互換性がある非表示フィールドを登録するメソッドには、Microsoft Ajax Library の依存関係はありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-724">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-725">このメソッドは、フィールドを登録するコントロールの内部に非表示フィールドを登録、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-725">This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-726">非同期ポストバックが発生するたびに非表示フィールドを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-726">To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-727">部分ページ更新プログラムに関連して、非表示フィールドの最初のページのレンダリング中に 1 つだけの時間を登録する場合は使用しなかったを非表示フィールドを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-727">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-728">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-728">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-729"><xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>メソッドは、非表示を作成`input`レンダリングされた HTML ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-729">The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-730"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-730"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-731">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-731">-or-</span></span> 
 <span data-ttu-id="ca198-732"><paramref name="hiddenFieldName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-732"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-733"><paramref name="control" /> がページのコントロール ツリーにありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-733"><paramref name="control" /> is not in the page's control tree.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Page ^ page, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (page, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-734">隠しフィールドを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-734">The page object that is registering the hidden field.</span></span></param>
        <param name="hiddenFieldName"><span data-ttu-id="ca198-735">登録する隠しフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="ca198-735">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="ca198-736">隠しフィールドの初期値。</span><span class="sxs-lookup"><span data-stu-id="ca198-736">The initial value of the hidden field.</span></span></param>
        <summary><span data-ttu-id="ca198-737">非同期ポストバックのたびに、隠しフィールドを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-737">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control during every asynchronous postback.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-738">使用する、<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>部分ページ レンダリングおよびと互換性がある非表示フィールドを登録するメソッドには、Microsoft Ajax Library の依存関係はありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-738">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-739">このメソッドは、非同期ポストバックが発生するたびに、非表示フィールドを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-739">This method registers the hidden field every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-740">内にあるコントロールの非表示フィールドを登録する、<xref:System.Web.UI.UpdatePanel>制御パネルが更新されたときにのみ、フィールドが登録されているように、使用、<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-740">To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-741">部分ページ更新プログラムに関連して、非表示フィールドの最初のページのレンダリング中に 1 つだけの時間を登録する場合は使用しなかったを非表示フィールドを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-741">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-742">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-742">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-743"><paramref name="page" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-743"><paramref name="page" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-744">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-744">-or-</span></span> 
 <span data-ttu-id="ca198-745"><paramref name="hiddenFieldName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-745"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterNamedClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-746">部分ページ レンダリングに関係するコントロールで使用できるように、アセンブリに埋め込まれているクライアント スクリプトを、リソース名で <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-746">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Control control, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Control ^ control, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Control * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (control, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-747">スクリプトを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-747">The control that is registering the script.</span></span></param>
        <param name="resourceName"><span data-ttu-id="ca198-748">リソースの識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-748">An identifier for the resource.</span></span></param>
        <summary><span data-ttu-id="ca198-749">部分ページ レンダリングに関係するコントロールで使用できるように、アセンブリに埋め込まれているクライアント スクリプトを、リソース名で <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-749">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Page page, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Page ^ page, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Page * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (page, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-750">スクリプトを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-750">The page object that is registering the script.</span></span></param>
        <param name="resourceName"><span data-ttu-id="ca198-751">リソースの識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-751">An identifier for the resource.</span></span></param>
        <summary><span data-ttu-id="ca198-752">部分ページ レンダリングに関係するコントロールで使用できるように、アセンブリに埋め込まれているクライアント スクリプトを、リソース名で <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-752">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterOnSubmitStatement">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-753">フォームが送信されるときに実行される ECMAScript (JavaScript) コードを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-753">Registers ECMAScript (JavaScript) code that is executed when the form is submitted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (control, type, key, script)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-754"><see langword="onsubmit" /> ステートメントを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-754">The control that is registering the <see langword="onsubmit" /> statement.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-755">クライアント スクリプト ステートメントの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-755">The type of the client script statement.</span></span> <span data-ttu-id="ca198-756">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-756">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-757">スクリプト ステートメントの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-757">A unique identifier for the script statement.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-758">登録するスクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-758">The script to register.</span></span></param>
        <summary><span data-ttu-id="ca198-759">フォームが送信されるときに実行される <see cref="T:System.Web.UI.UpdatePanel" /> コントロールと連携するコントロールに対して、ECMAScript (JavaScript) コードを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-759">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-760"><xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>フォームが送信される前に実行されるスクリプトに追加の送信を変更またはキャンセルすることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-760">The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.</span></span>  
  
 <span data-ttu-id="ca198-761">使用する、<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>をレンダリングするメソッド、`onsubmit`ステートメント部分ページ レンダリングと互換性があると、Microsoft Ajax Library の依存関係がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-761">You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-762">ステートメントを登録するコントロールが内部にある場合にのみ、ページにこのメソッドを使用して登録されている JavaScript コードが送信される、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-762">JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-763">非同期ポストバックのたびにコードを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-763">To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-764">部分ページ更新プログラムに関連し、コードの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、JavaScript コードを登録する場合、<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-764">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-765">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-765">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-766">*スクリプト*のパラメーター、<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>メソッドは、セミコロン (;) を使用して区切られた複数のスクリプト コマンドを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-766">The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;).</span></span>  
  
 <span data-ttu-id="ca198-767">HTML フォームの詳細については、`onsubmit`イベントを参照してください、 [World Wide Web Consortium (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-767">For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-768"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-768"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-769">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-769">-or-</span></span> 
 <span data-ttu-id="ca198-770"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-770"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-771"><paramref name="control" /> がページのコントロール ツリーにありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-771"><paramref name="control" /> is not in the page's control tree.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Page page, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (page, type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-772"><see langword="onsubmit" /> ステートメントを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-772">The page object that is registering the <see langword="onsubmit" /> statement.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-773">クライアント スクリプト ステートメントの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-773">The type of the client script statement.</span></span> <span data-ttu-id="ca198-774">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-774">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-775">スクリプト ステートメントの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-775">A unique identifier for the script statement.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-776">登録するスクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-776">The script to register.</span></span></param>
        <summary><span data-ttu-id="ca198-777">フォームが送信されるときに実行される <see cref="T:System.Web.UI.UpdatePanel" /> コントロールと連携するコントロールに対して、ECMAScript (JavaScript) コードを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-777">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-778">非同期ポストバックが発生するたびに含まれるスクリプトは、このメソッドに JavaScript コードを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-778">Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca198-779">以前の非同期ポストバックのコードは削除されません。</span><span class="sxs-lookup"><span data-stu-id="ca198-779">Code from any earlier asynchronous postbacks is not removed.</span></span> <span data-ttu-id="ca198-780">新しい非同期ポストバックの既存のコードにコードを追加する、`onsubmit`ステートメント。</span><span class="sxs-lookup"><span data-stu-id="ca198-780">New asynchronous postbacks append code to any existing code for the `onsubmit` statement.</span></span>  
  
 <span data-ttu-id="ca198-781">内にあるコントロールのコードを登録する、<xref:System.Web.UI.UpdatePanel>コントロール、コードが登録されている場合にのみ、<xref:System.Web.UI.UpdatePanel>コントロールが更新を使用して、<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-781">To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-782">部分ページ更新プログラムに関連し、コードの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、JavaScript コードを登録する場合、<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-782">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-783">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-783">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-784"><paramref name="page" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-784"><paramref name="page" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-785">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-785">-or-</span></span> 
 <span data-ttu-id="ca198-786"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-786"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-787">ポストバック用に登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-787">The control to register for postback.</span></span></param>
        <summary><span data-ttu-id="ca198-788">コントロールをポストバックのトリガーとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-788">Registers a control as a trigger for a postback.</span></span> <span data-ttu-id="ca198-789">このメソッドは、本来は非同期ポストバックを実行する <see cref="T:System.Web.UI.UpdatePanel" /> コントロール内のポストバック コントロールを構成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-789">This method is used to configure postback controls inside an <see cref="T:System.Web.UI.UpdatePanel" /> control that would otherwise perform asynchronous postbacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-790">使用して、<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>内のポストバック コントロールを登録するメソッド、<xref:System.Web.UI.UpdatePanel>トリガーとしてコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-790">Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers.</span></span> <span data-ttu-id="ca198-791">このメソッドを使用して登録されているコントロールにのみ更新する代わりにページ全体が更新プログラム、<xref:System.Web.UI.UpdatePanel>コントロールの内容。</span><span class="sxs-lookup"><span data-stu-id="ca198-791">Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="ca198-792">このメソッドの外部でポストバック コントロールを登録、<xref:System.Web.UI.UpdatePanel>コントロールには影響がない既定ではこれらのコントロールは実行されないため、非同期ポストバックします。</span><span class="sxs-lookup"><span data-stu-id="ca198-792">Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.</span></span>  
  
 <span data-ttu-id="ca198-793">使用して宣言によって、トリガーを追加することができます、`Triggers`の要素、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-793">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="ca198-794">Visual Studio で、デザイナーを使用して、 **UpdatePanelTrigger コレクション エディター**  ダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="ca198-794">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptControl&lt;TScriptControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterScriptControl&lt;TScriptControl&gt; (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptControl&lt;(class System.Web.UI.Control, class System.Web.UI.IScriptControl) TScriptControl&gt;(!!TScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptControl(Of TScriptControl As {Control, IScriptControl}) (scriptControl As TScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TScriptControl&gt;&#xA; where TScriptControl : System::Web::UI::Control, System::Web::UI::IScriptControl virtual void RegisterScriptControl(TScriptControl scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)&#xA;override this.RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)" Usage="scriptManager.RegisterScriptControl scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptControl``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TScriptControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="scriptControl" Type="TScriptControl" />
      </Parameters>
      <Docs>
        <typeparam name="TScriptControl"><span data-ttu-id="ca198-795"><see cref="T:System.Web.UI.IScriptControl" /> インターフェイスを実装しているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-795">A control that implements the <see cref="T:System.Web.UI.IScriptControl" /> interface.</span></span></typeparam>
        <param name="scriptControl"><span data-ttu-id="ca198-796">登録するスクリプト コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-796">The script control to register.</span></span></param>
        <summary><span data-ttu-id="ca198-797">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスにスクリプト コントロールを登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-797">Registers a script control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-798">このメソッドは、主にコントロールの開発者によって使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-798">This method is primarily for use by control developers.</span></span> <span data-ttu-id="ca198-799">呼び出す、<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>メソッド中にカスタム ASP.NET Ajax スクリプト コントロールからその`onInit`ページにコントロールを登録するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="ca198-799">Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="ca198-800">部分ページ レンダリングに参加する ASP.NET Ajax スクリプト コントロールを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-800">An ASP.NET Ajax script control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="ca198-801"><xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>メソッドでは、指定したエクステンダー コントロールを追加中に処理されるスクリプト コントロールの内部一覧に、<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-801">The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-802"><paramref name="scriptControl" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-802"><paramref name="scriptControl" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterScriptDescriptors">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-803">クライアントのコントロール、コンポーネント、または動作を表すクライアント オブジェクトをサポートするスクリプトを返すために、<see cref="T:System.Web.UI.ScriptManager" /> コントロールに対して、<see cref="T:System.Web.UI.ScriptControl" /> クラスまたは <see cref="T:System.Web.UI.ExtenderControl" /> クラスへのコールバックを指示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-803">Instructs the <see cref="T:System.Web.UI.ScriptManager" /> control to  call back to the <see cref="T:System.Web.UI.ScriptControl" /> or <see cref="T:System.Web.UI.ExtenderControl" /> classes in order to return scripts that support the client object that represents a client control, component, or behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IExtenderControl extenderControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (extenderControl As IExtenderControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IExtenderControl ^ extenderControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors extenderControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extenderControl" Type="System.Web.UI.IExtenderControl" />
      </Parameters>
      <Docs>
        <param name="extenderControl"><span data-ttu-id="ca198-804">スクリプト ディスクリプターが登録されるエクステンダー コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-804">The extender control for which script descriptors will be registered.</span></span></param>
        <summary><span data-ttu-id="ca198-805"><see cref="T:System.Web.UI.ExtenderControl" /> クラスにコールバックして、クライアントのコントロール、コンポーネント、または動作を表すクライアント オブジェクトをサポートするためにレンダリングする必要があるインスタンス スクリプトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca198-805">Calls back to an <see cref="T:System.Web.UI.ExtenderControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-806"><xref:System.Web.UI.ExtenderControl>クラスが呼び出す、<xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A>メソッドでその<xref:System.Web.UI.Control.Render%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-806">The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca198-807">派生する場合、<see cref="T:System.Web.UI.ExtenderControl" />クラスし、オーバーライド、<see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />メソッドは基底クラスのメソッドを呼び出さない、呼び出す必要があります、<see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-807">If you derive from the <see cref="T:System.Web.UI.ExtenderControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" /> method.</span></span> <span data-ttu-id="ca198-808">これにより、<see cref="T:System.Web.UI.ScriptManager" />コントロールを表すクライアント オブジェクトをサポートするインスタンスのスクリプトを表示するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-808">This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</span></span></para></block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (scriptControl As IScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IScriptControl ^ scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IScriptControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptControl" Type="System.Web.UI.IScriptControl" />
      </Parameters>
      <Docs>
        <param name="scriptControl"><span data-ttu-id="ca198-809">スクリプト ディスクリプターが登録されるスクリプト コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-809">The script control for which script descriptors will be registered.</span></span></param>
        <summary><span data-ttu-id="ca198-810"><see cref="T:System.Web.UI.ScriptControl" /> クラスを呼び出して、クライアントのコントロール、コンポーネント、または動作を表すクライアント オブジェクトをサポートするためにレンダリングする必要があるインスタンス スクリプトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca198-810">Calls a <see cref="T:System.Web.UI.ScriptControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-811"><xref:System.Web.UI.ScriptControl>クラスが呼び出す、<xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A>メソッド中にその<xref:System.Web.UI.Control.Render%2A>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-811">The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca198-812">派生する場合、<see cref="T:System.Web.UI.ScriptControl" />クラスし、オーバーライド、<see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />メソッドは基底クラスのメソッドを呼び出さない、呼び出す必要があります、<see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="ca198-812">If you derive from the <see cref="T:System.Web.UI.ScriptControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" /> method.</span></span> <span data-ttu-id="ca198-813">これにより、<see cref="T:System.Web.UI.ScriptManager" />コントロールを表すクライアント オブジェクトをサポートするインスタンスのスクリプトを表示するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-813">This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</span></span></para></block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-814">起動スクリプト ブロックを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-814">Registers a startup script block with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-815">クライアント スクリプト ブロックを登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-815">The control that is registering the client script block.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-816">クライアント スクリプト ブロックの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-816">The type of the client script block.</span></span> <span data-ttu-id="ca198-817">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-817">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-818">スクリプト ブロックの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-818">A unique identifier for the script block.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-819">登録するスクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-819">The script to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="ca198-820">スクリプト ブロックを <see langword="&lt;script&gt;" /> タグと <see langword="&lt;/script&gt;" /> タグで囲む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-820"><see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-821"><see cref="T:System.Web.UI.ScriptManager" /> コントロールを使用して <see cref="T:System.Web.UI.UpdatePanel" /> 内のコントロールの起動スクリプト ブロックを登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-821">Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, and adds the script block to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-822">使用する、<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>された部分ページ レンダリングを互換性のあるページの起動スクリプト ブロックを登録するメソッドには、Microsoft Ajax Library の依存関係がありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-822">You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="ca198-823">ブロックを登録するコントロールが内部にある場合にのみ、このメソッドを使用して登録されているスタートアップ スクリプト ブロックがページに送信される、<xref:System.Web.UI.UpdatePanel>更新されているコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-823">Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="ca198-824">非同期ポストバックが発生するたびに起動スクリプト ブロックを登録するには、使用、<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-824">To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-825">部分ページ更新プログラムに関連し、スクリプトの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スタートアップ スクリプトを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-825">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-826">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-826">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="ca198-827">によって表示されるスクリプト ブロック、<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>ページ読み込みの終了時に、ページのクライアントの前に、メソッドが実行される`onload`イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-827">The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised.</span></span> <span data-ttu-id="ca198-828">起動スクリプト ブロックが直前に表示する ASP.NET ページの下部に配置されている、`</form>`タグ。</span><span class="sxs-lookup"><span data-stu-id="ca198-828">Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.</span></span>  
  
 <span data-ttu-id="ca198-829">起動スクリプト ブロックを使用して登録されている<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>登録されているのと同じ順序で出力されるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="ca198-829">Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="ca198-830">起動スクリプト ブロックの順序が重要な場合を使用して、<xref:System.Text.StringBuilder>オブジェクトの 1 つの文字列内のスクリプト ブロックを収集して、それらすべてを 1 つのスタートアップ スクリプトとして登録します。</span><span class="sxs-lookup"><span data-stu-id="ca198-830">If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca198-831"><paramref name="control" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-831"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca198-832">- または -</span><span class="sxs-lookup"><span data-stu-id="ca198-832">-or-</span></span> 
 <span data-ttu-id="ca198-833"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ca198-833"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca198-834"><paramref name="control" /> がページのコントロール ツリーにありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-834"><paramref name="control" /> is not in the page's control tree.</span></span></exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="ca198-835">クライアント スクリプト ブロックを登録するページ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-835">The page object that is registering the client script block.</span></span></param>
        <param name="type"><span data-ttu-id="ca198-836">クライアント スクリプト ブロックの型。</span><span class="sxs-lookup"><span data-stu-id="ca198-836">The type of the client script block.</span></span> <span data-ttu-id="ca198-837">このパラメーターは、通常、typeof 演算子 (C#) または GetType 演算子 (Visual Basic) を使用して指定され、スクリプトを登録するコントロールの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-837">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span></span></param>
        <param name="key"><span data-ttu-id="ca198-838">スクリプト ブロックの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-838">A unique identifier for the script block.</span></span></param>
        <param name="script"><span data-ttu-id="ca198-839">登録するスクリプト。</span><span class="sxs-lookup"><span data-stu-id="ca198-839">The script to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="ca198-840">スクリプト ブロックを <see langword="&lt;script&gt;" /> タグと <see langword="&lt;/script&gt;" /> タグで囲む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-840"><see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca198-841">非同期ポストバックのたびに起動スクリプト ブロックを <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録し、スクリプト ブロックをページに追加します。</span><span class="sxs-lookup"><span data-stu-id="ca198-841">Registers a startup script block for every asynchronous postback with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-842">含まれている非同期ポストバックが発生するたびに起動スクリプト ブロックを登録するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-842">You use this method to register a startup script block that is included every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="ca198-843">内にあるコントロールのスクリプト ブロックを登録する、<xref:System.Web.UI.UpdatePanel>コントロール、スクリプト ブロックが登録されている場合にのみ、<xref:System.Web.UI.UpdatePanel>コントロールが更新を使用して、<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>このメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ca198-843">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="ca198-844">部分ページ更新プログラムに関連し、スクリプトの最初のページのレンダリング中に 1 つだけの時間を登録する場合を使用して、スタートアップ スクリプトを登録する場合、<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>のメソッド、<xref:System.Web.UI.ClientScriptManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-844">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="ca198-845">参照を取得することができます、<xref:System.Web.UI.ClientScriptManager>オブジェクトから、<xref:System.Web.UI.Page.ClientScript%2A>ページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-845">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="scriptManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ca198-846">ページに書き込むコントロールのコンテンツを受け取るオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-846">An object that receives the content of the control to write to the page.</span></span></param>
        <summary><span data-ttu-id="ca198-847">指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを使用して、ブラウザーに <see cref="T:System.Web.UI.ScriptManager" /> コントロールのコンテンツをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="ca198-847">Renders the <see cref="T:System.Web.UI.ScriptManager" /> control's content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-848">このメソッドは、拡張するコントロールの開発者によって使用されます、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-848">This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca198-849">このメソッドをオーバーライドするときに呼び出す基本<see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />メソッド定義のクライアント スクリプトを示すように、`Sys.WebForms.PageRequestManager`クラスがページに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-849">When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" /> method so that the client script that defines the `Sys.WebForms.PageRequestManager` class is rendered on the page.</span></span></para></block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompositeScriptReference As EventHandler(Of CompositeScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::CompositeScriptReferenceEventArgs ^&gt; ^ ResolveCompositeScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompositeScriptReference : EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " Usage="member this.ResolveCompositeScriptReference : System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-850">複合スクリプトが <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-850">Occurs when a composite script is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveScriptReference As EventHandler(Of ScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::ScriptReferenceEventArgs ^&gt; ^ ResolveScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveScriptReference : EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " Usage="member this.ResolveScriptReference : System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-851"><see cref="P:System.Web.UI.ScriptManager.Scripts" /> コレクションのメンバーが <see cref="T:System.Web.UI.ScriptManager" /> コントロールに登録されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-851">Occurs when a member of the <see cref="P:System.Web.UI.ScriptManager.Scripts" /> collection is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-852">このイベントは、1 回の各メンバーに対して、<xref:System.Web.UI.ScriptManager.Scripts%2A>ページの中にコレクション<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-852">This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event.</span></span> <span data-ttu-id="ca198-853">このイベントを使用して、スクリプトは、ページにレンダリングされる前に、すべての更新プログラムを実行します。</span><span class="sxs-lookup"><span data-stu-id="ca198-853">Use this event to perform any updates before the script is rendered to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleService">
      <MemberSignature Language="C#" Value="public System.Web.UI.RoleServiceManager RoleService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.RoleServiceManager RoleService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.RoleService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleService As RoleServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::RoleServiceManager ^ RoleService { System::Web::UI::RoleServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleService : System.Web.UI.RoleServiceManager" Usage="System.Web.UI.ScriptManager.RoleService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.RoleServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-854">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに関連付けられている <see cref="T:System.Web.UI.RoleServiceManager" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-854">Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></summary>
        <value><span data-ttu-id="ca198-855">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに対する <see cref="T:System.Web.UI.RoleServiceManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-855">The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-856"><xref:System.Web.UI.RoleServiceManager>このプロパティによって返されるオブジェクトは、ページに登録されている役割サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="ca198-856">The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page.</span></span> <span data-ttu-id="ca198-857">役割サービスを定義することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-857">The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="ca198-858">ASP.NET ロール サービスを使用したり、カスタムのロール サービスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-858">You can use the ASP.NET role service or use a custom role service.</span></span> <span data-ttu-id="ca198-859">マークアップで、カスタム サービスを追加するには含めることによって、`RoleService`内の要素、 `asp:ScriptManager`  ページで、次の例に示すように要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-859">You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="True" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="ca198-860">プログラムで構成することができます、<xref:System.Web.UI.RoleServiceManager>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-860">You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object.</span></span> <span data-ttu-id="ca198-861">サービスに登録されて、<xref:System.Web.UI.ScriptManager>コントロール、ページの中に<xref:System.Web.UI.Control.PreRender>ライフ サイクル ステージ。</span><span class="sxs-lookup"><span data-stu-id="ca198-861">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptMode ScriptMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ScriptMode ScriptMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptMode As ScriptMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptMode ScriptMode { System::Web::UI::ScriptMode get(); void set(System::Web::UI::ScriptMode value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptMode : System.Web.UI.ScriptMode with get, set" Usage="System.Web.UI.ScriptManager.ScriptMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-862">クライアント スクリプト ライブラリのデバッグ バージョンまたはリリース バージョンがレンダリングされるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-862">Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.</span></span></summary>
        <value><span data-ttu-id="ca198-863">現在のモードを示す列挙値。</span><span class="sxs-lookup"><span data-stu-id="ca198-863">The enumeration value that indicates the current mode.</span></span> <span data-ttu-id="ca198-864">既定値は、<see cref="F:System.Web.UI.ScriptMode.Auto" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-864">The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-865"><xref:System.Web.UI.ScriptManager.ScriptMode%2A>プロパティを指定するかどうか、<xref:System.Web.UI.ScriptManager>コントロールのデバッグをレンダリングまたはクライアント スクリプト ライブラリのバージョンをリリースする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-865">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries.</span></span> <span data-ttu-id="ca198-866">この値は、構成ファイルとページ ディレクティブ内に設定されている値で置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-866">This value can be superseded by values that are set in the configuration file and in the page directive.</span></span>  
  
 <span data-ttu-id="ca198-867">次の表では、このプロパティの有効な値を示します。</span><span class="sxs-lookup"><span data-stu-id="ca198-867">The following table lists the valid values for this property.</span></span>  
  
|<span data-ttu-id="ca198-868">[値]</span><span class="sxs-lookup"><span data-stu-id="ca198-868">Value</span></span>|<span data-ttu-id="ca198-869">定義</span><span class="sxs-lookup"><span data-stu-id="ca198-869">Definition</span></span>|  
|-----------|----------------|  
|<xref:System.Web.UI.ScriptMode.Auto>|<span data-ttu-id="ca198-870">ライブラリは、Web ページで使用するクライアント スクリプトのデバッグ バージョンと、`retail`の属性、[展開](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100))構成要素に設定されている`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-870">Debug versions of client script libraries are used in the Web page when the `retail` attribute of the [deployment](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) configuration element is set to `false`.</span></span> <span data-ttu-id="ca198-871">それ以外の場合、クライアント スクリプト ライブラリのリリース バージョンが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-871">Otherwise, the release versions of client script libraries are used.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Inherit>|<span data-ttu-id="ca198-872">適用すると、<xref:System.Web.UI.ScriptManager.ScriptMode%2A>のプロパティ、<xref:System.Web.UI.ScriptManager>オブジェクト、この値は同じで<xref:System.Web.UI.ScriptMode.Auto>します。</span><span class="sxs-lookup"><span data-stu-id="ca198-872">When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Debug>|<span data-ttu-id="ca198-873">しない限り、Web ページでライブラリが使用されるクライアント スクリプトのデバッグ バージョン、`retail`の属性、[展開](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100))構成要素に設定されている`true`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-873">Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the [deployment](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) configuration element is set to `true`.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Release>|<span data-ttu-id="ca198-874">しない限り、Web ページでクライアント スクリプト ライブラリのリリース バージョンが使用される、`retail`の属性、[展開](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100))に設定されている構成要素`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-874">Release versions of client script libraries are used in the Web page unless the `retail` attribute of the [deployment](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) configuration element is set to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ca198-875">`debug`の属性、 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブでは Ajax 対応 ASP.NET アプリケーションには影響しません。</span><span class="sxs-lookup"><span data-stu-id="ca198-875">The `debug` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="ca198-876"><xref:System.Web.UI.ScriptManager>コントロール、Web.config ファイルと設定のみを使用してその<xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>と<xref:System.Web.UI.ScriptManager.ScriptMode%2A>デバッグ スクリプトをレンダリングするかどうかを決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-876">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="ca198-877">詳細については、次を参照してください。[デバッグと Tracing Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)します。</span><span class="sxs-lookup"><span data-stu-id="ca198-877">For more information, see [Debugging and Tracing Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ca198-878"><see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> が、<see cref="T:System.Web.UI.ScriptMode" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="ca198-878">The <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> property is not one of the <see cref="T:System.Web.UI.ScriptMode" /> values.</span></span></exception>
        <altmember cref="T:System.Web.UI.ScriptMode" />
      </Docs>
    </Member>
    <Member MemberName="ScriptPath">
      <MemberSignature Language="C#" Value="public string ScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptPath : string with get, set" Usage="System.Web.UI.ScriptManager.ScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Set the Path property on each individual ScriptReference instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-879">ASP.NET AJAX およびカスタム スクリプト ファイルへのパスを作成するために使用される場所のルート パスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-879">Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.</span></span></summary>
        <value><span data-ttu-id="ca198-880">スクリプト ファイルが格納される場所。</span><span class="sxs-lookup"><span data-stu-id="ca198-880">The location where script files are stored.</span></span> <span data-ttu-id="ca198-881">既定値は、相対パスとして解釈される空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="ca198-881">The default value is an empty string (""), which is interpreted as a relative path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-882"><xref:System.Web.UI.ScriptManager.ScriptPath%2A>プロパティでは、絶対パス、相対パスを指定できます。 または、ページ上のすべてのスクリプトをアプリケーション相対 URL をブロックします。</span><span class="sxs-lookup"><span data-stu-id="ca198-882">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page.</span></span> <span data-ttu-id="ca198-883">これにより、現在登録されているカスタムとサード パーティ製のスクリプト ブロックが含まれます。<xref:System.Web.UI.ScriptManager>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ca198-883">This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance.</span></span> <span data-ttu-id="ca198-884"><xref:System.Web.UI.ScriptManager.ScriptPath%2A>プロパティの設定は、通常の属性として宣言によって、`ScriptManager`が、ページ上の要素をコードでも設定することができます。</span><span class="sxs-lookup"><span data-stu-id="ca198-884">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.</span></span>  
  
 <span data-ttu-id="ca198-885">場合、`path`属性または<xref:System.Web.UI.ScriptReferenceBase.Path%2A>プロパティに対して設定されて、<xref:System.Web.UI.ScriptReference>オブジェクト、<xref:System.Web.UI.ScriptManager.Scripts%2A>コレクション、path の値をオーバーライド、<xref:System.Web.UI.ScriptManager.ScriptPath%2A>を値<xref:System.Web.UI.ScriptReference>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ca198-885">If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance.</span></span>  
  
 <span data-ttu-id="ca198-886">ない場合は<xref:System.Web.UI.ScriptReferenceBase.Path%2A>値が指定されて、<xref:System.Web.UI.ScriptManager>コントロールで定義されているディレクトリの検索、<xref:System.Web.UI.ScriptManager.ScriptPath%2A>プロパティと解決のスクリプトを参照して、<xref:System.Web.UI.ScriptReference.Name%2A>または<xref:System.Web.UI.ScriptReference.Assembly%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-886">If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptResourceMapping">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.ScriptResourceMapping ScriptResourceMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScriptResourceMapping As ScriptResourceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::ScriptResourceMapping ^ ScriptResourceMapping { System::Web::UI::ScriptResourceMapping ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScriptResourceMapping : System.Web.UI.ScriptResourceMapping" Usage="System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptResourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-887"><see cref="T:System.Web.UI.ScriptResourceMapping" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-887">Gets a <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span></span></summary>
        <value><span data-ttu-id="ca198-888"><see cref="T:System.Web.UI.ScriptResourceMapping" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-888">A <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-889">静的な<xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A>プロパティが返す、<xref:System.Web.UI.ScriptResourceMapping>スクリプト リソース (スクリプトのリダイレクト) の場所を表すマッピングのコレクションを含むことのできるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-889">The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection).</span></span> <span data-ttu-id="ca198-890">名前または名前/アセンブリのペアに基づいてこのマッピングのコレクションをマップできるし、を指すことができます、<xref:System.Web.UI.ScriptResourceDefinition>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-890">This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca198-891">次の例は、追加する方法を示します、<xref:System.Web.UI.ScriptResourceDefinition>で参照できるオブジェクト、<xref:System.Web.UI.ScriptManager>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-891">The following examples shows how to add a <xref:System.Web.UI.ScriptResourceDefinition> object that can be referenced by a <xref:System.Web.UI.ScriptManager> object.</span></span> <span data-ttu-id="ca198-892">Global.asax ファイルに次のコードを追加、`Application_Start`イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-892">Add the following code to the Global.asax file in the `Application_Start` event.</span></span>  
  
```csharp  
ScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js";  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js";  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js";  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js";  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", null, myScriptResDef);  
```  
  
```vb  
Dim myScriptResDef As New ScriptResourceDefinition()  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js"  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js"  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js"  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", Nothing, myScriptResDef)  
```  
  
 <span data-ttu-id="ca198-893">ASP.NET Web フォーム ページ (.aspx ファイル) 用のマークアップで内で次のマークアップを追加、`form`要素とすべての要素または jQuery スクリプトを使用するコードの前にします。</span><span class="sxs-lookup"><span data-stu-id="ca198-893">In the markup for an ASP.NET Web Forms page (.aspx file), add the following markup inside the `form` element and before any elements or code that uses jQuery script.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="jquery"/>  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReferenceCollection Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReferenceCollection Scripts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As ScriptReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReferenceCollection ^ Scripts { System::Web::UI::ScriptReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scripts : System.Web.UI.ScriptReferenceCollection" Usage="System.Web.UI.ScriptManager.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-894">クライアントにレンダリングされるスクリプト ファイルをそれぞれ表す <see cref="T:System.Web.UI.ScriptReference" /> オブジェクトが格納された <see cref="T:System.Web.UI.ScriptReferenceCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-894">Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains the <see cref="T:System.Web.UI.ScriptReference" /> objects, each of which represents a script file rendered to the client.</span></span></summary>
        <value><span data-ttu-id="ca198-895"><see cref="T:System.Web.UI.ScriptManager" /> インスタンスの <see cref="T:System.Web.UI.ScriptReferenceCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-895">The <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object of the <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-896"><xref:System.Web.UI.ScriptReferenceCollection>このプロパティによって返されるオブジェクトのコレクションである<xref:System.Web.UI.ScriptReference>スクリプト ファイルを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-896">The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file.</span></span> <span data-ttu-id="ca198-897">コレクションには、ASP.NET Ajax の機能のために必要なすべてのスクリプト ファイルおよびカスタム スクリプト ファイルへの参照が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca198-897">The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files.</span></span> <span data-ttu-id="ca198-898">表示するためにカスタム スクリプト ファイルで定義できる、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-898">Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="ca198-899">スクリプト ファイルをマークアップ内のコレクションに追加するには追加することで`asp:ScriptReference`要素を`Scripts`内のノード、 `asp:ScriptManager`  ページで、次の例に示す要素。</span><span class="sxs-lookup"><span data-stu-id="ca198-899">You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="Script.js" />  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="ca198-900">追加することも、<xref:System.Web.UI.ScriptReference>オブジェクトを<xref:System.Web.UI.ScriptManager.Scripts%2A>コレクションを使用してプログラムで、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>のメソッド、<xref:System.Web.UI.ScriptReferenceCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-900">You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="ca198-901"><xref:System.Web.UI.ScriptManager>コントロールがコントロールの中にスクリプト ファイルを登録<xref:System.Web.UI.Control.PreRender>イベント。</span><span class="sxs-lookup"><span data-stu-id="ca198-901">The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 <span data-ttu-id="ca198-902"><xref:System.Web.UI.ScriptManager.Scripts%2A>コレクションに中核となる Microsoft Ajax Library のスクリプトが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="ca198-902">The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core Microsoft Ajax Library scripts.</span></span> <span data-ttu-id="ca198-903">コア ライブラリ内のスクリプトが自動的に表示されます。登録する必要がない、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-903">The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="ca198-904">ただし、コア スクリプトまたは任意のコントロールのスクリプトをオーバーライドし、スクリプトの別のバージョンを置換する場合にバージョンを追加できます、<xref:System.Web.UI.ScriptManager.Scripts%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-904">However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Web.UI.ServiceReferenceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ServiceReferenceCollection Services" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ServiceReferenceCollection ^ Services { System::Web::UI::ServiceReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Services : System.Web.UI.ServiceReferenceCollection" Usage="System.Web.UI.ScriptManager.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ServiceReferenceCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ServiceReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-905">ASP.NET が AJAX 機能用にクライアントに公開している各 Web サービスに対応する <see cref="T:System.Web.UI.ServiceReference" /> オブジェクトが格納されている <see cref="T:System.Web.UI.ServiceReferenceCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-905">Gets a <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each Web service that ASP.NET exposes on the client for Ajax functionality.</span></span></summary>
        <value><span data-ttu-id="ca198-906">現在の <see cref="T:System.Web.UI.ScriptManager" /> インスタンスに対する <see cref="T:System.Web.UI.ServiceReferenceCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca198-906">The <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-907"><xref:System.Web.UI.ServiceReferenceCollection>このプロパティによって返されるオブジェクトのコレクションである<xref:System.Web.UI.ServiceReference>に登録されている Web サービスを表すオブジェクト、<xref:System.Web.UI.ScriptManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-907">The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control .</span></span> <span data-ttu-id="ca198-908">サービスを定義することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-908">You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="ca198-909">マークアップ内のコレクションに追加することでサービスを追加することができます、`asp:ServiceReference`要素を`Services`内の要素、`asp:ScriptManager`インスタンス ページで、次の例に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-909">You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Services>  
    <asp:ServiceReference Path="Service.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="ca198-910">プログラムで追加することができます、<xref:System.Web.UI.ServiceReference>オブジェクトを<xref:System.Web.UI.ScriptManager.Services%2A>コレクションを使用して、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>のメソッド、<xref:System.Web.UI.ServiceReferenceCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-910">You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="ca198-911">サービスに登録されて、<xref:System.Web.UI.ScriptManager>ページの中に<xref:System.Web.UI.Control.PreRender>ライフ サイクル ステージ。</span><span class="sxs-lookup"><span data-stu-id="ca198-911">Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca198-912">ブラウザーのフォーカスを、指定したコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-912">Sets the browser focus to the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : string -&gt; unit" Usage="scriptManager.SetFocus clientID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID"><span data-ttu-id="ca198-913">フォーカスを受け取るコントロールの ID。</span><span class="sxs-lookup"><span data-stu-id="ca198-913">The ID of the control to receive focus.</span></span></param>
        <summary><span data-ttu-id="ca198-914">ブラウザーのフォーカスを、ID で指定されるコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-914">Sets the browser focus to the control specified by ID.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-915"><xref:System.Web.UI.ScriptManager.SetFocus%2A>のような方法は、機能、<xref:System.Web.UI.Page.SetFocus%2A>のメソッド、<xref:System.Web.UI.Page>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-915">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="ca198-916">どちらのメソッドは、Web ページ上のアクティブ コントロールを指定した ID を持つコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-916">Both methods make the control with the specified ID the active control on the Web page.</span></span> <span data-ttu-id="ca198-917"><xref:System.Web.UI.ScriptManager.SetFocus%2A>のメソッド、<xref:System.Web.UI.ScriptManager>非同期ポストバック中にフォーカスを設定するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-917">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="ca198-918">ポストバックと、ページが最初にレンダリング中に、<xref:System.Web.UI.ScriptManager.SetFocus%2A>メソッドの呼び出し、<xref:System.Web.UI.Page.SetFocus%2A>のメソッド、<xref:System.Web.UI.Page>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-918">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="ca198-919">複数の呼び出しがある場合、<xref:System.Web.UI.ScriptManager.SetFocus%2A>メソッドの最後の呼び出しで、コントロールがフォーカスを受け取る。</span><span class="sxs-lookup"><span data-stu-id="ca198-919">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.String)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : System.Web.UI.Control -&gt; unit" Usage="scriptManager.SetFocus control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="ca198-920">フォーカスを受け取るコントロール。</span><span class="sxs-lookup"><span data-stu-id="ca198-920">The control to receive focus.</span></span></param>
        <summary><span data-ttu-id="ca198-921">ブラウザーのフォーカスを、指定したコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-921">Sets the browser focus to the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-922"><xref:System.Web.UI.ScriptManager.SetFocus%2A>のような方法は、機能、<xref:System.Web.UI.Page.SetFocus%2A>のメソッド、<xref:System.Web.UI.Page>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-922">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="ca198-923">どちらのメソッドは、Web ページ上のアクティブ コントロールを指定したコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="ca198-923">Both methods make the specified control the active control on the Web page.</span></span> <span data-ttu-id="ca198-924"><xref:System.Web.UI.ScriptManager.SetFocus%2A>のメソッド、<xref:System.Web.UI.ScriptManager>非同期ポストバック中にフォーカスを設定するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca198-924">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="ca198-925">ポストバックと、ページが最初にレンダリング中に、<xref:System.Web.UI.ScriptManager.SetFocus%2A>メソッドの呼び出し、<xref:System.Web.UI.Page.SetFocus%2A>のメソッド、<xref:System.Web.UI.Page>クラス。</span><span class="sxs-lookup"><span data-stu-id="ca198-925">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="ca198-926">複数の呼び出しがある場合、<xref:System.Web.UI.ScriptManager.SetFocus%2A>メソッドの最後の呼び出しで指定したコントロールがフォーカスを受け取る。</span><span class="sxs-lookup"><span data-stu-id="ca198-926">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsPartialRendering">
      <MemberSignature Language="C#" Value="public bool SupportsPartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-927">クライアントが部分ページ レンダリングをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca198-927">Gets a value that indicates whether the client supports partial-page rendering.</span></span></summary>
        <value><span data-ttu-id="ca198-928">クライアントが部分ページ レンダリングをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-928"><see langword="true" /> if the client supports partial-page rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca198-929">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca198-929">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-930">場合、<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>プロパティに設定されて`false`、<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-930">If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="ca198-931">部分ページ レンダリングがサポートされているかどうかを決定する既定のチェックを返します`true`次の条件が true の場合。</span><span class="sxs-lookup"><span data-stu-id="ca198-931">The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="ca198-932"><xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A>プロパティ値が 1.0 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-932">The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="ca198-933"><xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>プロパティ値が 1.0 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca198-933">The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="ca198-934"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>にプロパティ値を設定する必要があります`true`します。</span><span class="sxs-lookup"><span data-stu-id="ca198-934">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`.</span></span>  
  
 <span data-ttu-id="ca198-935">ときに、<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>プロパティが明示的に設定されている、これらのチェックは使用されません。</span><span class="sxs-lookup"><span data-stu-id="ca198-935">When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.</span></span>  
  
 <span data-ttu-id="ca198-936">コントロールの開発者が使用する必要があります、<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>部分ページ レンダリングがサポートするかどうかを決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca198-936">Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca198-937"><see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> プロパティは <see langword="false" /> であり、<see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> プロパティは <see langword="true" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca198-937">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is <see langword="false" /> and the <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set to <see langword="true" />.</span></span>  
  
<span data-ttu-id="ca198-938">または</span><span class="sxs-lookup"><span data-stu-id="ca198-938">-or-</span></span> 
<span data-ttu-id="ca198-939"><see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> イベントの後に <see cref="E:System.Web.UI.Control.Init" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="ca198-939">The <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set after the <see cref="E:System.Web.UI.Control.Init" /> event.</span></span></exception>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey"><span data-ttu-id="ca198-940">コントロールのキー識別子。</span><span class="sxs-lookup"><span data-stu-id="ca198-940">The key-identifier for the control.</span></span></param>
        <param name="postCollection"><span data-ttu-id="ca198-941">受信するすべてのポスト データのコレクション。</span><span class="sxs-lookup"><span data-stu-id="ca198-941">A collection of all incoming post data.</span></span></param>
        <summary><span data-ttu-id="ca198-942">このメンバーの説明については、<see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ca198-942">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</span></span></summary>
        <returns><span data-ttu-id="ca198-943">ポストバックの結果、<see cref="T:System.Web.UI.ScriptManager" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-943"><see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-944">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ca198-944">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ca198-945">これは、<xref:System.Web.UI.ScriptManager> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-945">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca198-946">このメンバーの説明については、<see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ca198-946">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-947">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ca198-947">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ca198-948">これは、<xref:System.Web.UI.ScriptManager> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca198-948">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="ca198-949">Web ページの履歴状態を表すキーと値のペアが含まれる文字列。</span><span class="sxs-lookup"><span data-stu-id="ca198-949">A string of key/value pairs that represent the history state of the Web page.</span></span></param>
        <summary><span data-ttu-id="ca198-950"><see cref="T:System.Web.UI.ScriptManager" /> コントロールでポストバック イベントの処理と Web ページの履歴状態の読み込みができるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-950">Enables the <see cref="T:System.Web.UI.ScriptManager" /> control to process a postback event and load the history state of the Web page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.IsSecureConnection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IScriptManager.IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSecureConnection As Boolean Implements IScriptManager.IsSecureConnection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IScriptManager::IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsSecureConnection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue) = System::Web::UI::IScriptManager::RegisterArrayDeclaration;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="arrayName">To be added.</param>
        <param name="arrayValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterClientScriptBlock;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url) = System::Web::UI::IScriptManager::RegisterClientScriptInclude;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName) = System::Web::UI::IScriptManager::RegisterClientScriptResource;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterDispose">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript) = System::Web::UI::IScriptManager::RegisterDispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="disposeScript">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode) = System::Web::UI::IScriptManager::RegisterExpandoAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="controlId">To be added.</param>
        <param name="attributeName">To be added.</param>
        <param name="attributeValue">To be added.</param>
        <param name="encode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterHiddenField">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldValue) = System::Web::UI::IScriptManager::RegisterHiddenField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="hiddenFieldName">To be added.</param>
        <param name="hiddenFieldValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script) = System::Web::UI::IScriptManager::RegisterOnSubmitStatement;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterPostBackControl">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterPostBackControl(System::Web::UI::Control ^ control) = System::Web::UI::IScriptManager::RegisterPostBackControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterStartupScript">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterStartupScript;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.SetFocusInternal">
      <MemberSignature Language="C#" Value="void IScriptManager.SetFocusInternal (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.SetFocusInternal(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#SetFocusInternal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetFocusInternal (clientID As String) Implements IScriptManager.SetFocusInternal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.SetFocusInternal(System::String ^ clientID) = System::Web::UI::IScriptManager::SetFocusInternal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.SetFocusInternal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.ScriptManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca198-951">基本 <see cref="T:System.Web.UI.Control" /> クラスから継承される <see cref="P:System.Web.UI.Control.Visible" /> プロパティをオーバーライドして、この値が設定されないようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-951">Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property that is inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</span></span></summary>
        <value><span data-ttu-id="ca198-952">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ca198-952"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca198-953"><xref:System.Web.UI.Control.Visible%2A>プロパティでオーバーライドされて、<xref:System.Web.UI.ScriptManager>クラスがこの値が設定されないようにします。</span><span class="sxs-lookup"><span data-stu-id="ca198-953">The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value.</span></span> <span data-ttu-id="ca198-954">A<xref:System.NotImplementedException>エラーは、このプロパティに値が割り当てられている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ca198-954">A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ca198-955">値が <see cref="P:System.Web.UI.ScriptManager.Visible" /> プロパティに代入されます。</span><span class="sxs-lookup"><span data-stu-id="ca198-955">A value is assigned to the <see cref="P:System.Web.UI.ScriptManager.Visible" /> property.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>