<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDbTransaction.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cb2cb004bd6b47295425233d86dd6f6146f10339.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb2cb004bd6b47295425233d86dd6f6146f10339</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDbTransaction">
          <source>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated">データ ソースで実行されるトランザクションを表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph>インターフェイスにより、データ ソースで実行するトランザクションを表すトランザクション クラスの実装、継承したクラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>For more information about Transaction classes, see <bpt id="p1">[</bpt>Transactions and Concurrency<ept id="p1">](~/docs/framework/data/adonet/transactions-and-concurrency.md)</ept>.</source>
          <target state="translated">トランザクション クラスの詳細については、次を参照してください。<bpt id="p1">[</bpt>トランザクションと同時実行<ept id="p1">](~/docs/framework/data/adonet/transactions-and-concurrency.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDbTransaction&gt;</ph>.</source>
          <target state="translated">アプリケーションがのインスタンスを作成していない、<ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph>インターフェイスを直接が継承するクラスのインスタンスを作成、<ph id="ph2">&lt;xref:System.Data.IDbTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">継承するクラス<ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph>継承されたメンバーを実装し、通常プロバイダー固有の機能を追加するその他のメンバーを定義する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> method.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Data.IDbTransaction&gt;</ph>インターフェイスを定義、<ph id="ph2">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbTransaction&gt;</ph> class inherits this property, and also defines the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbTransaction.Begin%2A&gt;</ph> method.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbTransaction&gt;</ph>クラスは、このプロパティを継承しも定義、<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbTransaction.Begin%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>The following example creates instances of the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例は、派生クラスのインスタンスを作成<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> Transaction where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">.NET Framework データ プロバイダー間の整合性を高める形式で継承するクラスの名前を<ph id="ph1">&lt;paramref name="Prv" /&gt;</ph>トランザクション場所<ph id="ph2">&lt;paramref name="Prv" /&gt;</ph>は、特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDbTransaction">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;paramref name="Sql" /&gt;</ph>のプレフィックス、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>クラス内で、<ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Commit">
          <source>Commits the database transaction.</source>
          <target state="translated">データベース トランザクションをコミットします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Commit">
          <source>The following example creates instances of the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例は、派生クラスのインスタンスを作成<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Commit">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Commit">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">トランザクションをコミットしようとしてエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Commit">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">トランザクションは既にコミットまたはロールバックされています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Commit">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Commit">
          <source>The connection is broken.</source>
          <target state="translated">接続が切れています。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Data.IDbTransaction.Connection">
          <source>Specifies the Connection object to associate with the transaction.</source>
          <target state="translated">トランザクションに関連付けられる Connection オブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.Connection">
          <source>The Connection object to associate with the transaction.</source>
          <target state="translated">トランザクションに関連付けられる Connection オブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.Connection">
          <source>A single application may have multiple database connections, each with zero or more transactions.</source>
          <target state="translated">1 つのアプリケーションでは、0 個以上のトランザクションで複数のデータベース接続があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.Connection">
          <source>This property enables you to determine the connection object associated with a particular transaction.</source>
          <target state="translated">このプロパティでは、特定のトランザクションに関連付けられている接続オブジェクトを確認することができます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Data.IDbTransaction.IsolationLevel">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated">このトランザクションの <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> を指定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.IsolationLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated">このトランザクションの <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.IsolationLevel">
          <source>The default is <ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.IsolationLevel">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">並列トランザクションはサポートされていません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDbTransaction.IsolationLevel">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> applies to the entire transaction.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph>トランザクション全体に適用されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Rollback">
          <source>Rolls back a transaction from a pending state.</source>
          <target state="translated">トランザクションを保留状態からロールバックします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Rollback">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> is called).</source>
          <target state="translated">トランザクションのみロールバック可能を保留状態から (後<ph id="ph1">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph>が呼び出されると、その前に<ph id="ph2">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph>と呼びます)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Rollback">
          <source>The following example creates instances of the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例は、派生クラスのインスタンスを作成<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Rollback">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Rollback">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">トランザクションをコミットしようとしてエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Rollback">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">トランザクションは既にコミットまたはロールバックされています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Rollback">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.IDbTransaction.Rollback">
          <source>The connection is broken.</source>
          <target state="translated">接続が切れています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDbTransaction.Rollback">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.IDbTransaction.Rollback" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see langword="Rollback" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Data.IDbTransaction.Rollback" /&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;see langword="Rollback" /&gt;</ph>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>