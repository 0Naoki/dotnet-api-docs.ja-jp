<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36304703f4c15ef5a47369ecb9a8b7f8176c9cab" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367215" /></Metadata><TypeSignature Language="C#" Value="public interface IDbTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbTransaction implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbTransaction : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbTransaction = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6a9ac-101">データ ソースで実行されるトランザクションを表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-101">Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a9ac-102"><xref:System.Data.IDbTransaction>インターフェイスを使用すると、継承クラスは、データソースで実行されるトランザクションを表すトランザクションクラスを実装できます。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-102">The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.</span></span> <span data-ttu-id="6a9ac-103">トランザクションクラスの詳細については、「[トランザクションと同時実行](~/docs/framework/data/adonet/transactions-and-concurrency.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-103">For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).</span></span>  
  
 <span data-ttu-id="6a9ac-104">アプリケーションは、 <xref:System.Data.IDbTransaction>インターフェイスのインスタンスを直接作成するのではなく、を継承<xref:System.Data.IDbTransaction>するクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-104">An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.</span></span>  
  
 <span data-ttu-id="6a9ac-105">継承<xref:System.Data.IDbTransaction>するクラスは、継承されたメンバーを実装する必要があり、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-105">Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="6a9ac-106">たとえば、 <xref:System.Data.IDbTransaction>インターフェイスによってメソッド<xref:System.Data.IDbTransaction.Commit%2A>が定義されます。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-106">For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method.</span></span> <span data-ttu-id="6a9ac-107">次に、クラス<xref:System.Data.OleDb.OleDbTransaction>はこのプロパティを継承し、 <xref:System.Data.OleDb.OleDbTransaction.Begin%2A>メソッドも定義します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-107">In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a9ac-108">次の例では、 <xref:System.Data.SqlClient.SqlConnection>派生クラスのインスタンスと<xref:System.Data.SqlClient.SqlTransaction>を作成します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="6a9ac-109">また、、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>の各メソッドの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="6a9ac-110">.NET Framework データプロバイダー間の一貫性を高めるには、フォーム<paramref name="Prv" />トランザクションに継承クラスの名前を付けます。ここ<paramref name="Prv" />で、は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された uniform prefix です。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-110">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Transaction where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="6a9ac-111">たとえば、 <paramref name="Sql" />は<see langword="System.Data.SqlClient" />名前空間の<see cref="T:System.Data.SqlClient.SqlTransaction" />クラスのプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-111">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlTransaction" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="abstract member Commit : unit -&gt; unit" Usage="iDbTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a9ac-112">データベース トランザクションをコミットします。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-112">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a9ac-113">次の例では、派生クラス<xref:System.Data.SqlClient.SqlConnection>のインスタンス<xref:System.Data.SqlClient.SqlTransaction>とを作成します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-113">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="6a9ac-114">また、、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>の各メソッドの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-114">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="6a9ac-115">トランザクションをコミットしようとしてエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-115">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6a9ac-116">トランザクションは既にコミットまたはロールバックされています。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-116">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="6a9ac-117">- または -</span><span class="sxs-lookup"><span data-stu-id="6a9ac-117">-or-</span></span>  
  
 <span data-ttu-id="6a9ac-118">接続が切れています。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-118">The connection is broken.</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection" Usage="System.Data.IDbTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a9ac-119">トランザクションに関連付けられる Connection オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-119">Specifies the Connection object to associate with the transaction.</span></span></summary>
        <value><span data-ttu-id="6a9ac-120">トランザクションに関連付けられる Connection オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-120">The Connection object to associate with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a9ac-121">1つのアプリケーションに複数のデータベース接続があり、それぞれが0個以上のトランザクションを持つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-121">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="6a9ac-122">このプロパティを使用すると、特定のトランザクションに関連付けられている接続オブジェクトを特定できます。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-122">This property enables you to determine the connection object associated with a particular transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.IDbTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a9ac-123">このトランザクションの <see cref="T:System.Data.IsolationLevel" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-123">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="6a9ac-124">このトランザクションの <see cref="T:System.Data.IsolationLevel" />。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-124">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="6a9ac-125">既定値は、<see langword="ReadCommitted" /> です。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-125">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a9ac-126">並列トランザクションはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-126">Parallel transactions are not supported.</span></span> <span data-ttu-id="6a9ac-127">したがって、 <xref:System.Data.IsolationLevel>はトランザクション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-127">Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback();" />
      <MemberSignature Language="F#" Value="abstract member Rollback : unit -&gt; unit" Usage="iDbTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a9ac-128">トランザクションを保留状態からロールバックします。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-128">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a9ac-129">トランザクションは、保留状態からのみロールバックできます (が<xref:System.Data.IDbConnection.BeginTransaction%2A>呼び出された後、が<xref:System.Data.IDbTransaction.Commit%2A>呼び出される前)。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-129">The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a9ac-130">次の例では、派生クラス<xref:System.Data.SqlClient.SqlConnection>のインスタンス<xref:System.Data.SqlClient.SqlTransaction>とを作成します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-130">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="6a9ac-131">また、、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>の各メソッドの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-131">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="6a9ac-132">トランザクションをコミットしようとしてエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-132">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6a9ac-133">トランザクションは既にコミットまたはロールバックされています。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-133">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="6a9ac-134">- または -</span><span class="sxs-lookup"><span data-stu-id="6a9ac-134">-or-</span></span>  
  
 <span data-ttu-id="6a9ac-135">接続が切れています。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-135">The connection is broken.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="6a9ac-136">派生クラス<see cref="M:System.Data.IDbTransaction.Rollback" />でをオーバーライドする場合は、必ず基底クラスの<see langword="Rollback" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6a9ac-136">When overriding <see cref="M:System.Data.IDbTransaction.Rollback" /> in a derived class, be sure to call the base class's <see langword="Rollback" /> method.</span></span></para></block>
        <altmember cref="M:System.Data.IDbTransaction.Commit" />
        <altmember cref="M:System.Data.IDbConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>
