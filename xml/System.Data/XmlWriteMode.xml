<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlWriteMode.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac560d3cc0a3e454dc66f88de7acce600d501c04f66.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60d3cc0a3e454dc66f88de7acce600d501c04f66</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.XmlWriteMode">
          <source>Specifies how to write XML data and a relational schema from a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">XML データとリレーショナル スキーマを <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> から書き込む方法を指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.XmlWriteMode">
          <source>Use the members of this enumeration when setting the <ph id="ph1">`WriteMode`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">設定する場合は、この列挙体のメンバーを使用して、<ph id="ph1">`WriteMode`</ph>のパラメーター、<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.DiffGram">
          <source>Writes the entire <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> as a DiffGram, including original and current values.</source>
          <target state="translated">元の値と現在の値を含め、<ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 全体を DiffGram として書き込みます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.DiffGram">
          <source>To generate a DiffGram containing only changed values, call <ph id="ph1">&lt;see cref="M:System.Data.DataSet.GetChanges" /&gt;</ph>, and then call <ph id="ph2">&lt;see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /&gt;</ph> as a DiffGram on the returned <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">変更された値だけを格納する DiffGram を生成するには、<ph id="ph1">&lt;see cref="M:System.Data.DataSet.GetChanges" /&gt;</ph> を呼び出し、返された <ph id="ph2">&lt;see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /&gt;</ph> で <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> を DiffGram として呼び出します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.IgnoreSchema">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> as XML data, without an XSD schema.</source>
          <target state="translated">XSD スキーマを使用せずに <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> の現在の内容を XML データとして書き込みます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.IgnoreSchema">
          <source>If no data is loaded into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, nothing is written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> にデータが書き込まれていない場合は、何も書き込まれません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.WriteSchema">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> as XML data with the relational structure as inline XSD schema.</source>
          <target state="translated">リレーショナル構造をインライン XSD スキーマとして使用して、<ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> の現在の内容を XML データとして書き込みます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.WriteSchema">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has only a schema with no data, only the inline schema is written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> がスキーマだけを持ち、データを持っていない場合は、インライン スキーマだけが書き込まれます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Data.XmlWriteMode.WriteSchema">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> does not have a current schema, nothing is written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> が現在のスキーマを持っていない場合は、何も書き込まれません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>