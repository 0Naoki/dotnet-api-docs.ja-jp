<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd4c1de3b2e316d131a23b10eb243603eaec8b9f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39746006" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a6283-101">
        <see cref="T:System.Data.DataTable" /> の列のスキーマを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6283-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-102"><xref:System.Data.DataColumn>のスキーマを作成するための基本的なビルド ブロックには、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a6283-103">1 つまたは複数を追加して、スキーマを構築する<xref:System.Data.DataColumn>オブジェクトを<xref:System.Data.DataColumnCollection>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="a6283-104">詳細については、次を参照してください。 [DataTable に列の追加](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)します。</span><span class="sxs-lookup"><span data-stu-id="a6283-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="a6283-105">各<xref:System.Data.DataColumn>が、<xref:System.Data.DataColumn.DataType%2A>データの種類を決定するプロパティ、<xref:System.Data.DataColumn>が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a6283-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="a6283-106">たとえば、整数、または文字列、または 10 進数に、データ型を制限できます。</span><span class="sxs-lookup"><span data-stu-id="a6283-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="a6283-107">に格納されているデータ、<xref:System.Data.DataTable>マージは通常、元のデータ ソースにデータ ソース内にデータ型に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="a6283-108">詳細については、次を参照してください。 [ADO.NET でのデータ型マッピング](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)します。</span><span class="sxs-lookup"><span data-stu-id="a6283-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="a6283-109">などのプロパティ<xref:System.Data.DataColumn.AllowDBNull%2A>、 <xref:System.Data.DataColumn.Unique%2A>、および<xref:System.Data.DataColumn.ReadOnly%2A>エントリとのデータの整合性を保証するデータの更新に関する制限事項を配置します。</span><span class="sxs-lookup"><span data-stu-id="a6283-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="a6283-110">使用することも、 <xref:System.Data.DataColumn.AutoIncrement%2A>、 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および<xref:System.Data.DataColumn.AutoIncrementStep%2A>プロパティ データの自動生成を制御します。</span><span class="sxs-lookup"><span data-stu-id="a6283-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="a6283-111">詳細については<xref:System.Data.DataColumn.AutoIncrement%2A>列を参照してください[AutoIncrement 列の作成](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)です。</span><span class="sxs-lookup"><span data-stu-id="a6283-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="a6283-112">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="a6283-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="a6283-113">値を確認することもできます、<xref:System.Data.DataColumn>が一意で、作成、<xref:System.Data.UniqueConstraint>に追加することと、<xref:System.Data.ConstraintCollection>の<xref:System.Data.DataTable>を<xref:System.Data.DataColumn>が属しています。</span><span class="sxs-lookup"><span data-stu-id="a6283-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="a6283-114">詳細については、次を参照してください。 [DataTable の制約](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)します。</span><span class="sxs-lookup"><span data-stu-id="a6283-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="a6283-115">間にリレーションシップを作成する<xref:System.Data.DataColumn>オブジェクトは、作成、<xref:System.Data.DataRelation>し、オブジェクトに追加、<xref:System.Data.DataRelationCollection>の<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="a6283-116">使用することができます、<xref:System.Data.DataColumn.Expression%2A>のプロパティ、<xref:System.Data.DataColumn>オブジェクトを列の値を計算または集計列を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="a6283-117">詳細については、次を参照してください。[式列を作成する](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)します。</span><span class="sxs-lookup"><span data-stu-id="a6283-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-118">次の例では、作成、<xref:System.Data.DataTable>各社と協力して<xref:System.Data.DataColumn>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a6283-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a6283-119">この型は、マルチ スレッドの読み取り操作も安全です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6283-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="a6283-120">書き込み操作を同期する必要があります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6283-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-121">
            <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6283-122">
            <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-123">作成すると、<xref:System.Data.DataColumn>オブジェクトは既定値を持たない<xref:System.Data.DataColumn.ColumnName%2A>または<xref:System.Data.DataColumn.Caption%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="a6283-124">追加すると、<xref:System.Data.DataColumnCollection>に名前が割り当てられていない場合、既定の名前 ("Column1"、"Column2") が生成されます、<xref:System.Data.DataColumn.ColumnName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-125">次の例では、作成、新しい<xref:System.Data.DataColumn>、さまざまなプロパティを設定し、それを追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a6283-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="a6283-126">作成する列の名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="a6283-127">
            <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-128">指定した列名を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-129">既定では、列に固有の名前になります、<xref:System.Data.DataColumn.Caption%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="a6283-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-130">次の例では、作成、新しい<xref:System.Data.DataColumn>と指定した<xref:System.Data.DataColumn.ColumnName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="a6283-131">作成する列の名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="a6283-132">
            <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="a6283-133">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-134">指定した列名とデータ型を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-135">次の例では、作成、新しい<xref:System.Data.DataColumn>と指定した<xref:System.Data.DataColumn.ColumnName%2A>と<xref:System.Data.DataColumn.DataType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6283-136">
            <paramref name="dataType" /> が指定されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="a6283-137">作成する列の名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="a6283-138">
            <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="a6283-139">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="a6283-140">この列の作成に使用される式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="a6283-141">詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-142">指定した名前、データ型、および式を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-143">次の例では、計算列を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6283-144">
            <paramref name="dataType" /> が指定されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="a6283-145">作成する列の名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="a6283-146">
            <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="a6283-147">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="a6283-148">この列の作成に使用される式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="a6283-149">詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6283-150">
            <see cref="T:System.Data.MappingType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-151">指定した名前、データ型、式、およびこの列が属性かどうかを決定する値を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-152">`type`引数セット、<xref:System.Data.DataColumn.ColumnMapping%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="a6283-153">プロパティを指定する方法、<xref:System.Data.DataColumn>とマップされている、 <xref:System.Data.DataSet> XML ドキュメントに変換されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="a6283-154">たとえば、"fName、"という列の値が含まれていますが、"Bob"場合と`type`に設定されている`MappingType.Attribute`、XML 要素に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="a6283-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="a6283-155">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="a6283-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="a6283-156">列を要素または属性にマップする方法の詳細については、次を参照してください。、<xref:System.Data.DataColumn.ColumnMapping%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-157">次の例では、計算列を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6283-158">
            <paramref name="dataType" /> が指定されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAllowNullDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-159">このテーブルに属する行のこの列に null 値を格納できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-160">null 値を格納できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6283-161">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-162">次の例では、作成、新しい<xref:System.Data.DataColumn>設定とその<xref:System.Data.DataColumn.AllowDBNull%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-163">このテーブルに追加される新しい行でこの列の値を自動的にインクリメントするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-164">この列の値を自動的にインクリメントする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6283-165">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-166">この列の型でない場合、Int16、Int32、または Int64 このプロパティが設定されている場合、<xref:System.Data.DataColumn.DataType%2A>プロパティは Int32 に変換します。</span><span class="sxs-lookup"><span data-stu-id="a6283-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="a6283-167">これが計算列の場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="a6283-168"><xref:System.Data.DataColumn.Expression%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="a6283-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="a6283-169">インクリメントされた値は、列のコレクションに追加されたときに、この列の行の値が既定値と等しい場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="a6283-170">使用して新しい行を作成することができます、<xref:System.Data.DataRow.ItemArray%2A>のプロパティ、<xref:System.Data.DataRow>クラスし、値の配列を渡します。</span><span class="sxs-lookup"><span data-stu-id="a6283-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="a6283-171">これは、潜在的な問題の列に対してその<xref:System.Data.DataColumn.AutoIncrement%2A>に設定`true`その値が自動的に生成されるため、します。</span><span class="sxs-lookup"><span data-stu-id="a6283-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="a6283-172">使用する、<xref:System.Data.DataRow.ItemArray%2A>プロパティ、配置`null`で配列内の列の位置。</span><span class="sxs-lookup"><span data-stu-id="a6283-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="a6283-173">詳細については、次を参照してください。、<xref:System.Data.DataRow.ItemArray%2A>のプロパティ、<xref:System.Data.DataRow>クラス。</span><span class="sxs-lookup"><span data-stu-id="a6283-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="a6283-174">列の型がある場合<xref:System.Data.SqlTypes.SqlInt16>または<xref:System.Data.SqlTypes.SqlInt32>、<xref:System.Data.DataColumn.AutoIncrement%2A>は機能しません。</span><span class="sxs-lookup"><span data-stu-id="a6283-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="a6283-175">代わりに、Int16 または int32 型を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6283-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="a6283-176">列の型がある場合<xref:System.Data.SqlTypes.SqlInt64>または<xref:System.Data.SqlTypes.SqlDecimal>、<xref:System.Data.DataColumn.AutoIncrement%2A>は部分的にのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="a6283-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="a6283-177">Int64 または 10 進数を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="a6283-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="a6283-178">ときに、<xref:System.Data.DataColumn.AutoIncrementStep%2A>値はオーバーフロー チェックが抑制されて現在の値に追加します。</span><span class="sxs-lookup"><span data-stu-id="a6283-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-179">次の例のセット、 <xref:System.Data.DataColumn.AutoIncrement%2A>、 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および<xref:System.Data.DataColumn.AutoIncrementStep%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-180">この列は計算列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementSeedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-181">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列の開始値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="a6283-182">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-183">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> 機能の開始値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-184">次の例のセット、 <xref:System.Data.DataColumn.AutoIncrement%2A>、 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および<xref:System.Data.DataColumn.AutoIncrementStep%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementStepDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-185">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列で使用するインクリメント値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-186">列の値を自動的にインクリメントする数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="a6283-187">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-188">次の例のセット、 <xref:System.Data.DataColumn.AutoIncrement%2A>、 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>、および<xref:System.Data.DataColumn.AutoIncrementStep%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-189">値が 0 に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnCaptionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-190">列のキャプションを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-191">列のキャプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="a6283-192">キャプションが設定されていない場合は、<see cref="P:System.Data.DataColumn.ColumnName" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-193">使用することができます、<xref:System.Data.DataColumn.Caption%2A>の説明またはわかりやすい名前を表示するプロパティを<xref:System.Data.DataColumn>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-194">次の例では、作成、新しい<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a6283-195">これは、後、3 つ追加<xref:System.Data.DataColumn>オブジェクトを<xref:System.Data.DataColumnCollection>設定と、<xref:System.Data.DataColumn.Caption%2A>それぞれのプロパティ<xref:System.Data.DataColumn>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6283-196">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6283-197">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMappingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-198">列の <see cref="T:System.Data.MappingType" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-199">
            <see cref="T:System.Data.MappingType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-200"><xref:System.Data.DataColumn.ColumnMapping%2A>プロパティを決定する方法、<xref:System.Data.DataColumn>とマップされている、<xref:System.Data.DataSet>を使用して XML ドキュメントとして保存、<xref:System.Data.DataSet.WriteXml%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="a6283-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a6283-201">たとえば場合、 <xref:System.Data.DataColumn> "customerID"という名前とその<xref:System.Data.DataColumn.ColumnMapping%2A>プロパティに設定されて`MappingType.Element`列の値は、次の XML を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="a6283-202">ただし、同じ列にマップされる場合`MappingType.Attribute`、次の XML が生成されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="a6283-203">使用、<xref:System.Data.DataColumn.%23ctor%2A>コンス トラクターを含む、`type`引数をすべての方法を<xref:System.Data.DataColumn>とマップされているその<xref:System.Data.DataSet>XML ドキュメントに変換されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="a6283-204"><xref:System.Data.DataColumn.ColumnMapping%2A>プロパティ コンス トラクターの引数に対応して`type`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-205">次の例のセット、<xref:System.Data.DataColumn.ColumnMapping%2A>のプロパティを新しい入力<xref:System.Data.DataColumn>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnColumnNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-206">
            <see cref="T:System.Data.DataColumnCollection" /> 内の列名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-207">列の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-208">ときに、<xref:System.Data.DataColumn>は no が作成されると、<xref:System.Data.DataColumn.ColumnName%2A>値。</span><span class="sxs-lookup"><span data-stu-id="a6283-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="a6283-209">ただし、ときに、<xref:System.Data.DataColumn>に追加されます、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>オブジェクト、既定の名前 ("Column1"、"Column2") が与えられます。</span><span class="sxs-lookup"><span data-stu-id="a6283-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="a6283-210">既定で、<xref:System.Data.DataColumn.Caption%2A>値に設定されて、<xref:System.Data.DataColumn.ColumnName%2A>値。</span><span class="sxs-lookup"><span data-stu-id="a6283-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-211">次の例では、取得、<xref:System.Data.DataColumn.ColumnName%2A>内の各テーブルの各列に対して、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="a6283-212">作成する方法も示します、<xref:System.Data.DataColumn>を新しい<xref:System.Data.DataColumn.ColumnName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-213">このプロパティは <see langword="null" /> または空の文字列に設定され、列がコレクションに属しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="a6283-214">同じ名前の列がコレクション内に既に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="a6283-215">名前の比較では、大文字と小文字が区別されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTypeDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-216">列に格納されているデータの型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-217">列のデータ型を表す <see cref="T:System.Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-218">設定、<xref:System.Data.DataColumn.DataType%2A>値が適切な作成を保証して、データ ソースのデータの更新に非常に重要です。</span><span class="sxs-lookup"><span data-stu-id="a6283-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="a6283-219"><xref:System.Data.DataColumn.DataType%2A>プロパティは、次の .NET Framework の基本データ型をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="a6283-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="a6283-220">次の配列の種類。</span><span class="sxs-lookup"><span data-stu-id="a6283-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="a6283-221">データを格納する開始が、列の後にこのプロパティを変更したときに、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="a6283-222">場合<xref:System.Data.DataColumn.AutoIncrement%2A>に設定されている`true`設定する前に、<xref:System.Data.DataColumn.DataType%2A>は整数型以外のすべての種類を設定しようと、プロパティ、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6283-223">データ型の列`Byte[]`のため、参照データ型が基本の .NET Framework データ型とは異なり、場合によっては、特別な処理を必要とします。</span><span class="sxs-lookup"><span data-stu-id="a6283-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="a6283-224">列データ型の場合`Byte[]`として使用されます、 <xref:System.Data.DataTable.PrimaryKey%2A>、または、<xref:System.Data.DataView.Sort%2A>または<xref:System.Data.DataView.RowFilter%2A>のキーを<xref:System.Data.DataView>、列の値に変更する必要がありますの割り当てが含まれる、`Byte[]`列の値を個別にインスタンス化された`Byte[]`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a6283-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="a6283-225">並べ替え、フィルター、および主キー操作で使用される内部のインデックスの更新を開始するには、この割り当てが必要です。</span><span class="sxs-lookup"><span data-stu-id="a6283-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="a6283-226">この例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="a6283-226">This is illustrated by the following example:</span></span>  
  
```csharp  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="a6283-227">データ型の基本の .NET Framework データ型以外の場合、列を定義することはできますが、 `Byte[]`、このような列は、次の使用量制限の対象のユーザー定義の型として扱われます。</span><span class="sxs-lookup"><span data-stu-id="a6283-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="a6283-228">(ユーザー定義型の詳細については、次を参照してください[ユーザーの種類の作成と](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)。)。</span><span class="sxs-lookup"><span data-stu-id="a6283-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="a6283-229">列がの一部にすることはできません、<xref:System.Data.DataView.RowFilter%2A>または<xref:System.Data.DataTable.Select%2A>式。</span><span class="sxs-lookup"><span data-stu-id="a6283-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="a6283-230">列として使用する場合、 <xref:System.Data.DataTable.PrimaryKey%2A>、または、<xref:System.Data.DataView.Sort%2A>または、 <xref:System.Data.DataView>、変更できないフィールドとして扱う必要があります。 が、テーブルに追加されたら、列のデータは変更できません。</span><span class="sxs-lookup"><span data-stu-id="a6283-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="a6283-231">その<xref:System.Data.DataColumn.ColumnMapping%2A>にしか設定`MappingType.Element`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="a6283-232">クラスで実装する必要があります、列のデータ型をマークする必要があります、 <xref:System.SerializableAttribute>、実装のために必要な場合と、<xref:System.Runtime.Serialization.ISerializable>または<xref:System.Xml.Serialization.IXmlSerializable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="a6283-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="a6283-233">変更の追跡のサポートは制限されています。</span><span class="sxs-lookup"><span data-stu-id="a6283-233">Support for change tracking is limited.</span></span> <span data-ttu-id="a6283-234">利用する、<xref:System.Data.DataTable>クラスの変更の追跡メカニズム、列のデータ型を実装するクラスを実装する必要がありますか、<xref:System.ComponentModel.IChangeTracking>インターフェイス、または通知する役割を引き継ぎ、<xref:System.Data.DataRow>列の値がされている場合変更されると、いずれかを呼び出した<xref:System.Data.DataRow.SetModified%2A>行または列の値オブジェクトを個別にインスタンス化された列の値オブジェクトに割り当てることで。</span><span class="sxs-lookup"><span data-stu-id="a6283-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-235">次の例をいくつかのデータ型の列の追加、<xref:System.Data.DataTable>テーブルを 1 つの行に追加します。</span><span class="sxs-lookup"><span data-stu-id="a6283-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-236">この列には既にデータが格納されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-237">列の <see langword="DateTimeMode" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-238">指定した列の <see cref="T:System.Data.DataSetDateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-239"><xref:System.Data.DataColumn.DateTimeMode%2A>に行を追加した後に変更することはできません、<xref:System.Data.DataColumn>からの変更を除く<xref:System.Data.DataSetDateTime.Unspecified>と<xref:System.Data.DataSetDateTime.UnspecifiedLocal>またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="a6283-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="a6283-240">変更`UnspecifiedLocal`に`Unspecified`これら 2 つのオプションの違いはシリアル化中にのみ、記憶域には影響しません、その逆が許可されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDefaultValueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-241">新しい行を作成するときに使用されるこの列の既定値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-242">この列の <see cref="P:System.Data.DataColumn.DataType" /> に適切な値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-243">既定値は、列に自動的に割り当てられている値と、<xref:System.Data.DataRow>が作成されます (たとえば、日付と時刻を<xref:System.Data.DataRow>が作成されました。</span><span class="sxs-lookup"><span data-stu-id="a6283-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="a6283-244">ときに<xref:System.Data.DataColumn.AutoIncrement%2A>に設定されている場合は true、いてはならない既定値。</span><span class="sxs-lookup"><span data-stu-id="a6283-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="a6283-245">使用して新しい行を作成することができます、<xref:System.Data.DataRow.ItemArray%2A>のプロパティ、<xref:System.Data.DataRow>クラスと値の配列を渡します。</span><span class="sxs-lookup"><span data-stu-id="a6283-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="a6283-246">これは、その値が自動的に生成されるため、既定値は列の潜在的な問題です。</span><span class="sxs-lookup"><span data-stu-id="a6283-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="a6283-247">使用する、<xref:System.Data.DataRow.ItemArray%2A>プロパティでこのような列は、次のように配置します。`null`で配列内の列の位置。</span><span class="sxs-lookup"><span data-stu-id="a6283-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="a6283-248">詳細については、<xref:System.Data.DataRow.ItemArray%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a6283-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-249">次の例をいくつか作成<xref:System.Data.DataColumn>オブジェクト種類のデータ型があり、適切な設定を既定の各列の値。</span><span class="sxs-lookup"><span data-stu-id="a6283-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a6283-250">行を追加する場合、既定値はこの列のデータ型のインスタンスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-251">行のフィルター処理、列内の値の計算、または集約列の作成に使用する式を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-252">集約列内の値の計算または集約列の作成に使用する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="a6283-253">式の戻り型は列の <see cref="P:System.Data.DataColumn.DataType" /> によって決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-254">用途の 1 つ、<xref:System.Data.DataColumn.Expression%2A>プロパティは、計算列を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="a6283-255">たとえば、税の値を計算するには、単価は特定の地域の税率が乗算されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="a6283-256">税率に領域が異なるためにできなくなる; 列に単一の税率を格納すること代わりに、値は計算を使用して、<xref:System.Data.DataColumn.Expression%2A>プロパティは、次のセクションでは、Visual Basic コードで示すようにします。</span><span class="sxs-lookup"><span data-stu-id="a6283-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="a6283-257">DataSet1.Tables("Products") します。Columns("tax") します。式 ="UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="a6283-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="a6283-258">第 2 の用途では、集計列を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="a6283-259">計算値と同様に、集計操作を実行内の行の完全なセットに基づいて、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a6283-260">簡単な例では、セットで返される行の数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="a6283-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="a6283-261">これは、この Visual Basic コードに示すように、特定の販売員ごとに完了したトランザクションの数をカウントする方法です。</span><span class="sxs-lookup"><span data-stu-id="a6283-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```vb  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="a6283-262">式の構文</span><span class="sxs-lookup"><span data-stu-id="a6283-262">Expression Syntax</span></span>  
 <span data-ttu-id="a6283-263">式を作成するときに使用して、<xref:System.Data.DataColumn.ColumnName%2A>プロパティを列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a6283-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="a6283-264">たとえば場合、 <xref:System.Data.DataColumn.ColumnName%2A> 1 つの列は、"UnitPrice"と別の"Quantity"は、式は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="a6283-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="a6283-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="a6283-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6283-266">式の中で列を使用する場合は、その列に依存しているに式と言います。</span><span class="sxs-lookup"><span data-stu-id="a6283-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="a6283-267">依存列を変更したり削除したり、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="a6283-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="a6283-268">ここで無効な式の列にアクセスするときに、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a6283-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="a6283-269">フィルター式を作成するときに、単一引用符を含む文字列を囲みます。</span><span class="sxs-lookup"><span data-stu-id="a6283-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="a6283-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="a6283-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="a6283-271">列名は、任意の英数字以外の文字が含まれています、1 桁の数字で始まるまたはまたは次の予約語のいずれかに一致 (大文字小文字)、次の段落で説明されているように、特別な処理が必要です。</span><span class="sxs-lookup"><span data-stu-id="a6283-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="a6283-272">And</span><span class="sxs-lookup"><span data-stu-id="a6283-272">And</span></span>  
  
 <span data-ttu-id="a6283-273">間</span><span class="sxs-lookup"><span data-stu-id="a6283-273">Between</span></span>  
  
 <span data-ttu-id="a6283-274">子</span><span class="sxs-lookup"><span data-stu-id="a6283-274">Child</span></span>  
  
 <span data-ttu-id="a6283-275">False</span><span class="sxs-lookup"><span data-stu-id="a6283-275">False</span></span>  
  
 <span data-ttu-id="a6283-276">イン</span><span class="sxs-lookup"><span data-stu-id="a6283-276">In</span></span>  
  
 <span data-ttu-id="a6283-277">Is</span><span class="sxs-lookup"><span data-stu-id="a6283-277">Is</span></span>  
  
 <span data-ttu-id="a6283-278">Like</span><span class="sxs-lookup"><span data-stu-id="a6283-278">Like</span></span>  
  
 <span data-ttu-id="a6283-279">Not</span><span class="sxs-lookup"><span data-stu-id="a6283-279">Not</span></span>  
  
 <span data-ttu-id="a6283-280">Null</span><span class="sxs-lookup"><span data-stu-id="a6283-280">Null</span></span>  
  
 <span data-ttu-id="a6283-281">または</span><span class="sxs-lookup"><span data-stu-id="a6283-281">Or</span></span>  
  
 <span data-ttu-id="a6283-282">親</span><span class="sxs-lookup"><span data-stu-id="a6283-282">Parent</span></span>  
  
 <span data-ttu-id="a6283-283">True</span><span class="sxs-lookup"><span data-stu-id="a6283-283">True</span></span>  
  
 <span data-ttu-id="a6283-284">列名を上記の条件のいずれか満たしている場合、角かっこで囲む必要があります、または"'"(アクサン グラーブ) 引用符。</span><span class="sxs-lookup"><span data-stu-id="a6283-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="a6283-285">たとえば、式の中で「列 #」という名前の列を使用するは、"[列を使って作成]"。</span><span class="sxs-lookup"><span data-stu-id="a6283-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="a6283-286">合計 \* [列数]</span><span class="sxs-lookup"><span data-stu-id="a6283-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="a6283-287">または"\`列 #'"。</span><span class="sxs-lookup"><span data-stu-id="a6283-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="a6283-288">合計 \*\`列 #'</span><span class="sxs-lookup"><span data-stu-id="a6283-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="a6283-289">列名がし、角かっこで囲まれている場合は、']' と '\\' 文字 (がないその他の文字) では、円記号の前にエスケープする必要が ("\\") 文字。</span><span class="sxs-lookup"><span data-stu-id="a6283-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="a6283-290">列名がアクサン グラーブ文字で囲まれている場合に含めることはできません、アクサン グラーブ文字。</span><span class="sxs-lookup"><span data-stu-id="a6283-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="a6283-291">という名前の列など、"列の\\"書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="a6283-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="a6283-292">合計 \* [列 [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="a6283-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="a6283-293">または</span><span class="sxs-lookup"><span data-stu-id="a6283-293">or</span></span>  
  
 <span data-ttu-id="a6283-294">合計 \*\`列\\`</span><span class="sxs-lookup"><span data-stu-id="a6283-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="a6283-295">ユーザー定義の値</span><span class="sxs-lookup"><span data-stu-id="a6283-295">User-Defined Values</span></span>  
 <span data-ttu-id="a6283-296">ユーザー定義の値を式内に列の値と比較することができます。</span><span class="sxs-lookup"><span data-stu-id="a6283-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="a6283-297">文字列の値は、単一引用符で囲む必要があります (および、文字列値内の各単一引用符文字を別の単一引用符文字を付加することでエスケープする必要があります)。</span><span class="sxs-lookup"><span data-stu-id="a6283-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="a6283-298">日付の値は、シャープ記号 (#) またはデータ プロバイダーに基づく単一引用符 (') 内で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="a6283-299">10 進数と指数表記の数値の許容されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="a6283-300">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-300">For example:</span></span>  
  
 <span data-ttu-id="a6283-301">"FirstName ="John""</span><span class="sxs-lookup"><span data-stu-id="a6283-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="a6283-302">"価格 < 50.00 ="</span><span class="sxs-lookup"><span data-stu-id="a6283-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="a6283-303">"Birthdate < #1/31/82 #"</span><span class="sxs-lookup"><span data-stu-id="a6283-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="a6283-304">列挙値を格納する列で値を整数データ型にキャストします。</span><span class="sxs-lookup"><span data-stu-id="a6283-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="a6283-305">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-305">For example:</span></span>  
  
 <span data-ttu-id="a6283-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="a6283-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="a6283-307">リテラル式の解析</span><span class="sxs-lookup"><span data-stu-id="a6283-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="a6283-308">インバリアント カルチャのロケールでは、すべてのリテラル式を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="a6283-309">ときに`DataSet`を解析し、リテラル式を式には、変換、インバリアント カルチャを現在のカルチャではなく常に使用します。</span><span class="sxs-lookup"><span data-stu-id="a6283-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="a6283-310">値を囲む単一引用符がある場合、文字列リテラルが識別されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="a6283-311">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-311">For example:</span></span>  
  
 <span data-ttu-id="a6283-312">"John"</span><span class="sxs-lookup"><span data-stu-id="a6283-312">'John'</span></span>  
  
 <span data-ttu-id="a6283-313">`Boolean` リテラルには、true または false です。式で、引用符がないです。</span><span class="sxs-lookup"><span data-stu-id="a6283-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="a6283-314">`Integer` リテラル [+-]?[0-9] + として扱われます`System.Int32`、`System.Int64`または`System.Double`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="a6283-315">`System.Double` な数のサイズに応じて有効桁数が失われることができます。</span><span class="sxs-lookup"><span data-stu-id="a6283-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="a6283-316">たとえば、リテラルの数が、2147483650`DataSet`を数値として解析はまず、`Int32`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="a6283-317">数が大きすぎるために、この操作は成功しません。</span><span class="sxs-lookup"><span data-stu-id="a6283-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="a6283-318">ここで`DataSet`と数は、解析、 `Int64`、これは成功します。</span><span class="sxs-lookup"><span data-stu-id="a6283-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="a6283-319">リテラルは、Int64 の最大値より大きい数値が場合`DataSet`リテラルを使用して、解析`Double`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="a6283-320">4.42372E など、科学的表記法を使用して実際のリテラル-30 を使用して解析されます`System.Double`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="a6283-321">実数のリテラル、科学的表記法はなく、小数点の付いたとして扱われます`System.Decimal`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="a6283-322">数がによってサポートされる最大値または最小値を超えたかどうか`System.Decimal`、としては、解析結果を`System.Double`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="a6283-323">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-323">For example:</span></span>  
  
 <span data-ttu-id="a6283-324">変換される 142526.144524、`Decimal`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="a6283-325">345262.78036719560925667 として扱われます、`Double`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="a6283-326">演算子</span><span class="sxs-lookup"><span data-stu-id="a6283-326">Operators</span></span>  
 <span data-ttu-id="a6283-327">ブール型 AND、OR、および NOT 演算子を使用して連結が許可されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="a6283-328">句のグループ化するためにかっこを使用し、優先順位を強制できます。</span><span class="sxs-lookup"><span data-stu-id="a6283-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="a6283-329">AND 演算子では、その他の演算子に優先します。</span><span class="sxs-lookup"><span data-stu-id="a6283-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="a6283-330">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-330">For example:</span></span>  
  
 <span data-ttu-id="a6283-331">(LastName ="Smith"LastName = 'Jones')FirstName ="John"</span><span class="sxs-lookup"><span data-stu-id="a6283-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="a6283-332">比較式を作成するときに、次の演算子は使用できます。</span><span class="sxs-lookup"><span data-stu-id="a6283-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="a6283-333">IN</span><span class="sxs-lookup"><span data-stu-id="a6283-333">IN</span></span>  
  
 <span data-ttu-id="a6283-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="a6283-334">LIKE</span></span>  
  
 <span data-ttu-id="a6283-335">次の算術演算子は、式もサポートされます。</span><span class="sxs-lookup"><span data-stu-id="a6283-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="a6283-336">\+ (加算)</span><span class="sxs-lookup"><span data-stu-id="a6283-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="a6283-337">\- (減算)</span><span class="sxs-lookup"><span data-stu-id="a6283-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="a6283-338">\* (乗算)</span><span class="sxs-lookup"><span data-stu-id="a6283-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="a6283-339">/(除算)</span><span class="sxs-lookup"><span data-stu-id="a6283-339">/ (division)</span></span>  
  
 <span data-ttu-id="a6283-340">% (剰余)</span><span class="sxs-lookup"><span data-stu-id="a6283-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="a6283-341">文字列演算子</span><span class="sxs-lookup"><span data-stu-id="a6283-341">String Operators</span></span>  
 <span data-ttu-id="a6283-342">文字列を連結するには、使用、+ 文字。</span><span class="sxs-lookup"><span data-stu-id="a6283-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="a6283-343">値、<xref:System.Data.DataSet.CaseSensitive%2A>のプロパティ、<xref:System.Data.DataSet>クラスは、文字列比較は大文字小文字を区別するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a6283-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="a6283-344">ただし、その値を上書きできます、<xref:System.Data.DataTable.CaseSensitive%2A>のプロパティ、<xref:System.Data.DataTable>クラス。</span><span class="sxs-lookup"><span data-stu-id="a6283-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="a6283-345">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="a6283-345">Wildcard Characters</span></span>  
 <span data-ttu-id="a6283-346">両方の \* と % は、LIKE 比較でワイルドカード文字を区別しないで使用できます。</span><span class="sxs-lookup"><span data-stu-id="a6283-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="a6283-347">LIKE 句で文字列が含まれている場合、\* %、またはこれらの文字は、角かっこ () で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="a6283-348">角かっこが句である場合は、各角かっこ文字を (たとえば [] または []) を角かっこで囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="a6283-349">先頭と末尾のパターンでは、またはパターンでは、最後に、またはパターンの先頭に、ワイルドカードは許可されています。</span><span class="sxs-lookup"><span data-stu-id="a6283-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="a6283-350">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-350">For example:</span></span>  
  
 <span data-ttu-id="a6283-351">"ItemName のように ' * 製品\*'"</span><span class="sxs-lookup"><span data-stu-id="a6283-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="a6283-352">"ItemName LIKE '\*product'"</span><span class="sxs-lookup"><span data-stu-id="a6283-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="a6283-353">"ItemName LIKE 'product\*'"</span><span class="sxs-lookup"><span data-stu-id="a6283-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="a6283-354">文字列の途中では、ワイルドカード文字は使用できません。</span><span class="sxs-lookup"><span data-stu-id="a6283-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="a6283-355">たとえば、' te \* xt' は許可されていません。</span><span class="sxs-lookup"><span data-stu-id="a6283-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="a6283-356">親/子リレーションシップの参照</span><span class="sxs-lookup"><span data-stu-id="a6283-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="a6283-357">親テーブルで参照できる式で列の名前を付けます`Parent`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="a6283-358">たとえば、`Parent.Price`という名前の親テーブルの列を参照して`Price`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="a6283-359">子が 1 つ以上の親行を持っている場合は、Parent(RelationName) を使用します。ColumnName します。</span><span class="sxs-lookup"><span data-stu-id="a6283-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="a6283-360">たとえば、Parent(RelationName) です。価格は、リレーションシップを使用して価格をという名前の親テーブルの列を参照します。</span><span class="sxs-lookup"><span data-stu-id="a6283-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="a6283-361">子テーブル内の列で参照できる式で列の名前を付けます`Child`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="a6283-362">ただし、親子リレーションシップは、複数の行を返す可能性があります、ため、集計関数に子列への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="a6283-363">たとえば、`Sum(Child.Price)`という名前の列の合計を返します`Price`子テーブルにします。</span><span class="sxs-lookup"><span data-stu-id="a6283-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="a6283-364">構文は、テーブルの 1 つ以上の子の場合:`Child(RelationName)`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="a6283-365">という名前の 2 つの子テーブルが存在する場合の例の`Customers`と`Orders`、および<xref:System.Data.DataRelation>オブジェクトの名前は`Customers2Orders`参照は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="a6283-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="a6283-366">Avg(Child(Customers2Orders) します。数量)</span><span class="sxs-lookup"><span data-stu-id="a6283-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="a6283-367">集計</span><span class="sxs-lookup"><span data-stu-id="a6283-367">Aggregates</span></span>  
 <span data-ttu-id="a6283-368">次の集計の種類がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="a6283-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="a6283-369">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="a6283-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="a6283-370">Avg (平均)</span><span class="sxs-lookup"><span data-stu-id="a6283-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="a6283-371">Min (最小)</span><span class="sxs-lookup"><span data-stu-id="a6283-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="a6283-372">最大 (最大)</span><span class="sxs-lookup"><span data-stu-id="a6283-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="a6283-373">カウント (数)</span><span class="sxs-lookup"><span data-stu-id="a6283-373">Count (Count)</span></span>  
  
 <span data-ttu-id="a6283-374">StDev (統計的標準偏差)</span><span class="sxs-lookup"><span data-stu-id="a6283-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="a6283-375">Var (統計的分散)。</span><span class="sxs-lookup"><span data-stu-id="a6283-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="a6283-376">集計は、通常、リレーションシップに沿って実行されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="a6283-377">親/子リレーションシップ参照前述したとおりの 1 つ前に示した関数と子テーブルの列を使用して、集計式を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="a6283-378">例:</span><span class="sxs-lookup"><span data-stu-id="a6283-378">For example:</span></span>  
  
 <span data-ttu-id="a6283-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="a6283-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="a6283-380">Avg(Child(Orders2Details) します。価格)</span><span class="sxs-lookup"><span data-stu-id="a6283-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="a6283-381">集計は、1 つのテーブルに対しても実行できます。</span><span class="sxs-lookup"><span data-stu-id="a6283-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="a6283-382">たとえば、"Price"をという名前の列に図の概要を作成します。</span><span class="sxs-lookup"><span data-stu-id="a6283-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="a6283-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="a6283-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6283-384">集計を作成する 1 つのテーブルを使用する場合がありますいない group by 機能。</span><span class="sxs-lookup"><span data-stu-id="a6283-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="a6283-385">代わりに、すべての行が列に同じ値が表示します。</span><span class="sxs-lookup"><span data-stu-id="a6283-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="a6283-386">集計関数を返しますがかどうかは、テーブルに行がない、`null`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="a6283-387">データ型は、調べることで常に決定できます、<xref:System.Data.DataColumn.DataType%2A>列のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="a6283-388">次のセクションに示すように、Convert 関数を使用してデータ型を変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="a6283-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="a6283-389">集計は、1 つの列にのみ適用して、集計内の他の式は使用できません。</span><span class="sxs-lookup"><span data-stu-id="a6283-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="a6283-390">関数</span><span class="sxs-lookup"><span data-stu-id="a6283-390">Functions</span></span>  
 <span data-ttu-id="a6283-391">次の関数もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="a6283-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-392">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-392">Description</span></span>|<span data-ttu-id="a6283-393">特定の式を指定した .NET Framework 型に変換します。</span><span class="sxs-lookup"><span data-stu-id="a6283-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="a6283-394">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-394">Syntax</span></span>|<span data-ttu-id="a6283-395">変換 (`expression`、 `type`)</span><span class="sxs-lookup"><span data-stu-id="a6283-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="a6283-396">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-396">Arguments</span></span>|<span data-ttu-id="a6283-397">`expression` -変換する式。</span><span class="sxs-lookup"><span data-stu-id="a6283-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="a6283-398">`type` 値の変換先--.NET Framework 型。</span><span class="sxs-lookup"><span data-stu-id="a6283-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="a6283-399">例: myDataColumn.Expression="Convert (合計、'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="a6283-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="a6283-400">すべての変換は、次の例外で有効です`Boolean`を強制的に変換できる`Byte`、 `SByte`、 `Int16`、 `Int32`、 `Int64`、 `UInt16`、 `UInt32`、 `UInt64`、 。`String`と自体のみです。</span><span class="sxs-lookup"><span data-stu-id="a6283-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="a6283-401">`Char` 強制的に変換できる`Int32`、 `UInt32`、 `String`、および自体のみです。</span><span class="sxs-lookup"><span data-stu-id="a6283-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="a6283-402">`DateTime` 強制的に変換できる`String`と自体のみです。</span><span class="sxs-lookup"><span data-stu-id="a6283-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="a6283-403">`TimeSpan` 強制的に変換できる`String`と自体のみです。</span><span class="sxs-lookup"><span data-stu-id="a6283-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-404">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-404">Description</span></span>|<span data-ttu-id="a6283-405">文字列の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="a6283-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="a6283-406">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-406">Syntax</span></span>|<span data-ttu-id="a6283-407">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="a6283-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="a6283-408">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-408">Arguments</span></span>|<span data-ttu-id="a6283-409">`expression` --評価される文字列。</span><span class="sxs-lookup"><span data-stu-id="a6283-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="a6283-410">例: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="a6283-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-411">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-411">Description</span></span>|<span data-ttu-id="a6283-412">Checked 式または置換値を式とを返すかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a6283-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="a6283-413">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-413">Syntax</span></span>|<span data-ttu-id="a6283-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="a6283-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="a6283-415">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-415">Arguments</span></span>|<span data-ttu-id="a6283-416">`expression` --式を確認するには。</span><span class="sxs-lookup"><span data-stu-id="a6283-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="a6283-417">`replacementvalue` --式が場合`null`、`replacementvalue`が返されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="a6283-418">例: myDataColumn.Expression="IsNull (価格、-1)"</span><span class="sxs-lookup"><span data-stu-id="a6283-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-419">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-419">Description</span></span>|<span data-ttu-id="a6283-420">論理式の結果に応じて 2 つの値のいずれかを取得します。</span><span class="sxs-lookup"><span data-stu-id="a6283-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="a6283-421">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-421">Syntax</span></span>|<span data-ttu-id="a6283-422">IIF (`expr`、 `truepart`、 `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="a6283-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="a6283-423">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-423">Arguments</span></span>|<span data-ttu-id="a6283-424">`expr` -評価する式。</span><span class="sxs-lookup"><span data-stu-id="a6283-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="a6283-425">`truepart` --の値を返す式が true のかどうか。</span><span class="sxs-lookup"><span data-stu-id="a6283-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="a6283-426">`falsepart` --の値を返す式が false のかどうか。</span><span class="sxs-lookup"><span data-stu-id="a6283-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="a6283-427">例: myDataColumn.Expression ="IIF (合計 > 1000、'コストの高い'、'dear')</span><span class="sxs-lookup"><span data-stu-id="a6283-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-428">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-428">Description</span></span>|<span data-ttu-id="a6283-429">削除のすべての先頭と末尾の空白の \r"、"\n"、\t"などの文字 ' '</span><span class="sxs-lookup"><span data-stu-id="a6283-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="a6283-430">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-430">Syntax</span></span>|<span data-ttu-id="a6283-431">トリミング (`expression`)</span><span class="sxs-lookup"><span data-stu-id="a6283-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="a6283-432">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-432">Arguments</span></span>|<span data-ttu-id="a6283-433">`expression` -をトリミングする式。</span><span class="sxs-lookup"><span data-stu-id="a6283-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="a6283-434">説明</span><span class="sxs-lookup"><span data-stu-id="a6283-434">Description</span></span>|<span data-ttu-id="a6283-435">文字列で指定された位置から始まる指定された長さの部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="a6283-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="a6283-436">構文</span><span class="sxs-lookup"><span data-stu-id="a6283-436">Syntax</span></span>|<span data-ttu-id="a6283-437">部分文字列 (`expression`、 `start`、 `length`)</span><span class="sxs-lookup"><span data-stu-id="a6283-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="a6283-438">引数</span><span class="sxs-lookup"><span data-stu-id="a6283-438">Arguments</span></span>|<span data-ttu-id="a6283-439">`expression` --部分文字列のソース文字列。</span><span class="sxs-lookup"><span data-stu-id="a6283-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="a6283-440">`start` -部分文字列の開始位置を指定する整数。</span><span class="sxs-lookup"><span data-stu-id="a6283-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="a6283-441">`length` -部分文字列の長さを指定する整数。</span><span class="sxs-lookup"><span data-stu-id="a6283-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="a6283-442">例: myDataColumn.Expression「部分文字列 (電話、7、8)」を =</span><span class="sxs-lookup"><span data-stu-id="a6283-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6283-443">リセットすることができます、<xref:System.Data.DataColumn.Expression%2A>プロパティ値を null または空の文字列に割り当てることで。</span><span class="sxs-lookup"><span data-stu-id="a6283-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="a6283-444">塗りつぶされた以前のすべての行が後に既定値に割り当てられている既定値が式の列に設定されている場合、<xref:System.Data.DataColumn.Expression%2A>プロパティはリセットされます。</span><span class="sxs-lookup"><span data-stu-id="a6283-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-445">次の例は、3 つの列を作成、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a6283-446">2 番目と 3 番目の列の式を含めることが2 つ目は、税の税率変数を使用してを計算し、3 つ目の最初の列の値を計算の結果を追加します。</span><span class="sxs-lookup"><span data-stu-id="a6283-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="a6283-447">結果のテーブルが表示されます、<xref:System.Windows.Forms.DataGrid>コントロール。</span><span class="sxs-lookup"><span data-stu-id="a6283-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-448">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティまたは <see cref="P:System.Data.DataColumn.Unique" /> プロパティが <see langword="true" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="a6283-449">CONVERT 関数を使用すると式が文字列と評価されますが、その文字列には型パラメーターに変換できる形式は含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a6283-450">CONVERT 関数を使用する場合は、要求したキャストを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="a6283-451">実行できるキャストの詳細については、以降のセクションで変換関数に関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6283-452">SUBSTRING 関数を使用する場合は、開始引数が範囲外にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="a6283-453">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-453">-Or-</span>
          </span>
          <span data-ttu-id="a6283-454">SUBSTRING 関数を使用する場合は、長さ引数が範囲外にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-454">When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="a6283-455">LEN 関数または TRIM 関数を使用する場合は、式が文字列と評価されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="a6283-456">これには <see cref="T:System.Char" /> と評価される式も含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-457">
            <see cref="T:System.Data.DataColumn" /> に関連付けられているカスタム ユーザー情報のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-458">カスタム情報の <see cref="T:System.Data.PropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-459"><xref:System.Data.DataColumn.ExtendedProperties%2A>プロパティでは、オブジェクトにカスタム情報を格納することができます。</span><span class="sxs-lookup"><span data-stu-id="a6283-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="a6283-460">たとえば、データを更新する場合、時刻を格納可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a6283-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="a6283-461">拡張プロパティは、型でなければなりません<xref:System.String>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="a6283-462">型のないプロパティ<xref:System.String>ときは保持されません、<xref:System.Data.DataColumn>は XML として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="a6283-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-463">次の例では、カスタム プロパティを<xref:System.Data.PropertyCollection>によって返される、<xref:System.Data.DataColumn.ExtendedProperties%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="a6283-464">2 番目の例では、カスタム プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="a6283-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMaxLengthDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-465">テキスト列の最大長を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-465">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-466">文字単位で表した列の最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-466">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="a6283-467">列に最大長がない場合、値は -1 (既定) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-467">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-468"><xref:System.Data.DataColumn.MaxLength%2A>テキスト以外の列のプロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="a6283-469">A<xref:System.ArgumentException>を割り当てた場合、例外が発生した<xref:System.Data.DataColumn.MaxLength%2A>文字列以外の列にします。</span><span class="sxs-lookup"><span data-stu-id="a6283-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-470">
            <see cref="T:System.Data.DataColumn" /> の名前空間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-471">
            <see cref="T:System.Data.DataColumn" /> の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-472"><xref:System.Data.DataColumn.Namespace%2A>にドキュメントの XML を読み書きするときに、プロパティが使用される、<xref:System.Data.DataTable>で、<xref:System.Data.DataSet>を使用して、 <xref:System.Data.DataSet.ReadXml%2A>、 <xref:System.Data.DataSet.WriteXml%2A>、 <xref:System.Data.DataSet.ReadXmlSchema%2A>、または<xref:System.Data.DataSet.WriteXmlSchema%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="a6283-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="a6283-473">XML 属性と要素の読み取り時にスコープする XML ドキュメントの名前空間が使用される、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="a6283-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="a6283-474">など、<xref:System.Data.DataSet>スキーマを含む"myCompany、"名前空間を持つドキュメントから読み取るデータの読み取りが試行と (で、<xref:System.Data.DataSet.ReadXml%2A>メソッド) を"theirCompany"名前空間を持つドキュメントから。</span><span class="sxs-lookup"><span data-stu-id="a6283-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="a6283-475">既存のスキーマに対応していないすべてのデータは無視されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-476">この名前空間には既にデータが格納されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-476">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="a6283-477">パラメーターの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-477">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-478">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnOrdinalDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-479">
            <see cref="T:System.Data.DataColumnCollection" /> コレクション内の 0 から始まる列の位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-480">列の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-480">The position of the column.</span>
          </span>
          <span data-ttu-id="a6283-481">列がコレクションのメンバーでない場合は、-1 を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-481">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-482">次の例では、列の列名、順序、およびデータ型を返します。</span><span class="sxs-lookup"><span data-stu-id="a6283-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnPrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-483">
            <see cref="T:System.Data.DataTable" /> の名前空間に別名を付ける XML プリフィックスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-484">
            <see cref="T:System.Data.DataTable" /> 名前空間の XML プリフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-485"><xref:System.Data.DataTable.Prefix%2A>の名前空間に属している要素を識別するために、XML ドキュメント全体で使用されて、<xref:System.Data.DataSet>オブジェクト (設定によって、<xref:System.Data.DataSet.Namespace%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="a6283-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a6283-486">パラメーターの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-486">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-487">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnReadOnlyDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-488">行がテーブルに追加された直後にこの列を変更できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-489">列が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-489">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6283-490">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-490">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-491">次の例では、作成、<xref:System.Data.DataColumn>設定とその<xref:System.Data.DataColumn.ReadOnly%2A>プロパティ`true`します。</span><span class="sxs-lookup"><span data-stu-id="a6283-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-492">このプロパティは計算列に対して <see langword="false" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-492">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="a6283-493">指定する序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-493">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6283-494">
            <see cref="T:System.Data.DataColumn" /> の序数または位置を、指定された序数または位置に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-495"><xref:System.Data.DataColumn> の序数または位置を、指定された序数または位置に変更します。</span><span class="sxs-lookup"><span data-stu-id="a6283-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="a6283-496">序数が小さい場合 0 – 1 (最後の列の序数を超える) の列の既存の数より大きいか、無効な<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a6283-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="a6283-497">列の序数を変更すると、列が列のコレクション内の新しい位置に移動されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="a6283-498">前と新しい序数との間のすべての列がする番号が変更、列の新しい序数を調整します。</span><span class="sxs-lookup"><span data-stu-id="a6283-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTableDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-499">列が属する <see cref="T:System.Data.DataTable" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-500">
            <see cref="T:System.Data.DataTable" /> が属する <see cref="T:System.Data.DataColumn" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-501">次の例の親テーブルを返します、<xref:System.Data.DataColumn>を通じてその<xref:System.Data.DataColumn.Table%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="a6283-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6283-502">列の <see cref="P:System.Data.DataColumn.Expression" /> がある場合は、その式を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6283-503">
            <see cref="P:System.Data.DataColumn.Expression" /> プロパティが設定されている場合はその値。それ以外の場合は <see cref="P:System.Data.DataColumn.ColumnName" /> プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6283-504">次の例では、<xref:System.Data.DataColumn.ToString%2A>プロパティのコレクションの各メンバーの既定の文字列を返す<xref:System.Data.DataColumn>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a6283-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnUniqueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6283-505">列の各行の値が一意である必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6283-506">値が一意である必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-506">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6283-507">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-507">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6283-508">このプロパティを false から true に変更とすぐには、値が一意であるかどうかを確認するには、この列に unique 制約が作成されます。</span><span class="sxs-lookup"><span data-stu-id="a6283-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6283-509">次の例が新規作成<xref:System.Data.DataColumn>、そのプロパティを設定し、テーブルの列のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="a6283-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6283-510">この列は計算列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6283-510">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>