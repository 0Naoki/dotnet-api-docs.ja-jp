<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bca8f811a5ceccf81d849c92b8abc731b8b02771" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58740288" /></Metadata><TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbCommand = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2e78d-101">データ ソースに接続しながら実行される SQL ステートメントを表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-102"><xref:System.Data.IDbCommand>インターフェイスをデータ ソースで実行される SQL ステートメントを表すコマンド クラスを実装するために、継承したクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="2e78d-103">コマンド クラスの詳細については、次を参照してください。[コマンドを実行する](~/docs/framework/data/adonet/executing-a-command.md)します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="2e78d-104">アプリケーションがのインスタンスを作成していない、<xref:System.Data.IDbCommand>を直接インターフェイスしますが、実装するクラスのインスタンスを作成、<xref:System.Data.IDbCommand>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="2e78d-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that implements the <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="2e78d-105">実装するクラス<xref:System.Data.IDbCommand>すべてのメンバーを実装し、通常はプロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-105">Classes that implement <xref:System.Data.IDbCommand> must implement all its members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="2e78d-106">たとえば、<xref:System.Data.IDbCommand>インターフェイスを定義、<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2e78d-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="2e78d-107">さらに、<xref:System.Data.SqlClient.SqlCommand>クラスは、このメソッドを継承しも定義、<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2e78d-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e78d-108">次の例は、派生クラスのインスタンスを作成<xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>、および<xref:System.Data.SqlClient.SqlDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="2e78d-109">例は、コンソールに書き込むデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="2e78d-110">最後に、例、 <xref:System.Data.SqlClient.SqlDataReader>、<xref:System.Data.SqlClient.SqlConnection>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="2e78d-111">フォームの継承クラスの名前を .NET Framework データ プロバイダーの間で整合性を高める<paramref name="PrvClassname" />場所<paramref name="Prv" />は特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="2e78d-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="2e78d-112">たとえば、<paramref name="Sql" />のプレフィックスは、<see cref="T:System.Data.SqlClient.SqlCommand" />クラス、<see langword="System.Data.SqlClient" />名前空間。</span><span class="sxs-lookup"><span data-stu-id="2e78d-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="2e78d-113">継承する場合、<see cref="T:System.Data.IDbCommand" />インターフェイスでは、次のコンス トラクターを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-113">When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="2e78d-114">アイテム</span><span class="sxs-lookup"><span data-stu-id="2e78d-114">Item</span></span> 
 </term><description> <span data-ttu-id="2e78d-115">説明</span><span class="sxs-lookup"><span data-stu-id="2e78d-115">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2e78d-116">PrvCommand()</span><span class="sxs-lookup"><span data-stu-id="2e78d-116">PrvCommand()</span></span> 
 </term><description> <span data-ttu-id="2e78d-117">PrvCommand クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-117">Initializes a new instance of the PrvCommand class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2e78d-118">PrvCommand(string cmdText)</span><span class="sxs-lookup"><span data-stu-id="2e78d-118">PrvCommand(string cmdText)</span></span> 
 </term><description> <span data-ttu-id="2e78d-119">クエリのテキストと共に PrvCommand クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-119">Initializes a new instance of the PrvCommand class with the text of the query.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2e78d-120">PrvCommand(string cmdText, PrvConnection connection)</span><span class="sxs-lookup"><span data-stu-id="2e78d-120">PrvCommand(string cmdText, PrvConnection connection)</span></span> 
 </term><description> <span data-ttu-id="2e78d-121">テキスト、クエリと、PrvConnection PrvCommand クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-121">Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2e78d-122">PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span><span class="sxs-lookup"><span data-stu-id="2e78d-122">PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span></span> 
 </term><description> <span data-ttu-id="2e78d-123">クエリの PrvConnection および、PrvTransaction のテキストと共に PrvCommand クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-123">Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.</span></span>  
  
 </description></item></list></para></block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="iDbCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-124"><see cref="T:System.Data.IDbCommand" /> の実行のキャンセルを試行します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-124">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-125">何をキャンセルする場合は、何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-125">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="2e78d-126">ただし、処理中のコマンドが存在し、キャンセルの試行が失敗した場合でも、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-126">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.IDbCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-127">データ ソースに対して実行するテキスト コマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-127">Gets or sets the text command to run against the data source.</span></span></summary>
        <value><span data-ttu-id="2e78d-128">実行するテキスト コマンド。</span><span class="sxs-lookup"><span data-stu-id="2e78d-128">The text command to execute.</span></span> <span data-ttu-id="2e78d-129">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-129">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-130">ときに、<xref:System.Data.IDbCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、設定、<xref:System.Data.IDbCommand.CommandText%2A>プロパティをストアド プロシージャの名前にします。</span><span class="sxs-lookup"><span data-stu-id="2e78d-130">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="2e78d-131">ユーザー ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-131">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="2e78d-132">コマンドは、Execute メソッドのいずれかを呼び出すときに、このストアド プロシージャを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-132">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e78d-133">次の例は、派生クラスのインスタンスを作成します。<xref:System.Data.OleDb.OleDbCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-133">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.IDbCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-134">コマンドを実行する試みを終了してエラーが生成されるまでの待機時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-134">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="2e78d-135">コマンドが実行されるまでの待機時間 (秒)。</span><span class="sxs-lookup"><span data-stu-id="2e78d-135">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="2e78d-136">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-136">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e78d-137">次の例は、派生クラスのインスタンスを作成します。<xref:System.Data.SqlClient.SqlCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-137">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2e78d-138">割り当てられたプロパティ値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-138">The property value assigned is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.IDbCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-139"><see cref="P:System.Data.IDbCommand.CommandText" /> プロパティをどのように解釈するかを表示または指定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-139">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="2e78d-140"><see cref="T:System.Data.CommandType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2e78d-140">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="2e78d-141">既定値は、<see langword="Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-141">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-142">設定すると、<xref:System.Data.IDbCommand.CommandType%2A>プロパティを`StoredProcedure`を設定する必要があります、<xref:System.Data.IDbCommand.CommandText%2A>プロパティをストアド プロシージャの名前にします。</span><span class="sxs-lookup"><span data-stu-id="2e78d-142">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="2e78d-143">コマンドは、Execute メソッドのいずれかを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-143">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection with get, set" Usage="System.Data.IDbCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-144">この <see cref="T:System.Data.IDbCommand" /> のインスタンスで使用する <see cref="T:System.Data.IDbConnection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-144">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="2e78d-145">データ ソースへの接続。</span><span class="sxs-lookup"><span data-stu-id="2e78d-145">The connection to the data source.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="abstract member CreateParameter : unit -&gt; System.Data.IDbDataParameter" Usage="iDbCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-146"><see cref="T:System.Data.IDbDataParameter" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-146">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="2e78d-147"><see langword="IDbDataParameter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2e78d-147">An <see langword="IDbDataParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-148">継承する場合<xref:System.Data.IDbCommand>、.NET Framework データ プロバイダーの厳密に型指定されたバージョンを実装する<xref:System.Data.IDbCommand.CreateParameter%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-148">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : unit -&gt; int" Usage="iDbCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-149">.NET Framework データ プロバイダーの <see langword="Connection" /> オブジェクトに対して SQL ステートメントを実行し、影響を受ける行の数を返します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-149">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="2e78d-150">影響を受けた行の数。</span><span class="sxs-lookup"><span data-stu-id="2e78d-150">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-151">使用することができます、<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>カタログ操作 (データベースの構造をクエリやテーブルなどのデータベース オブジェクトの作成など) を実行するかを使用せず、データベース内のデータを変更する、 <xref:System.Data.DataSet> UPDATE、INSERT、または削除を実行してステートメント。</span><span class="sxs-lookup"><span data-stu-id="2e78d-151">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="2e78d-152">ただし、<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>戻り値の行、すべての出力パラメーターまたはパラメーターにマップされている値には、データが設定されますを返すしていません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-152">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="2e78d-153">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-153">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="2e78d-154">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-154">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e78d-155">次の例は、派生クラスのインスタンスを作成します。 <xref:System.Data.OleDb.OleDbCommand>、し、を実行します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-155">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="2e78d-156">これを行うには、SQL SELECT ステートメントである文字列と、データ ソースに接続するために使用する文字列、メソッドが渡されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-156">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e78d-157">接続が存在しません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-157">The connection does not exist.</span></span>  
  
<span data-ttu-id="2e78d-158">または</span><span class="sxs-lookup"><span data-stu-id="2e78d-158">-or-</span></span> 
<span data-ttu-id="2e78d-159">接続が開かれていません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-159">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e78d-160"><see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.IDataReader" /> をビルドします。</span><span class="sxs-lookup"><span data-stu-id="2e78d-160">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : unit -&gt; System.Data.IDataReader" Usage="iDbCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-161"><see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.IDataReader" /> をビルドします。</span><span class="sxs-lookup"><span data-stu-id="2e78d-161">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="2e78d-162"><see cref="T:System.Data.IDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2e78d-162">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader" Usage="iDbCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="2e78d-163"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2e78d-163">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="2e78d-164"><see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.CommandBehavior" /> の値のいずれかを使用して <see cref="T:System.Data.IDataReader" /> をビルドします。</span><span class="sxs-lookup"><span data-stu-id="2e78d-164">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="2e78d-165"><see cref="T:System.Data.IDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2e78d-165">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-166">呼び出し元が呼び出す必要があります、<xref:System.Data.IDbConnection.Open%2A>のメソッド、<xref:System.Data.IDbCommand.Connection%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2e78d-166">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="2e78d-167">ときに、<xref:System.Data.IDbCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、<xref:System.Data.IDbCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-167">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2e78d-168">コマンドを呼び出すときにこのストアド プロシージャを実行します<xref:System.Data.IDbCommand.ExecuteReader%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-168">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2e78d-169">使用<xref:System.Data.CommandBehavior.SequentialAccess>値が大きいとバイナリ データを取得します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="2e78d-170">それ以外の場合、<xref:System.OutOfMemoryException>が発生して、接続は閉じられます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-170">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="2e78d-171">中に、<xref:System.Data.IDataReader>が使用されている、関連付けられている<xref:System.Data.IDbConnection>がビジー状態の提供、<xref:System.Data.IDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-171">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="2e78d-172">この状態では、その他の操作を実行できないの<xref:System.Data.IDbConnection>以外の終了します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-172">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="2e78d-173">これは、ケースまで、 <xref:System.Data.IDataReader.Close%2A> DataReader のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-173">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="2e78d-174">DataReader が作成された場合<xref:System.Data.CommandBehavior>に設定`CloseConnection`DataReader の終了の接続を自動的に閉じます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-174">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : unit -&gt; obj" Usage="iDbCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-175">クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-175">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span></span> <span data-ttu-id="2e78d-176">追加の列または行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-176">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="2e78d-177">結果セットの最初の行の最初の列。</span><span class="sxs-lookup"><span data-stu-id="2e78d-177">The first column of the first row in the resultset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-178">使用して、<xref:System.Data.IDbCommand.ExecuteScalar%2A>データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-178">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="2e78d-179">使用してよりも少ないコードが必要です、<xref:System.Data.IDbCommand.ExecuteReader%2A>メソッド、および操作によって返されるデータを使用して 1 つの値を生成するために必要な<xref:System.Data.IDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-179">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="2e78d-180">一般的な<xref:System.Data.IDbCommand.ExecuteScalar%2A>クエリは、次の c# の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-180">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="2e78d-181">結果セットの最初の行の最初の列が見つからない場合、null 参照 (`Nothing` Visual Basic で) が返されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-181">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="2e78d-182">データベースの値が場合`null`、クエリが返す`DBNull.Value`。</span><span class="sxs-lookup"><span data-stu-id="2e78d-182">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e78d-183">次の例は、派生クラスのインスタンスを作成します。 <xref:System.Data.SqlClient.SqlCommand>、しを使用して実行します<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-183">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="2e78d-184">例には、集計の結果を返す TRANSACT-SQL ステートメントである文字列と、データ ソースに接続するために使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-184">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.IDataParameterCollection" Usage="System.Data.IDbCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-185"><see cref="T:System.Data.IDataParameterCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-185">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="2e78d-186">SQL ステートメントまたはストアド プロシージャのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="2e78d-186">The parameters of the SQL statement or stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e78d-187">次の例は、派生クラスのインスタンスを作成します。 <xref:System.Data.SqlClient.SqlCommand>、し、そのパラメーターを表示します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-187">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="2e78d-188">例では、アプリケーションに渡す、 <xref:System.Data.SqlClient.SqlConnection>、TRANSACT-SQL SELECT ステートメントとの配列であるクエリ文字列<xref:System.Data.SqlClient.SqlParameter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2e78d-188">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit" Usage="iDbCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e78d-189">コマンドの準備済み (またはコンパイル済み) のバージョンをデータ ソースに作成します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-189">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e78d-190">場合、<xref:System.Data.IDbCommand.CommandType%2A>プロパティに設定されて`TableDirect`、<xref:System.Data.IDbCommand.Prepare%2A>何も行われません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-190">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="2e78d-191">場合<xref:System.Data.IDbCommand.CommandType%2A>に設定されている`StoredProcedure`への呼び出し<xref:System.Data.IDbCommand.Prepare%2A>可能性は no-op ですが、成功する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e78d-191">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="2e78d-192">サーバーは、必要に応じて再利用するためのプランを自動的にキャッシュします。そのため、クライアント アプリケーションで直接このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-192">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e78d-193">次の例は、派生クラスのインスタンスを作成します。 <xref:System.Data.OleDb.OleDbCommand>、し、接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-193">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="2e78d-194">例は、SQL Select ステートメントである文字列と、データ ソースへの接続に使用する文字列を渡すことで、データ ソースのストアド プロシージャを準備します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-194">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e78d-195"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が設定されていません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-195">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
<span data-ttu-id="2e78d-196">または</span><span class="sxs-lookup"><span data-stu-id="2e78d-196">-or-</span></span> 
<span data-ttu-id="2e78d-197"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が <see cref="M:System.Data.OleDb.OleDbConnection.Open" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="2e78d-197">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.IDbTransaction with get, set" Usage="System.Data.IDbCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-198">.NET Framework データ プロバイダーの <see langword="Command" /> オブジェクトが実行されるトランザクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-198">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span></summary>
        <value><span data-ttu-id="2e78d-199">.NET Framework データ プロバイダーの <see langword="Command" /> オブジェクトが実行されます。</span><span class="sxs-lookup"><span data-stu-id="2e78d-199">the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span> <span data-ttu-id="2e78d-200">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-200">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.IDbCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e78d-201"><see cref="T:System.Data.Common.DbDataAdapter" /> の <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2e78d-201">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="2e78d-202"><see cref="T:System.Data.UpdateRowSource" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2e78d-202">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span> <span data-ttu-id="2e78d-203">コマンドが自動的に生成される場合を除き、既定値は <see langword="Both" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-203">The default is <see langword="Both" /> unless the command is automatically generated.</span></span> <span data-ttu-id="2e78d-204">自動的に生成される場合、既定値は <see langword="None" /> です。</span><span class="sxs-lookup"><span data-stu-id="2e78d-204">Then the default is <see langword="None" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2e78d-205">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="2e78d-205">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>