<Type Name="CommandBehavior" FullName="System.Data.CommandBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5b4fd3b607bb6f3fb9d6fc6bb108a0eedb78576" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CommandBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandBehavior" />
  <TypeSignature Language="F#" Value="type CommandBehavior = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0dec4-101">クエリの結果と、データベースに対するその影響についての説明を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dec4-101">Provides a description of the results of the query and its effect on the database.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dec4-102"><xref:System.Data.CommandBehavior>値が使用、<xref:System.Data.IDbCommand.ExecuteReader%2A>メソッドの<xref:System.Data.IDbCommand>およびそれから派生した任意のクラスです。</span><span class="sxs-lookup"><span data-stu-id="0dec4-102">The <xref:System.Data.CommandBehavior> values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.</span></span>  
  
 <span data-ttu-id="0dec4-103">これらの値のビットごとの組み合わせを使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="0dec4-103">A bitwise combination of these values may be used.</span></span>  
  
 <span data-ttu-id="0dec4-104"><xref:System.Data.CommandBehavior> 定義に使用する場合は無視されます、<xref:System.Data.Sql.SqlNotificationRequest>または<xref:System.Data.SqlClient.SqlDependency>はそのため、使用できません。</span><span class="sxs-lookup"><span data-stu-id="0dec4-104"><xref:System.Data.CommandBehavior> is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used.</span></span> <span data-ttu-id="0dec4-105">必要としないコンス トラクターを使用して、`CommandBehavior`これら 2 つのケースのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="0dec4-105">Use the constructor that does not require a `CommandBehavior` parameter in these two cases.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0dec4-106">SequentialAccess を使用して、値が大きいとバイナリ データを取得します。</span><span class="sxs-lookup"><span data-stu-id="0dec4-106">Use SequentialAccess to retrieve large values and binary data.</span></span> <span data-ttu-id="0dec4-107">それ以外の場合、<xref:System.OutOfMemoryException>が発生して、接続は閉じられます。</span><span class="sxs-lookup"><span data-stu-id="0dec4-107">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="CloseConnection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior CloseConnection = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="CloseConnection" />
      <MemberSignature Language="C++ CLI" Value="CloseConnection" />
      <MemberSignature Language="F#" Value="CloseConnection = 32" Usage="System.Data.CommandBehavior.CloseConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-108">コマンドが実行された場合、関連付けられている <see langword="DataReader" /> オブジェクトが閉じられたときに、関連付けられている <see langword="Connection" /> オブジェクトが閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-108">When the command is executed, the associated <see langword="Connection" /> object is closed when the associated <see langword="DataReader" /> object is closed.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Data.CommandBehavior.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-109">クエリで複数の結果セットが返される場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-109">The query may return multiple result sets.</span>
          </span>
          <span data-ttu-id="0dec4-110">クエリを実行すると、データベースの状態に影響を与えることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-110">Execution of the query may affect the database state.</span>
          </span>
          <span data-ttu-id="0dec4-111">
            <see langword="Default" /> は <see cref="T:System.Data.CommandBehavior" /> フラグを設定しないので、<see langword="ExecuteReader(CommandBehavior.Default)" /> の呼び出しは、機能的には <see langword="ExecuteReader()" /> の呼び出しと同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-111">
              <see langword="Default" /> sets no <see cref="T:System.Data.CommandBehavior" /> flags, so calling <see langword="ExecuteReader(CommandBehavior.Default)" /> is functionally equivalent to calling <see langword="ExecuteReader()" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="KeyInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior KeyInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="KeyInfo" />
      <MemberSignature Language="F#" Value="KeyInfo = 4" Usage="System.Data.CommandBehavior.KeyInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-112">クエリでは列と主キーの情報が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-112">The query returns column and primary key information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dec4-113">コマンドの実行で必要な KeyInfo を使用すると、プロバイダーは、既存の主キーの結果セットに列を追加し、timestamp 列に追加されます。</span><span class="sxs-lookup"><span data-stu-id="0dec4-113">When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.</span></span>  
  
 <span data-ttu-id="0dec4-114">必要な KeyInfo を使用する場合、.NET Framework Data Provider for SQL Server には、SET FMTONLY OFF、SET NO_BROWSETABLE ON を実行中のステートメントが前に付きます。</span><span class="sxs-lookup"><span data-stu-id="0dec4-114">When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON.</span></span> <span data-ttu-id="0dec4-115">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="0dec4-115">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="0dec4-116">詳細については、SQL Server Books Online を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0dec4-116">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaOnly">
      <MemberSignature Language="C#" Value="SchemaOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SchemaOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SchemaOnly" />
      <MemberSignature Language="VB.NET" Value="SchemaOnly" />
      <MemberSignature Language="C++ CLI" Value="SchemaOnly" />
      <MemberSignature Language="F#" Value="SchemaOnly = 2" Usage="System.Data.CommandBehavior.SchemaOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-117">クエリでは列情報のみが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-117">The query returns column information only.</span>
          </span>
          <span data-ttu-id="0dec4-118">
            <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> を使用している場合、SQL Server 用 .NET Framework データ プロバイダーは実行するステートメントの前に SET FMTONLY ON を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-118">When using <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SequentialAccess">
      <MemberSignature Language="C#" Value="SequentialAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SequentialAccess = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SequentialAccess" />
      <MemberSignature Language="VB.NET" Value="SequentialAccess" />
      <MemberSignature Language="C++ CLI" Value="SequentialAccess" />
      <MemberSignature Language="F#" Value="SequentialAccess = 16" Usage="System.Data.CommandBehavior.SequentialAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-119">
            <see langword="DataReader" /> が大きなバイナリ値が格納されている列を含む行を処理できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-119">Provides a way for the <see langword="DataReader" /> to handle rows that contain columns with large binary values.</span>
          </span>
          <span data-ttu-id="0dec4-120">
            <see langword="SequentialAccess" /> を使用すると、<see langword="DataReader" /> は行全体を読み込むのではなく、ストリームとしてデータを読み込むことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-120">Rather than loading the entire row, <see langword="SequentialAccess" /> enables the <see langword="DataReader" /> to load data as a stream.</span>
          </span>
          <span data-ttu-id="0dec4-121">その後、<see langword="GetBytes" /> メソッドまたは <see langword="GetChars" /> メソッドを使用して、読み込み動作を開始するバイト位置、返すデータの制限付きバッファー サイズを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-121">You can then use the <see langword="GetBytes" /> or <see langword="GetChars" /> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dec4-122">指定すると`SequentialAccess`、各列を読み取る必要はありませんが、返される順序で列から読み取る必要があります。</span><span class="sxs-lookup"><span data-stu-id="0dec4-122">When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column.</span></span> <span data-ttu-id="0dec4-123">過去のデータの返されたストリーム内の場所を読んだ後データまたはその場所の前に不要になった読み取ることができます、`DataReader`です。</span><span class="sxs-lookup"><span data-stu-id="0dec4-123">Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`.</span></span> <span data-ttu-id="0dec4-124">使用する場合、 <xref:System.Data.OleDb.OleDbDataReader>、を越えて読み取りまで、現在の列の値を再度読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="0dec4-124">When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it.</span></span> <span data-ttu-id="0dec4-125">使用する場合、<xref:System.Data.SqlClient.SqlDataReader>列の値を 1 度しか読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="0dec4-125">When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleResult">
      <MemberSignature Language="C#" Value="SingleResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleResult = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleResult" />
      <MemberSignature Language="VB.NET" Value="SingleResult" />
      <MemberSignature Language="C++ CLI" Value="SingleResult" />
      <MemberSignature Language="F#" Value="SingleResult = 1" Usage="System.Data.CommandBehavior.SingleResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-126">クエリでは単一の結果セットが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-126">The query returns a single result set.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SingleRow">
      <MemberSignature Language="C#" Value="SingleRow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleRow = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleRow" />
      <MemberSignature Language="VB.NET" Value="SingleRow" />
      <MemberSignature Language="C++ CLI" Value="SingleRow" />
      <MemberSignature Language="F#" Value="SingleRow = 8" Usage="System.Data.CommandBehavior.SingleRow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dec4-127">クエリは、最初の結果セットの単一行を返すと想定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-127">The query is expected to return a single row of the first result set.</span>
          </span>
          <span data-ttu-id="0dec4-128">クエリを実行すると、データベースの状態に影響を与えることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-128">Execution of the query may affect the database state.</span>
          </span>
          <span data-ttu-id="0dec4-129">一部の .NET Framework データ プロバイダーではこの情報を使用してコマンドのパフォーマンスを最適化することもできますが、この情報の使用は必須ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-129">Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command.</span>
          </span>
          <span data-ttu-id="0dec4-130">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> オブジェクトの <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> メソッドで <see cref="F:System.Data.CommandBehavior.SingleRow" /> を指定すると、OLE DB <see langword="IRow" /> インターフェイスが使用できる場合、OLE DB 用 .NET Framework データ プロバイダーはこのインターフェイスを使用してバインドを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-130">When you specify <see cref="F:System.Data.CommandBehavior.SingleRow" /> with the <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> method of the <see cref="T:System.Data.OleDb.OleDbCommand" /> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <see langword="IRow" /> interface if it is available.</span>
          </span>
          <span data-ttu-id="0dec4-131">それ以外の場合は、<see langword="IRowset" /> インターフェイスを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-131">Otherwise, it uses the <see langword="IRowset" /> interface.</span>
          </span>
          <span data-ttu-id="0dec4-132">SQL ステートメントが単一行のみを返すことが予期される場合、<see cref="F:System.Data.CommandBehavior.SingleRow" /> を指定すると、アプリケーションのパフォーマンスも向上します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-132">If your SQL statement is expected to return only a single row, specifying <see cref="F:System.Data.CommandBehavior.SingleRow" /> can also improve application performance.</span>
          </span>
          <span data-ttu-id="0dec4-133">複数の結果セットを返すことが予期されるクエリを実行する場合は、<see langword="SingleRow" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-133">It is possible to specify <see langword="SingleRow" /> when executing queries that are expected to return multiple result sets.</span>
          </span>
          <span data-ttu-id="0dec4-134">その場合、複数の結果セットの SQL クエリと単一行の両方が指定されていると、返される結果には最初の結果セットの 1 行目のみが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-134">In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set.</span>
          </span>
          <span data-ttu-id="0dec4-135">クエリの他の結果セットは返されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dec4-135">The other result sets of the query will not be returned.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>