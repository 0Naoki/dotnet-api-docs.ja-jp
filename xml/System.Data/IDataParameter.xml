<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb507198ca6abf7062bbe907899c985b94fab73a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70404888" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Command オブジェクトへのパラメーター、さらに必要に応じて <see cref="T:System.Data.DataSet" /> 列へのそれらのマッピングを表し、データ ソースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter>インターフェイスを使用すると、継承クラスは、コマンドオブジェクトのパラメーターを表すパラメータークラスを実装できます。 パラメータークラスの詳細については、「[パラメーターおよびパラメーターデータ型の構成](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)」を参照してください。  
  
 アプリケーションは、 <xref:System.Data.IDataParameter>インターフェイスのインスタンスを直接作成するのではなく、を継承<xref:System.Data.IDataParameter>するクラスのインスタンスを作成します。  
  
 継承<xref:System.Data.IDataParameter>するクラスは、継承されたメンバーを実装する必要があり、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義します。 たとえば、インターフェイスは<xref:System.Data.IDataParameter> <xref:System.Data.IDataParameter.DbType%2A>プロパティを定義します。 次に、クラス<xref:System.Data.OleDb.OleDbParameter>はこのプロパティを継承し、 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>プロパティも定義します。  
  
   
  
## Examples  
 次の例では、の<xref:System.Data.SqlClient.SqlParameter> <xref:System.Data.SqlClient.SqlDataAdapter>コレクションを<xref:System.Data.SqlClient.SqlParameterCollection>使用して、派生クラスの複数のインスタンスを作成します。 これらのパラメーターは、 <xref:System.Data.DataSet>データソースからデータを選択し、にデータを配置するために使用されます。 この例では<xref:System.Data.DataSet> 、 <xref:System.Data.SqlClient.SqlDataAdapter>とが、適切なスキーマ、コマンド、および接続を使用して既に作成されていることを前提としています。  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>.NET Framework データプロバイダー間の一貫性を高めるには、フォーム<paramref name="Prv" />パラメーターに継承クラスの名前を付けます。ここ<paramref name="Prv" />で、は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された一様なプレフィックスです。 たとえば、 <paramref name="Sql" />は<see langword="System.Data.SqlClient" />名前空間の<see cref="T:System.Data.SqlClient.SqlCommand" />クラスのプレフィックスです。  
  
<see cref="T:System.Data.IDataParameter" />インターフェイスから継承する場合は、次のコンストラクターを実装する必要があります。 
 <list type="table"><listheader><term> アイテム 
 </term><description> 説明 
 </description></listheader><item><term> PrvParameter() 
 </term><description> Parameter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvParameter (文字列名、PrvDbType dataType) 
 </term><description> パラメーター名とデータ型を指定して、パラメータークラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvParameter (文字列名、オブジェクト値) 
 </term><description> パラメーター名、およびパラメーターの値であるオブジェクトを使用して、パラメータークラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvParameter (string name, PrvDbType dataType, int size) 
 </term><description> パラメーター名、データ型、および幅を指定して、パラメータークラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvParameter (string name, PrvDbType dataType, int size, string srcColumn) 
 </term><description> パラメーター名、データ型、幅、およびソース列名を指定して、DbParameter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvParameter (文字列 parameterName、PrvDbType dbType、int size、ParameterDirection direction、Boolean isNullable、Byte precision、Byte scale、string srcColumn、DataRowVersion Srccolumn、オブジェクト値) 
 </term><description> パラメーター名、データ型、 <see cref="T:System.Data.OleDb.OleDbParameter" />幅、ソース列名、パラメーターの方向、数値の有効桁数、およびその他のプロパティを使用して、クラスの新しいインスタンスを初期化します。  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.DbType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Data.DbType.String" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 PrvDbType (場合はプロバイダー固有のプレフィックスを表します) で<xref:System.Data.SqlClient.SqlParameter.DbType%2A> 、リンクされています。 したがって、 <xref:System.Data.SqlClient.SqlParameter.DbType%2A>を設定すると、PrvDbType がサポートする PrvDbType に変更されます。  
  
 サポートされているデータ型の一覧については、適切な .NET Framework data provider PrvDbType メンバーを参照してください。 詳細については、「 [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが有効な <see cref="T:System.Data.DbType" /> に設定されませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターのいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定値は、<see langword="Input" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 が出力され、関連付けら<xref:System.Data.SqlClient.SqlCommand>れたの実行が値を返さない<xref:System.Data.IDataParameter>場合、には null 値が格納されます。 <xref:System.Data.ParameterDirection>  
  
 最後の結果セットの最後の行が読み取ら`Output` `InputOut`れた後`ReturnValue` 、、、、およびの各パラメーターが更新されます。  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが null 値を受け取るかどうかを示す値を取得します。</summary>
        <value>null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 値は、 <xref:System.DBNull>クラスを使用して処理されます。  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.IDataParameter" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Data.IDataParameter" /> の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 は<xref:System.Data.IDataParameter.ParameterName%2A> 、 *paramname*の形式\@で指定します。 パラメーターに依存<xref:System.Data.IDataParameter.ParameterName%2A>するコマンドを実行する前に、を設定する必要があります。  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataSet" /> にマップされ、<see cref="P:System.Data.IDataParameter.Value" /> を読み込んだり返したりするために使用されるソース列の名前を取得または設定します。</summary>
        <value><see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter> との値の間のリンクは、 <xref:System.Data.IDataParameter.Direction%2A>プロパティの値に応じて双方向になる場合があります。 <xref:System.Data.DataTable>  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.IDataParameter.Value" /> を読み込むときに使用する <see cref="T:System.Data.DataRowVersion" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.DataRowVersion" /> 値のいずれか。 既定値は、<see langword="Current" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> <xref:System.Data.Common.DbDataAdapter.Update%2A>で、元の値または現在の値がパラメーター値に使用されるかどうかを判断するために、によって使用されます。 これにより、主キーを更新できます。 このプロパティは、 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>および<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>によって無視されます。 <xref:System.Data.DataRow>このプロパティは、 <xref:System.Data.DataRow.Item%2A>プロパティによって使用されるのバージョン、 <xref:System.Data.DataRow>または<xref:System.Data.DataRow.GetChildRows%2A>オブジェクトのメソッドに設定されます。  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが <see cref="T:System.Data.DataRowVersion" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を取得または設定します。</summary>
        <value>パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力パラメーターの場合、値はサーバーに送信<xref:System.Data.IDbCommand>されるにバインドされます。 出力と戻り値のパラメーターの場合、値はの完了<xref:System.Data.IDbCommand>時に、 <xref:System.Data.IDataReader>が閉じられた後に設定されます。  
  
 サーバーに null パラメーター値を送信する場合、ユーザーは null で`DBNull`はなくを指定する必要があります。 システムの null 値は、値のない空オブジェクトです。 `DBNull` は、null 値を表すために使用します。  
  
 アプリケーションでデータベースの種類を指定した場合、プロバイダーがデータをサーバーに送信するときに、バインドされた値がその型に変換されます。 プロバイダーは、インターフェイスを<xref:System.IConvertible>サポートしている場合、任意の型の値の変換を試みます。 指定された型が値と互換性がない場合、変換エラーが発生する可能性があります。  
  
 プロパティ<xref:System.Data.SqlClient.SqlParameter.Value%2A>は、によっ<xref:System.Data.Common.DbDataAdapter.Update%2A>て上書きされます。  
  
   
  
## Examples  
 次の例では、実装するクラス<xref:System.Data.SqlClient.SqlParameter>のインスタンスを作成し、そのプロパティの一部を設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
