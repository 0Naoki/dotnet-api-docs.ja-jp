<Type Name="IColumnMapping" FullName="System.Data.IColumnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21094018624ccd173a3d0b967e5d865dfc766576" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IColumnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IColumnMapping" />
  <TypeSignature Language="DocId" Value="T:System.Data.IColumnMapping" />
  <TypeSignature Language="VB.NET" Value="Public Interface IColumnMapping" />
  <TypeSignature Language="C++ CLI" Value="public interface class IColumnMapping" />
  <TypeSignature Language="F#" Value="type IColumnMapping = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>データ ソース列に <see cref="T:System.Data.DataSet" /> 列を関連付けます。この関連付けは、.NET Framework データ プロバイダーが共通に使用する <see cref="T:System.Data.Common.DataColumnMapping" /> クラスによって実装されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IColumnMapping>インターフェイスにより、継承したクラスのデータ ソース列を関連付ける列マッピングのクラスを実装する、<xref:System.Data.DataSet>列です。 詳細については、次を参照してください。 [DataAdapter DataTable と DataColumn のマップ](~/docs/framework/data/adonet/dataadapter-datatable-and-datacolumn-mappings.md)です。  
  
 アプリケーションがのインスタンスを作成していない、<xref:System.Data.IColumnMapping>インターフェイスを直接が継承するクラスのインスタンスを作成、<xref:System.Data.IColumnMapping>です。  
  
 継承するクラス<xref:System.Data.IColumnMapping>継承されたすべてのメンバーを実装して、通常プロバイダー固有の機能を追加するその他のメンバーを定義する必要があります。 たとえば、<xref:System.Data.IColumnMapping>インターフェイスを定義、<xref:System.Data.IColumnMapping.DataSetColumn%2A>プロパティです。 さらに、<xref:System.Data.Common.DataColumnMapping>クラスは、このプロパティを継承しも定義、<xref:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction%2A>メソッドです。  
  
   
  
## Examples  
 次の例は、派生クラスのインスタンスを作成<xref:System.Data.Common.DataColumnMapping>に追加し、<xref:System.Data.Common.DataColumnMappingCollection>コレクション。 マッピングは、コレクションに追加され、マッピングの親を表示で、ユーザーに通知します。  
  
 [!code-csharp[Classic WebData DataColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>継承する場合、<see cref="T:System.Data.IColumnMapping" />インターフェイスでは、次のコンス トラクターを実装する必要があります: <list type="table"><listheader><term>項目</term><description>説明</description></listheader><item><term> ColumnMapping() </term><description> ColumnMapping クラスの新しいインスタンスを初期化します。</description></item><item><term> ColumnMapping (文字列 sourceColumn、文字列 dataSetColumn) </term><description>の指定したソース列名とソースを持つ ColumnMapping クラスの新しいインスタンスを初期化し、<see cref="T:System.Data.DataSet" />列の名前。  </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DataSetColumn">
      <MemberSignature Language="C#" Value="public string DataSetColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSetColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IColumnMapping.DataSetColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSetColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSetColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSetColumn : string with get, set" Usage="System.Data.IColumnMapping.DataSetColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前を取得または設定します。</summary>
        <value>割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前。 名前の大文字と小文字は区別されません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、派生クラスのインスタンスを作成<xref:System.Data.Common.DataColumnMapping>、およびそのプロパティを設定します。  
  
 [!code-csharp[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IColumnMapping.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IColumnMapping.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>割り当て元のデータ ソース内の列の名前を取得または設定します。 名前の大文字と小文字は区別されます。</summary>
        <value>データ ソース内の列の名前。大文字と小文字が区別されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、派生クラスのインスタンスを作成<xref:System.Data.Common.DataColumnMapping>、およびそのプロパティを設定します。  
  
 [!code-csharp[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>