<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DBConcurrencyException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f7d82820c5c9a73c07e2209c1dd5555520ad3b0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f7d82820c5c9a73c07e2209c1dd5555520ad3b0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>The exception that is thrown by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> during an insert, update, or delete operation if the number of rows affected equals zero.</source>
          <target state="translated">挿入、更新、または削除操作中に影響を受ける行数が 0 になった場合に <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> によってスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the number of rows affected by the execution of each insert, update, or delete operation, and throws this exception if the number equals zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>は各 insert、update、または削除操作の実行によって影響を受ける行の数を調べ、数が 0 に等しい場合は、この例外をスローします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>This exception is generally caused by a concurrency violation.</source>
          <target state="translated">通常、この例外は、同時実行違反によって発生します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">既定のコンストラクターは、フィールドを既定値に初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">例外の詳細を説明する文字列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">例外の詳細を説明する文字列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>A reference to an inner exception.</source>
          <target state="translated">内部例外への参照。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>You can create a new exception that catches an earlier exception.</source>
          <target state="translated">以前の例外をキャッチする新しい例外を作成することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The code that handles the second exception can use the additional information from the earlier exception, also called an inner exception, to examine the cause of the initial error.</source>
          <target state="translated">2 つ目の例外を処理するコードは、最初のエラーの原因をチェックするのに、内部例外とも呼ばれる以前の例外からの追加情報を使用できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">この例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>An array containing the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception.</source>
          <target state="translated">この例外を生成する原因となった、更新が失敗した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトを格納している配列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception to the specified array.</source>
          <target state="translated">この例外を生成する原因となった、更新が失敗した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトを、指定した配列にコピーします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトのコピー先の <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの 1 次元配列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">この例外を生成する原因となった、更新が失敗した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトを、<ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの指定した配列にコピーします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">バッチ更新プログラムを実行するときに、<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>のプロパティ、 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 'éý' <ph id="ph3">`true`</ph>、すべての行の更新失敗する場合、この例外がスローされます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">この場合、この<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>が含まれています<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>すべての行の 1 つだけではなくの更新が失敗したオブジェクト<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトに<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>、影響を受けると<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトを呼び出すことによって取得できます<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトのコピー先の <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの 1 次元配列。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The destination array index to start copying into.</source>
          <target state="translated">コピーを開始するコピー先の配列のインデックス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, starting at the specified destination array index.</source>
          <target state="translated">指定したコピー先の配列のインデックスを開始位置として、この例外を生成する原因となった、更新が失敗した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトを、<ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの指定した配列にコピーします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">バッチ更新プログラムを実行するときに、<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>のプロパティ、 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 'éý' <ph id="ph3">`true`</ph>、すべての行の更新失敗する場合、この例外がスローされます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">この場合、この<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>が含まれています<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>すべての行の 1 つだけではなくの更新が失敗したオブジェクト<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトに<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>、影響を受けると<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトを呼び出すことによって取得できます<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> と関連付けるシリアル化データを保持する <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> に関連付けるシリアル化ストリームの転送元および転送先を格納する <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the aprcified serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> をシリアル化するために必要なデータを指定したシリアル化情報オブジェクトに設定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> パラメーターが null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that generated the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> を生成した <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> の値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> の値。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> to retrieve the value of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> row that generated the <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>の値を取得する、<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>行を生成した、<ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has no effect.</source>
          <target state="translated">値を設定、<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>も何も起こりません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">バッチ更新プログラムを実行するときに、<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>のプロパティ、 <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> 'éý' <ph id="ph3">`true`</ph>、すべての行の更新失敗する場合、この例外がスローされます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">この場合、この<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>が含まれています<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>すべての行の 1 つだけではなくの更新が失敗したオブジェクト<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトに<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>、影響を受けると<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクトを呼び出すことによって取得できます<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Serialization support does not exist for <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">シリアル化のサポートがありません<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Therefore, if you serialize a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> object, the value of the <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> property in the serialized version of the object is set to a null value.</source>
          <target state="translated">したがって、シリアル化する場合、<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>オブジェクト、値の<ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>オブジェクトのシリアル化されたバージョンのプロパティが null 値に設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>Gets the number of rows whose update failed, generating this exception.</source>
          <target state="translated">この例外を生成する原因となった、更新が失敗した行の数を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>An integer containing a count of the number of rows whose update failed.</source>
          <target state="translated">更新が失敗した行の数を格納する整数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>