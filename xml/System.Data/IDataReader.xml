<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19530b9c5982631504b5bf391eb258d094af3b11" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e56aa-101">データ ソースでのコマンド実行により取得された結果セットの 1 つ以上の順方向専用ストリームを読み取る手段を提供し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e56aa-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-102"><xref:System.Data.IDataReader>と<xref:System.Data.IDataRecord>インターフェイスを実装する継承するクラスを許可する、`DataReader`クラスで、結果セットの 1 つまたは複数順方向専用ストリームを読み取る手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="e56aa-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="e56aa-103">詳細については`DataReader`クラスを参照してください[を取得するデータを使用して、DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="e56aa-104">アプリケーションがのインスタンスを作成していない、<xref:System.Data.IDataReader>インターフェイスを直接が継承するクラスのインスタンスを作成、<xref:System.Data.IDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="e56aa-105">継承するクラス<xref:System.Data.IDataReader>継承されたメンバーを実装し、通常プロバイダー固有の機能を追加するその他のメンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e56aa-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="e56aa-106">別によって結果セットに加えられた変更を処理またはスレッドのデータの読み込み中を実装するクラスのユーザーに表示される場合があります、`IDataReader`です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="e56aa-107">ただし、正確な動作は、プロバイダーとタイミングに依存するは。</span><span class="sxs-lookup"><span data-stu-id="e56aa-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e56aa-108">次の例は、派生クラスのインスタンスを作成<xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>、および<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e56aa-109">例は、コンソールに書き出し、データを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e56aa-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="e56aa-110">最後に、例、 <xref:System.Data.SqlClient.SqlDataReader>、続いて、<xref:System.Data.SqlClient.SqlConnection>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e56aa-111">.NET Framework データ プロバイダー間の整合性を高める形式で継承するクラスの名前を<paramref name="Prv" />コマンドの where<paramref name="Prv" />は、特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックス。</span>
        <span class="sxs-lookup">
          <span data-stu-id="e56aa-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span>
        </span>
        <span data-ttu-id="e56aa-112">たとえば、<paramref name="Sql" />のプレフィックス、<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラス内で、<see langword="System.Data.SqlClient" />名前空間。</span>
        <span class="sxs-lookup">
          <span data-stu-id="e56aa-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span>
        </span>
        <span data-ttu-id="e56aa-113">ユーザーがのインスタンスを作成しない、<see langword="DataReader" />クラスに直接できます。</span>
        <span class="sxs-lookup">
          <span data-stu-id="e56aa-113">Users do not create an instance of a <see langword="DataReader" /> class directly.</span>
        </span>
        <span data-ttu-id="e56aa-114">代わりに、取得、<see langword="DataReader" />を通じてインスタンス、<see langword="ExecuteReader" />のメソッド、<see langword="Command" />オブジェクト。</span>
        <span class="sxs-lookup">
          <span data-stu-id="e56aa-114">Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object.</span>
        </span>
        <span data-ttu-id="e56aa-115">そのため、マークする必要があります<see langword="DataReader" />内部としてコンス トラクターです。</span>
        <span class="sxs-lookup">
          <span data-stu-id="e56aa-115">Therefore, you should mark <see langword="DataReader" /> constructors as internal.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-116">
            <see cref="T:System.Data.IDataReader" /> オブジェクトを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-116">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-117">明示的に呼び出す必要があります、<xref:System.Data.IDataReader.Close%2A>メソッドを使用しているときに、<xref:System.Data.IDataReader>を使用して、関連付けられている<xref:System.Data.IDbConnection>他の目的。</span><span class="sxs-lookup"><span data-stu-id="e56aa-117">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-118">現在の行の入れ子の深さを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-118">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e56aa-119">入れ子のレベル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-119">The level of nesting.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-120">最も外側のテーブルは深さ 0 です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-120">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-121">
            <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.IDataReader" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-121">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e56aa-122">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-122">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-123">実装<xref:System.Data.IDataReader.GetSchemaTable%2A>.NET Framework Data Provider for OLE DB のメソッドは、OLE DB プロバイダー レイヤーを使用しないで他の .NET Framework データ プロバイダーの実装中に、OLE DB icolumnsrowset::getcolumnsrowset メソッドにマップします。</span><span class="sxs-lookup"><span data-stu-id="e56aa-123">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="e56aa-124">順序<xref:System.Data.IDataReader.GetSchemaTable%2A>によってどのデータ プロバイダーを使用する、テーブル内の各列と、返された DataReader 列に関するメタデータを返しますがによって異なります。</span><span class="sxs-lookup"><span data-stu-id="e56aa-124">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="e56aa-125">次の表は、データ プロバイダーとメンバーを実装する<xref:System.Data.IDataReader.GetSchemaTable%2A>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-125">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="e56aa-126">データ プロバイダー</span><span class="sxs-lookup"><span data-stu-id="e56aa-126">Data Provider</span></span>|<span data-ttu-id="e56aa-127">メンバー</span><span class="sxs-lookup"><span data-stu-id="e56aa-127">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="e56aa-128">.NET data Provider for ODBC</span><span class="sxs-lookup"><span data-stu-id="e56aa-128">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="e56aa-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e56aa-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="e56aa-130">.NET data Provider for OLE DB</span><span class="sxs-lookup"><span data-stu-id="e56aa-130">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="e56aa-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e56aa-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="e56aa-132">.NET data Provider for Oracle</span><span class="sxs-lookup"><span data-stu-id="e56aa-132">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="e56aa-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e56aa-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="e56aa-134">.NET data Provider for SQL Server</span><span class="sxs-lookup"><span data-stu-id="e56aa-134">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="e56aa-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e56aa-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e56aa-136">
            <see cref="T:System.Data.IDataReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-136">The <see cref="T:System.Data.IDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-137">データ リーダーが閉じているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-137">Gets a value indicating whether the data reader is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e56aa-138">データ リーダーが閉じている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-138">
              <see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-139"><xref:System.Data.IDataReader.IsClosed%2A> および<xref:System.Data.IDataReader.RecordsAffected%2A>後に呼び出すことができる唯一のプロパティは、<xref:System.Data.IDataReader>が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="e56aa-139"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-140">バッチ SQL ステートメントの結果を読み取っているときに、次の結果にデータ リーダーを進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-140">Advances the data reader to the next result, when reading the results of batch SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e56aa-141">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-141">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-142">バッチの SQL ステートメントを実行することによって取得できますが、複数の結果を処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e56aa-142">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="e56aa-143">既定では、データ リーダーは、最初の結果に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="e56aa-143">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-144">
            <see cref="T:System.Data.IDataReader" /> を次のレコードに進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-144">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e56aa-145">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-145">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-146">既定の位置、<xref:System.Data.IDataReader>が最初のレコードより前です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-146">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="e56aa-147">そのために呼び出す必要がある<xref:System.Data.IDataReader.Read%2A>データへのアクセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="e56aa-147">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="e56aa-148">データ リーダーを使用して、関連付けられている接続がビジー状態であるサービス、<xref:System.Data.IDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-148">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="e56aa-149">これは、まで続きます<xref:System.Data.IDataReader.Close%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="e56aa-149">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e56aa-150">次の例は、次の 3 つの派生クラスのインスタンスを作成<xref:System.Data.OleDb.OleDbConnection>、 <xref:System.Data.OleDb.OleDbCommand>、および<xref:System.Data.OleDb.OleDbDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-150">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="e56aa-151">例は、コンソールに書き出し、データを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e56aa-151">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="e56aa-152">最後に、例、 <xref:System.Data.OleDb.OleDbDataReader>、続いて、<xref:System.Data.OleDb.OleDbConnection>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-152">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e56aa-153">SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-153">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e56aa-154">変更、挿入、または削除された行の数。影響を受けた行がない、またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e56aa-154">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e56aa-155"><xref:System.Data.IDataReader.RecordsAffected%2A>プロパティが設定されていないすべての行が読み取られ、<xref:System.Data.IDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="e56aa-155">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="e56aa-156"><xref:System.Data.IDataReader.IsClosed%2A> および<xref:System.Data.IDataReader.RecordsAffected%2A>後に呼び出すことができる唯一のプロパティは、<xref:System.Data.IDataReader>が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="e56aa-156"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>