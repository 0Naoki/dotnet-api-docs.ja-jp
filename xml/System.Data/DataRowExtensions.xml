<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36601976c7faf30589ff2204148eeb238ed3bba6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399496" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.DataRow" /> クラスの拡張メソッドを定義します。 これは静的クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> API は、新しい 2 つの方法で拡張されています、<xref:System.Data.DataRow>クラス、<xref:System.Data.DataRowExtensions.Field%2A>と<xref:System.Data.DataRowExtensions.SetField%2A>です。 フォームを使用できます。[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]式およびメソッドのクエリに対して<xref:System.Data.DataTable>オブジェクト。 内の列値にアクセスするのに使用することをお勧めの方法は[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]式およびメソッドのクエリ。 詳細については、次を参照してください。[メソッド ジェネリック Field および SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md)です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" /> の個々の列値に対し、型を厳密に指定してアクセスできます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="column">どの列の値を取得するかを指定する入力 <see cref="T:System.Data.DataColumn" /> オブジェクト。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="column" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、<xref:System.Data.DataSet>は null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>は<xref:System.DBNull.Value>と`T`が参照型または null 許容型は、戻り値の型になります**null**です。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="column" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に **null** 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnIndex">列インデックス。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="columnIndex" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>は**null**と`T`が参照型または null 許容型は、戻り値の型になります**null**です。  <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に **null** 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnName">値を取得する列の名前。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="columnName" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。 A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、<xref:System.Data.DataSet>は null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。 値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>は**null**と`T`が参照型または null 許容型は、戻り値の型になります**null**です。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnName" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に <see langword="null" /> 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="column">どの列の値を取得するかを指定する入力 <see cref="T:System.Data.DataColumn" /> オブジェクト。</param>
        <param name="version">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> および <paramref name="column" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>が null と`T`が参照型または null 許容型は、戻り値の型になります**null**です。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="column" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に **null** 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnIndex">取得する値が格納されている列の、0 から始まる序数。</param>
        <param name="version">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> および <paramref name="ordinal" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>が null と`T`が参照型または null 許容型は、戻り値の型になります**null**です。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に **null** 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnName">値を取得する列の名前。</param>
        <param name="version">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
        <summary>指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
        <returns>
          <paramref name="T" /> および <paramref name="columnName" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>クラスを表します**null**の値を使った、<xref:System.DBNull.Value>のインスタンス、<xref:System.DBNull>クラスです。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]を持つ列にアクセスする式、 **null**値を生成、<xref:System.InvalidCastException>実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドが null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、<xref:System.Data.DataSet>は<xref:System.DBNull.Value>の値が返される null 許容型になります**null**です。  
  
 場合の指定した値<xref:System.Data.DataColumn>が null と`T`が参照型または null 許容型は、戻り値の型になります**null**です。 <xref:System.Data.DataRowExtensions.Field%2A>メソッドは返されません<xref:System.DBNull.Value>です。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>メソッドには、型の変換は行いません。 使用して、列の値を取得する必要がありますまず型変換が必要な場合、<xref:System.Data.DataRowExtensions.Field%2A>メソッドです。 列の値は、別の型に変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnName" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
        <exception cref="T:System.NullReferenceException">Null 非許容型に **null** 値が割り当てられました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="column">取得する行の値は、入力の <see cref="T:System.Data.DataColumn" /> によって指定されます。</param>
        <param name="value">行内の指定された列に設定する新しい <c>T</c> 型の値。</param>
        <summary>
          <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> メソッドは Null 許容型もサポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`value`は**null**、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドに変換、 **null**値を<xref:System.DBNull.Value>、基になる<xref:System.Data.DataColumn>です。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドには、すべての型変換は行いません。 ただし、型変換がまったく発生しないということではありません。 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドの公開、[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]の動作、<xref:System.Data.DataRow>クラスです。 型変換を実行して、<xref:System.Data.DataRow>オブジェクトと変換後の値に保存する行。  
  
 例外を通じて渡されることができます、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドから、基になる<xref:System.Data.DataRow>オブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="column" /> で指定した列が見つかりません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> が **null** です。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行に値を設定しようとしたときに発生します。</exception>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnIndex">値の設定先となる列の、0 から始まる序数。</param>
        <param name="value">行内の指定された列に設定する新しい <c>T</c> 型の値。</param>
        <summary>メソッドを呼び出した <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> メソッドは Null 許容型もサポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`value`は**null**、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドに変換、 **null**値を<xref:System.DBNull.Value>、基になる<xref:System.Data.DataColumn>です。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドには、すべての型変換は行いません。 ただし、型変換がまったく発生しないということではありません。 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドの公開、[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]の動作、<xref:System.Data.DataRow>クラスです。 型変換を実行して、<xref:System.Data.DataRow>オブジェクトと変換後の値に保存する行。  
  
 例外を通じて渡されることができます、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドから、基になる<xref:System.Data.DataRow>オブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行に値を設定しようとしたときに発生します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">引数 <paramref name="ordinal" /> が範囲外です。</exception>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">列の値の型を指定するジェネリック パラメーター。</typeparam>
        <param name="row">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
        <param name="columnName">値の設定先となる列の名前。</param>
        <param name="value">行内の指定された列に設定する新しい <c>T</c> 型の値。</param>
        <summary>
          <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> メソッドは Null 許容型もサポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`value`は**null**、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドに変換、 **null**値を<xref:System.DBNull.Value>、基になる<xref:System.Data.DataColumn>です。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドには、すべての型変換は行いません。 ただし、型変換がまったく発生しないということではありません。 <xref:System.Data.DataRowExtensions.SetField%2A>メソッドの公開、[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]の動作、<xref:System.Data.DataRow>クラスです。 型変換を実行して、<xref:System.Data.DataRow>オブジェクトと変換後の値に保存する行。  
  
 例外を通じて渡されることができます、<xref:System.Data.DataRowExtensions.SetField%2A>メソッドから、基になる<xref:System.Data.DataRow>オブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" /> で指定した列が見つかりません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行に値を設定しようとしたときに発生します。</exception>
        <exception cref="T:System.InvalidCastException">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      </Docs>
    </Member>
  </Members>
</Type>