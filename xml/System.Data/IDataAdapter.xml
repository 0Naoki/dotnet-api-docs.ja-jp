<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataAdapter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54877f267408f77d2e2104534ad5ebe7e397b5b13.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4877f267408f77d2e2104534ad5ebe7e397b5b13</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDataAdapter">
          <source>Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update a data source.</source>
          <target state="translated">オブジェクトが DataAdapter を実装できるようにします。<ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> の格納と更新およびデータ ソースの更新に使用するメソッドとマップ アクション関連プロパティのセットを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <ph id="ph2">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> instances could can use any type of data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> インスタンスは、テキスト コマンド (例: Transact-SQL) を入力するリレーショナル データベースのデータ ソース (またはそれに類似したもの) で、<ph id="ph2">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> インスタンスは任意の型のデータ ソースに使用できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>インターフェイスが継承するクラスをデータ ソース間のブリッジを表す DataAdapter クラスを実装することにより、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For more information about DataAdapter classes, see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>.</source>
          <target state="translated">DataAdapter クラスの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DataAdapter からの DataSet の読み込み<ept id="p1">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface directly, but implements an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph>.</source>
          <target state="translated">アプリケーションがのインスタンスを作成していない、<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>インターフェイスを直接が継承するクラスのインスタンスを実装して<ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</source>
          <target state="translated">継承するクラス<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>継承されたメンバーを実装し、通常プロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface defines a <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method that takes a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> as a parameter.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>インターフェイスを定義、<ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>を受け取るメソッド、<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>をパラメーターとして。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method and also defines two additional overloads of the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method that take an ADO Recordset object as a parameter.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>クラスは継承、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>メソッド定義のオーバー ロードを 2 つ追加して、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>を ADO レコード セット オブジェクトをパラメーターとして受け取るメソッド。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The following example uses the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select records from a database.</source>
          <target state="translated">次の例は、派生クラスを使用して<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、データベースからレコードを選択します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">塗りつぶされた<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>次が返されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>To do this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is a Transact-SQL SELECT statement.</source>
          <target state="translated">これを行うには、メソッドが渡される初期化された<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、接続文字列、およびクエリ文字列では、TRANSACT-SQL SELECT ステートメント。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> DataAdapter where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">.NET Framework データ プロバイダー間の整合性を高める形式で継承するクラスの名前を<ph id="ph1">&lt;paramref name="Prv" /&gt;</ph>DataAdapter 場所<ph id="ph2">&lt;paramref name="Prv" /&gt;</ph>は、特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックス。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;paramref name="Sql" /&gt;</ph>のプレフィックス、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>クラス内で、<ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph> interface, you should implement the following constructors:</source>
          <target state="translated">継承する場合、<ph id="ph1">&lt;see cref="T:System.Data.IDataAdapter" /&gt;</ph>インターフェイスでは、次のコンス トラクターを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 項目</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter()</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> PrvDataAdapter クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(PrvCommand selectCommand)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (PrvCommand selectCommand)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 指定した SQL SELECT ステートメントを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, string selectConnectionString)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (文字列 selectCommandText、文字列 selectConnectionString)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT ステートメントと接続文字列を使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> PrvDataAdapter (文字列 selectCommandText、PrvConnection selectConnection)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> SQL SELECT ステートメントおよび PrvConnection オブジェクトを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">レコードおよび必要に応じてスキーマを格納するための <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Adds or updates rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> name, and creates a <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table".</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 名を使用して、データ ソース内の行と一致するように、<ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 内の行を追加または更新します。また、Table という名前の <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> で正常に追加または更新された行数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">これには、行を返さないステートメントの影響を受ける行は含まれません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> 関連付けられている、指定した SELECT ステートメントを使用してデータ ソースから行を取得<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">前に、接続が閉じられた場合<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>が呼び出されると、そのはデータの取得に開かれた後終了します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">接続が開いている場合の前に<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>が呼び出されると、未処理のままにします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>操作は、先に行を追加する<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>内のオブジェクト、 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>、作成、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>オブジェクトのかどうかは、まだ存在しません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> operation usually creates only column name metadata.</source>
          <target state="translated">作成するときに<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>、オブジェクト、<ph id="ph2">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>操作は、通常のみの列名のメタデータを作成します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">ただし場合、<ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`AddWithKey`</ph>、適切なプライマリ キーと制約も作成されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> が OUTER JOIN の結果を返す場合、<ph id="ph2">`DataAdapter`</ph> は、生成される <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> に <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 値を設定しません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>主キーを定義する<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>重複する列を設定中に検出すると、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、連続した列の名前が生成されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If the incoming data contains unnamed columns, they are put in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">配置されますが、受信データに名前のない列が含まれている場合、<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>に従ってパターン"Column1"、"Column2"などです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is put in a separate table.</source>
          <target state="translated">複数の結果セットが追加されたとき、 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、各結果セットが別のテーブルに格納します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に整数値を追加してという名前です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">アプリケーションは、列やテーブルの名前を使用して、これらの名前付けパターンとの競合が発生しないことを確認する場合、注意を使用してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When the SELECT statement that is used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">ときに設定するために使用する SELECT ステートメント、<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>複数の結果を返すバッチの SQL ステートメントなど、エラーが含まれる結果のいずれかの場合連続するすべての結果はスキップされには追加されません、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>で複数回、同じメソッド<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">主キーが存在する場合は、受信した行が既に存在する行と一致すると共にマージされます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">主キーがない場合、受信行が、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">複数の結果の実装を返す SQL ステートメントのバッチを処理するときに<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph>の .NET Framework データ プロバイダーが最初の結果のみのスキーマ情報を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">データ ソースからのスキーマを格納する <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table" to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">"Table" という名前の <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> を指定された <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> に追加し、指定された <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that contain schema information returned from the data source.</source>
          <target state="translated">データ ソースから返されたスキーマ情報が格納された、<ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph>メソッドを使用してデータ ソースからスキーマを取得、<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">接続オブジェクトに関連付けられている、<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>有効である必要がありますを開く必要はありませんが、します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">前に、接続が閉じられた場合<ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph>が呼び出されると、そのはデータの取得に開かれた後終了します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">接続が開いている場合の前に<ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph>が呼び出されると、未処理のままにします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph>操作は追加、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>変換先に<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">これは、後、列を追加、<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>、次の構成と<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>プロパティ、データ ソースに存在する場合。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">設定する必要があります<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>とは別にします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 構成も行います、<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>に応じて、次の規則のプロパティ。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">1 つまたは複数の主キー列がによって返される場合、<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>の主キー列として使用される、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</source>
          <target state="translated">主キー列は返されませんが、一意の列は場合、は、すべての一意の列が null 非許容の場合は、主キーとしての一意の列が使用されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">任意の列は null を許容すると場合、<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>に追加、 <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>、ですが、<ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>プロパティが設定されていません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">主キー列としての主キー列が使用される主キー列と一意の列の両方が返される場合は、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the previous rules, but other constraint types are not added.</source>
          <target state="translated">主キーと一意の制約が追加することに注意してください、<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>以前の規則が、その他の制約に従って、型は追加されません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">一意のクラスター化または SQL Server テーブルに複数の列にインデックスを定義し、主キー制約は、個別の列のセットで、クラスター化インデックス内の列の名前が返されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For more information about how to specify query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">クエリ ヒントを指定する方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>クエリ ヒント (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>重複する列を設定中に検出すると、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、連続した列の名前が生成されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are put in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">配置されますが、受信データに名前のない列が含まれている場合、<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>に従ってパターン"Column1"、"Column2"などです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is put in a separate table.</source>
          <target state="translated">複数の結果セットが追加されたとき、 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、各結果セットが別のテーブルに格納します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に整数値を追加してという名前です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">アプリケーションは、列やテーブルの名前を使用して、これらの名前付けパターンとの競合が発生しないことを確認する場合、注意を使用してください。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> returns no rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;</ph> 行を返しません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>行を追加する方法、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.GetFillParameters">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.GetFillParameters">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> objects that contains the parameters set by the user.</source>
          <target state="translated">ユーザーが設定したパラメーターが格納された <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</source>
          <target state="translated">割り当てられていないソース テーブルまたはソース列をソース名で渡して、フィルター処理するか、エラーを発生させるかどうかを指示または指定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The default is <ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="Passthrough" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph> property provides the master mapping between the returned records and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;</ph>プロパティは返されたレコードの間のマスター マッピングを提供し、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingMappingAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> values.</source>
          <target state="translated">設定された値が <ph id="ph1">&lt;see cref="T:System.Data.MissingMappingAction" /&gt;</ph> 値の 1 つではありません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</source>
          <target state="translated">存在しないソース テーブル、ソース列、それらのリレーションシップをデータセット スキーマに追加するか、無視するか、またはエラーを発生させるかを表示または指定します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>The default is <ph id="ph1">&lt;see langword="Add" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="Add" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.MissingSchemaAction">
          <source>The value set is not one of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">設定された値が <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 値の 1 つではありません。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>Indicates how a source table is mapped to a dataset table.</source>
          <target state="translated">ソース テーブルをデータセット テーブルに割り当てる方法を示します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>A collection that provides the master mapping between the returned records and the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">返されたレコードと <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> との間のマスター マップを提供するコレクション。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The default value is an empty collection.</source>
          <target state="translated">既定値は空のコレクションです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> uses only the mappings for the source table named "Table".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> "Table"という名前のソース テーブルのマッピングのみが使用されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</source>
          <target state="translated">すべてを選択して、データの値を返すステートメントの INSERT、DELETE、および更新する必要がありますは一貫性のある列の名前付けを使用しています。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</source>
          <target state="translated">レコードで返される列名は一意である必要があります、重複する名前の列が以前のデータを上書きするそれ以外の場合。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataAdapter.TableMappings">
          <source>On <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, only the table mapped to the source table named "Table" will have its changes reconciled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>、"Table"という名前のソース テーブルにマップされているテーブルの変更を調整する必要がのみです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used to update the data source.</source>
          <target state="translated">データ ソースの更新に使用した <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table".</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 内の Table という名前の <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> に含まれる挿入行、更新行、または削除行に対して、INSERT、UPDATE、または DELETE ステートメントを個別に呼び出します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 内で正常に更新された行の数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">アプリケーションを呼び出すと、<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>メソッド、<ph id="ph2">&lt;xref:System.Data.IDataAdapter&gt;</ph>を調べ、<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>プロパティで構成されているインデックスの順序に基づいて、各行の繰り返し、必要な INSERT、UPDATE、または DELETE ステートメントを実行し、<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>内の行の順序付けのため、DELETE ステートメントの後に、INSERT ステートメント、およびし、もう 1 つの DELETE ステートメントの実行可能性があります、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Be aware that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">これらのステートメントは、バッチ処理としては実行されないことに注意してください。各行が個別に更新されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">アプリケーションが呼び出すことができます、<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>メソッドの場合は、一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Dataadapter によるデータ ソースを更新<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>メソッドが例外を生成します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">ただし、作成することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>設定した場合、SQL ステートメントの 1 つのテーブルの更新プログラムを自動的に生成するオブジェクト、 <ph id="ph3">`SelectCommand`</ph> .NET Framework データ プロバイダーのプロパティです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">次に、設定しない追加の SQL ステートメントは、CommandBuilder によって生成されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">この生成ロジックで内に存在するキー列について、<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>メソッドは、更新プログラムを実行する前に最初のマッピングに示されたテーブルから行を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> then updates the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>の値を使用して行を更新、<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">返されるその他の行は無視されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">すべてのデータが読み込まれた後、 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>イベントを発生すると、ユーザーが、調整を検査できるように<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行とその出力、コマンドによって返されるパラメーター。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行が正常に更新される、その行に対する変更が受け入れられます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用する場合<ph id="ph1">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;</ph>実行の順序は、次のようにします。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">内の値、<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>パラメーターの値に移動されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> イベントが発生します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The command executes.</source>
          <target state="translated">コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is put in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">コマンドに設定されている場合<ph id="ph1">`FirstReturnedRecord`</ph>、最初に返された結果に格納し、<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If there are output parameters, they are put in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">出力パラメーターがある場合配置されます、<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> イベントが発生します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> が呼ばれたとき。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> usually has a parameter collection associated with it.</source>
          <target state="translated">各コマンドに関連付けられている、<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>関連付けられているパラメーターのコレクションを持ちます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">パラメーターを使用して、現在行にマップされます、<ph id="ph1">`SourceColumn`</ph>と<ph id="ph2">`SourceVersion`</ph>の .NET Framework データ プロバイダーのプロパティ<ph id="ph3">`Parameter`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.IDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 指す、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列を<ph id="ph3">&lt;xref:System.Data.IDataAdapter&gt;</ph>参照を現在の行のパラメーターの値を取得します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> すべてのテーブル マップを適用する前に、マップされていない列の名前を指します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">場合<ph id="ph1">`SourceColumn`</ph>は存在しない列に実行されるアクションは、次のいずれかに依存<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Enumeration Value</source>
          <target state="translated">列挙値</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Action Taken</source>
          <target state="translated">実行されるアクション</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">ソース列の名前とテーブル名を使用して、<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>マッピングが存在しない場合。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>が生成されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</source>
          <target state="translated">マッピングが明示的に設定されている入力パラメーターのマッピングが欠落は通常、エラーによって発生します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>が生成されます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>出力の値をマップするプロパティを使用しても、または入力/出力パラメーターにバックアップ、<ph id="ph2">`DataSet`</ph>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">存在しない列を参照する場合、例外が生成されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, or <ph id="ph5">`Proposed`</ph> version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>の .NET Framework データ プロバイダーのプロパティ<ph id="ph2">`Parameter`</ph>クラスかどうかを使用する、 <ph id="ph3">`Original`</ph>、 <ph id="ph4">`Current`</ph>、または<ph id="ph5">`Proposed`</ph>列の値のバージョン。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含める頻繁に使用します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">エラーが発生したときに例外を生成せず、更新操作を続行するには設定、<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>呼び出す前に<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">内の行ごとにエラーに応答することがありますも、 <ph id="ph1">`RowUpdated`</ph> DataAdapter のイベントです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">内で例外を生成せず、更新操作を続行する、<ph id="ph1">`RowUpdated`</ph>イベント、設定、<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>に<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> the data source.</source>
          <target state="translated">次の例は、派生クラスを使用して<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>を<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>データ ソース。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">この例では、作成した、<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>