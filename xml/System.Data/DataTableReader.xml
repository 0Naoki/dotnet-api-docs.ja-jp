<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTableReader.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b05c6536b55f3b3e8b451bd60aecebed5db7c3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b05c6536b55f3b3e8b451bd60aecebed5db7c3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> obtains the contents of one or more <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects in the form of one or more read-only, forward-only result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> は、1 つ以上の <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> オブジェクトの内容を、読み取り専用、前方参照専用の 1 つ以上の結果セットとして取得します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> works much like any other data reader, such as the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, except that the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> provides for iterating over rows in a <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>などはその他のデータ リーダーの場合は、同様に機能、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>する点を除いて、<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>内の行を反復処理するための提供、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>In other words, it provides for iterating over rows in a cache.</source>
          <target state="translated">つまり、キャッシュ内の行を反復処理することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The cached data can be modified while the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is active, and the reader automatically maintains its position.</source>
          <target state="translated">キャッシュされたデータを変更できる中に、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>がアクティブで、リーダーの位置を自動的に維持するとします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>When you create a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> object contains one result set with the same data as the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> from which it was created, except for any rows that have been marked as deleted.</source>
          <target state="translated">作成するときに、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>から、 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>、結果として得られる<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>オブジェクトには、1 つを含む結果セットと同じデータが含まれています、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>作成元であることが、削除済みとしてマークされている行は除く。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The columns appear in the same order as in the original <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">元と同じ順序で列が表示される<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The structure of the returned result is identical in schema and data to the original <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">返された結果の構造は、元のスキーマとデータと同じ<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> that was created by calling the <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object contains multiple result sets if the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> contains more than one table.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>呼び出すことによって作成された、<ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>オブジェクトには複数の結果セットが含まれる場合、<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>複数のテーブルが含まれています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The results are in the same sequence as the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph> of the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">結果は、同じシーケンス内の<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>内のオブジェクト、<ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>の<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The returned result set contains only the current version of each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>; rows that are marked for deletion are skipped.</source>
          <target state="translated">返された結果セットには、それぞれの現在のバージョンのみが含まれています。 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>; 削除対象としてマークされた行はスキップされます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>The <ph id="ph1">`DataTableReader`</ph> provides a stable iterator; that is, the contents of the <ph id="ph2">`DataTableReader`</ph> are not invalidated if the size of the underlying collection is modified during iteration.</source>
          <target state="translated"><ph id="ph1">`DataTableReader`</ph>安定は、反復子です。 つまり、の内容、<ph id="ph2">`DataTableReader`</ph>イテレーション中に、基になるコレクションのサイズが変更された場合は無効です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTableReader">
          <source>For example, if one or more rows in the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> collection are deleted or removed during iteration, the current position within the <ph id="ph2">`DataTableReader`</ph> is maintained appropriately and it does not invalidate the iterator.</source>
          <target state="translated">例では、1 つまたは複数の行では、<ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>コレクションが削除または内の現在位置の反復処理で削除された、<ph id="ph2">`DataTableReader`</ph>は適切に維持されます、反復子を無効にしないとします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from which the new <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> obtains its result set.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> が結果セットを取得する <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class by using data from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> のデータを使用して、<ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that supplies the results for the new <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> object.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> オブジェクトの結果を提供する <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> class using the supplied array of <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> オブジェクトの指定した配列を使用して、<ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>If you must create a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> based on all or a subset of the tables within a specific <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, call the <ph id="ph3">`DataSet`</ph>'s <ph id="ph4">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph> method.</source>
          <target state="translated">作成する場合は、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>すべてまたは特定の内のテーブルのサブセットに基づく<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、呼び出し、<ph id="ph3">`DataSet`</ph>の<ph id="ph4">&lt;xref:System.Data.DataSet.CreateDataReader*&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>If you want to create a new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance based on a group of <ph id="ph2">`DataTable`</ph> instances that are not otherwise related, use this constructor.</source>
          <target state="translated">新規作成する場合は、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>インスタンスのグループに基づいて<ph id="ph2">`DataTable`</ph>しないインスタンスにそれ以外の場合、関連するは、このコンス トラクターを使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>You can also take advantage of this constructor to rearrange the ordering of the <ph id="ph1">`DataTables`</ph> within the <ph id="ph2">`DataTableReader`</ph>, if their ordering within their source <ph id="ph3">`DataSet`</ph> does not meet your needs.</source>
          <target state="translated">このコンス トラクターの順序を変更するのもを利用することができます、<ph id="ph1">`DataTables`</ph>内で、<ph id="ph2">`DataTableReader`</ph>場合は、それらのソース内でそれらの順序<ph id="ph3">`DataSet`</ph>ニーズを満たしていません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In the following example, the TestConstructor method creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">次の例では、TestConstructor メソッド 2 つ作成されます<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In order to demonstrate this constructor for the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, the sample creates a new <ph id="ph2">`DataTableReader`</ph> based on an array that contains the two <ph id="ph3">`DataTables`</ph>, and performs a simple operation, printing the contents from the first few columns to the console window.</source>
          <target state="translated">このコンス トラクターを実行するために、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラス、サンプルを作成、新しい<ph id="ph2">`DataTableReader`</ph>を 2 つを含む配列に基づく<ph id="ph3">`DataTables`</ph>内容を印刷する最初のいくつかの列からコンソールに、単純な操作を実行ウィンドウです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>In order to test this application, create a new Console application, and paste the sample code into the newly created file.</source>
          <target state="translated">このアプリケーションをテストするために、新しいコンソール アプリケーションを作成し、サンプル コードを新しく作成されたファイルに貼り付けます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
          <source>The Console window displays the following results:</source>
          <target state="translated">コンソール ウィンドウには、次の結果が表示されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Close">
          <source>Closes the current <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> を閉じます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Close">
          <source>Calling <ph id="ph1">`Close()`</ph> on a closed <ph id="ph2">`DataTableReader`</ph> object does not raise an error.</source>
          <target state="translated">呼び出す<ph id="ph1">`Close()`</ph>、閉じられたで<ph id="ph2">`DataTableReader`</ph>オブジェクトでは、エラーは発生しません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Depth">
          <source>The depth of nesting for the current row of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の現在の行の入れ子の深さ。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source>The depth of nesting for the current row; always zero.</source>
          <target state="translated">現在の行の入れ子の深さ。常に 0 になります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source><ph id="ph1">`DataTableReader`</ph> does not support nesting.</source>
          <target state="translated"><ph id="ph1">`DataTableReader`</ph> 入れ子はサポートされません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Depth">
          <source>The <ph id="ph1">`Depth`</ph> property always returns zero.</source>
          <target state="translated"><ph id="ph1">`Depth`</ph>プロパティは常に 0 を返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.FieldCount">
          <source>Returns the number of columns in the current row.</source>
          <target state="translated">現在の行の列数を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.FieldCount">
          <source>When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</source>
          <target state="translated">有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.FieldCount">
          <source>An attempt was made to retrieve the field count in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 内のフィールド数を取得しようとしました。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">指定した列の値を <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> として取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため取得されたデータ既にブール値か、ブール型に強制変換できるかがあります、例外が生成します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>If the data within the column is not the correct type, the example displays an error message for each row.</source>
          <target state="translated">列内のデータが正しい型でない場合の例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
          <source>The specified column does not contain a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated">指定した列には <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> が含まれていません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>Gets the value of the specified column as a byte.</source>
          <target state="translated">指定された列の値をバイトとして取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</source>
          <target state="translated">変換は実行されません。そのため取得されたデータがバイトかバイトに強制変換できるに既にあります。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetByte(System.Int32)">
          <source>The specified column does not contain a byte.</source>
          <target state="translated">指定した列にバイトが含まれていません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index within the field from which to start the read operation.</source>
          <target state="translated">読み取り操作を開始する位置を示すフィールド内のインデックス。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">バイトのストリームを読み込むバッファー。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index within the buffer at which to start placing the data.</source>
          <target state="translated">バッファー内でデータの配置を開始するインデックス。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大長。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</source>
          <target state="translated">指定したバッファー オフセットを開始位置として、指定した列オフセットから始まる文字のストリームをバッファーに配列として読み込みます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes read.</source>
          <target state="translated">実際に読み取られたバイト数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">`GetBytes`</ph> returns the number of available bytes in the field.</source>
          <target state="translated"><ph id="ph1">`GetBytes`</ph> フィールドに使用できるバイト数を返します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>Most of the time this is the exact length of the field.</source>
          <target state="translated">ほとんどの場合これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetBytes`</ph>バイトを取得するフィールドからは既に使用されています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>This may be the case, for example, when the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is reading a large data structure into a buffer</source>
          <target state="translated">たとえば、ケース可能性があります、ときに、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>バッファーへの大規模なデータ構造体の読み込みが</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic), <ph id="ph3">`GetBytes`</ph> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">バッファーを渡した場合<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph> Visual Basic で)、<ph id="ph3">`GetBytes`</ph>バッファー オフセット パラメーターに基づく残りサイズではなくバイト単位で全体のフィールドの長さを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</source>
          <target state="translated">変換は実行されません。したがって取得されたデータおく必要があります、バイト配列またはバイト配列に強制します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</source>
          <target state="translated">次の例を作成、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> C:\ フォルダー内の別のファイルを取得して、各イメージの保存、AdventureWorks サンプル データベース内のデータに基づきます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</source>
          <target state="translated">このアプリケーションをテストするために、新しいコンソール アプリケーションを作成、System.Drawing.dll アセンブリを参照およびサンプル コードを新しく作成されたファイルに貼り付けます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <source>The specified column does not contain a byte array.</source>
          <target state="translated">指定した列にはバイト配列が含まれていません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>Gets the value of the specified column as a character.</source>
          <target state="translated">指定した列の値を文字として取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The value of the column.</source>
          <target state="translated">列の値。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</source>
          <target state="translated">変換は実行されません。そのため取得されたデータが文字または文字を強制に既にあります。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</source>
          <target state="translated">次の例では、番号付きの渡された DataTableReader 内で 2 列の内容を表示します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChar(System.Int32)">
          <source>The specified field does not contain a character.</source>
          <target state="translated">指定したフィールドに文字が含まれていません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index within the field from which to start the read operation.</source>
          <target state="translated">読み取り操作を開始する位置を示すフィールド内のインデックス。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The buffer into which to read the stream of chars.</source>
          <target state="translated">char のストリームの読み込み先のバッファー。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index within the buffer at which to start placing the data.</source>
          <target state="translated">バッファー内でデータの配置を開始するインデックス。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大長。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Returns the value of the specified column as a character array.</source>
          <target state="translated">指定された列の値を 1 つの文字配列として返します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters read.</source>
          <target state="translated">実際に読み取られた文字数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`GetChars`</ph> returns the number of available characters in the field.</source>
          <target state="translated"><ph id="ph1">`GetChars`</ph> フィールドに使用できる文字数を返します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Most of the time this is the exact length of the field.</source>
          <target state="translated">ほとんどの場合これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetChars`</ph>フィールドから文字を取得するは既に使用されています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters read can be less than the requested length, if the end of the field is reached.</source>
          <target state="translated">実際に読み取られた文字数は、フィールドの末尾に達した場合、要求された長さよりも小さいできます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>If you pass a buffer that is null (<ph id="ph1">`Nothing`</ph> in Visual Basic), <ph id="ph2">`GetChars`</ph> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">Null であるバッファーを渡す場合 (<ph id="ph1">`Nothing`</ph> Visual Basic で)、<ph id="ph2">`GetChars`</ph>文字バッファー オフセット パラメーターに基づく残りサイズではなく全体のフィールドの長さを返します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</source>
          <target state="translated">変換は実行されません。そのため、データを取得する必要があります文字配列または文字列の配列に強制します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">`GetChars`</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">`GetChars`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`TestGetChars`</ph> method expects to be passed a <ph id="ph2">`DataTableReader`</ph> filled with two columns of data: a file name in the first column, and an array of characters in the second.</source>
          <target state="translated"><ph id="ph1">`TestGetChars`</ph>メソッドが渡されるが必要ですが、 <ph id="ph2">`DataTableReader`</ph> 2 列のデータを格納: 最初の列と 2 番目の文字の配列内のファイル名。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>In addition, <ph id="ph1">`TestGetChars`</ph> lets you specify the buffer size to be used as it reads the data from the character array in the <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">さらに、<ph id="ph1">`TestGetChars`</ph>内の文字配列からデータを読み取るときに使用するバッファー サイズを指定することができます、<ph id="ph2">`DataTableReader`</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`TestGetChars`</ph> creates a file corresponding to each row of data in the <ph id="ph2">`DataTableReader`</ph>, using the supplied data in the first column of the <ph id="ph3">`DataTableReader`</ph> as the file name.</source>
          <target state="translated"><ph id="ph1">`TestGetChars`</ph> 内のデータの各行に対応するファイルを作成、<ph id="ph2">`DataTableReader`</ph>の最初の列で、指定されたデータを使用して、<ph id="ph3">`DataTableReader`</ph>ファイル名として。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>This procedure demonstrates the use of the <ph id="ph1">`GetChars`</ph> method reading data that was stored in the <ph id="ph2">`DataTable`</ph> as a character array.</source>
          <target state="translated">この手順の使用方法を示します、<ph id="ph1">`GetChars`</ph>メソッドに格納されていたデータの読み取り、<ph id="ph2">`DataTable`</ph>文字配列として。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>Any other type of data causes the <ph id="ph1">`GetChars`</ph> method to throw an <ph id="ph2">`InvalidCastException`</ph>.</source>
          <target state="translated">データの原因の他の種類、<ph id="ph1">`GetChars`</ph>をスローするメソッド、<ph id="ph2">`InvalidCastException`</ph>です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <source>The specified column does not contain a character array.</source>
          <target state="translated">指定した列には文字配列が含まれていません。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>Gets a string representing the data type of the specified column.</source>
          <target state="translated">指定した列のデータ型を示す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>A string representing the column's data type.</source>
          <target state="translated">列のデータ型を示す文字列。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetDataTypeName%2A&gt;</ph> method always returns the type of the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> instead of a provider-specific type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader.GetDataTypeName%2A&gt;</ph>メソッドは常に、基になる型を返します<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>プロバイダー固有の型の代わりにします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The following console application displays a list of fields and their type names from a simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>:</source>
          <target state="translated">次のコンソール アプリケーションには、フィールドと、単純なそれぞれの種類の名前の一覧が表示されます<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>:。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The Console window displays the following results:</source>
          <target state="translated">コンソール ウィンドウには、次の結果が表示されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">指定された列の値を <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> オブジェクトとして取得します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> or coercible to a <ph id="ph2">`DataTime`</ph>.</source>
          <target state="translated">変換は実行されません。取得されたデータが既ににする必要がありますので、<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>に強制変換、または、<ph id="ph2">`DataTime`</ph>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
          <source>The specified column does not contain a DateTime value.</source>
          <target state="translated">指定した列に DateTime 値が含まれていません。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">指定した列の値を <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> として取得します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or coercible to a <ph id="ph2">`Decimal`</ph>.</source>
          <target state="translated">変換は実行されません。取得されたデータが既ににする必要がありますので、<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>に強制変換、または、<ph id="ph2">`Decimal`</ph>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
          <source>The specified column does not contain a <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> value.</source>
          <target state="translated">指定した列には <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> 値が含まれていません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The zero-based ordinal of the column.</source>
          <target state="translated">列の 0 から始まる序数。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>Gets the value of the column as a double-precision floating point number.</source>
          <target state="translated">列の値を倍精度浮動小数点数値として取得します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</source>
          <target state="translated">変換は実行されません。したがって取得されたデータは、倍精度浮動小数点数が既にあります。 または倍精度浮動小数点数に強制変換できる必要があります。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see langword="DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetDouble(System.Int32)">
          <source>The specified column does not contain a double-precision floating point number.</source>
          <target state="translated">指定した列に倍精度浮動小数点数が格納されていません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Returns an enumerator that can be used to iterate through the item collection.</source>
          <target state="translated">項目のコレクションを反復処理するために使用できる列挙子を返します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that represents the item collection.</source>
          <target state="translated">項目のコレクションを表す <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Enumerators only allow for reading the data in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">列挙子のみでのデータの読み取りを許可する、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>At first, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初は、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">この位置で、呼び出す<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">`MoveNext`</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">`Current`</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">`MoveNext`</ph> の値を読み取る前に、<ph id="ph2">`Current`</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source><ph id="ph1">`Current`</ph> returns a <ph id="ph2">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>, and returns the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">`Current`</ph> 返します、 <ph id="ph2">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>、いずれかのまで同じオブジェクトを返しますと<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source><ph id="ph1">`MoveNext`</ph> sets <ph id="ph2">`Current`</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">`MoveNext`</ph> は、<ph id="ph2">`Current`</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">`MoveNext`</ph> returns false.</source>
          <target state="translated">列挙子が呼び出すと、コレクション内の最後の要素の後ろに配置され、コレクションの末尾が渡されると、 <ph id="ph1">`MoveNext`</ph> false を返します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>If the last call to <ph id="ph1">`MoveNext`</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">`Current`</ph> throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">`MoveNext`</ph>返される<ph id="ph2">`false`</ph>、呼び出し元<ph id="ph3">`Current`</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>In addition, because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> provides forward-only access to its data, calling the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method of the IEnumerator throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">さらに、ため、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>順方向専用のアクセスを呼び出し、そのデータを提供、 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 、IEnumerator のメソッドをスロー、<ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> provides a stable enumerator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>安定した列挙子を提供します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> is still valid.</source>
          <target state="translated">つまり、基になるデータ内の行の削除や追加が発生した場合でもへの呼び出しによって返される列挙子<ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph>がまだ有効です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader.GetEnumerator%2A&gt;</ph> メソッドの使用例を次に示します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>This includes the behavior of the enumerator when rows are deleted from the underlying <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> while the enumerator is active.</source>
          <target state="translated">これから、基になる行が削除されたときに、列挙子の動作が含まれます<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>列挙子がアクティブな状態です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>The procedure displays the following text in the Console window:</source>
          <target state="translated">プロシージャには、コンソール ウィンドウに次のテキストが表示されます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetEnumerator">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">オブジェクトのデータ型である <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">オブジェクトのデータ型である <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>Call the following procedure, passing in a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance in order to display a list of all the fields and the full name for each type in the Console window.</source>
          <target state="translated">渡して、次の手順を呼び出して、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>コンソール ウィンドウで、すべてのフィールドと各型の完全な名前の一覧を表示するためにインスタンス。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>Gets the value of the specified column as a single-precision floating point number.</source>
          <target state="translated">指定された列の値を単精度浮動小数点値として取得します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The value of the column.</source>
          <target state="translated">列の値。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</source>
          <target state="translated">変換は実行されません。したがって取得されたデータは、単精度浮動小数点数が既にあります。 または単精度浮動小数点数に強制変換できる必要があります。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetFloat(System.Int32)">
          <source>The specified column does not contain a single-precision floating point number.</source>
          <target state="translated">指定した列に単精度浮動小数点数が格納されていません。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>Gets the value of the specified column as a globally-unique identifier (GUID).</source>
          <target state="translated">指定された列の値をグローバル一意識別子 (GUID) として取得します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>No conversions are performed; therefore the data retrieved must already be a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> or coercible to a <ph id="ph2">`Guid`</ph>.</source>
          <target state="translated">変換は実行されません。取得されたデータが既ににする必要がありますので、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>に強制変換、または、<ph id="ph2">`Guid`</ph>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</source>
          <target state="translated">次の例では、番号付きの渡された DataTableReader 内で 2 列の内容を表示します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetGuid(System.Int32)">
          <source>The specified column does not contain a GUID.</source>
          <target state="translated">指定した列に GUID が含まれていません。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>Gets the value of the specified column as a 16-bit signed integer.</source>
          <target state="translated">指定した列の値を 16 ビット符号付き整数として取得します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int16&gt;</ph> or coercible to an <ph id="ph2">`Int16`</ph>.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、<ph id="ph1">&lt;xref:System.Int16&gt;</ph>に強制変換、または、<ph id="ph2">`Int16`</ph>です。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt16(System.Int32)">
          <source>The specified column does not contain a 16-bit signed integer.</source>
          <target state="translated">指定した列に 16 ビット符号付き整数が格納されていません。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>Gets the value of the specified column as a 32-bit signed integer.</source>
          <target state="translated">指定された列の値を 32 ビット符号付き整数として取得します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> or coercible to an <ph id="ph2">`Int32`</ph>.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、<ph id="ph1">&lt;xref:System.Int32&gt;</ph>に強制変換、または、<ph id="ph2">`Int32`</ph>です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt32(System.Int32)">
          <source>The specified column does not contain a 32-bit signed integer value.</source>
          <target state="translated">指定した列に 32 ビット符号付き整数値が格納されていません。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>Gets the value of the specified column as a 64-bit signed integer.</source>
          <target state="translated">指定された列の値を 64 ビット符号付き整数として取得します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>No conversions are performed; therefore, the data retrieved must already be an <ph id="ph1">&lt;xref:System.Int64&gt;</ph> or coercible to an <ph id="ph2">`Int64`</ph>.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、<ph id="ph1">&lt;xref:System.Int64&gt;</ph>に強制変換、または、<ph id="ph2">`Int64`</ph>です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>If the data within the column is not of the correct type, the example displays an error message for each row.</source>
          <target state="translated">適切な型の列内のデータがない場合は、例には、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetInt64(System.Int32)">
          <source>The specified column does not contain a 64-bit signed integer value.</source>
          <target state="translated">指定した列に 64 ビット符号付き整数値が格納されていません。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>Gets the value of the specified column as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">指定した列の値を <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> として取得します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The name of the specified column.</source>
          <target state="translated">指定された列の名前。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The <ph id="ph1">`GetName`</ph> and <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> methods provide inverse functionality.</source>
          <target state="translated"><ph id="ph1">`GetName`</ph>と<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph>メソッドは逆の機能を提供します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>That is, calling <ph id="ph1">`GetOrdinal`</ph> on the return value of calling <ph id="ph2">`GetName`</ph> should return the original parameter passed to <ph id="ph3">`GetName`</ph>; the same applies to calling the procedures in the opposite order.</source>
          <target state="translated">つまり、呼び出す<ph id="ph1">`GetOrdinal`</ph>呼び出しの戻り値の<ph id="ph2">`GetName`</ph>に渡された元のパラメーターを返す必要があります<ph id="ph3">`GetName`</ph>; 順序は逆に、プロシージャの呼び出しにも当てはまります。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The following simple example includes a procedure that lists the names of all the columns within the specified <ph id="ph1">`DataTableReader`</ph>, and the column's ordinal position, to the Console window.</source>
          <target state="translated">単純な例次にはには、指定したすべての列の名前を一覧表示するプロシージャが含まれます。 <ph id="ph1">`DataTableReader`</ph>、コンソール ウィンドウに、列の序数。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetName(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The name of the column.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Gets the column ordinal, given the name of the column.</source>
          <target state="translated">列の名前を指定して、列の序数を取得します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Because most of the methods provided by the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class must be provided with an ordinal column number, you can use the <ph id="ph2">`GetOrdinal`</ph> method to retrieve the column number, given the name of the column.</source>
          <target state="translated">メソッドのほとんどは、によって提供されるため、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラスが使用することができますを序数の列番号で指定する必要があります、<ph id="ph2">`GetOrdinal`</ph>列の名前を指定された列数を取得します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source><ph id="ph1">`GetOrdinal`</ph> performs a case-sensitive lookup first.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph> 最初に区別する検索を実行します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">失敗した場合、2 番目の検索が行われます。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If the column number is not found an <ph id="ph1">`IndexOutOfRangeException`</ph> is thrown.</source>
          <target state="translated">列番号が見つからない場合、<ph id="ph1">`IndexOutOfRangeException`</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source><ph id="ph1">`GetOrdinal`</ph> is kana-width insensitive.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph> カタカナの全角区別されません。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id="ph1">`GetOrdinal`</ph> within a loop.</source>
          <target state="translated">呼び出す効率的ではありません序数に基づく参照は、名前による参照よりも効率的であるため<ph id="ph1">`GetOrdinal`</ph>ループ内で。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>Save time by calling <ph id="ph1">`GetOrdinal`</ph> one time and assigning the results to an integer variable for use within the loop</source>
          <target state="translated">呼び出すことによって、時間を節約<ph id="ph1">`GetOrdinal`</ph>1 回は、ループ内で使用する整数の変数に結果を割り当てる</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</source>
          <target state="translated">列名のみがあれば、場合、列名はユーザーが、指定した列から情報を取得する必要があります、必要な情報を抽出する次のようにプロシージャを使用することができます。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> :</source>
          <target state="translated">この例では、プロシージャは、列名を受け取りの現在の行の列に含まれるデータを返す、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetOrdinal(System.String)">
          <source>The name specified is not a valid column name.</source>
          <target state="translated">指定された名前は、有効な列名ではありません。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>Gets the type of the specified column in provider-specific format.</source>
          <target state="translated">指定した列の型をプロバイダー固有の形式で取得します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is the data type of the object.</source>
          <target state="translated">オブジェクトのデータ型である <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the value returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> method always returns the same type as the type stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>常に、基になる内で格納されている型を返します<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>、呼び出すことによって返される値、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph>メソッドは常に格納されている型と同じ型、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph> method returns the same type as calling the <ph id="ph3">&lt;xref:System.Type.GetType%2A&gt;</ph> method.</source>
          <target state="translated">使用するときに、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラス、呼び出し、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A&gt;</ph>メソッドを呼び出すことと同じ型を返します、<ph id="ph3">&lt;xref:System.Type.GetType%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The zero-based number of the column whose value is retrieved.</source>
          <target state="translated">値を取得した列の、0 から始まるインデックス番号。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>Gets the value of the specified column in provider-specific format.</source>
          <target state="translated">指定した列の値をプロバイダー固有の形式で取得します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The value of the specified column in provider-specific format.</source>
          <target state="translated">プロバイダー固有の形式による、指定した列の値。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the value returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> method always returns data of the same type as the data stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>常に、基になる内で格納されている型を返します<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>、呼び出すことによって返される値、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph>メソッドは常に格納されたデータと同じ型のデータ、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph> method returns the same value and type as calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">使用するときに、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラス、呼び出し、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValue%2A&gt;</ph>メソッドと同じ値し、として呼び出し元の型を返します、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph></source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An array of objects to be filled in with type information for the columns in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列の型情報を格納するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>Fills the supplied array with provider-specific type information for all the columns in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">指定された配列に、<ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> のすべての列に関するプロバイダー固有の型の情報を格納します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>The number of column values copied into the array.</source>
          <target state="translated">配列にコピーされる列の値の数。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> always returns the data of the type stored within the underlying <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>, the values returned by calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> method is always of the same types as the data stored within the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>常に、基になる内に格納された型のデータを返します<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>、呼び出すことによって返される値、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph>内に格納されたデータと同じ型のメソッドは、常に、<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>When you work with the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph> method returns the same values and types as calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> method.</source>
          <target state="translated">使用するときに、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラス、呼び出し、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetProviderSpecificValues%2A&gt;</ph>メソッドの呼び出しと同じ値と型を返します、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata of the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> の列メタデータを記述する <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata.</source>
          <target state="translated">列メタデータを記述する <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The GetSchemaTable method returns metadata about each column in the following order:</source>
          <target state="translated">GetSchemaTable メソッドは、次の順序で各列に関するメタデータを返します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DataReader column</source>
          <target state="translated">DataReader 列</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnName</source>
          <target state="translated">ColumnName</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the column as it appears in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">列の名前が表示されます、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnOrdinal</source>
          <target state="translated">ColumnOrdinal</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The ordinal of the column</source>
          <target state="translated">列の序数</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnSize</source>
          <target state="translated">ColumnSize</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>-1 if the <ph id="ph1">&lt;xref:System.Data.Common.SchemaTableColumn.ColumnSize&gt;</ph> (or <ph id="ph2">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph>) property of the <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the <ph id="ph4">`MaxLength`</ph> value.</source>
          <target state="translated">場合は-1、 <ph id="ph1">&lt;xref:System.Data.Common.SchemaTableColumn.ColumnSize&gt;</ph> (または<ph id="ph2">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph>) のプロパティ、<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>特定できないか、関連する、それ以外ではありません 0 または正の整数を含む、<ph id="ph4">`MaxLength`</ph>値。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>NumericPrecision</source>
          <target state="translated">NumericPrecision</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the column type is a numeric type, this is the maximum precision of the column.</source>
          <target state="translated">列のデータ型が数値型の場合は、これは、列の最大有効桁数です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the column type is not a numeric data type, this is a null value.</source>
          <target state="translated">列のデータ型が数値データ型でない場合は、これは、null 値になります。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>NumericScale</source>
          <target state="translated">NumericScale</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If column data type has a scale component, return the number of digits to the right of the decimal point.</source>
          <target state="translated">列のデータ型コンポーネントは、小数点以下桁数、小数点の右側に桁の数字の数を返します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, return a null value.</source>
          <target state="translated">それ以外の場合、null 値を返します。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DataType</source>
          <target state="translated">DataType</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The underlying type of the column.</source>
          <target state="translated">列の基になる型。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ProviderType</source>
          <target state="translated">ProviderType</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The indicator of the column's data type.</source>
          <target state="translated">列のデータ型のインジケーター。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>If the data type of the column varies from row to row, this value is <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">この値は、列のデータ型は、行ごとに変化する場合<ph id="ph1">&lt;xref:System.Object&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This column cannot contain a null value.</source>
          <target state="translated">この列は、null 値を含めることはできません。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsLong</source>
          <target state="translated">IsLong</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the data type of the column is <ph id="ph2">&lt;xref:System.String&gt;</ph> and its <ph id="ph3">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph> property is -1.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 列のデータ型が場合<ph id="ph2">&lt;xref:System.String&gt;</ph>とその<ph id="ph3">&lt;xref:System.Data.DataColumn.MaxLength%2A&gt;</ph>プロパティは-1。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
          <target state="translated">それ以外の場合は <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AllowDBNull</source>
          <target state="translated">AllowDBNull</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the AllowDbNull constraint is set to true for the column; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> AllowDbNull 制約が設定されている場合、列が true とそれ以外の場合、<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsReadOnly</source>
          <target state="translated">IsReadOnly</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph> if the column cannot be modified; otherwise <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 場合は、列を変更できません。それ以外の場合<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsRowVersion</source>
          <target state="translated">IsRowVersion</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>, for every column.</source>
          <target state="translated"><ph id="ph1">`false`</ph>、すべての列です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsUnique</source>
          <target state="translated">IsUnique</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: No two rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> can have the same value in this column.</source>
          <target state="translated"><ph id="ph1">`true`</ph>: で 2 つの行、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>この列の値が同じであることができます。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`IsUnique`</ph> is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</source>
          <target state="translated"><ph id="ph1">`IsUnique`</ph> この列にのみ適用される UNIQUE 型の制約があるかどうかはそれ自体またはによって列がキーを表す場合は true である保証されます。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column can contain duplicate values in the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列に重複する値を含めることができます、<ph id="ph2">`DataTable`</ph>です。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default of this column is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">この列の既定値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsKey</source>
          <target state="translated">IsKey</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: The column is one of a set of columns that, taken together, uniquely identify the row in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>: 列は、一連の列の 1 つ、まとめると、内の行を一意に識別、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The set of columns with <ph id="ph1">`IsKey`</ph> set to <ph id="ph2">`true`</ph> must uniquely identify a row in the <ph id="ph3">`DataTable`</ph>.</source>
          <target state="translated">列のセット<ph id="ph1">`IsKey`</ph>'éý'<ph id="ph2">`true`</ph>内の行を一意に識別する必要があります、<ph id="ph3">`DataTable`</ph>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>There is no requirement that this set of columns is a minimal set of columns.</source>
          <target state="translated">この列のセットが列の最小セットである必要はありません。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This set of columns may be generated from a <ph id="ph1">`DataTable`</ph> primary key, a unique constraint or a unique index.</source>
          <target state="translated">この列のセットを生成することがあります、<ph id="ph1">`DataTable`</ph>主キー、unique 制約または一意のインデックス。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column is not required to uniquely identify the row.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列は、行を一意に識別する必要はありません。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This value is <ph id="ph1">`true`</ph> if the column participates in a single or composite primary key.</source>
          <target state="translated">この値は<ph id="ph1">`true`</ph>列は、単一または複合主キーに参加している場合。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Otherwise, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">それ以外の場合、その値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>IsAutoIncrement</source>
          <target state="translated">IsAutoIncrement</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`true`</ph>: The column assigns values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`true`</ph>: 列は、固定された増分で新しい行に値を割り当てます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`false`</ph>: The column does not assign values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列は、固定された増分で新しい行に値を割り当てられません。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default of this column is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">この列の既定値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseCatalogName</source>
          <target state="translated">BaseCatalogName</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the catalog in the data store that contains the column.</source>
          <target state="translated">列を含むデータ ストア内のカタログの名前。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source><ph id="ph1">`Null`</ph> if the base catalog name cannot be determined.</source>
          <target state="translated"><ph id="ph1">`Null`</ph> 場合は、基本のカタログ名を特定できません。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default value for this column is a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">この列の既定値は、<ph id="ph1">`null`</ph>値。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseSchemaName</source>
          <target state="translated">BaseSchemaName</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>This value is always <ph id="ph1">`Null`</ph>.</source>
          <target state="translated">この値は常に<ph id="ph1">`Null`</ph>です。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseTableName</source>
          <target state="translated">BaseTableName</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> の名前。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseColumnName</source>
          <target state="translated">BaseColumnName</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The name of the column in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">内の列の名前、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AutoIncrementSeed</source>
          <target state="translated">AutoIncrementSeed</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>AutoIncrementStep</source>
          <target state="translated">AutoIncrementStep</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>DefaultValue</source>
          <target state="translated">DefaultValue</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.DefaultValue%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataColumn.DefaultValue%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Expression</source>
          <target state="translated">正規表現</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The expression string, if the current column is an expression column and all columns used in the expression belong to the same <ph id="ph1">`T:System.Data.DataTable`</ph> that contains the expression column; otherwise <ph id="ph2">`null`</ph>.</source>
          <target state="translated">現在の列が式列と同じ式で使用されるすべての列が属している場合は、式の文字列<ph id="ph1">`T:System.Data.DataTable`</ph>式列を含むです。 それ以外の場合<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>ColumnMapping</source>
          <target state="translated">ColumnMapping</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.MappingType&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.MappingType&gt;</ph>に関連付けられた値、<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The type can be one of <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`Element`</ph>, <ph id="ph3">`Hidden`</ph>, or <ph id="ph4">`SimpleContent`</ph>.</source>
          <target state="translated">型には、いずれかを指定できます<ph id="ph1">`Attribute`</ph>、 <ph id="ph2">`Element`</ph>、 <ph id="ph3">`Hidden`</ph>、または<ph id="ph4">`SimpleContent`</ph>です。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The default value is <ph id="ph1">`Element`</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">`Element`</ph> です。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseTableNamespace</source>
          <target state="translated">BaseTableNamespace</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>BaseColumnNamespace</source>
          <target state="translated">BaseColumnNamespace</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>'s <ph id="ph2">&lt;xref:System.Data.DataColumn.Namespace%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>の<ph id="ph2">&lt;xref:System.Data.DataColumn.Namespace%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The following console application example retrieves schema information about the specified column.</source>
          <target state="translated">次のコンソール アプリケーションの例では、指定された列に関するスキーマ情報を取得します。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>Pass the <ph id="ph1">`DisplaySchemaTableInfo`</ph> procedure a <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph> and an integer representing the ordinal position of a column within the <ph id="ph3">`DataTableReader`</ph>, and the procedure outputs schema information to the console window.</source>
          <target state="translated">渡す、<ph id="ph1">`DisplaySchemaTableInfo`</ph>プロシージャ、<ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>および内の列の序数位置を表す整数を<ph id="ph3">`DataTableReader`</ph>と、プロシージャは、コンソール ウィンドウにスキーマ情報を出力します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetSchemaTable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> が閉じています。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>Gets the value of the specified column as a string.</source>
          <target state="translated">指定した列の値を文字列として取得します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>Call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>このメソッドを呼び出す前に null 値があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>If the data within the column of the correct type, the example displays an error message for each row.</source>
          <target state="translated">場合の例、適切な型の列内のデータには、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetString(System.Int32)">
          <source>The specified column does not contain a string.</source>
          <target state="translated">指定した列に文字列が含まれていません。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Gets the value of the specified column in its native format.</source>
          <target state="translated">指定した列の値をネイティブ形式で取得します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="DBNull" /&gt;</ph> for null columns.</source>
          <target state="translated">null 列の場合は、<ph id="ph1">&lt;see langword="DBNull" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Although you can call <ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph> to see if there are null values before calling this method, you do not have to do this.</source>
          <target state="translated">呼び出すことができます<ph id="ph1">&lt;xref:System.Data.DataTableReader.IsDBNull%2A&gt;</ph>して、このメソッドを呼び出す前に null 値がある場合はこれを実行する必要はありません。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The following example iterates through all the columns within the current row in a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, displaying the contents of each column and the column name.</source>
          <target state="translated">次の例は、すべての列内の現在の行を反復処理、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>、各列と列名の内容が表示されます。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>Generally, if your intent is to work with all the columns within a row retrieved by a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, consider using the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph> method instead, because it is more efficient.</source>
          <target state="translated">一般に、によって取得された行の中のすべての列を操作するが目的の場合、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>、使用を検討して、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValues%2A&gt;</ph>メソッド代わりより効率的になっているためです。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValue(System.Int32)">
          <source>An attempt was made to read or access columns in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> into which to copy the column values from the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> の列の値のコピー先である <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>Populates an array of objects with the column values of the current row.</source>
          <target state="translated">オブジェクトの配列に現在行の列値を設定します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The number of column values copied into the array.</source>
          <target state="translated">配列にコピーされる列の値の数。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</source>
          <target state="translated">ほとんどのアプリケーションは、このメソッドは、各列を個別に取得する代わりに、すべての列を取得するための効率的な手段を提供します。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>If your intent is to retrieve all the column values from a row within the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, the <ph id="ph2">`GetValues`</ph> method provides the most efficient solution.</source>
          <target state="translated">内の行からすべての列値を取得するを目的のかどうか、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>、<ph id="ph2">`GetValues`</ph>メソッドは、最も効率的なソリューションを提供します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>You can pass an <ph id="ph1">&lt;xref:System.Object&gt;</ph> array that contains fewer than the number of columns that are contained in the resulting row.</source>
          <target state="translated">渡すことができます、<ph id="ph1">&lt;xref:System.Object&gt;</ph>結果の行に含まれる列数より少ないを格納する配列。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>Only the amount of data the <ph id="ph1">`Object`</ph> array can hold is copied to the array.</source>
          <target state="translated">データの量のみ、<ph id="ph1">`Object`</ph>配列が配列にコピーを保持することができます。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>You can also pass an <ph id="ph1">`Object`</ph> array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</source>
          <target state="translated">渡すことも、<ph id="ph1">`Object`</ph>配列の長さが、メソッドの呼び出しによって、その他の配列要素のままの場合がそのまま結果の行に含まれる列の数を超える。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>This method places <ph id="ph1">`DBNull`</ph> in the output array for null columns.</source>
          <target state="translated">このメソッドは<ph id="ph1">`DBNull`</ph>出力配列内の null 列です。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例では、指定された現在の行からすべての値を読み取る適切なサイズである配列の使用方法を示します<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</source>
          <target state="translated">さらに、使用可能な列の数より大きいか小さい可能性のある固定サイズの配列を使用するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.GetValues(System.Object[])">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.HasRows">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> contains one or more rows.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> に 1 行以上の行が格納されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> contains one or more rows; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">1 行以上の行が <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> に含まれている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The <ph id="ph1">`HasRows`</ph> property returns information about the current result set.</source>
          <target state="translated"><ph id="ph1">`HasRows`</ph>プロパティは、現在の結果セットに関する情報を返します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> contains multiple result sets, you can examine the value of the <ph id="ph2">`HasRows`</ph> property immediately after you call the <ph id="ph3">&lt;xref:System.Data.DataTableReader.NextResult%2A&gt;</ph> method in order to determine whether the new result set contains rows.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>複数の結果を含む、セットの値を確認することができます、<ph id="ph2">`HasRows`</ph>プロパティを呼び出した後すぐに、<ph id="ph3">&lt;xref:System.Data.DataTableReader.NextResult%2A&gt;</ph>新しい結果セットに行が含まれているかどうかを判断するためのメソッドです。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>Use the <ph id="ph1">`HasRows`</ph> property to avoid the requirement to call the <ph id="ph2">&lt;xref:System.Data.DataTableReader.Read%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> if there are no rows within the current result set.</source>
          <target state="translated">使用して、<ph id="ph1">`HasRows`</ph>プロパティを呼び出すという要件を避けるために、<ph id="ph2">&lt;xref:System.Data.DataTableReader.Read%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>現在の結果セット内の行が存在しない場合。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The following example fills two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances with data.</source>
          <target state="translated">次の例では、2 つを塗りつぶします<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>インスタンス データを使用します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The first <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains one row, and the second contains no rows.</source>
          <target state="translated">最初の<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>1 つの行を含む、2 番目に行が含まれていません。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.HasRows">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains both <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects, and calls the PrintData method to display the contents of each, checking the value of the <ph id="ph3">&lt;xref:System.Data.DataTableReader.HasRows%2A&gt;</ph> property of each before it makes the call to PrintData.</source>
          <target state="translated">作成し、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>両方を含む<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>オブジェクト、しの値を調べ、それぞれの内容を表示する PrintData メソッドを呼び出して、 <ph id="ph3">&lt;xref:System.Data.DataTableReader.HasRows%2A&gt;</ph> PrintData に呼び出しを行う前にそれぞれのプロパティです。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.HasRows">
          <source>An attempt was made to retrieve information about a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じられた <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> に関する情報を取得しようとしました。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.IsClosed">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> が閉じられているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.IsClosed">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> is closed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> が閉じている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> を返します。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.IsClosed">
          <source><ph id="ph1">&lt;xref:System.Data.DataTableReader.Close%2A&gt;</ph> is the only method and <ph id="ph2">`IsClosed`</ph> and <ph id="ph3">&lt;xref:System.Data.DataTableReader.RecordsAffected%2A&gt;</ph> are the only properties that can be accessed after the <ph id="ph4">&lt;xref:System.Data.DataTableReader&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTableReader.Close%2A&gt;</ph> 唯一の方法と<ph id="ph2">`IsClosed`</ph>と<ph id="ph3">&lt;xref:System.Data.DataTableReader.RecordsAffected%2A&gt;</ph>後にアクセスできる唯一のプロパティ、<ph id="ph4">&lt;xref:System.Data.DataTableReader&gt;</ph>が閉じられました。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The zero-based column ordinal</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>Gets a value that indicates whether the column contains non-existent or missing values.</source>
          <target state="translated">列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified column value is equivalent to <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した列の値が <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> と等価である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>Call this method to see if there are null column values before calling the typed get methods (for example, <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetByte%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetChar%2A&gt;</ph>, and so on) to avoid raising an error.</source>
          <target state="translated">型指定された get メソッドを呼び出す前に null 列値があるかどうかに表示するには、このメソッドを呼び出す (たとえば、 <ph id="ph1">&lt;xref:System.Data.DataTableReader.GetByte%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetChar%2A&gt;</ph>など) エラーの発生を防ぐためにします。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The following example displays the contents of the column numbered 2 within the passed-in <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例は、番号付きの渡された内で 2 列の内容を表示<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>If the value the column within a particular row is null, the code displays the text <ph id="ph1">\&lt;</ph>NULL&gt;.</source>
          <target state="translated">コードがテキストを表示、値の特定の行での列が null の場合<ph id="ph1">\&lt;</ph>NULL &gt;。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>If the data within the column of the correct type, the example displays an error message for each row.</source>
          <target state="translated">場合の例、適切な型の列内のデータには、行ごとに、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="T:System.Data.DataTableReader">
          <source>Gets the value of the specified column in its native format.</source>
          <target state="translated">指定した列の値をネイティブ形式で取得します。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>Gets the value of the specified column in its native format given the column ordinal.</source>
          <target state="translated">列の序数によって指定した列の値をネイティブ形式で取得します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">指定した列のネイティブ形式での値。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>This overload for <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> behaves identically to the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">このオーバー ロードの<ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph>の動作は、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The following example displays the contents of all the columns, in all the rows from the supplied <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">次の例では、すべての列の内容を表示から、指定されたすべての行で<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</source>
          <target state="translated">コードを使用して、<ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph>メソッド (、インデクサー、Microsoft c# で) の各列に含まれている値を取得します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.Int32)">
          <source>The index passed was outside the range of 0 to <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1.</source>
          <target state="translated">渡されたインデックスが 0 から <ph id="ph1">&lt;see cref="P:System.Data.DataTableReader.FieldCount" /&gt;</ph> - 1 の範囲にありません。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The name of the column.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Gets the value of the specified column in its native format given the column name.</source>
          <target state="translated">列名によって指定した列の値をネイティブ形式で取得します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">指定した列のネイティブ形式での値。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>A case-sensitive lookup is performed first.</source>
          <target state="translated">大文字小文字を区別ルックアップが最初に実行されます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">失敗した場合、2 番目の検索が行われます。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>This method is kana-width insensitive.</source>
          <target state="translated">このメソッドは、カタカナの全角を区別します。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>This overloaded version of <ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph> corresponds to calling the <ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph> method, and then subsequently calling the <ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">このオーバー ロードされたバージョンの<ph id="ph1">&lt;xref:System.Data.DataTableReader.Item%2A&gt;</ph>呼び出しに対応する、<ph id="ph2">&lt;xref:System.Data.DataTableReader.GetOrdinal%2A&gt;</ph>メソッド、およびし、後で呼び出し、<ph id="ph3">&lt;xref:System.Data.DataTableReader.GetValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Given a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> and a column name, the GetValueByName procedure returns the value of the specified column.</source>
          <target state="translated">指定された、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>列名、GetValueByName プロシージャは、指定された列の値を返します。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>Before calling this procedure, you must create a new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> instance and call its Read method at least one time to position the row pointer on a row of data.</source>
          <target state="translated">このプロシージャを呼び出す前に作成する必要が新しい<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>インスタンス化し、データの行の行のポインターを配置するには、少なくとも 1 回の読み取りメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>The name specified is not a valid column name.</source>
          <target state="translated">指定された名前は、有効な列名ではありません。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>An attempt was made to retrieve data from a deleted row.</source>
          <target state="translated">削除した行からデータを取得しようとしました。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.Item(System.String)">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> を次の結果に進めます (存在する場合)。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there was another result set; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">別の結果セットがあった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>Used to process multiple results that can be generated by creating a <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> over a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that contains two or more tables, or an array that contains two or more <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">作成することで生成できる複数の結果を処理するために使用する<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>経由で、 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 2 つ以上のテーブル、または 2 つ以上を格納する配列を含む<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>A new <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is positioned on the first result.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>は最初の結果上に位置します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In the following example, the TestConstructor method creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances.</source>
          <target state="translated">次の例では、TestConstructor メソッド 2 つ作成されます<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In order to demonstrate this constructor for the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> class, the sample creates a new <ph id="ph2">`DataTableReader`</ph> based on an array that contains the two <ph id="ph3">`DataTables`</ph>, and performs a simple operation, printing the contents from the first few columns to the console window.</source>
          <target state="translated">このコンス トラクターを実行するために、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>クラス、サンプルを作成、新しい<ph id="ph2">`DataTableReader`</ph>を 2 つを含む配列に基づく<ph id="ph3">`DataTables`</ph>内容を印刷する最初のいくつかの列からコンソールに、単純な操作を実行ウィンドウです。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>In order to test this application, create a new Console application, and paste the sample code into the newly created file.</source>
          <target state="translated">このアプリケーションをテストするために、新しいコンソール アプリケーションを作成し、サンプル コードを新しく作成されたファイルに貼り付けます。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.NextResult">
          <source>The Console window displays the following results:</source>
          <target state="translated">コンソール ウィンドウには、次の結果が表示されます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.NextResult">
          <source>An attempt was made to navigate within a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">閉じられた <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 内を移動しようとしました。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> to the next record.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> を次のレコードに進めます。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there was another row to read; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">読み取る行が他にもあった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>The default position of the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph> is before the first record.</source>
          <target state="translated">既定の位置、<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>最初のレコードの前に、です。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>Therefore, you must call <ph id="ph1">`Read`</ph> to start accessing any data.</source>
          <target state="translated">そのため、呼び出す必要があります<ph id="ph1">`Read`</ph>をデータへのアクセスを開始します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableReader.Read">
          <source>The PrintColumns procedure loops through all the rows in the <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, displaying the contents of each column in the Console window.</source>
          <target state="translated">内のすべての行をループ処理 PrintColumns プロシージャ、 <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>、コンソール ウィンドウに各列の内容を表示します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableReader.Read">
          <source>An attempt was made to read or access a column in a closed <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> .</source>
          <target state="translated">閉じている <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> の列を読み取るかアクセスしようとしました。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="P:System.Data.DataTableReader.RecordsAffected">
          <source>Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</source>
          <target state="translated">SQL ステートメントを実行したことで挿入、変更、または削除された行数を取得します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTableReader.RecordsAffected">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> does not support this property and always returns 0.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> はこのプロパティをサポートしません。常に 0 を返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>