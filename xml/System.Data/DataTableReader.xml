<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29593a8cafbdc6b69f6caeda60868612a408b7dc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.DataTableReader" /> は、1 つ以上の <see cref="T:System.Data.DataTable" /> オブジェクトの内容を、読み取り専用、前方参照専用の 1 つ以上の結果セットとして取得します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader>などその他のデータ リーダーと同様の動作、<xref:System.Data.SqlClient.SqlDataReader>ことを除いて、<xref:System.Data.DataTableReader>内の行に対する繰り返し処理しています、<xref:System.Data.DataTable>します。 つまり、キャッシュ内の行に対する繰り返し処理を提供します。 キャッシュされたデータを変更できる中に、<xref:System.Data.DataTableReader>がアクティブで、リーダーの位置を自動的に維持するとします。  
  
 作成するときに、<xref:System.Data.DataTableReader>から、 <xref:System.Data.DataTable>、結果の<xref:System.Data.DataTableReader>オブジェクトには、1 つの結果と同じデータ セットが含まれています、<xref:System.Data.DataTable>から作成した、削除済みとしてマークされている行は除く。 列の元と同じ順序で表示<xref:System.Data.DataTable>します。 返された結果の構造は、元のスキーマとデータと同じ<xref:System.Data.DataTable>します。 A<xref:System.Data.DataTableReader>呼び出すことによって作成された、<xref:System.Data.DataSet.CreateDataReader*>のメソッド、<xref:System.Data.DataSet>オブジェクトには複数の結果セットが含まれる場合、 <xref:System.Data.DataSet> 1 つ以上のテーブルが含まれています。 結果は、同じシーケンス内の<xref:System.Data.DataTable>内のオブジェクト、<xref:System.Data.DataTableCollection>の<xref:System.Data.DataSet>オブジェクト。  
  
 返された結果セットには、それぞれの現在のバージョンのみが含まれています。 <xref:System.Data.DataRow>; 削除対象としてマークされた行はスキップされます。  
  
 `DataTableReader` 、安定性を提供します。 反復子。 つまり、の内容、`DataTableReader`イテレーション中に、基になるコレクションのサイズが変更された場合は無効です。 例では、1 つまたは複数の行、<xref:System.Data.DataTable.Rows%2A>コレクションを削除または内の現在位置、イテレーション中に削除、`DataTableReader`は適切に維持されます、反復子が無効にしないと。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">新しい <see cref="T:System.Data.DataTable" /> が結果セットを取得する <see cref="T:System.Data.DataTableReader" />。</param>
        <summary>指定された <see cref="T:System.Data.DataTableReader" /> のデータを使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">新しい <see cref="T:System.Data.DataTable" /> オブジェクトの結果を提供する <see cref="T:System.Data.DataTableReader" /> オブジェクトの配列。</param>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> オブジェクトの指定した配列を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成する場合は、<xref:System.Data.DataTableReader>すべてまたは特定の内のテーブルのサブセットに基づく<xref:System.Data.DataSet>、呼び出し、`DataSet`の<xref:System.Data.DataSet.CreateDataReader*>メソッド。 新しいを作成する場合<xref:System.Data.DataTableReader>インスタンスのグループに基づいて`DataTable`でない場合は、関連するインスタンスは、このコンス トラクターを使用します。 このコンス トラクターの順序を変更するのもを利用することができます、`DataTables`内、`DataTableReader`場合は、順序付けには、ソース内で`DataSet`ニーズを満たしていません。  
  
   
  
## Examples  
 次の例では、TestConstructor メソッドを 2 つ作成します<xref:System.Data.DataTable>インスタンス。 このコンス トラクターを示すために、<xref:System.Data.DataTableReader>クラス、サンプルを作成する新しい`DataTableReader`、2 つを格納する配列に基づく`DataTables`、し、最初のいくつかの列の内容をコンソールに印刷する単純な操作を実行します。ウィンドウです。 このアプリケーションをテストするために新しいコンソール アプリケーションを作成し、新しく作成されたファイルにサンプル コードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 コンソール ウィンドウには、次の結果が表示されます。  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Data.DataTableReader" /> を閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す`Close()`に閉じている`DataTableReader`オブジェクトでは、エラーは発生しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> の現在の行の入れ子の深さ。</summary>
        <value>現在の行の入れ子の深さ。常に 0 になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader` 入れ子はサポートされません。 `Depth`プロパティは常に 0 を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の行の列数を返します。</summary>
        <value>有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> 内のフィールド数を取得しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.Boolean" /> として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、データを取得する必要がありますか、既にブール値、ブール値に強制変換できるか、または例外が生成されます。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 列内のデータでない場合、正しい型は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には <see langword="Boolean" /> が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値をバイトとして取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。そのため、データの取得がバイトかバイトに強制変換できるに既にあります。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列にバイトが含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <param name="dataIndex">読み取り操作を開始するフィールド内のインデックス。</param>
        <param name="buffer">読み取ったバイトのストリームを格納するバッファー。</param>
        <param name="bufferIndex">バッファー内でデータの配置を開始するインデックス。</param>
        <param name="length">バッファーにコピーする最大長。</param>
        <summary>指定したバッファー オフセットを開始位置として、指定した列オフセットから始まる文字のストリームをバッファーに配列として読み込みます。</summary>
        <returns>実際に読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes` フィールドで使用可能なバイト数を返します。 ほとんどの場合、これは、フィールドの正確な長さです。 ただし、返される数値フィールドの実際の長さよりも小さい場合あります`GetBytes`フィールドからのバイトの取得を既に使用されています。 可能性がある場合は、たとえば、ときに、<xref:System.Data.DataTableReader>バッファーへの大規模なデータ構造の読み込みは、  
  
 バッファーを渡す場合`null`(`Nothing` Visual basic)、`GetBytes`バッファー オフセット パラメーターに基づく残りサイズではなくバイト単位でフィールド全体の長さを返します。  
  
 変換は実行されません。そのため、データの取得にはバイト配列がある必要があります既にまたはバイト配列に強制します。  
  
   
  
## Examples  
 次の例では、作成、 <xref:System.Data.DataTableReader> AdventureWorks サンプル データベース、および各イメージの取得 C:\ フォルダー内の別のファイルに保存データに基づきます。 このアプリケーションをテストするには、新しいコンソール アプリケーションを作成、System.Drawing.dll アセンブリを参照および新しく作成されたファイルにサンプル コードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列にはバイト配列が含まれていません。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を文字として取得します。</summary>
        <returns>列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。そのため、データの取得が文字または文字に強制変換に既にあります。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例では、番号が渡された DataTableReader 内で 2 列の内容が表示されます。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定したフィールドに文字が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <param name="dataIndex">読み取り操作を開始するフィールド内のインデックス。</param>
        <param name="buffer">char のストリームの読み込み先のバッファー。</param>
        <param name="bufferIndex">バッファー内でデータの配置を開始するインデックス。</param>
        <param name="length">バッファーにコピーする最大長。</param>
        <summary>指定した列の値を文字配列として返します。</summary>
        <returns>実際に読み取られた文字数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars` フィールドに使用できる文字数を返します。 ほとんどの場合、これは、フィールドの正確な長さです。 ただし、返される数値フィールドの実際の長さよりも小さい場合あります`GetChars`フィールドから文字の取得を既に使用されています。  
  
 実際に読み取られた文字数は、フィールドの末尾に達した場合、要求された長さより小さいできます。 Null であるバッファーを渡す場合 (`Nothing` Visual basic)、`GetChars`バッファー オフセット パラメーターに基づく残りサイズではなく、文字のフィールド全体の長さを返します。  
  
 変換は実行されません。そのため、データを取得する必要があります文字配列または文字配列に強制します。  
  
   
  
## Examples  
 次の例で、`GetChars`メソッド。 `TestGetChars`メソッドで渡される必要があります、 `DataTableReader` 2 つの列のデータ入力: 最初の列と、2 番目の文字の配列内のファイル名。 さらに、`TestGetChars`内の文字配列からデータを読み取るときに使用するバッファー サイズを指定することができます、`DataTableReader`します。 `TestGetChars` 内のデータの各行に対応するファイルを作成、 `DataTableReader`、最初の列で、指定されたデータを使用して、`DataTableReader`ファイル名として。  
  
 この手順の使用を示します、`GetChars`メソッドに格納されたデータの読み取り、`DataTable`として文字配列。 他の種類のデータの原因、`GetChars`をスローするメソッド、`InvalidCastException`します。  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には文字配列が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列のデータ型を示す文字列を取得します。</summary>
        <returns>列のデータ型を示す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.GetDataTypeName%2A>メソッドは常に、基になる型を返します<xref:System.Data.DataColumn>プロバイダーに固有の型の代わりにします。  
  
   
  
## Examples  
 次のコンソール アプリケーションは、フィールドと、単純なからその型の名前の一覧を表示します<xref:System.Data.DataTable>:。  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 コンソール ウィンドウには、次の結果が表示されます。  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要がありますので、<xref:System.DateTime>に強制変換、または、`DataTime`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に DateTime 値が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要がありますので、<xref:System.Decimal>に強制変換、または、`Decimal`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列には <see langword="Decimal" /> 値が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">列の 0 から始まる序数。</param>
        <summary>列の値を倍精度浮動小数点数値として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって、データの取得は倍精度浮動小数点数が既にあります。 または倍精度浮動小数点数に強制変換できる必要があります。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に倍精度浮動小数点数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>項目のコレクションを反復処理するために使用できる列挙子を返します。</summary>
        <returns>項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子は、データの読み取りにのみ許可、<xref:System.Data.DataTableReader>します。 列挙子を使用して、基になるコレクションを変更することはできません。  
  
 最初は、列挙子はコレクション内の最初の要素の前に配置されます。 この位置で、呼び出す<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。 そのため、`MoveNext` の値を読み取る前に、`Current` を呼び出して列挙子をコレクションの最初の要素に進める必要があります。  
  
 `Current` 返します、 <xref:System.Data.Common.DbDataRecord>、まで同じオブジェクトを返しますと<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>が呼び出されます。 `MoveNext` は、`Current` を次の要素に設定します。  
  
 列挙子がコレクション内の最後の要素の後ろに配置し、呼び出し元は、コレクションの末尾が渡されると、 `MoveNext` false を返します。 最後の呼び出し場合`MoveNext`返される`false`を呼び出すと、`Current`例外をスローします。 さらに、ため、<xref:System.Data.DataTableReader>呼び出し、そのデータへの前方参照専用のアクセスを提供します、 <xref:System.Collections.IEnumerator.Reset%2A> IEnumerator のメソッドをスロー、<xref:System.NotSupportedException>します。  
  
 <xref:System.Data.DataTableReader>安定した列挙子を提供します。 つまり、基になるデータ内の行の削除や追加が発生した場合でもへの呼び出しによって返される列挙子<xref:System.Data.DataTableReader.GetEnumerator%2A>は引き続き有効です。  
  
   
  
## Examples  
 <xref:System.Data.DataTableReader.GetEnumerator%2A> メソッドの使用例を次に示します。 基になるから行が削除されるときに、列挙子の動作が含まれます<xref:System.Data.DataTable>列挙子がアクティブな状態です。  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 プロシージャでは、コンソール ウィンドウで、次のテキストが表示されます。  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</summary>
        <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 渡して、次のプロシージャを呼び出す、<xref:System.Data.DataTableReader>コンソール ウィンドウで、すべてのフィールドと各型の完全な名前の一覧を表示するためにインスタンス。  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を単精度浮動小数点値として取得します。</summary>
        <returns>列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。したがって取得されたデータは、単精度浮動小数点数が既にあります。 または、単精度浮動小数点数に強制変換できる必要があります。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に単精度浮動小数点数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値をグローバル一意識別子 (GUID) として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要がありますので、<xref:System.Guid>に強制変換、または、`Guid`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例では、番号が渡された DataTableReader 内で 2 列の内容が表示されます。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に GUID が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を 16 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要があります、そのため、<xref:System.Int16>に強制変換、または、`Int16`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 16 ビット符号付き整数が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を 32 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要があります、そのため、<xref:System.Int32>に強制変換、または、`Int32`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 32 ビット符号付き整数値が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定された列の値を 64 ビット符号付き整数として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 変換は実行されません。取得されたデータが既ににする必要があります、そのため、<xref:System.Int64>に強制変換、または、`Int64`します。  
  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 適切な型の列内のデータがない場合は、行ごとに、エラー メッセージを表示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に 64 ビット符号付き整数値が格納されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を <see cref="T:System.String" /> として取得します。</summary>
        <returns>指定された列の名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetName`と<xref:System.Data.DataTableReader.GetOrdinal%2A>メソッドは、逆の機能を提供します。 つまり、呼び出す`GetOrdinal`呼び出しの戻り値の`GetName`に渡された元のパラメーターを返す必要があります`GetName`; 順序が逆に、プロシージャの呼び出しにも当てはまります。  
  
   
  
## Examples  
 次の簡単な例には、指定したすべての列の名前を一覧表示するプロシージャが含まれます。 `DataTableReader`、コンソール ウィンドウに、列の序数。  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前。</param>
        <summary>列の名前を指定して、列の序数を取得します。</summary>
        <returns>0 から始まる列序数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ほとんどのメソッドは、によって提供されるため、<xref:System.Data.DataTableReader>クラスが使用することができます、序数の列番号と共に指定する必要があります、`GetOrdinal`列の名前を指定、列番号を取得するメソッド。  
  
 `GetOrdinal` 最初に大文字のルックアップを実行します。 失敗した場合は、2 つ目の大文字の検索が行われます。 列番号が見つからない場合、`IndexOutOfRangeException`がスローされます。  
  
 `GetOrdinal` カタカナの全角区別されません。  
  
 呼び出す効率的ではありません序数に基づく参照は、名前による参照よりも効率的であるため`GetOrdinal`ループ内で。 呼び出すことによって時間を節約`GetOrdinal`1 回と、結果をループ内で使用するための整数変数に割り当てる  
  
   
  
## Examples  
 列名のみがあれば、場合に列名が指定すると、ユーザーと、列から情報を取得する必要があります、必要な情報を抽出する、次のようなプロシージャを使用することができます。 この例で、プロシージャ列の名前を受け付けます、その列の現在の行の中に含まれるデータを返す、 <xref:System.Data.DataTableReader> :  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.ArgumentException">指定された名前は、有効な列名ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の型をプロバイダー固有の形式で取得します。</summary>
        <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader>常に、基になる内で格納されている型を返します<xref:System.Data.DataColumn>、呼び出すことによって返される値、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>メソッドは常に内で格納されている型と同じ型を返します、<xref:System.Data.DataTable>します。 使用する場合、<xref:System.Data.DataTableReader>クラスを呼び出し、<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>メソッドの呼び出しと同じ型を返します、<xref:System.Type.GetType%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">値を取得した列の、0 から始まるインデックス番号。</param>
        <summary>指定した列の値をプロバイダー固有の形式で取得します。</summary>
        <returns>プロバイダー固有の形式による、指定した列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader>常に、基になる内で格納されている型を返します<xref:System.Data.DataColumn>、呼び出すことによって返される値、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>メソッドは常に格納されたデータと同じ型のデータを返します、<xref:System.Data.DataTable>します。 使用する場合、<xref:System.Data.DataTableReader>クラスを呼び出し、<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>は同じ値で呼び出すことと、入力を返します、<xref:System.Data.DataTableReader.GetValue%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Data.DataTableReader" /> の列の型情報を格納するオブジェクトの配列。</param>
        <summary>指定された配列に、<see cref="T:System.Data.DataTableReader" /> のすべての列に関するプロバイダー固有の型の情報を格納します。</summary>
        <returns>配列にコピーされる列の値の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader>常に、基になる内で格納されている型のデータを返します<xref:System.Data.DataColumn>、呼び出すことによって返される値、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>メソッド内に格納されたデータと同じ型のでは常に、<xref:System.Data.DataTable>します。 使用する場合、<xref:System.Data.DataTableReader>クラスを呼び出し、<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>メソッドの呼び出しと同じ値と型を返します、<xref:System.Data.DataTableReader.GetValues%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.DataTableReader" /> を返します。</summary>
        <returns>列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GetSchemaTable メソッドは、次の順序で各列についてのメタデータを返します。  
  
|DataReader 列|説明|  
|-----------------------|-----------------|  
|ColumnName|列の名前で表示、<xref:System.Data.DataTable>します。|  
|ColumnOrdinal|列の序数|  
|ColumnSize|場合は-1、 <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (または<xref:System.Data.DataColumn.MaxLength%2A>) のプロパティ、<xref:System.Data.DataColumn>特定できないか、関連する。 それ以外ではありません 0 または正の整数を含む、`MaxLength`値。|  
|NumericPrecision|列の型が数値型の場合は、これは、列の最大有効桁数です。 列の型が数値データ型でない場合は、null 値になります。|  
|NumericScale|列のデータ型にスケール コンポーネントがある場合は、小数点の右側に桁の数字の数を返します。 それ以外の場合、null 値を返します。|  
|DataType|列の基になる型。|  
|ProviderType|列のデータ型を示すインジケーター。 この値は、列のデータ型が行ごとに変化する場合<xref:System.Object>します。 この列には、null 値を含めることはできません。|  
|IsLong|`true` 列のデータ型が場合<xref:System.String>とその<xref:System.Data.DataColumn.MaxLength%2A>プロパティは-1。 それ以外の場合は `false`。|  
|AllowDBNull|`true` AllowDbNull 制約が設定されている場合、列が true とそれ以外の場合、`false`します。|  
|IsReadOnly|`true` 場合は、列を変更できません。それ以外の場合`false`します。|  
|IsRowVersion|`false`、すべての列。|  
|IsUnique|`true`: で 2 つの行、<xref:System.Data.DataTable>この列の値が同じであることができます。 `IsUnique` この列にのみ適用される UNIQUE 型の制約があるかどうかはそれ自体またはによって列がキーを表す場合は true にする保証されます。 `false`: 列に重複する値を含めることができます、`DataTable`します。 この列の既定値は`false`します。|  
|IsKey|`true`: 列が列のセットのいずれかを、これらをまとめると、行を一意に識別、 <xref:System.Data.DataTable>。 列のセット`IsKey`に設定`true`内の行を一意に識別する必要があります、`DataTable`します。 この列のセットが最小限に抑える一連の列である必要はありません。 この列のセットはから生成される可能性を`DataTable`主キー、unique 制約または一意のインデックス。 `false`: 列は、行を一意に識別する必要はありません。 この値は`true`列は、単一または複合主キーに参加している場合。 それ以外の場合、その値は、`false`します。|  
|IsAutoIncrement|`true`: 列は、固定された増分で新しい行に値を割り当てます。 `false`: 列は固定された増分で新しい行に値を割り当てられません。 この列の既定値は`false`します。|  
|BaseCatalogName|カタログ内の列を含むデータ ストアの名前。 `Null` ベースのカタログ名を特定できません。 場合、 この列の既定値は、`null`値。|  
|BaseSchemaName|この値は常に`Null`します。|  
|BaseTableName|<xref:System.Data.DataTable> の名前。|  
|BaseColumnName|内の列の名前、<xref:System.Data.DataTable>します。|  
|AutoIncrementSeed|値、<xref:System.Data.DataTable>の<xref:System.Data.DataColumn.AutoIncrementSeed%2A>プロパティ。|  
|AutoIncrementStep|値、<xref:System.Data.DataTable>の<xref:System.Data.DataColumn.AutoIncrementStep%2A>プロパティ。|  
|DefaultValue|値、<xref:System.Data.DataColumn>の<xref:System.Data.DataColumn.DefaultValue%2A>プロパティ。|  
|式|現在の列が式列であり、同じ式で使用されるすべての列が属している場合は、式の文字列`T:System.Data.DataTable`式列を格納するそれ以外の`null`します。|  
|ColumnMapping|<xref:System.Data.MappingType>に関連付けられている値、<xref:System.Data.DataColumn>します。 種類は、のいずれかを指定できます`Attribute`、 `Element`、 `Hidden`、または`SimpleContent`します。 既定値は `Element` です。|  
|BaseTableNamespace|値、<xref:System.Data.DataTable>の<xref:System.Data.DataTable.Namespace%2A>プロパティ。|  
|BaseColumnNamespace|値、<xref:System.Data.DataColumn>の<xref:System.Data.DataColumn.Namespace%2A>プロパティ。|  
  
   
  
## Examples  
 次のコンソール アプリケーションの例では、指定された列に関するスキーマ情報を取得します。 渡す、`DisplaySchemaTableInfo`プロシージャ、<xref:System.Data.DataTableReader>および内の列の序数位置を表す整数、`DataTableReader`プロシージャがスキーマ情報をコンソール ウィンドウを出力します。  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.DataTableReader" /> が閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値を文字列として取得します。</summary>
        <returns>指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.Data.DataTableReader.IsDBNull%2A>にこのメソッドを呼び出す前に null 値があるかどうかを参照してください。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 例では、適切な型の列内のデータには、行ごとに、エラー メッセージが表示されます。 場合、  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
        <exception cref="T:System.InvalidCastException">指定した列に文字列が含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>指定した列の値をネイティブ形式で取得します。</summary>
        <returns>指定された列の値。 null 列の場合は、<see langword="DBNull" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すこともできます<xref:System.Data.DataTableReader.IsDBNull%2A>して、このメソッドを呼び出す前に null 値がある場合はこれを実行する必要はありません。  
  
   
  
## Examples  
 次の例はすべての列内の現在の行を反復処理を<xref:System.Data.DataTableReader>、各列と列名の内容を表示します。 一般に、によって取得された行内のすべての列を操作する場合は、意図、 <xref:System.Data.DataTableReader>、使用を検討して、<xref:System.Data.DataTableReader.GetValues%2A>メソッド代わりに、効率が高いためです。  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Object" /> の列の値のコピー先である <see cref="T:System.Data.DataTableReader" /> の配列。</param>
        <summary>オブジェクトの配列に現在行の列値を設定します。</summary>
        <returns>配列にコピーされる列の値の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ほとんどのアプリケーションでは、このメソッドは、各列を個別に取得する代わりに、すべての列を取得するための効率的な方法を提供します。 内の行からすべての列値を取得するかどうか、意図は、 <xref:System.Data.DataTableReader>、`GetValues`メソッドは、最も効率的なソリューションを提供します。  
  
 渡すことができます、<xref:System.Object>結果の行に含まれている列の数よりも少ないを含む配列。 データの量のみ、`Object`配列が配列にコピーを保持することができます。 渡すことも、`Object`メソッドの呼び出しによってケースが、追加の配列の要素が変更されていない、結果の行に含まれている列の数を超える長さの配列。  
  
 このメソッドは`DBNull`の null 列の出力配列。  
  
   
  
## Examples  
 次の例を指定された現在の行からすべての値を読み取る適切なサイズである配列を使用して<xref:System.Data.DataTableReader>します。 さらに、使用可能な列の数より大きいか小さい可能性のある固定サイズの配列を使用するかどうかを示します。  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</summary>
        <value>1 行以上の行が <see cref="T:System.Data.DataTableReader" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasRows`プロパティは、現在の結果セットに関する情報を返します。 場合、<xref:System.Data.DataTableReader>複数の結果が含まれています、セットの値を調べることができます、`HasRows`プロパティを呼び出した後にすぐに、<xref:System.Data.DataTableReader.NextResult%2A>新しい結果セットに行が含まれるかどうかを確認するにはメソッドです。  
  
 使用して、`HasRows`プロパティを呼び出すという要件を回避するために、<xref:System.Data.DataTableReader.Read%2A>のメソッド、<xref:System.Data.DataTableReader>現在の結果セット内の行がない場合。  
  
   
  
## Examples  
 次の例では、2 つを塗りつぶします<xref:System.Data.DataTable>インスタンスにデータ。 最初の<xref:System.Data.DataTable>1 つの行データを格納し、2 番目に行が含まれていません。 作成し、<xref:System.Data.DataTableReader>両方を含む<xref:System.Data.DataTable>オブジェクト、しの値をチェック、それぞれの内容を表示する PrintData メソッドを呼び出して、 <xref:System.Data.DataTableReader.HasRows%2A> PrintData に呼び出しを行う前にそれぞれのプロパティ。  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じられた <see cref="T:System.Data.DataTableReader" /> に関する情報を取得しようとしました。</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> が閉じられているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Data.DataTableReader" /> が閉じている場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A> 唯一の方法と`IsClosed`と<xref:System.Data.DataTableReader.RecordsAffected%2A>後にアクセスできる唯一のプロパティは、<xref:System.Data.DataTableReader>が閉じられました。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</summary>
        <returns>指定した列の値が <see cref="T:System.DBNull" /> と等価である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型指定された get メソッドを呼び出す前に null 列の値がないかどうかは確認するには、このメソッドを呼び出す (たとえば、 <xref:System.Data.DataTableReader.GetByte%2A>、<xref:System.Data.DataTableReader.GetChar%2A>など) エラーの発生を避ける。  
  
   
  
## Examples  
 次の例は、番号が、渡されたで内の 2 列の内容を表示します。<xref:System.Data.DataTableReader>します。 値内の特定の行の列が null の場合、コードがテキストを表示します\<NULL >。 例では、適切な型の列内のデータには、行ごとに、エラー メッセージが表示されます。 場合、  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した列の値をネイティブ形式で取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">0 から始まる列序数。</param>
        <summary>列の序数によって指定した列の値をネイティブ形式で取得します。</summary>
        <value>指定した列のネイティブ形式での値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロードの<xref:System.Data.DataTableReader.Item%2A>の動作、<xref:System.Data.DataTableReader.GetValue%2A>メソッド。  
  
   
  
## Examples  
 次の例では、すべての列の内容を表示、指定したすべての行の<xref:System.Data.DataTableReader>します。 コードを使用して、<xref:System.Data.DataTableReader.Item%2A>メソッド (、インデクサー、Microsoft c# で) 各列に含まれている値を取得します。  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前。</param>
        <summary>列名によって指定した列の値をネイティブ形式で取得します。</summary>
        <value>指定した列のネイティブ形式での値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 大文字の参照が最初に実行されます。 失敗した場合は、2 つ目の大文字の検索が行われます。  
  
 このメソッドは、カタカナ幅を区別しません。  
  
 このオーバー ロードされたバージョンの<xref:System.Data.DataTableReader.Item%2A>通話に対応する、<xref:System.Data.DataTableReader.GetOrdinal%2A>メソッド、およびその後呼び出すこと、<xref:System.Data.DataTableReader.GetValue%2A>メソッド。  
  
   
  
## Examples  
 指定された、<xref:System.Data.DataTableReader>列名、GetValueByName プロシージャは、指定された列の値を返します。 このプロシージャを呼び出す前に作成する必要が新しい<xref:System.Data.DataTableReader>インスタンスし、行動へのデータの行に行ポインターを置いて、Read メソッドを少なくとも 1 回です。  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された名前は、有効な列名ではありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除した行からデータを取得しようとしました。</exception>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> を次の結果に進めます (存在する場合)。</summary>
        <returns>別の結果セットがあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成して生成される複数の結果を処理するために使用する<xref:System.Data.DataTableReader>経由で、 <xref:System.Data.DataSet> 2 つ以上のテーブル、または 2 つ以上を含む配列を格納している<xref:System.Data.DataTable>インスタンス。  
  
 新しい<xref:System.Data.DataTableReader>が最初の結果に配置されています。  
  
   
  
## Examples  
 次の例では、TestConstructor メソッドを 2 つ作成します<xref:System.Data.DataTable>インスタンス。 このコンス トラクターを示すために、<xref:System.Data.DataTableReader>クラス、サンプルを作成する新しい`DataTableReader`、2 つを格納する配列に基づく`DataTables`、し、最初のいくつかの列の内容をコンソールに印刷する単純な操作を実行します。ウィンドウです。 このアプリケーションをテストするために新しいコンソール アプリケーションを作成し、新しく作成されたファイルにサンプル コードを貼り付けます。  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 コンソール ウィンドウには、次の結果が表示されます。  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じられた <see cref="T:System.Data.DataTableReader" /> 内を移動しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> を次のレコードに進めます。</summary>
        <returns>読み取る行が他にもあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の位置、<xref:System.Data.DataTableReader>最初のレコードの前に、です。 そのため、呼び出す必要がある`Read`データへのアクセスを開始します。  
  
   
  
## Examples  
 PrintColumns 手順がすべての行をループ処理、 <xref:System.Data.DataTableReader>、コンソール ウィンドウに各列の内容を表示します。  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL ステートメントを実行したことで挿入、変更、または削除された行数を取得します。</summary>
        <value>
          <see cref="T:System.Data.DataTableReader" /> はこのプロパティをサポートしません。常に 0 を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>