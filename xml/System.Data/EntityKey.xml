<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6911c2007bc269d038d952c3f18397a65154c85" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399186" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="89164-101">エンティティ型のインスタンスであるオブジェクトへの持続的な参照を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89164-101">Provides a durable reference to an object that is an instance of an entity type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-102"><xref:System.Data.EntityKey> オブジェクトは不変です。つまり、構築後は変更できません。</span><span class="sxs-lookup"><span data-stu-id="89164-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="89164-103">詳細については、次を参照してください。[エンティティ キーの使用](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)です。</span><span class="sxs-lookup"><span data-stu-id="89164-103">For more information, see [Working with Entity Keys](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89164-104">これらの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)です。</span><span class="sxs-lookup"><span data-stu-id="89164-104">These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="89164-105">作成および使用する方法の例に示します、<xref:System.Data.EntityKey>です。</span><span class="sxs-lookup"><span data-stu-id="89164-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89164-106">
            <see cref="T:System.Data.EntityKey" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89164-107">
            <see cref="T:System.Data.EntityKey" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="89164-108">エンティティ コンテナー名で修飾されたエンティティ セット名を表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="89164-109">ジェネリック型の <see cref="T:System.Collections.Generic.KeyValuePair" /> コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
          <span data-ttu-id="89164-110">キー/値の各ペアでは、プロパティ名がキー、そのプロパティの値が値となっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-110">Each key/value pair has a property name as the key and the value of that property as the value.</span>
          </span>
          <span data-ttu-id="89164-111">
            <see cref="T:System.Data.EntityKey" /> の一部であるプロパティごとに、1 つのペアが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span>
          </span>
          <span data-ttu-id="89164-112">キー/値のペアの順序は重要ではありませんが、各キー プロパティが含まれている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-112">The order of the key/value pairs is not important, but each key property should be included.</span>
          </span>
          <span data-ttu-id="89164-113">プロパティ名は、エンティティ型の名前やスキーマ名で修飾されていない単純な名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-114">エンティティ セット名およびジェネリック型の <see cref="T:System.Data.EntityKey" /> コレクションを使用して、<see cref="T:System.Collections.Generic.KeyValuePair" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="89164-115">この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)です。</span><span class="sxs-lookup"><span data-stu-id="89164-115">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="89164-116">例を作成および使用方法を示します、<xref:System.Data.EntityKey>です。</span><span class="sxs-lookup"><span data-stu-id="89164-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="89164-117">エンティティ コンテナー名で修飾されたエンティティ セット名を表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="89164-118">キーの初期化に使用される <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクトの <see cref="T:System.Data.EntityKeyMember" /> コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-119">エンティティ セット名および <see cref="T:System.Data.EntityKey" /> オブジェクトの <see cref="T:System.Collections.Generic.IEnumerable`1" /> コレクションを使用して、<see cref="T:System.Data.EntityKeyMember" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="89164-120">エンティティ コンテナー名で修飾されたエンティティ セット名を表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="89164-121">キーの名前を表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-121">A <see cref="T:System.String" /> that is the name of the key.</span>
          </span>
        </param>
        <param name="keyValue">
          <span data-ttu-id="89164-122">キーの値を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-122">An <see cref="T:System.Object" /> that is the key value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-123">エンティティ セット名および特定のエンティティ キーのペアを使用して、<see cref="T:System.Data.EntityKey" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="89164-124">この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)です。</span><span class="sxs-lookup"><span data-stu-id="89164-124">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="89164-125">例を作成および使用方法を示します、<xref:System.Data.EntityKey>です。</span><span class="sxs-lookup"><span data-stu-id="89164-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-126">エンティティ コンテナーの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-126">Gets or sets the name of the entity container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89164-127">
            <see cref="T:System.String" /> が属しているエンティティのエンティティ コンテナーの名前を表す <see cref="T:System.Data.EntityKey" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-128">この <see cref="T:System.Data.EntityKey" /> に関連付けられているキーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89164-129">この <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> のキー値の <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-130"><xref:System.Data.EntityKey> クラスには、この型のエンティティに指定されている論理キーを構成する値のコピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="89164-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="89164-131"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601> のメンバーは、それぞれが <xref:System.Collections.Generic.KeyValuePair%602> にプロパティ名と値を持っています。この場合、プロパティ名はキーであり、値はオブジェクトにおけるそのプロパティの実際の値です。</span><span class="sxs-lookup"><span data-stu-id="89164-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-132">失敗した [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) 演算で生成されたエンティティを識別する単純な <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-133">無効なエンティティは、さまざまな形で生成されます。</span><span class="sxs-lookup"><span data-stu-id="89164-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="89164-134">最も一般的なシナリオは、ときに、[!INCLUDE[esql](~/includes/esql-md.md)]のクエリは、[扱う](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)を特定の型としてポリモーフィックな型のインスタンスと対象のインスタンスを解釈する演算子と一致しません。</span><span class="sxs-lookup"><span data-stu-id="89164-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="89164-135">([扱う](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)c# のような`as`演算子)。</span><span class="sxs-lookup"><span data-stu-id="89164-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="89164-136">この場合は、クエリから無効なエンティティが返され、このエンティティのエンティティ キーが <xref:System.Data.EntityKey.EntityNotValidKey> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="89164-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-137">エンティティ セットの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-137">Gets or sets the name of the entity set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89164-138">
            <see cref="T:System.String" /> が属しているエンティティのエンティティ セットの名前を表す <see cref="T:System.Data.EntityKey" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89164-139">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-139">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="89164-140">このインスタンスと比較する <see cref="T:System.Data.EntityKey" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-141">このインスタンスが、指定された <see cref="T:System.Data.EntityKey" /> と等価であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-142">このインスタンスと <paramref name="other" /> が等しい値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-142">
              <see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-143">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-144">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-145">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-146">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-147">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、そのエンティティ セットが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-148">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、永久キーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="89164-149">このインスタンスと比較する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-149">An <see cref="T:System.Object" /> to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-150">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-150">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-151">このインスタンスと <paramref name="obj" /> が等しい値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-151">
              <see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-152">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-153">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-154">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-155">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-156">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、その <xref:System.Data.Metadata.Edm.EntitySet> オブジェクトが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-157">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、永久キーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">
          <span data-ttu-id="89164-158">エンティティを含んでいるメタデータ ワークスペース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-158">The metadata workspace that contains the entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-159">このエンティティ キーのエンティティ セットを、指定されたメタデータ ワークスペースから取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-159">Gets the entity set for this entity key from the given metadata workspace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-160">エンティティ キーの <see cref="T:System.Data.Metadata.Edm.EntitySet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-161">エンティティ セットは、エンティティ コンテナー名およびキーのエンティティ セット名に基づいてアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="89164-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="89164-162">指定されたメタデータ ワークスペースで、エンティティ セットが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-162">The entity set could not be located in the specified metadata workspace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89164-163">現在の <see cref="T:System.Data.EntityKey" /> オブジェクトのハッシュ関数として機能します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span>
          </span>
          <span data-ttu-id="89164-164">
            <see cref="M:System.Data.EntityKey.GetHashCode" /> は、ハッシュ アルゴリズムでの使用、およびハッシュ テーブルのようなデータ構造での使用に適しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-164">
              <see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-165">現在の <see cref="T:System.Data.EntityKey" /> のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-166">
            <see cref="T:System.Data.EntityKey" /> が一時的かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89164-167">
            <see cref="T:System.Data.EntityKey" /> が一時的である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-167">
              <see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-168">新しいエンティティが作成されると、[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] によって一時キーが定義され、<xref:System.Data.EntityKey.IsTemporary%2A> プロパティが `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="89164-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="89164-169">呼び出すと、 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 、メソッド、[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]永続的なキーの割り当てし、設定、<xref:System.Data.EntityKey.IsTemporary%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="89164-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="89164-170">一時キーはフレームワークが自動的に作成するものであり、ユーザーが直接作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="89164-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="89164-171">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-172">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-173">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-174">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-175">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、そのエンティティ セットが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-176">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、永久キーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="89164-177">エンティティの <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> で <xref:System.Data.Objects.ObjectStateEntry> メソッドが呼び出され、エンティティの状態が <xref:System.Data.EntityState.Added> から <xref:System.Data.EntityState.Unchanged> に移行すると、[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] によって自動的にエンティティの新しい永久キーが計算され、すべての一時キー参照が同期されます。</span><span class="sxs-lookup"><span data-stu-id="89164-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89164-178">読み取り専用エンティティを識別する単一の <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-179">読み取り専用エンティティは、実際のエンティティ セットに関連付けられていないことを除いてあらゆる面で有効なエンティティを識別します。</span><span class="sxs-lookup"><span data-stu-id="89164-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="89164-180">このエンティティは、クエリのテキスト内で指定されたエンティティ インスタンスを作成して返す [!INCLUDE[esql](~/includes/esql-md.md)] クエリの結果の一部として発生する可能性があります (この点で、データベース テーブルから取得されたエンティティとは対照的です)。</span><span class="sxs-lookup"><span data-stu-id="89164-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="89164-181">エンティティ セットがないエンティティは、エンティティ セットに関連付けられるまでデータベースに保存できません。</span><span class="sxs-lookup"><span data-stu-id="89164-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="89164-182">このため、オブジェクトの具体化では、<xref:System.Data.Objects.MergeOption.NoTracking> マージ オプションが指定されたものとして、実際に指定されたマージ オプションを無視してこの種のエンティティが処理されます。</span><span class="sxs-lookup"><span data-stu-id="89164-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="89164-183">エンティティ オブジェクトが作成されますが、その ID は解決されず、具体化処理でそのオブジェクトが状態マネージャーに追加されることもありません。</span><span class="sxs-lookup"><span data-stu-id="89164-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="89164-184">シリアル化された指定のストリームのソースと宛先を記述し、呼び出し元が定義した追加のコンテキストを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-185">
            <see cref="T:System.Data.EntityKey" /> のシリアル化解除に使用されるヘルパー メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-186"><xref:System.Data.EntityKey.OnDeserialized%2A> は、Object Services が <xref:System.Data.EntityKey> のシリアル化を解除する際に使用します。</span><span class="sxs-lookup"><span data-stu-id="89164-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="89164-187">詳細については、次を参照してください。[オブジェクトのシリアル化](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)です。</span><span class="sxs-lookup"><span data-stu-id="89164-187">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="89164-188">シリアル化された指定のストリームのソースと宛先を記述し、呼び出し元が定義した追加のコンテキストを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-189">
            <see cref="T:System.Data.EntityKey" /> のシリアル化解除に使用されるヘルパー メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-190"><xref:System.Data.EntityKey.OnDeserializing%2A> は、Object Services が <xref:System.Data.EntityKey> のシリアル化を解除する際に使用します。</span><span class="sxs-lookup"><span data-stu-id="89164-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="89164-191">詳細については、次を参照してください。[オブジェクトのシリアル化](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)です。</span><span class="sxs-lookup"><span data-stu-id="89164-191">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="89164-192">比較する <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="89164-193">比較する <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-194">2 つの <see cref="T:System.Data.EntityKey" /> オブジェクトを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-195">
            <paramref name="key1" /> 値と <paramref name="key2" /> 値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-195">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-196">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-197">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-198">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-199">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-200">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、そのエンティティ セットが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-201">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、永久キーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="89164-202">この演算子を同等の方法は<xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType> </format> </remarks> </Docs> 
     </Member> 
     <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType>メソッド</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A<see cref="T:System.Data.EntityKey" />を比較します。</param></span><span class="sxs-lookup"><span data-stu-id="89164-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format> </remarks> </Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="89164-203"><param name="key2">A<see cref="T:System.Data.EntityKey" />を比較します。</param></span><span class="sxs-lookup"><span data-stu-id="89164-203"><param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="89164-204"><summary>比較する 2 つ<see cref="T:System.Data.EntityKey" />オブジェクト。</summary></span><span class="sxs-lookup"><span data-stu-id="89164-204"><summary>Compares two <see cref="T:System.Data.EntityKey" /> objects.</summary></span></span>
        <span data-ttu-id="89164-205"><returns> <see langword="true" /> 場合、<paramref name="key1" />と<paramref name="key2" />値が等しくない。 それ以外の場合、<see langword="false" />です。</returns></span><span class="sxs-lookup"><span data-stu-id="89164-205"><returns> <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</returns></span></span>
        <span data-ttu-id="89164-206"><remarks> <format type="text/markdown"><![CDATA[</span><span class="sxs-lookup"><span data-stu-id="89164-206"><remarks> <format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="89164-207">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-207">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-208">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-208">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-209">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-209">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-210">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-210">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-211">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、そのエンティティ セットが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-211">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-212">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、通常のキーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-212">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="89164-213">この演算子を同等の方法は<xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="89164-213">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="89164-214">比較する <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-214">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="89164-215">比較する <see cref="T:System.Data.EntityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-215">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89164-216">2 つの <see cref="T:System.Data.EntityKey" /> オブジェクトを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-216">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89164-217">
            <paramref name="key1" /> の値と <paramref name="key2" /> の値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89164-217">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89164-218">一時キーの比較セマンティクスは、永久キーと異なります。</span><span class="sxs-lookup"><span data-stu-id="89164-218">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="89164-219">一時キーでは参照等価性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="89164-219">Temporary keys use reference equality.</span></span> <span data-ttu-id="89164-220">つまり、まったく同じ一時 <xref:System.Data.EntityKey> インスタンスへの 2 つの参照は等価ですが、他の <xref:System.Data.EntityKey> インスタンスは等価となりません。</span><span class="sxs-lookup"><span data-stu-id="89164-220">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="89164-221">永久キーでは、含まれているキー プロパティの値および <xref:System.Data.Metadata.Edm.EntitySet> に基づいて、等価性が判断されます。</span><span class="sxs-lookup"><span data-stu-id="89164-221">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="89164-222">つまり、2 つの異なる <xref:System.Data.EntityKey> インスタンスは、そのエンティティ セットが同じで、かつそのキー値が等しければ、等価となります。</span><span class="sxs-lookup"><span data-stu-id="89164-222">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="89164-223">また、一時キーには <xref:System.Data.Metadata.Edm.EntitySet> やキー値がありませんが、通常のキーにはあります。</span><span class="sxs-lookup"><span data-stu-id="89164-223">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>