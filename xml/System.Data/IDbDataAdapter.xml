<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="934cba1ef38b5e43a64f3175374561b74be885e1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51924571" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bc05c-101"><see cref="T:System.Data.DataSet" /> にデータを格納し、データ ソースを更新するために使用するコマンド関連プロパティのセットを表します。リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="bc05c-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc05c-102"><xref:System.Data.IDbDataAdapter>インターフェイスから継承、<xref:System.Data.IDataAdapter>インターフェイスと、オブジェクト、リレーショナル データベースで使用するために設計されたデータ アダプターを作成します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="bc05c-103"><xref:System.Data.IDbDataAdapter>インターフェイスと、オプションでは、ユーティリティ クラス<xref:System.Data.Common.DbDataAdapter>、データ ソース間のブリッジを表す、DataAdapter クラスを実装するために、継承したクラスを許可して、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bc05c-104">DataAdapter クラスの詳細については、次を参照してください。 [DataAdapter からの Dataset](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="bc05c-105">.NET Framework データ プロバイダーの実装の詳細については、次を参照してください。 [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](https://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](https://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="bc05c-106">アプリケーションがのインスタンスを作成していない、<xref:System.Data.IDbDataAdapter>インターフェイスを直接が継承するクラスのインスタンスを作成します<xref:System.Data.IDbDataAdapter>と<xref:System.Data.Common.DbDataAdapter>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="bc05c-107">クラスを継承する<xref:System.Data.IDbDataAdapter>継承されたメンバーを実装し、通常はプロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bc05c-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="bc05c-108">など、<xref:System.Data.IDbDataAdapter>インターフェイスを定義、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ、および<xref:System.Data.Common.DbDataAdapter>インターフェイスを定義しますを<xref:System.Data.IDataAdapter.Fill%2A>を受け取るメソッドを<xref:System.Data.DataTable>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="bc05c-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="bc05c-109">さらに、<xref:System.Data.OleDb.OleDbDataAdapter>クラスの継承、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティと<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドの 2 つの追加オーバー ロードを定義して、 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> ADO レコード セット オブジェクトをパラメーターとして取るメソッド。</span><span class="sxs-lookup"><span data-stu-id="bc05c-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc05c-110">次のコードの例では、派生クラスでは、 <xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlDataAdapter>と<xref:System.Data.SqlClient.SqlConnection>、データ ソースからレコードを選択します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="bc05c-111">塗りつぶされた<xref:System.Data.DataSet>が返されます。</span><span class="sxs-lookup"><span data-stu-id="bc05c-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="bc05c-112">これを行うには、メソッドを初期化に渡される<xref:System.Data.DataSet>、接続文字列では、および TRANSACT-SQL SELECT ステートメントであるクエリ文字列。</span><span class="sxs-lookup"><span data-stu-id="bc05c-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="bc05c-113">フォームの継承クラスの名前を .NET Framework データ プロバイダーの間で整合性を高める<paramref name="Prv" />DataAdapter 場所<paramref name="Prv" />は特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="bc05c-113">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="bc05c-114">たとえば、<paramref name="Sql" />のプレフィックスは、<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラス、<see langword="System.Data.SqlClient" />名前空間。</span><span class="sxs-lookup"><span data-stu-id="bc05c-114">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="bc05c-115">継承する場合、<see cref="T:System.Data.IDbDataAdapter" />インターフェイスでは、次のコンス トラクターを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bc05c-115">When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="bc05c-116">アイテム</span><span class="sxs-lookup"><span data-stu-id="bc05c-116">Item</span></span> 
 </term><description> <span data-ttu-id="bc05c-117">説明</span><span class="sxs-lookup"><span data-stu-id="bc05c-117">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="bc05c-118">PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="bc05c-118">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="bc05c-119">PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-119">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="bc05c-120">PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="bc05c-120">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="bc05c-121">指定した SQL SELECT ステートメントを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-121">Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="bc05c-122">PrvDataAdapter (文字列 selectCommandText、文字列 selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="bc05c-122">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="bc05c-123">SQL SELECT ステートメントと接続文字列を使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-123">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="bc05c-124">PrvDataAdapter (文字列 selectCommandText、PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="bc05c-124">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="bc05c-125">SQL SELECT ステートメントと PrvConnection オブジェクトを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-125">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc05c-126">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-126">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="bc05c-127"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="bc05c-127">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc05c-128">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-128">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bc05c-129">次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="bc05c-129">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="bc05c-130">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-130">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bc05c-131">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-131">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bc05c-132">ときに<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="bc05c-132">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="bc05c-133"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 、以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-133">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc05c-134">次の例は、継承のインスタンスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-134">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="bc05c-135">既に作成するいると想定して、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-135">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc05c-136">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-136">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="bc05c-137">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="bc05c-137">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc05c-138">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-138">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bc05c-139">次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="bc05c-139">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="bc05c-140">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-140">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bc05c-141">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-141">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bc05c-142">ときに<xref:System.Data.IDbDataAdapter.InsertCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="bc05c-142">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="bc05c-143"><xref:System.Data.IDbDataAdapter.InsertCommand%2A> 、以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-143">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc05c-144">これらの行に追加できる場合、このコマンドの実行には、行が返されます、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.IDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-144">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc05c-145">次の例は、継承のインスタンスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-145">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="bc05c-146">既に作成するいると想定して、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-146">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc05c-147">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-147">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="bc05c-148">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="bc05c-148">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc05c-149">ときに<xref:System.Data.IDbDataAdapter.SelectCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="bc05c-149">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="bc05c-150"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> 、以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-150">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="bc05c-151">場合、 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 、どの行を返さないにテーブルは追加されません、 <xref:System.Data.DataSet>、し、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="bc05c-151">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc05c-152">次の例は、継承のインスタンスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-152">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="bc05c-153">既に作成するいると想定して、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-153">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc05c-154">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-154">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="bc05c-155">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="bc05c-155">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc05c-156">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bc05c-157">次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="bc05c-157">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="bc05c-158">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bc05c-159">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-159">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bc05c-160">ときに<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="bc05c-160">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="bc05c-161"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 、以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-161">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc05c-162">このコマンドの実行には、行が返されますにこれらの行が追加、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="bc05c-162">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc05c-163">次の例は、継承のインスタンスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="bc05c-163">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="bc05c-164">既に作成するいると想定して、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc05c-164">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>