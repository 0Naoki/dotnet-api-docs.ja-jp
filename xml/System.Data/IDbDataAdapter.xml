<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5ad4617b21404fdfc9af0b0272a505fd2fb4f37" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398316" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Data.DataSet" /> にデータを格納し、データ ソースを更新するために使用するコマンド関連プロパティのセットを表します。リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbDataAdapter>インターフェイスから継承、<xref:System.Data.IDataAdapter>インターフェイスし、リレーショナル データベースで使用するために設計されたデータ アダプターを作成するオブジェクトを使用します。 <xref:System.Data.IDbDataAdapter>インターフェイスと、必要に応じて、ユーティリティ クラス<xref:System.Data.Common.DbDataAdapter>、データ ソース間のブリッジを表すデータ アダプター クラスの実装、継承したクラスを使用して、<xref:System.Data.DataSet>です。 DataAdapter クラスの詳細については、次を参照してください。 [DataAdapter からの DataSet の読み込み](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)です。 .NET Framework データ プロバイダーの実装の詳細については、次を参照してください。 [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)です。  
  
 アプリケーションがのインスタンスを作成していない、<xref:System.Data.IDbDataAdapter>インターフェイスを直接が継承するクラスのインスタンスを作成、<xref:System.Data.IDbDataAdapter>と<xref:System.Data.Common.DbDataAdapter>です。  
  
 継承するクラス<xref:System.Data.IDbDataAdapter>継承されたメンバーを実装し、通常プロバイダー固有の機能を追加するその他のメンバーを定義する必要があります。 たとえば、<xref:System.Data.IDbDataAdapter>インターフェイスを定義、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ、および<xref:System.Data.Common.DbDataAdapter>インターフェイスを定義、<xref:System.Data.IDataAdapter.Fill%2A>を受け取るメソッド、<xref:System.Data.DataTable>をパラメーターとして。 さらに、<xref:System.Data.OleDb.OleDbDataAdapter>クラスは継承、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティおよび<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッド定義のオーバー ロードを 2 つ追加して、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>を ADO レコード セット オブジェクトをパラメーターとして受け取るメソッド。  
  
   
  
## Examples  
 次の例は、派生クラスを使用して<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlDataAdapter>と<xref:System.Data.SqlClient.SqlConnection>、データ ソースからレコードを選択します。 塗りつぶされた<xref:System.Data.DataSet>次が返されます。 これを行うには、メソッドが渡される初期化された<xref:System.Data.DataSet>、接続文字列、およびクエリ文字列では、TRANSACT-SQL SELECT ステートメント。  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>.NET Framework データ プロバイダー間の整合性を高める形式で継承するクラスの名前を<paramref name="Prv" />DataAdapter 場所<paramref name="Prv" />は、特定の .NET Framework データ プロバイダー名前空間のすべてのクラスに指定された uniform プレフィックス。 たとえば、<paramref name="Sql" />のプレフィックス、<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラス内で、<see langword="System.Data.SqlClient" />名前空間。  
  
 継承する場合、<see cref="T:System.Data.IDbDataAdapter" />インターフェイスでは、次のコンス トラクターを実装する必要があります。  
  
 <list type="table"><listheader><term> 項目  
  
 </term><description>説明  
  
 </description></listheader><item><term> PrvDataAdapter()  
  
 </term><description> PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)  
  
 </term><description> 指定した SQL SELECT ステートメントで PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (文字列 selectCommandText、文字列 selectConnectionString)  
  
 </term><description> SQL SELECT ステートメントと接続文字列を使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (文字列 selectCommandText、PrvConnection selectConnection)  
  
 </term><description> SQL SELECT ステートメントと PrvConnection オブジェクトを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ セットからレコードを削除する SQL ステートメントを取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、主キー情報が内に存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>を設定する場合は、自動的に生成できます、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。  
  
 ときに<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>以前に作成の参照を保持<xref:System.Data.IDbCommand>オブジェクト。  
  
   
  
## Examples  
 次の例は、継承のインスタンスを作成<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>プロパティです。 既に作成していることを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</summary>
        <value>データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、主キー情報が内に存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>を設定する場合は、自動的に生成できます、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。  
  
 ときに<xref:System.Data.IDbDataAdapter.InsertCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>以前に作成の参照を保持<xref:System.Data.IDbCommand>オブジェクト。  
  
> [!NOTE]
>  これらの行に追加できますこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.IDbCommand>オブジェクト。  
  
   
  
## Examples  
 次の例は、継承のインスタンスを作成<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティです。 既に作成していることを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</summary>
        <value>データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Data.IDbDataAdapter.SelectCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>以前に作成の参照を保持<xref:System.Data.IDbCommand>オブジェクト。  
  
 場合、 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 、どの行を返さないにテーブルが追加されて、<xref:System.Data.DataSet>例外が発生したことはありません。  
  
   
  
## Examples  
 次の例は、継承のインスタンスを作成<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティです。 既に作成していることを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</summary>
        <value>データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、主キー情報が内に存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>を設定する場合は、自動的に生成できます、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。  
  
 ときに<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません。 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>以前に作成の参照を保持<xref:System.Data.IDbCommand>オブジェクト。  
  
> [!NOTE]
>  このコマンドの実行には、行が返されますにこれらの行が追加、<xref:System.Data.DataSet>です。  
  
   
  
## Examples  
 次の例は、継承のインスタンスを作成<xref:System.Data.OleDb.OleDbDataAdapter>クラス、およびセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>プロパティです。 既に作成していることを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>