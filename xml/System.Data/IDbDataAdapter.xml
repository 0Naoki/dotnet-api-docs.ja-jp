<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7fe0b84bec2618671b279ad6f9ff0996241062" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70483808" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Data.DataSet" /> にデータを格納し、データ ソースを更新するために使用するコマンド関連プロパティのセットを表します。リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイス<xref:System.Data.IDbDataAdapter>は、 <xref:System.Data.IDataAdapter>インターフェイスから継承し、オブジェクトがリレーショナルデータベースで使用するように設計された DataAdapter を作成できるようにします。 インターフェイスと、オプションでユーティリティクラスを<xref:System.Data.Common.DbDataAdapter>使用すると、継承クラスは、データソースとの<xref:System.Data.DataSet>間のブリッジを表す DataAdapter クラスを実装できます。 <xref:System.Data.IDbDataAdapter> DataAdapter クラスの詳細については、「 [dataadapter からのデータセットの読み込み](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)」を参照してください。 .NET Framework データプロバイダーの実装の詳細については、「 [.NET Framework Data Provider の実装](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71))」を参照してください。  
  
 アプリケーションは、 <xref:System.Data.IDbDataAdapter>インターフェイスのインスタンスを直接作成するのではなく、およびを<xref:System.Data.Common.DbDataAdapter>継承<xref:System.Data.IDbDataAdapter>するクラスのインスタンスを作成します。  
  
 継承<xref:System.Data.IDbDataAdapter>するクラスは、継承されたメンバーを実装する必要があり、通常は、プロバイダー固有の機能を追加するための追加メンバーを定義します。 たとえば、インターフェイスは<xref:System.Data.IDbDataAdapter> <xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティを定義し、インターフェイスは<xref:System.Data.Common.DbDataAdapter>を<xref:System.Data.DataTable>パラメーターと<xref:System.Data.IDataAdapter.Fill%2A>して受け取るメソッドを定義します。 次に、クラス<xref:System.Data.OleDb.OleDbDataAdapter>は<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティと<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドを継承<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>し、ADO レコードセットオブジェクトをパラメーターとして受け取るメソッドの2つの追加のオーバーロードも定義します。  
  
   
  
## Examples  
 次の例では、派生クラス<xref:System.Data.SqlClient.SqlCommand>、 <xref:System.Data.SqlClient.SqlDataAdapter> 、 <xref:System.Data.SqlClient.SqlConnection>およびを使用して、データソースからレコードを選択します。 次に<xref:System.Data.DataSet> 、入力されたが返されます。 これを実現するために、メソッドには<xref:System.Data.DataSet>、初期化された、接続文字列、および transact-sql SELECT ステートメントであるクエリ文字列が渡されます。  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>.NET Framework データプロバイダー間の一貫性を高めるには、 <paramref name="Prv" /> <paramref name="Prv" /> DataAdapter という形式で継承クラスに名前を付けます。は、特定の .NET Framework データプロバイダーの名前空間のすべてのクラスに指定された一様なプレフィックスです。 たとえば、 <paramref name="Sql" />は<see langword="System.Data.SqlClient" />名前空間の<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラスのプレフィックスです。  
  
<see cref="T:System.Data.IDbDataAdapter" />インターフェイスから継承する場合は、次のコンストラクターを実装する必要があります。 
 <list type="table"><listheader><term> アイテム 
 </term><description> 説明 
 </description></listheader><item><term> PrvDataAdapter() 
 </term><description> PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) 
 </term><description> 指定した SQL SELECT ステートメントを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (string selectCommandText、string Selectcommandtext) 
 </term><description> SQL SELECT ステートメントと接続文字列を使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item><item><term> PrvDataAdapter (string selectCommandText, PrvConnection Selectcommandtext) 
 </term><description> SQL SELECT ステートメントと PrvConnection オブジェクトを使用して、PrvDataAdapter クラスの新しいインスタンスを初期化します。  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ セットからレコードを削除する SQL ステートメントを取得または設定します。</summary>
        <value><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 では、このプロパティが設定されておらず、 <xref:System.Data.DataSet>に主キー情報が<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>含まれている場合は、.NET Framework `SelectCommand`データプロバイダーのプロパティを設定すると、が自動的に生成されます。 <xref:System.Data.Common.DbDataAdapter.Update%2A> その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。 この生成ロジックでは、にキー列情報が存在<xref:System.Data.DataSet>している必要があります。 詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。  
  
 以前<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>に作成さ<xref:System.Data.IDbCommand>れたにが割り当て<xref:System.Data.IDbCommand>られている場合、は複製されません。 は<xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 、以前に作成された<xref:System.Data.IDbCommand>オブジェクトへの参照を保持します。  
  
   
  
## Examples  
 次の例では、継承<xref:System.Data.OleDb.OleDbDataAdapter>されたクラスのインスタンスを作成し、プロパティ<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>プロパティを設定します。 <xref:System.Data.OleDb.OleDbConnection>オブジェクトが既に作成されていることを前提としています。  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</summary>
        <value>データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 では、このプロパティが設定されておらず、 <xref:System.Data.DataSet>に主キー情報が<xref:System.Data.IDbDataAdapter.InsertCommand%2A>含まれている場合は、.NET Framework `SelectCommand`データプロバイダーのプロパティを設定すると、が自動的に生成されます。 <xref:System.Data.Common.DbDataAdapter.Update%2A> その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。 この生成ロジックでは、にキー列情報が存在<xref:System.Data.DataSet>している必要があります。 詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。  
  
 以前<xref:System.Data.IDbDataAdapter.InsertCommand%2A>に作成さ<xref:System.Data.IDbCommand>れたにが割り当て<xref:System.Data.IDbCommand>られている場合、は複製されません。 は<xref:System.Data.IDbDataAdapter.InsertCommand%2A> 、以前に作成された<xref:System.Data.IDbCommand>オブジェクトへの参照を保持します。  
  
> [!NOTE]
>  このコマンドの実行によって行が返される場合、 <xref:System.Data.DataSet> <xref:System.Data.IDbCommand>オブジェクトのプロパティの<xref:System.Data.IDbCommand.UpdatedRowSource%2A>設定方法に応じて、これらの行がに追加されることがあります。  
  
   
  
## Examples  
 次の例では、継承<xref:System.Data.OleDb.OleDbDataAdapter>されたクラスのインスタンスを作成し、プロパティ<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティを設定します。 <xref:System.Data.OleDb.OleDbConnection>オブジェクトが既に作成されていることを前提としています。  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</summary>
        <value>データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以前<xref:System.Data.IDbDataAdapter.SelectCommand%2A>に作成さ<xref:System.Data.IDbCommand>れたにが割り当て<xref:System.Data.IDbCommand>られている場合、は複製されません。 は<xref:System.Data.IDbDataAdapter.SelectCommand%2A> 、以前に作成された<xref:System.Data.IDbCommand>オブジェクトへの参照を保持します。  
  
 が行を返さない場合、 <xref:System.Data.DataSet>にテーブルは追加されず、例外は発生しません。 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>  
  
   
  
## Examples  
 次の例では、継承<xref:System.Data.OleDb.OleDbDataAdapter>されたクラスのインスタンスを作成し、プロパティ<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティを設定します。 <xref:System.Data.OleDb.OleDbConnection>オブジェクトが既に作成されていることを前提としています。  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</summary>
        <value>データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 では、このプロパティが設定されておらず、 <xref:System.Data.DataSet>に主キー情報が<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>含まれている場合は、.NET Framework `SelectCommand`データプロバイダーのプロパティを設定すると、が自動的に生成されます。 <xref:System.Data.Common.DbDataAdapter.Update%2A> その後、設定していない追加のコマンドは、CommandBuilder によって生成されます。 この生成ロジックでは、にキー列情報が存在<xref:System.Data.DataSet>している必要があります。 詳細については、「 [CommandBuilders を使用したコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。  
  
 以前<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>に作成さ<xref:System.Data.IDbCommand>れたにが割り当て<xref:System.Data.IDbCommand>られている場合、は複製されません。 は<xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 、以前に作成された<xref:System.Data.IDbCommand>オブジェクトへの参照を保持します。  
  
> [!NOTE]
>  このコマンドの実行によって<xref:System.Data.DataSet>行が返された場合、これらの行はに追加されます。  
  
   
  
## Examples  
 次の例では、継承<xref:System.Data.OleDb.OleDbDataAdapter>されたクラスのインスタンスを作成し、プロパティ<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>プロパティを設定します。 <xref:System.Data.OleDb.OleDbConnection>オブジェクトが既に作成されていることを前提としています。  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
