<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7ff15e7d9611320b65e21f3e4bab295acd94213" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39862769" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventProviderTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ef583-101">イベントを ETW サブシステムに書き込む <see cref="T:System.Diagnostics.TraceSource" /> のリスナーです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef583-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef583-102">すべてのイベント データ (トレースまたはデバッグ) ソースのイベントは、文字列として ETW サブシステムに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ef583-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="ef583-103">データ要素では、コンマを使用して区切られます。</span><span class="sxs-lookup"><span data-stu-id="ef583-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="ef583-104">別の区切り記号を指定するには、使用、<xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ef583-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="ef583-105">リスナーを追加する<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>ETW サブシステムにプロバイダーを登録します。</span><span class="sxs-lookup"><span data-stu-id="ef583-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="ef583-106">イベントをログ ファイルに書き込む Logman.exe の実行可能プログラム (または同様) を使用して ETW トレース セッションを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ef583-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="ef583-107">イベント データが 1 つの文字列であるために、リスナーからのイベントを処理するためにマニフェストを使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ef583-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="ef583-108">呼び出すと、<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>渡すイベントを記述するメソッドを<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列挙値。</span><span class="sxs-lookup"><span data-stu-id="ef583-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="ef583-109">列挙には、レベルとキーワードの両方の値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ef583-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="ef583-110">指定したレベルの値が、次のいずれかに関連付けられている値を指定できます、ETW セッションからのトレース リスナー プロバイダーを有効にすると<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列挙値。</span><span class="sxs-lookup"><span data-stu-id="ef583-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="ef583-111">重要な (値は 1)</span><span class="sxs-lookup"><span data-stu-id="ef583-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="ef583-112">エラー (値は 2)</span><span class="sxs-lookup"><span data-stu-id="ef583-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="ef583-113">情報 (値は 8)</span><span class="sxs-lookup"><span data-stu-id="ef583-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="ef583-114">詳細 (値は 16)</span><span class="sxs-lookup"><span data-stu-id="ef583-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="ef583-115">警告 (値は 4)</span><span class="sxs-lookup"><span data-stu-id="ef583-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="ef583-116">指定したセッションは、次のいずれかに関連付けられている値を指定できますのキーワード値<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列挙値。</span><span class="sxs-lookup"><span data-stu-id="ef583-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="ef583-117">再開 (値は 2,048)</span><span class="sxs-lookup"><span data-stu-id="ef583-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="ef583-118">開始 (値は 256)</span><span class="sxs-lookup"><span data-stu-id="ef583-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="ef583-119">停止 (値は 512)</span><span class="sxs-lookup"><span data-stu-id="ef583-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="ef583-120">中断 (値は 1,024)</span><span class="sxs-lookup"><span data-stu-id="ef583-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="ef583-121">転送 (値は 4,096)</span><span class="sxs-lookup"><span data-stu-id="ef583-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```csharp  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef583-122">
            <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener providerId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="ef583-123">プロバイダーを識別する一意の文字列 (<see cref="T:System.Guid" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-124">指定したプロバイダー識別子を使用して、<see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="ef583-125">プロバイダーを識別する一意の文字列 (<see cref="T:System.Guid" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ef583-126">リスナーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-126">Name of the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-127">指定したプロバイダー識別子およびリスナー名を使用して、<see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name, delimiter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="ef583-128">プロバイダーを識別する一意の文字列 (<see cref="T:System.Guid" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ef583-129">リスナーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-129">Name of the listener.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="ef583-130">イベント データの区切りに使用する区切り記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-130">Delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="ef583-131">詳細については、<see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> プロパティのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-132">指定したプロバイダー識別子、リスナー名、および区切り記号を使用して、<see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="eventProviderTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef583-133">出力ストリームを終了して、トレース出力またはデバッグ出力を受信しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-133">Closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef583-134">ETW サブシステムに書き込まれるイベント データの区切りに使用する区切り記号を取得および設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-134">Gets and sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef583-135">イベント データの区切りに使用する区切り記号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-135">The delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="ef583-136">既定の区切り記号はコンマです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-136">The default delimiter is a comma.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef583-137">リスナーは、データ要素を文字列に変換し、文字列連結、文字列内の各データ要素を区切るために指定された区切り記号を使用します。</span><span class="sxs-lookup"><span data-stu-id="ef583-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="ef583-138">文字列が ETW サブシステムにイベント データとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ef583-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="ef583-139">文字列を正常に解析するには、コンシューマーが使用された区切り記号を知る必要があります。</span><span class="sxs-lookup"><span data-stu-id="ef583-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="ef583-140">データにコンマを含む可能性のある文字列が含まれている場合は、イベント データを正しく解析できるように、適切な区切り記号を指定します。</span><span class="sxs-lookup"><span data-stu-id="ef583-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="ef583-141">イベント データが 1 つの文字列であるために、リスナーからのイベントを処理するためにマニフェストを使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ef583-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="ef583-142">使用して書き込まれたイベント データに適用される区切り記号、<xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ef583-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="eventProviderTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ef583-143">出力するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-143">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="ef583-144">出力する詳細メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-144">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-145">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した場合、作成したリスナーにエラー メッセージと詳細エラー メッセージを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="eventProviderTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef583-146">出力バッファーをフラッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-146">Flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="eventProviderTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef583-147">トレース リスナーによってサポートされるカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-147">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef583-148">トレース リスナーによってサポートされるカスタム属性の名前を付ける文字列配列。カスタム属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef583-149">トレース リスナーがスレッド セーフかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-149">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef583-150">トレース リスナーがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-150">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ef583-151">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-152">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-153">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-153">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="ef583-154">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-155">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-155">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="ef583-156">出力するトレース データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-156">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-157">トレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-157">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-158">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-159">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-159">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="ef583-160">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-161">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-161">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="ef583-162">データとして出力するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-162">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-163">トレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-163">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-164">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-165">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-165">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="ef583-166">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-167">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-167">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-168">トレース情報およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-168">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-169">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-170">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-170">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="ef583-171">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-172">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-172">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="ef583-173">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-173">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-174">トレース情報、メッセージ、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-174">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-175">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-176">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-176">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="ef583-177">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-178">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-178">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="ef583-179">0 個以上の書式項目を格納している書式指定文字列。<c>args</c> 配列内のオブジェクトに対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-179">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ef583-180">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-180">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-181">トレース情報、オブジェクトの書式付き配列、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="eventProviderTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="ef583-182">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ef583-183">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-183">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="ef583-184">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-184">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="ef583-185">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-185">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="ef583-186">関連するアクティビティを識別する <see cref="T:System.Guid" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-187">トレース情報、メッセージ、関連するアクティビティ ID、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="eventProviderTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ef583-188">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-188">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-189">派生クラスでオーバーライドした場合、指定したメッセージを派生クラスで作成したリスナーに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="eventProviderTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ef583-190">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-190">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef583-191">派生クラスでオーバーライドした場合、派生クラスで作成したリスナーにメッセージと行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef583-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>