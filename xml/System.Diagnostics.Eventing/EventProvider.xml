<Type Name="EventProvider" FullName="System.Diagnostics.Eventing.EventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4630075ced6677fccf6adb1a508a94e095024936" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55382731" /></Metadata><TypeSignature Language="C#" Value="public class EventProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type EventProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3fbae-101">このクラスは、イベントを書き込むときに使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-101">Use this class to write events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-102">使用して書き込まれたイベントを使用する、<xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>と<xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>メソッド、イベントする必要がありますで定義するマニフェストを使用して書き込まれたイベントを<xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>メソッドには、マニフェストは不要です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-102">To consume events written using the <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A> and <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> methods, the events must be defined in a manifest; events written using the <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> method do not require a manifest.</span></span>  
  
 <span data-ttu-id="3fbae-103">イベントは、次のマネージ データ型を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-103">Events can contain the following managed data types:</span></span>  
  
-   <span data-ttu-id="3fbae-104">bool</span><span class="sxs-lookup"><span data-stu-id="3fbae-104">bool</span></span>  
  
-   <span data-ttu-id="3fbae-105">ブール型</span><span class="sxs-lookup"><span data-stu-id="3fbae-105">Boolean</span></span>  
  
-   <span data-ttu-id="3fbae-106">byte</span><span class="sxs-lookup"><span data-stu-id="3fbae-106">byte</span></span>  
  
-   <span data-ttu-id="3fbae-107">char</span><span class="sxs-lookup"><span data-stu-id="3fbae-107">char</span></span>  
  
-   <span data-ttu-id="3fbae-108">decimal</span><span class="sxs-lookup"><span data-stu-id="3fbae-108">decimal</span></span>  
  
-   <span data-ttu-id="3fbae-109">double</span><span class="sxs-lookup"><span data-stu-id="3fbae-109">double</span></span>  
  
-   <span data-ttu-id="3fbae-110">float</span><span class="sxs-lookup"><span data-stu-id="3fbae-110">float</span></span>  
  
-   <span data-ttu-id="3fbae-111">GUID</span><span class="sxs-lookup"><span data-stu-id="3fbae-111">Guid</span></span>  
  
-   <span data-ttu-id="3fbae-112">int</span><span class="sxs-lookup"><span data-stu-id="3fbae-112">int</span></span>  
  
-   <span data-ttu-id="3fbae-113">IntPtr</span><span class="sxs-lookup"><span data-stu-id="3fbae-113">IntPtr</span></span>  
  
-   <span data-ttu-id="3fbae-114">long</span><span class="sxs-lookup"><span data-stu-id="3fbae-114">long</span></span>  
  
-   <span data-ttu-id="3fbae-115">sbyte</span><span class="sxs-lookup"><span data-stu-id="3fbae-115">sbyte</span></span>  
  
-   <span data-ttu-id="3fbae-116">short</span><span class="sxs-lookup"><span data-stu-id="3fbae-116">short</span></span>  
  
-   <span data-ttu-id="3fbae-117">string</span><span class="sxs-lookup"><span data-stu-id="3fbae-117">string</span></span>  
  
-   <span data-ttu-id="3fbae-118">uint</span><span class="sxs-lookup"><span data-stu-id="3fbae-118">uint</span></span>  
  
-   <span data-ttu-id="3fbae-119">UInt64</span><span class="sxs-lookup"><span data-stu-id="3fbae-119">UInt64</span></span>  
  
 <span data-ttu-id="3fbae-120">イベント マニフェストで使用する場合、`Boolean`型で、データ要素を使用して書き込むことはできません、`Boolean`マネージ コードでのデータ型。</span><span class="sxs-lookup"><span data-stu-id="3fbae-120">If an event in your manifest uses the `Boolean` in-type, you cannot write the data element using a `Boolean` data type in your managed code.</span></span> <span data-ttu-id="3fbae-121">`Boolean` 、マニフェストの 種類には 4 バイトの値が必要ですが、`Boolean`マネージ コードでのデータ型が 1 バイトです。</span><span class="sxs-lookup"><span data-stu-id="3fbae-121">The `Boolean` in-type in your manifest expects a 4-byte value, and a `Boolean` data type in managed code is 1-byte.</span></span> <span data-ttu-id="3fbae-122">代わりに、使用する必要があります、`int`値の書き込みにデータ型。</span><span class="sxs-lookup"><span data-stu-id="3fbae-122">Instead, you must use an `int` data type to write the value.</span></span> <span data-ttu-id="3fbae-123">ログに記録する場合、`Boolean`値には、UInt8、マニフェスト内で型を使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-123">If you want to log a `Boolean` value, use the UInt8 in-type in your manifest.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProvider (Guid providerGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid providerGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerGuid As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProvider(Guid providerGuid);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProvider : Guid -&gt; System.Diagnostics.Eventing.EventProvider" Usage="new System.Diagnostics.Eventing.EventProvider providerGuid" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="providerGuid"><span data-ttu-id="3fbae-124">プロバイダーを一意に識別する GUID。</span><span class="sxs-lookup"><span data-stu-id="3fbae-124">Guid that uniquely identifies the provider.</span></span></param>
        <summary><span data-ttu-id="3fbae-125"><see cref="T:System.Diagnostics.Eventing.EventProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-125">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-126">プロバイダーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-126">Registers the provider.</span></span> <span data-ttu-id="3fbae-127">完了すると、登録を削除するには、呼び出し、<xref:System.Diagnostics.Eventing.EventProvider.Close%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3fbae-127">To remove the registration when finished, call the <xref:System.Diagnostics.Eventing.EventProvider.Close%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientMemoryException"><span data-ttu-id="3fbae-128">メモリが不足しているため、操作を完了できません。</span><span class="sxs-lookup"><span data-stu-id="3fbae-128">There is not enough memory to complete the operation.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3fbae-129"><see cref="N:System.Diagnostics.Eventing" /> 名前空間のクラスは、Windows Vista でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-129">The classes in the <see cref="N:System.Diagnostics.Eventing" /> namespace work only on Windows Vista.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-130"><paramref name="providerGuid" /> パラメーターを null 値にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3fbae-130">The <paramref name="providerGuid" /> parameter cannot be null.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="3fbae-131">ETW サブシステムによってエラーが返されました。</span><span class="sxs-lookup"><span data-stu-id="3fbae-131">An error returned by the ETW subsystem.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="eventProvider.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-132">ETW サブシステムからプロバイダーの登録を解除し、すべてのアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-132">Removes the provider's registration from the ETW subsystem and releases all unmanaged resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-133">システム リソースを破棄するを待つのではなく完了すると、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-133">You should call this method when finished instead of waiting for the system to dispose of the resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="3fbae-134">ETW サブシステムによってエラーが返されました。</span><span class="sxs-lookup"><span data-stu-id="3fbae-134">An error returned by the ETW subsystem.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateActivityId">
      <MemberSignature Language="C#" Value="public static Guid CreateActivityId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid CreateActivityId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateActivityId () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid CreateActivityId();" />
      <MemberSignature Language="F#" Value="static member CreateActivityId : unit -&gt; Guid" Usage="System.Diagnostics.Eventing.EventProvider.CreateActivityId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-135">プロバイダーの一意の動作識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-135">Creates a unique activity identifier for the provider.</span></span></summary>
        <returns><span data-ttu-id="3fbae-136">プロバイダーの動作識別子を設定する際、<see cref="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" /> メソッドを呼び出すときに使用する一意の GUID。</span><span class="sxs-lookup"><span data-stu-id="3fbae-136">A unique Guid that you use when calling the <see cref="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" /> method to set the activity identifier for the provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-137">これは静的メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3fbae-137">This is a static method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-138">この <see cref="T:System.Diagnostics.Eventing.EventProvider" /> オブジェクトに使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-138">Releases the resources used by this <see cref="T:System.Diagnostics.Eventing.EventProvider" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3fbae-139">このパラメーターは、アンマネージ リソースがないために、このメソッドによって無視されます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-139">This parameter is ignored by this method since there are no unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3fbae-140">この <see cref="T:System.Diagnostics.Eventing.EventProvider" /> オブジェクトに使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-140">Releases the resources used by this <see cref="T:System.Diagnostics.Eventing.EventProvider" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="eventProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-141">インスタンスがガベージ コレクションによって回収される前にリソースを解放し、内部クリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-141">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteEventError">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.Eventing.EventProvider/WriteEventErrorCode GetLastWriteEventError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWriteEventError () As EventProvider.WriteEventErrorCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Eventing::EventProvider::WriteEventErrorCode GetLastWriteEventError();" />
      <MemberSignature Language="F#" Value="static member GetLastWriteEventError : unit -&gt; System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode" Usage="System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-142">イベントの書き込みエラーに関連した最後のエラーを取得します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-142">Gets the last error associated with an event write failure.</span></span></summary>
        <returns><span data-ttu-id="3fbae-143">この値は、イベントの書き込みエラーの原因を調べる際に使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-143">Use the value to determine the cause of an event write failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-144"><xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>、 <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>、および<xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>メソッドがイベントの書き込みに失敗した場合、この値を設定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-144">The <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>, <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>, and <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> methods set this value if they fail to write the event.</span></span>  
  
 <span data-ttu-id="3fbae-145">これは静的メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3fbae-145">This is a static method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fbae-146">セッションでプロバイダーが有効にされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-146">Determines whether a session enabled the provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : unit -&gt; bool" Usage="eventProvider.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fbae-147">プロバイダーを有効化するときに使用されたレベルやキーワードの値に関係なく、任意のセッションでプロバイダーが有効にされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-147">Determines whether any session enabled the provider, regardless of the level and keyword values used to enable the provider.</span></span></summary>
        <returns><span data-ttu-id="3fbae-148">プロバイダーが任意のセッションに対して有効にされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-148">Is <see langword="true" /> if the provider is enabled to any session; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-149">通常、プロバイダーには、プロバイダーがセッションで有効になっているかどうかを判断するには、このメソッドは呼び出しませんプロバイダーは単にイベントを書き込むし、ETW セッションにイベントを記録するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-149">Typically, a provider does not call this method to determine whether the provider has been enabled by a session; the provider simply writes the event, and ETW determines whether the event is logged to the session.</span></span> <span data-ttu-id="3fbae-150">プロバイダーは、プロバイダーは、イベントを生成する余分な作業を実行する必要がある場合は、この関数を呼び出す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-150">A provider may want to call this function if the provider needs to perform extra work to generate the event.</span></span> <span data-ttu-id="3fbae-151">この場合、この関数を呼び出すことがあります保存リソースと時間。</span><span class="sxs-lookup"><span data-stu-id="3fbae-151">In this case, calling this function first may save resources and time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (byte level, long keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(unsigned int8 level, int64 keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As Byte, keywords As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Byte level, long keywords);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : byte * int64 -&gt; bool" Usage="eventProvider.IsEnabled (level, keywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Byte" />
        <Parameter Name="keywords" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="3fbae-152">イベントに含まれる詳細レベル。</span><span class="sxs-lookup"><span data-stu-id="3fbae-152">Level of detail included in the event.</span></span></param>
        <param name="keywords"><span data-ttu-id="3fbae-153">イベントのカテゴリを指定するビット マスク。</span><span class="sxs-lookup"><span data-stu-id="3fbae-153">Bit mask that specifies the event category.</span></span> <span data-ttu-id="3fbae-154">このマスクは、そのイベントに対してマニフェストで定義されたものと同じキーワード マスクであることが必要です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-154">This mask should be the same keyword mask that is defined in the manifest for the event.</span></span></param>
        <summary><span data-ttu-id="3fbae-155">なんらかのセッションが、プロバイダーから、指定されたイベントを要求しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-155">Determines whether any session is requesting the specified event from the provider.</span></span></summary>
        <returns><span data-ttu-id="3fbae-156">指定されたイベントをなんらかのセッションが要求している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-156">Is <see langword="true" /> if any session is requesting the specified event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-157">通常、プロバイダーには、セッションが指定したイベントを要求するかどうかを判断するには、このメソッドは呼び出しませんプロバイダーは単にイベントを書き込むし、ETW セッションにイベントを記録するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-157">Typically, a provider does not call this method to determine whether a session requested the specified event; the provider simply writes the event, and ETW determines whether the event is logged to a session.</span></span> <span data-ttu-id="3fbae-158">プロバイダーは、プロバイダーは、イベントを生成する余分な作業を実行する必要がある場合は、この関数を呼び出す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-158">A provider may want to call this function if the provider needs to perform extra work to generate the event.</span></span> <span data-ttu-id="3fbae-159">この場合、セッションを要求するか、イベントかどうかを判断するには、まずこの関数を呼び出すことがあります保存リソースと時間。</span><span class="sxs-lookup"><span data-stu-id="3fbae-159">In this case, calling this function first to determine if a session requested the event or not, may save resources and time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActivityId">
      <MemberSignature Language="C#" Value="public static void SetActivityId (ref Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetActivityId(valuetype System.Guid&amp; id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetActivityId (ByRef id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetActivityId(Guid % id);" />
      <MemberSignature Language="F#" Value="static member SetActivityId :  -&gt; unit" Usage="System.Diagnostics.Eventing.EventProvider.SetActivityId id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="3fbae-160"><see cref="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" /> メソッドから返される一意の動作識別子。</span><span class="sxs-lookup"><span data-stu-id="3fbae-160">A unique activity identifier that the <see cref="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" /> method returns.</span></span></param>
        <summary><span data-ttu-id="3fbae-161"><see cref="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent" /> メソッドで使用する現在の動作識別子を設定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-161">Sets the current activity identifier used by the <see cref="Overload:System.Diagnostics.Eventing.EventProvider.WriteEvent" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-162">識別子は、スレッド コンテキストに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-162">The identifier is stored in the thread context.</span></span>  
  
 <span data-ttu-id="3fbae-163">注、.NET framework version 3.5 に設定する必要が、`id`このメソッドのパラメーターと<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>プロパティの値と同じ id 値をします。</span><span class="sxs-lookup"><span data-stu-id="3fbae-163">Note that in version 3.5 of the .NET framework, you had to set the `id` parameter of this method and the <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property value to the same identifier value.</span></span> <span data-ttu-id="3fbae-164">ただし、framework のバージョン 4.0 で、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッドが自動的に相関関係のアクティビティ識別子を設定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-164">However, in version 4.0 of the framework, the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method automatically sets the correlation activity identifier for you.</span></span>  
  
 <span data-ttu-id="3fbae-165">これは静的メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3fbae-165">This is a static method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fbae-166">イベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-166">Writes an event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-167">マニフェストを使用して、イベントを定義する場合は、これらのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-167">Use these methods if you use a manifest to define your events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, params object[] eventPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteEvent(valuetype System.Diagnostics.Eventing.EventDescriptor&amp; eventDescriptor, object[] eventPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteEvent (ByRef eventDescriptor As EventDescriptor, ParamArray eventPayload As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WriteEvent(System::Diagnostics::Eventing::EventDescriptor % eventDescriptor, ... cli::array &lt;System::Object ^&gt; ^ eventPayload);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent :  * obj[] -&gt; bool" Usage="eventProvider.WriteEvent (eventDescriptor, eventPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" RefType="ref" />
        <Parameter Name="eventPayload" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventDescriptor"><span data-ttu-id="3fbae-168">書き込むイベントを識別する <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-168">An instance of <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> that identifies the event to write.</span></span></param>
        <param name="eventPayload"><span data-ttu-id="3fbae-169">書き込むイベント データを格納するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="3fbae-169">An array of objects that contain the event data to write.</span></span> <span data-ttu-id="3fbae-170">オブジェクトは、マニフェストに指定された順序で格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-170">The object must be in the order specified in the manifest.</span></span> <span data-ttu-id="3fbae-171">配列は 32 オブジェクトまでに制限され、そのうちの 8 つを文字列にすることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-171">The array is limited to 32 objects, of which only eight may be strings.</span></span> <span data-ttu-id="3fbae-172">イベントの最大データ サイズは、64 KB からイベント ヘッダーのサイズを差し引いた値になります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-172">The maximum data size for the event is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-173">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-173">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span>  
  
<span data-ttu-id="3fbae-174">このパラメーターには、null を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-174">This parameter can be null.</span></span></param>
        <summary><span data-ttu-id="3fbae-175">イベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-175">Writes an event.</span></span> <span data-ttu-id="3fbae-176">イベント データは、オブジェクトの配列として指定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-176">The event data is specified as an array of objects.</span></span></summary>
        <returns><span data-ttu-id="3fbae-177">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-177">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-178">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-178">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-179">呼び出す場合、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッド、イベントでは、このメソッドのアクティビティ識別子を指定するスレッド コンテキストから識別子を取得し、イベントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3fbae-179">If you call the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method to specify an activity identifier for the event, this method retrieves the identifier from the thread context and includes it with the event.</span></span>  
  
 <span data-ttu-id="3fbae-180">オブジェクトの種類がサポートされていない場合、メソッドは、オブジェクトの値を書き込みます<xref:System.Object.ToString%2A?displayProperty=nameWithType>ペイロード内のメソッド。</span><span class="sxs-lookup"><span data-stu-id="3fbae-180">If the object type is not supported, the method writes the value of the object's <xref:System.Object.ToString%2A?displayProperty=nameWithType> method in the payload.</span></span> <span data-ttu-id="3fbae-181">サポートされているオブジェクトの種類の一覧は、「解説」を参照してください、<xref:System.Diagnostics.Eventing.EventProvider>クラス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-181">For a list of supported object types, see the Remarks for the <xref:System.Diagnostics.Eventing.EventProvider> class.</span></span>  
  
   
  
## Examples  
  
```csharp  
private static Guid providerId = new Guid("{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}");  
  
enum Keyword  
{  
    Read = 0x1,  
    Write = 0x2,  
    Local = 0x4,  
    Remote = 0x8  
}  
  
enum Level  
{  
    Critical = 1,  
    Error,  
    Warning,  
    Information,  
    Verbose  
}  
  
    EventProvider provider = new EventProvider(providerId);  
    EventDescriptor readEvent;  
    string path = @"<PATHGOESHERE>";  
    UInt64 bytesRead = <ASSIGNVALUE>;  
  
    if (provider.IsEnabled(Level.Information, (long)Keyword.Read))  
    {  
        unchecked  
        {  
            readEvent = new EventDescriptor(0x1, 0x0, 0x10, 0x4, 0x0, 0x0, (long)0x8000000000000005);  
        }  
  
        if (!provider.WriteEvent(ref readEvent, new object[] { path, bytesRead }))  
            Console.WriteLine(EventProvider.GetLastWriteEventError());  
    }  
  
    provider.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-182"><paramref name="eventPayload" /> パラメーターに指定されたオブジェクトまたは文字列が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-182">The <paramref name="eventPayload" /> parameter contains too many objects or strings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteEvent(valuetype System.Diagnostics.Eventing.EventDescriptor&amp; eventDescriptor, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteEvent (ByRef eventDescriptor As EventDescriptor, data As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WriteEvent(System::Diagnostics::Eventing::EventDescriptor % eventDescriptor, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent :  * string -&gt; bool" Usage="eventProvider.WriteEvent (eventDescriptor, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" RefType="ref" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventDescriptor"><span data-ttu-id="3fbae-183">書き込むイベントを識別する <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-183">An instance of <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> that identifies the event to write.</span></span></param>
        <param name="data"><span data-ttu-id="3fbae-184">イベント データとして書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="3fbae-184">The string to write as the event data.</span></span></param>
        <summary><span data-ttu-id="3fbae-185">イベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-185">Writes an event.</span></span> <span data-ttu-id="3fbae-186">イベント データは文字列として指定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-186">The event data is specified as a string.</span></span></summary>
        <returns><span data-ttu-id="3fbae-187">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-187">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-188">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-188">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-189">呼び出す場合、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッド、イベントでは、このメソッドのアクティビティ識別子を指定するスレッド コンテキストから識別子を取得し、イベントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3fbae-189">If you call the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method to specify an activity identifier for the event, this method retrieves the identifier from the thread context and includes it with the event.</span></span>  
  
 <span data-ttu-id="3fbae-190">文字列の最大長は 64 KB にイベント ヘッダーのサイズを差し引いた値です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-190">The maximum string length is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-191">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-191">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span>  
  
   
  
## Examples  
  
```csharp  
private static Guid providerId = new Guid("{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}");  
  
EventProvider provider = new EventProvider(providerId);  
EventDescriptor writeEvent;  
  
if (provider.IsEnabled())  
{  
     unchecked  
     {  
          writeEvent = new EventDescriptor(0x2, 0x0, 0x10, 0x3, 0x0, 0x0, (long)0x8000000000000006);  
     }  
  
     if (!provider.WriteEvent(ref writeEvent, "Write event."))  
          Console.WriteLine(EventProvider.GetLastWriteEventError());  
}  
  
provider.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-192"><paramref name="data" /> が <see langword="null" /> の場合。</span><span class="sxs-lookup"><span data-stu-id="3fbae-192">If <paramref name="data" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool WriteEvent(valuetype System.Diagnostics.Eventing.EventDescriptor&amp; eventDescriptor, int32 dataCount, native int data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WriteEvent (ByRef eventDescriptor As EventDescriptor, dataCount As Integer, data As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool WriteEvent(System::Diagnostics::Eventing::EventDescriptor % eventDescriptor, int dataCount, IntPtr data);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent :  * int * nativeint -&gt; bool" Usage="eventProvider.WriteEvent (eventDescriptor, dataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" RefType="ref" />
        <Parameter Name="dataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventDescriptor"><span data-ttu-id="3fbae-193">書き込むイベントを識別する <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-193">An instance of <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> that identifies the event to write.</span></span></param>
        <param name="dataCount"><span data-ttu-id="3fbae-194"><paramref name="data" /> パラメーターが指すイベント データのサイズ。</span><span class="sxs-lookup"><span data-stu-id="3fbae-194">Size of the event data to which the <paramref name="data" /> parameter points.</span></span> <span data-ttu-id="3fbae-195">イベント データの最大サイズは、64 KB からイベント ヘッダーのサイズを差し引いた値になります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-195">The maximum event data size is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-196">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-196">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span></param>
        <param name="data"><span data-ttu-id="3fbae-197">書き込むイベント データへのポインター。</span><span class="sxs-lookup"><span data-stu-id="3fbae-197">Pointer to the event data to write.</span></span></param>
        <summary><span data-ttu-id="3fbae-198">イベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-198">Writes an event.</span></span> <span data-ttu-id="3fbae-199">イベント データは、メモリのブロックとして指定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-199">The event data is specified as a block of memory.</span></span></summary>
        <returns><span data-ttu-id="3fbae-200">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-200">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-201">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-201">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-202">呼び出す場合、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッド、イベントでは、このメソッドのアクティビティ識別子を指定するスレッド コンテキストから識別子を取得し、イベントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3fbae-202">If you call the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method to specify an activity identifier for the event, this method retrieves the identifier from the thread context and includes it with the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteMessageEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fbae-203">データとして文字列を保持するイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-203">Writes an event that contains a string as its data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-204">これらのメソッドには、イベントを消費するマニフェストは不要です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-204">These methods do not require a manifest to consume the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteMessageEvent">
      <MemberSignature Language="C#" Value="public bool WriteMessageEvent (string eventMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteMessageEvent(string eventMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteMessageEvent (eventMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WriteMessageEvent(System::String ^ eventMessage);" />
      <MemberSignature Language="F#" Value="member this.WriteMessageEvent : string -&gt; bool" Usage="eventProvider.WriteMessageEvent eventMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventMessage"><span data-ttu-id="3fbae-205">イベント データとして書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="3fbae-205">String to write as the event data.</span></span></param>
        <summary><span data-ttu-id="3fbae-206">データとして文字列を保持するイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-206">Writes an event that contains a string as its data.</span></span></summary>
        <returns><span data-ttu-id="3fbae-207">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-207">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-208">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-208">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-209">文字列の最大長は 64 KB にイベント ヘッダーのサイズを差し引いた値です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-209">The maximum string length is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-210">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-210">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span>  
  
   
  
## Examples  
  
```csharp  
if (!provider.WriteMessageEvent("Event string."))  
    Console.WriteLine(EventProvider.GetLastWriteEventError());  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-211"><paramref name="eventMessage" /> が <see langword="null" /> の場合。</span><span class="sxs-lookup"><span data-stu-id="3fbae-211">If <paramref name="eventMessage" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteMessageEvent">
      <MemberSignature Language="C#" Value="public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteMessageEvent(string eventMessage, unsigned int8 eventLevel, int64 eventKeywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteMessageEvent (eventMessage As String, eventLevel As Byte, eventKeywords As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WriteMessageEvent(System::String ^ eventMessage, System::Byte eventLevel, long eventKeywords);" />
      <MemberSignature Language="F#" Value="member this.WriteMessageEvent : string * byte * int64 -&gt; bool" Usage="eventProvider.WriteMessageEvent (eventMessage, eventLevel, eventKeywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventMessage" Type="System.String" />
        <Parameter Name="eventLevel" Type="System.Byte" />
        <Parameter Name="eventKeywords" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventMessage"><span data-ttu-id="3fbae-212">イベント データとして書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="3fbae-212">String to write as the event data.</span></span></param>
        <param name="eventLevel"><span data-ttu-id="3fbae-213">イベントに含まれる詳細レベル。</span><span class="sxs-lookup"><span data-stu-id="3fbae-213">Level of detail included in the event.</span></span> <span data-ttu-id="3fbae-214">プロバイダーがマニフェストを使ってイベントを定義する場合は、この値をマニフェストで定義されたものと同じレベルに設定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-214">If the provider uses a manifest to define the event, set this value to the same level defined in the manifest.</span></span></param>
        <param name="eventKeywords"><span data-ttu-id="3fbae-215">イベントのカテゴリを指定するビット マスク。</span><span class="sxs-lookup"><span data-stu-id="3fbae-215">Bit mask that specifies the event category.</span></span> <span data-ttu-id="3fbae-216">プロバイダーがマニフェストを使ってイベントを定義する場合は、この値をマニフェストで定義されたものと同じキーワード マスクに設定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-216">If the provider uses a manifest to define the event, set this value to the same keyword mask defined in the manifest.</span></span></param>
        <summary><span data-ttu-id="3fbae-217">レベルおよびキーワード値が、セッションによって要求されたイベントと一致する場合に、データとして文字列を保持するイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-217">Writes an event that contains a string as its data if the level and keyword value match the events requested by the session.</span></span></summary>
        <returns><span data-ttu-id="3fbae-218">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-218">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-219">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-219">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-220">文字列の最大長は 64 KB にイベント ヘッダーのサイズを差し引いた値です。</span><span class="sxs-lookup"><span data-stu-id="3fbae-220">The maximum string length is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-221">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-221">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span>  
  
   
  
## Examples  
  
```csharp  
// Calling this method with level and keyword set to zero is the same  
// as calling WriteMessageEvent(string); the event is always written.  
if (!provider.WriteMessageEvent("Event string.", 0, 0))  
    Console.WriteLine(EventProvider.GetLastWriteEventError());  
  
// Event is written if the level value of the session is less than or equal to 3, and bit 1 of the session  
// keyword bit-mask is set.  
if (!provider.WriteMessageEvent("Event string.", 3, 2))  
    Console.WriteLine(EventProvider.GetLastWriteEventError());  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-222"><paramref name="eventMessage" /> が <see langword="null" /> の場合。</span><span class="sxs-lookup"><span data-stu-id="3fbae-222">If <paramref name="eventMessage" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteTransferEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fbae-223">イベントをエンド ツー エンドのシナリオで追跡している場合に、一連のイベントをリンクさせます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-223">Links events together when tracing events in an end-to-end scenario.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteTransferEvent">
      <MemberSignature Language="C#" Value="public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, params object[] eventPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteTransferEvent(valuetype System.Diagnostics.Eventing.EventDescriptor&amp; eventDescriptor, valuetype System.Guid relatedActivityId, object[] eventPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteTransferEvent (ByRef eventDescriptor As EventDescriptor, relatedActivityId As Guid, ParamArray eventPayload As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WriteTransferEvent(System::Diagnostics::Eventing::EventDescriptor % eventDescriptor, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ eventPayload);" />
      <MemberSignature Language="F#" Value="member this.WriteTransferEvent :  * Guid * obj[] -&gt; bool" Usage="eventProvider.WriteTransferEvent (eventDescriptor, relatedActivityId, eventPayload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
        <Parameter Name="eventPayload" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventDescriptor"><span data-ttu-id="3fbae-224">書き込むイベントを識別する <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-224">An instance of <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> that identifies the event to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="3fbae-225">直前のコンポーネントからの動作識別子。</span><span class="sxs-lookup"><span data-stu-id="3fbae-225">Activity identifier from the previous component.</span></span> <span data-ttu-id="3fbae-226">このパラメーターを使用して、特定のコンポーネントのイベントを直前のコンポーネントのイベントにリンクさせます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-226">Use this parameter to link your component's events to the previous component's events.</span></span></param>
        <param name="eventPayload"><span data-ttu-id="3fbae-227">書き込むイベント データを格納するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="3fbae-227">An array of objects that contain the event data to write.</span></span> <span data-ttu-id="3fbae-228">データは、マニフェストに指定された順序で格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-228">The data must be in the order specified in the manifest.</span></span> <span data-ttu-id="3fbae-229">配列は 32 オブジェクトまでに制限され、そのうちの 8 つを文字列にすることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-229">The array is limited to 32 objects, of which only eight may be strings.</span></span> <span data-ttu-id="3fbae-230">イベントの最大データ サイズは、64 KB からイベント ヘッダーのサイズを差し引いた値になります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-230">The maximum data size for the event is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-231">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-231">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span></param>
        <summary><span data-ttu-id="3fbae-232">イベントをエンド ツー エンドのシナリオで追跡している場合に、一連のイベントをリンクさせます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-232">Links events together when tracing events in an end-to-end scenario.</span></span> <span data-ttu-id="3fbae-233">イベント データは、オブジェクトの配列として指定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-233">The event data is specified as an array of objects.</span></span></summary>
        <returns><span data-ttu-id="3fbae-234">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-234">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-235">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-235">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-236">メソッドは、このコンポーネントを識別するためにスレッド コンテキストで設定するアクティビティ ID を使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-236">The method uses the activity ID set in the thread context to identify this component.</span></span> <span data-ttu-id="3fbae-237">アクティビティ ID を設定するには、呼び出し、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3fbae-237">To set the activity ID, call the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method.</span></span>  
  
 <span data-ttu-id="3fbae-238">使用する場合、<xref:System.Diagnostics.Trace>クラスを使用しない、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>アクティビティ ID を指定する方法</span><span class="sxs-lookup"><span data-stu-id="3fbae-238">If you use the <xref:System.Diagnostics.Trace> class, you do not use the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method to specify the activity ID.</span></span> <span data-ttu-id="3fbae-239">代わりに、アクセス、<xref:System.Diagnostics.Trace.CorrelationManager%2A>を取得するプロパティ、<xref:System.Diagnostics.CorrelationManager>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3fbae-239">Instead, access the <xref:System.Diagnostics.Trace.CorrelationManager%2A> property to get the <xref:System.Diagnostics.CorrelationManager> object.</span></span> <span data-ttu-id="3fbae-240">次に、設定、<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>プロパティをアクティビティの id。</span><span class="sxs-lookup"><span data-stu-id="3fbae-240">Then, set the <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property to the activity ID.</span></span> <span data-ttu-id="3fbae-241">設定することも必要があります、`relatedActivityId`を<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>値。</span><span class="sxs-lookup"><span data-stu-id="3fbae-241">You must also set the `relatedActivityId` to a <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fbae-242"><paramref name="eventPayload" /> に指定されたオブジェクトまたは文字列が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-242">If <paramref name="eventPayload" /> contains too many objects or strings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTransferEvent">
      <MemberSignature Language="C#" Value="protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool WriteTransferEvent(valuetype System.Diagnostics.Eventing.EventDescriptor&amp; eventDescriptor, valuetype System.Guid relatedActivityId, int32 dataCount, native int data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Function WriteTransferEvent (ByRef eventDescriptor As EventDescriptor, relatedActivityId As Guid, dataCount As Integer, data As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool WriteTransferEvent(System::Diagnostics::Eventing::EventDescriptor % eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);" />
      <MemberSignature Language="F#" Value="member this.WriteTransferEvent :  * Guid * int * nativeint -&gt; bool" Usage="eventProvider.WriteTransferEvent (eventDescriptor, relatedActivityId, dataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDescriptor" Type="System.Diagnostics.Eventing.EventDescriptor" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
        <Parameter Name="dataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventDescriptor"><span data-ttu-id="3fbae-243">書き込むイベントを識別する <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3fbae-243">An instance of <see cref="T:System.Diagnostics.Eventing.EventDescriptor" /> that identifies the event to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="3fbae-244">直前のコンポーネントからの動作識別子。</span><span class="sxs-lookup"><span data-stu-id="3fbae-244">Activity identifier from the previous component.</span></span> <span data-ttu-id="3fbae-245">このパラメーターを使用して、特定のコンポーネントのイベントを直前のコンポーネントのイベントにリンクさせます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-245">Use this parameter to link your component's events to the previous component's events.</span></span></param>
        <param name="dataCount"><span data-ttu-id="3fbae-246"><paramref name="data" /> パラメーターが指すイベント データのサイズ。</span><span class="sxs-lookup"><span data-stu-id="3fbae-246">Size of the event data to which the <paramref name="data" /> parameter points.</span></span> <span data-ttu-id="3fbae-247">イベント データの最大サイズは、64 KB からイベント ヘッダーのサイズを差し引いた値になります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-247">The maximum event data size is limited to 64 KB minus the size of the event headers.</span></span> <span data-ttu-id="3fbae-248">セッションのバッファー サイズが小さい場合や、イベントを含んだ拡張データ項目がセッションに存在する場合、イベント サイズはこれよりも小さくなります。</span><span class="sxs-lookup"><span data-stu-id="3fbae-248">The event size is less if the session's buffer size is less and the session includes extended data items with the event.</span></span></param>
        <param name="data"><span data-ttu-id="3fbae-249">書き込むイベント データへのポインター。</span><span class="sxs-lookup"><span data-stu-id="3fbae-249">Pointer to the event data to write.</span></span></param>
        <summary><span data-ttu-id="3fbae-250">イベントをエンド ツー エンドのシナリオで追跡している場合に、一連のイベントをリンクさせます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-250">Links events together when tracing events in an end-to-end scenario.</span></span> <span data-ttu-id="3fbae-251">イベント データは、メモリのブロックとして指定します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-251">The event data is specified as a block of memory.</span></span></summary>
        <returns><span data-ttu-id="3fbae-252">イベントが書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fbae-252">Is <see langword="true" /> if the event is written; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fbae-253">false の場合は、<see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> メソッドを呼び出すことで、失敗の原因を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="3fbae-253">If false, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /> method to determine the cause of the failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbae-254">メソッドは、このコンポーネントを識別するためにスレッド コンテキストで設定するアクティビティ ID を使用します。</span><span class="sxs-lookup"><span data-stu-id="3fbae-254">The method uses the activity ID set in the thread context to identify this component.</span></span> <span data-ttu-id="3fbae-255">アクティビティ ID を設定するには、呼び出し、<xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3fbae-255">To set the activity ID, call the <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>