<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64d2a9b42b95915774a0b306704660efa5030e38" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390990" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Web アプリケーションのキャッシュを実装します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション ドメインごとにこのクラスの 1 つのインスタンスが作成され、は、アプリケーション ドメインがアクティブな限り有効です。 このクラスのインスタンスに関する情報を利用、`Cache`のプロパティ、<xref:System.Web.HttpContext>オブジェクトまたは`Cache`のプロパティ、<xref:System.Web.UI.Page>オブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache>クラスは ASP.NET アプリケーションの外部で使用するためのものです。 デザインし、の Web アプリケーションのキャッシュを提供する ASP.NET の使用をテストします。 他の種類のコンソール アプリケーションや Windows フォーム アプリケーションなどのアプリケーションを使用して、<xref:System.Runtime.Caching.ObjectCache>クラス。  
  
   
  
## Examples  
 次の例では、ユーザーに、キャッシュ内の項目に割り当てられた値を表示するページですし、項目がキャッシュから削除されたときに、ユーザーに通知します。 作成されます、`RemovedCallback`メソッドは、シグネチャはの`CacheItemRemovedCallback`キャッシュ項目を削除するととを使用して、ユーザーに通知する、デリゲート、<xref:System.Web.Caching.CacheItemRemovedReason>列挙体を削除された理由を伝えます。 さらに、使用、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>プロパティをキャッシュにオブジェクトを追加し、それらのオブジェクトの値を取得します。 `AddItemToCache`メソッドが使用して、<xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType>キャッシュに項目を追加する方法。 使用する、`CacheItemRemovedCallback`委任するには、このメソッドを使用してキャッシュに項目を追加する必要がありますまたは<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>ASP.NET が適切なメソッドを自動的に作成するためのメソッドを呼び出す、項目が削除されます。 カスタム`RemoveItemFromCache`メソッドは、<xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType>メソッドは明示的に、キャッシュから項目を削除する原因と、`RemovedCallback`メソッドを呼び出します。  
  
> [!NOTE]
>  次のスニペットによってアクセスされるキャッシュのインスタンスのメンバーである、<xref:System.Web.UI.Page>このサンプルを継承するオブジェクト。  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.Cache" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">項目の参照に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに追加される項目。</param>
        <param name="dependencies">項目のファイル依存関係またはキャッシュ キー依存関係。 依存関係が変化すると、オブジェクトは無効になり、キャッシュから削除されます。 依存関係がない場合は、このパラメーターには <see langword="null" /> が格納されます。</param>
        <param name="absoluteExpiration">追加されたオブジェクトの有効期限が切れて、キャッシュから削除される時刻。 スライド式有効期限を使用している場合は、<paramref name="absoluteExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> にする必要があります。</param>
        <param name="slidingExpiration">追加されたオブジェクトが最後にアクセスされてからそのオブジェクトが期限切れになるまでの間隔。 この値が 20 分に設定されている場合、オブジェクトは、最後にアクセスされてから 20 分が経過すると期限切れになり、キャッシュから削除されます。 絶対有効期限を使用している場合は、<paramref name="slidingExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> にする必要があります。</param>
        <param name="priority"><see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙体によって表現される、オブジェクトの相対コスト。 キャッシュからオブジェクトを削除するときにこの値が使用されます。コストが低いオブジェクトは、コストが高いオブジェクトよりも先にキャッシュから削除されます。</param>
        <param name="onRemoveCallback">オブジェクトがキャッシュから削除される場合に呼び出されるデリゲート (指定されている場合)。 このデリゲートを使用して、オブジェクトがキャッシュから削除されたことをアプリケーションに通知できます。</param>
        <summary>依存関係ポリシー、有効期限ポリシー、優先順位ポリシー、および挿入された項目が <see langword="Cache" /> から削除されたことをアプリケーションに通知するために使用できるデリゲートを指定して、<see cref="T:System.Web.Caching.Cache" /> オブジェクトに指定の項目を追加します。</summary>
        <returns>項目が既にキャッシュに格納されている場合は、追加された項目を表すオブジェクト。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同じ項目の場合、このメソッドへの呼び出しは失敗が`key`にパラメーターが既に格納されている、`Cache`します。 既存の上書き`Cache`項目を使用して同じ`key`パラメーターを使用して、<xref:System.Web.Caching.Cache.Insert%2A>メソッド。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時点で期限切れにする場合を設定する、`absoluteExpiration`パラメーターを特定の時間と`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 一定の時間後に期限切れに経過した項目が最後にアクセスする場合は、キャッシュ項目は、設定する、`slidingExpiration`有効期限の間隔のパラメーターと`absoluteExpiration`パラメーター<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## Examples  
 次の例では、作成、`AddItemToCache`メソッド。 このメソッドが呼び出されると、設定、`itemRemoved`プロパティを`false`し、登録、`onRemove`メソッドの新しいインスタンスを<xref:System.Web.Caching.CacheItemRemovedCallback>デリゲートします。 デリゲートのシグネチャがで使用される、`RemovedCallback`メソッド。 `AddItemToCache`メソッドに関連付けられている値をチェックし、`Key1`キャッシュ キー。 値が場合`null`、`Add`メソッド キャッシュ内のキーで項目を配置する`Key1`の値`Value 1`、絶対有効期限の 60 秒間の優先度の高いキャッシュ。 また、使用、`onRemove`を引数としてメソッド。 これにより、`RemovedCallback`にこの項目がキャッシュから削除されたときに呼び出されるメソッド。  
  
> [!NOTE]
>  使用する方法の例については、<xref:System.Web.Caching.CacheDependency>クラスおよび<xref:System.Web.Caching.CacheItemRemovedCallback>デリゲートは、「[アプリケーション データのキャッシュ](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100))します。  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> または <paramref name="value" /> パラメーターが <see langword="null" /> に設定されています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> パラメーターは <see langword="TimeSpan.Zero" /> 未満、または 2 年以上に設定されます。</exception>
        <exception cref="T:System.ArgumentException"><see langword="Cache" /> に追加しようとした項目に、<paramref name="absoluteExpiration" /> パラメーターと <paramref name="slidingExpiration" /> パラメーターの両方が設定されます。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュに格納されている項目の数を取得します。</summary>
        <value>キャッシュに格納されている項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに、アプリケーションのパフォーマンスを監視する場合や、ASP.NET のトレース機能を使用する場合に便利です。  
  
   
  
## Examples  
 次の例の値を取得する、`Count`プロパティは、文字列に変換しに文字列を代入、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティを<xref:System.Web.UI.WebControls.Label>Web サーバー コントロール、`Label1`します。  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によってキャッシュからの項目の削除が開始される前にアプリケーションで使用できる物理メモリの割合を取得します。</summary>
        <value>アプリケーションで使用できる物理メモリのパーセンテージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>プロパティは、アプリケーションに使用可能な物理メモリの割合を返します。 使用可能な割合が少なくなると、キャッシュ アルゴリズムは、キャッシュからアイテムの削除を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>でプロパティを設定することができます、`percentagePhysicalMemoryUsedLimit`の属性、 [(ASP.NET 設定スキーマ) の caching の cache 要素](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 場合、`percentagePhysicalMemoryUsedLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを決定し、<xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>プロパティが計算されます。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュに使用できるバイト数を取得します。</summary>
        <value>キャッシュに使用できるバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>プロパティは、アプリケーションのプロセスで使用できるバイト数を返します。 この制限に達すると、キャッシュのアルゴリズムは、キャッシュを積極的に清掃を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>でプロパティを設定することができます、`privateBytesLimit`の属性、 [(ASP.NET 設定スキーマ) の caching の cache 要素](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 ときに、`privateBytesLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを決定し、<xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>プロパティには、アルゴリズムによって選択したサイズが含まれています。  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ項目の識別子。</param>
        <summary><see cref="T:System.Web.Caching.Cache" /> オブジェクトから指定した項目を取得します。</summary>
        <returns>取得されたキャッシュ項目。キーが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、テキスト ボックスの ASP.NET サーバー コントロールのキャッシュされた値を取得する方法を示します。  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュに含まれているキーの設定と値を介して反復処理するために使用されているディクショナリ列挙子を取得します。</summary>
        <returns><see cref="T:System.Web.Caching.Cache" /> オブジェクトを反復処理する列挙子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目を追加またはこのメソッドが、項目の列挙処理中にキャッシュから削除できます。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Collections.IDictionaryEnumerator>オブジェクト、`CacheEnum`を使用して、`GetEnumerator`メソッド。 列挙子は、キャッシュを移動して、各キャッシュ項目の値を文字列に変換します。、Web フォーム ページに、値を書き込みます。  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>項目を <see cref="T:System.Web.Caching.Cache" /> オブジェクトに挿入します。 このメソッドのいずれかのバージョンを使用して、同じ <paramref name="key" /> パラメーターで既存の <see langword="Cache" /> 項目を上書きします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">項目の参照に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <summary>項目の位置を参照するキャッシュ キーを指定し、<see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙体が提供する既定値を使用して、<see cref="T:System.Web.Caching.Cache" /> オブジェクトに項目を挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは一致するキーを持つ既存のキャッシュ項目を上書き、`key`パラメーター。 このオーバー ロードを使用してキャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のない、優先順位のメソッドが挿入される<xref:System.Web.Caching.CacheItemPriority.Default>、スライディング有効期限の値の<xref:System.Web.Caching.Cache.NoSlidingExpiration>、および絶対有効期限値<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## Examples  
 次の例では、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">項目の識別に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">挿入されるオブジェクトのファイル依存関係またはキャッシュ キー依存関係。 依存関係が変化すると、オブジェクトは無効になり、キャッシュから削除されます。 依存関係がない場合は、このパラメーターには <see langword="null" /> が格納されます。</param>
        <summary>ファイル依存関係またはキー依存関係を持つオブジェクトを <see cref="T:System.Web.Caching.Cache" /> に挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは一致するキーを持つ既存のキャッシュ項目を上書き、`key`パラメーター。 このオーバー ロードを使用してキャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のない、優先順位のメソッドが挿入される<xref:System.Web.Caching.CacheItemPriority.Default>、スライディング有効期限の値の<xref:System.Web.Caching.Cache.NoSlidingExpiration>、および絶対有効期限値<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## Examples  
 次の例では、XML 構成ファイルのキャッシュ依存関係で、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトの参照に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">挿入されるオブジェクトのファイル依存関係またはキャッシュ キー依存関係。 依存関係が変化すると、オブジェクトは無効になり、キャッシュから削除されます。 依存関係がない場合は、このパラメーターには <see langword="null" /> が格納されます。</param>
        <param name="absoluteExpiration">挿入されたオブジェクトが期限切れとなり、キャッシュから削除される時刻。 標準時間から夏時間への変更など、ローカル時間に関する問題を回避するには、このパラメーター値には <see cref="P:System.DateTime.Now" /> ではなく <see cref="P:System.DateTime.UtcNow" /> を使用してください。 絶対有効期限を使用している場合は、<paramref name="slidingExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> にする必要があります。</param>
        <param name="slidingExpiration">挿入されたオブジェクトが最後にアクセスされた日時とそのオブジェクトの有効期限が切れる時刻の間隔です。 この値が 20 分に相当する場合、オブジェクトは、最後のアクセスから 20 分経過すると有効期限が切れ、キャッシュから削除されます。 スライド式有効期限を使用している場合は、<paramref name="absoluteExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> にする必要があります。</param>
        <summary>依存関係ポリシーと有効期限ポリシーを指定して、<see cref="T:System.Web.Caching.Cache" /> にオブジェクトを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは既存の上書き`Cache`同じ項目`key`パラメーター。  
  
 場合、`slidingExpiration`にパラメーターが設定されている<xref:System.Web.Caching.Cache.NoSlidingExpiration>、変化する有効期限が無効になっています。 設定した場合、`slidingExpiration`パラメーターより大きい値に<xref:System.TimeSpan.Zero>、`absoluteExpiration`にパラメーターが設定されている<xref:System.DateTime.Now%2A>plus に含まれる値、`slidingExpiration`パラメーター。 指定された時間の前に、項目がキャッシュから要求された場合、`absoluteExpiration`パラメーターを項目をもう一度、キャッシュに配置されますと`absoluteExpiration`にもう一度設定されます`DateTime.Now`plus に含まれる値、`slidingExpiration`パラメーター。 かどうか、項目が要求されていないキャッシュからの日付のうち、`absoluteExpiration`パラメーター、項目がキャッシュから削除します。 . 優先順位を持つ insert メソッドのこのオーバー ロードを使用してキャッシュに追加された項目が挿入される<xref:System.Web.Caching.CacheItemPriority.Default>します。  
  
   
  
## Examples  
 次の例では、絶対有効期限と、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
> [!NOTE]
>  この形式のため、`Insert`メソッドは、アイテムが依存関係を持たない場合、キャッシュの依存関係をサポートする必要がありますを宣言する、`dependency`パラメーターとして`null`(`Nothing` Visual Basic で) パラメーターのコンマ区切りリスト。  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 次の例では、スライド式有効期限を設定してキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> パラメーターは、<see langword="TimeSpan.Zero" /> 未満、または 1 年を超える年数に設定します。</exception>
        <exception cref="T:System.ArgumentException"><see langword="Cache" /> に追加しようとした項目に、<paramref name="absoluteExpiration" /> パラメーターと <paramref name="slidingExpiration" /> パラメーターの両方が設定されます。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトの参照に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">項目のファイル依存関係またはキャッシュ キー依存関係。 依存関係が変化すると、オブジェクトは無効になり、キャッシュから削除されます。 依存関係がない場合は、このパラメーターには <see langword="null" /> が格納されます。</param>
        <param name="absoluteExpiration">挿入されたオブジェクトが期限切れとなり、キャッシュから削除される時刻。 標準時間から夏時間への変更など、ローカル時間に関する問題を回避するには、このパラメーター値には <see cref="P:System.DateTime.Now" /> ではなく <see cref="P:System.DateTime.UtcNow" /> を使用してください。 絶対有効期限を使用している場合は、<paramref name="slidingExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> に設定する必要があります。</param>
        <param name="slidingExpiration">キャッシュされたオブジェクトが最後にアクセスされてからそのオブジェクトが期限切れになるまでの間隔。 この値が 20 分に相当する場合、オブジェクトは、最後のアクセスから 20 分経過すると有効期限が切れ、キャッシュから削除されます。 スライド式有効期限を使用している場合は、<paramref name="absoluteExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> に設定する必要があります。</param>
        <param name="onUpdateCallback">オブジェクトがキャッシュから削除される前に呼び出されるデリゲート。 これを使用して、キャッシュされた項目を更新し、キャッシュから削除されないようにできます。</param>
        <summary>依存関係、有効期限ポリシー、およびキャッシュから項目が削除される前のアプリケーションへの通知に使用できるデリゲートを指定して、<see cref="T:System.Web.Caching.Cache" /> オブジェクトにオブジェクトを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A>メソッドでは、キャッシュに新しい項目を挿入し、項目がキャッシュから削除される前に呼び出されるデリゲートを提供することができます。 デリゲートでは、キャッシュされた項目を更新し、これにより、キャッシュから削除されないようにできます。  
  
 このメソッドは既存の上書き`Cache`同じ項目`key`パラメーター。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時点で期限切れにする場合を設定する、`absoluteExpiration`パラメーターを特定の時間と`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 一定の項目からの経過時間切れになるように最後にアクセスする場合は、キャッシュ項目は、設定する、`slidingExpiration`パラメーターに有効期限の間隔の設定、`absoluteExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" />、<paramref name="value" />、または <paramref name="onUpdateCallback" /> パラメーターが <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> パラメーターは、<see langword="TimeSpan.Zero" /> 未満、または 1 年を超える年数に設定します。</exception>
        <exception cref="T:System.ArgumentException"><see langword="Cache" /> に追加しようとした項目に、<paramref name="absoluteExpiration" /> パラメーターと <paramref name="slidingExpiration" /> パラメーターの両方が設定されます。  
  
または 
<paramref name="dependencies" /> パラメーターは <see langword="null" /> であり、<paramref name="absoluteExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> に設定され、<paramref name="slidingExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> に設定されます。</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトの参照に使用されるキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">項目のファイル依存関係またはキャッシュ キー依存関係。 依存関係が変化すると、オブジェクトは無効になり、キャッシュから削除されます。 依存関係がない場合は、このパラメーターには <see langword="null" /> が格納されます。</param>
        <param name="absoluteExpiration">挿入されたオブジェクトが期限切れとなり、キャッシュから削除される時刻。 標準時間から夏時間への変更など、ローカル時間に関する問題を回避するには、このパラメーター値には <see cref="P:System.DateTime.Now" /> ではなく <see cref="P:System.DateTime.UtcNow" /> を使用してください。 絶対有効期限を使用している場合は、<paramref name="slidingExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> にする必要があります。</param>
        <param name="slidingExpiration">挿入されたオブジェクトが最後にアクセスされてからそのオブジェクトが期限切れになるまでの間隔。 この値が 20 分に相当する場合、オブジェクトは、最後のアクセスから 20 分経過すると有効期限が切れ、キャッシュから削除されます。 スライド式有効期限を使用している場合は、<paramref name="absoluteExpiration" /> パラメーターは <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> にする必要があります。</param>
        <param name="priority"><see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙体によって表現される、キャッシュ内に格納された他の項目に対するオブジェクトの相対コスト。 キャッシュからオブジェクトが削除されるときにこの値が使用されます。コストが低いオブジェクトは、コストが高いオブジェクトよりも先にキャッシュから削除されます。</param>
        <param name="onRemoveCallback">オブジェクトがキャッシュから削除されると呼び出されるデリゲート (指定されている場合)。 このデリゲートを使用して、オブジェクトがキャッシュから削除されたことをアプリケーションに通知できます。</param>
        <summary>依存関係ポリシー、有効期限ポリシー、優先順位ポリシー、および挿入された項目が <see langword="Cache" /> から削除されたことをアプリケーションに通知するために使用できるデリゲートを指定して、<see cref="T:System.Web.Caching.Cache" /> オブジェクトにオブジェクトを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは既存の上書き`Cache`同じ項目`key`パラメーター。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時点で期限切れにする場合を設定する、`absoluteExpiration`パラメーターを特定の時間と`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 キャッシュ項目の場合一定の時間切れになるようが渡される最後のアクセス以降の項目に設定する必要が、`slidingExpiration`有効期限の間隔のパラメーターと`absoluteExpiration`パラメーター<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## Examples  
 次の例では、アプリケーションに挿入するときに、項目に高い優先度を割り当てる方法`Cache`オブジェクト。  
  
> [!NOTE]
>  このメソッドを使用する方法について、<xref:System.Web.Caching.CacheItemRemovedCallback>デリゲートは、「[方法。項目がキャッシュから削除されたときにアプリケーションに通知する](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef)します。  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> パラメーターは、<see langword="TimeSpan.Zero" /> 未満、または 1 年を超える年数に設定します。</exception>
        <exception cref="T:System.ArgumentException"><see langword="Cache" /> に追加しようとした項目に、<paramref name="absoluteExpiration" /> パラメーターと <paramref name="slidingExpiration" /> パラメーターの両方が設定されます。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ項目のキーを表す <see cref="T:System.String" /> オブジェクト。</param>
        <summary>指定したキーのキャッシュ項目を取得または設定します。</summary>
        <value>指定したキャッシュ項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、指定されたキャッシュ項目の値を取得するか、キャッシュにその項目とキーを追加することができます。 項目を使用してキャッシュを追加する、<xref:System.Web.Caching.Cache.Item%2A>プロパティの呼び出しと同じですが、<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>メソッド。  
  
   
  
## Examples  
 次の例では、`Item`に関連付けられているキャッシュされたオブジェクトの値を取得するプロパティ、`Key1`キー。 次を使用して、 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> Web フォーム ページに、値と説明テキストと B の HTML 要素を書き込みます。  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 次の例では、このプロパティを使用して、キャッシュにテキスト ボックスの値を挿入するを示します。  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> メソッド呼び出し内の <paramref name="absoluteExpiration" /> パラメーターで使用され、項目の有効期限が切れないことを示します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用すると、このフィールドの設定、`absoluteExpiration`パラメーターと等しい<xref:System.DateTime.MaxValue>、最大の可能な限りは、定数を表す`DateTime`値、12/31/9999 11時 59分: 59 PM。  
  
   
  
## Examples  
 次の例では、使用する方法、`NoAbsoluteExpiration`内の項目を挿入するときに、絶対有効期限の設定を無効にするフィールド、`Cache`します。  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> または <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> メソッド呼び出し内で <paramref name="slidingExpiration" /> パラメーターとして使用され、スライド式有効期限を無効にします。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用すると、このフィールドの設定、`slidingExpiration`パラメーターを<xref:System.TimeSpan.Zero?displayProperty=nameWithType>フィールドには、0 の定数値を持ちます。 に従って、キャッシュされた項目の有効期限が切れる、`absoluteExpiration`パラメーターに関連付けられている、`Insert`または`Add`メソッドの呼び出し。  
  
   
  
## Examples  
 次の例では、Insert メソッドを使用してに項目を追加する方法、<xref:System.Web.Caching.Cache>オブジェクトを使用して、`NoSlidingExpiration`フィールド。  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">削除するキャッシュ項目の <see cref="T:System.String" /> ID。</param>
        <summary>アプリケーションの <see cref="T:System.Web.Caching.Cache" /> オブジェクトから、指定した項目を削除します。</summary>
        <returns><see langword="Cache" /> から削除される項目。 キー パラメーターの値が見つからない場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、作成、`RemoveItemFromCache`メソッド。 このメソッドが呼び出されたときに使用して、<xref:System.Web.Caching.Cache.Item%2A>プロパティに関連付けられているオブジェクトがキャッシュに含まれているかどうか確認を`Key1`キーの値。 その場合、`Remove`オブジェクトを削除するメソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">アプリケーション データのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.Cache" /> オブジェクト コレクションを反復処理できる列挙子を返します。</summary>
        <returns><see cref="T:System.Web.Caching.Cache" /> オブジェクトを反復処理できる列挙子。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>