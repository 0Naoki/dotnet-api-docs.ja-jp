<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4baaf1458e16f405271bcf072f2f5980e9739aec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implements the cache for a Web application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション ドメインごとに、このクラスの 1 つのインスタンスが作成され、は、アプリケーション ドメインがアクティブな限り有効です。 このクラスのインスタンスに関する情報はを介して使用できる、`Cache`のプロパティ、<xref:System.Web.HttpContext>オブジェクトまたは`Cache`のプロパティ、<xref:System.Web.UI.Page>オブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache>クラスは、ASP.NET アプリケーションの外部で使用するものではありません。 Web アプリケーションのキャッシュを提供する ASP.NET で使用するためのテストし、設計にされました。 Windows フォーム アプリケーション、コンソール アプリケーションなど、アプリケーションの他の種類を使用して、<xref:System.Runtime.Caching.ObjectCache>クラスです。  
  
   
  
## Examples  
 次の例が、キャッシュ内の項目に割り当てられた値をユーザーに表示されるページで、項目がキャッシュから削除されたときに通知します。 作成、`RemovedCallback`メソッドのシグネチャを持つの`CacheItemRemovedCallback`とキャッシュ項目が削除され、使用してユーザーに通知する、デリゲート、<xref:System.Web.Caching.CacheItemRemovedReason>削除された理由を知らせてを列挙します。 また、使用、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>プロパティ キャッシュにオブジェクトを追加し、それらのオブジェクトの値を取得します。 `AddItemToCache`メソッドを使用して、<xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType>キャッシュにアイテムを追加するメソッド。 使用する、`CacheItemRemovedCallback`委任するには、このメソッドを使用してキャッシュに項目を追加する必要がありますまたは<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>メソッド、ASP.NET が適切なメソッドを自動的に実行できることを呼び出して、項目が削除されるようにします。 カスタム`RemoveItemFromCache`メソッドを使用、<xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType>メソッドは明示的に、キャッシュから項目を削除する原因と、`RemovedCallback`呼び出されるメソッド。  
  
> [!NOTE]
>  次のコードによってアクセスされるキャッシュのインスタンスのメンバーである、<xref:System.Web.UI.Page>このサンプルを継承するオブジェクト。  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.Cache" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">The cache key used to reference the item.</param>
        <param name="value">The item to be added to the cache.</param>
        <param name="dependencies">The file or cache key dependencies for the item. When any dependency changes, the object becomes invalid and is removed from the cache. If there are no dependencies, this parameter contains <see langword="null" />.</param>
        <param name="absoluteExpiration">The time at which the added object expires and is removed from the cache. If you are using sliding expiration, the <c>absoluteExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="slidingExpiration">The interval between the time the added object was last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object expires and is removed from the cache 20 minutes after it is last accessed. If you are using absolute expiration, the <c>slidingExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="priority">The relative cost of the object, as expressed by the <see cref="T:System.Web.Caching.CacheItemPriority" /> enumeration. The cache uses this value when it evicts objects; objects with a lower cost are removed from the cache before objects with a higher cost.</param>
        <param name="onRemoveCallback">A delegate that, if provided, is called when an object is removed from the cache. You can use this to notify applications when their objects are deleted from the cache.</param>
        <summary>Adds the specified item to the <see cref="T:System.Web.Caching.Cache" /> object with dependencies, expiration and priority policies, and a delegate you can use to notify your application when the inserted item is removed from the <see langword="Cache" />.</summary>
        <returns>An object that represents the item that was added if the item was previously stored in the cache; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同じ項目の場合、このメソッドを呼び出すは失敗`key`にパラメーターが既に格納されている、`Cache`です。 既存の上書きを`Cache`項目を使用して同じ`key`パラメーターを使用して、<xref:System.Web.Caching.Cache.Insert%2A>メソッド。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>です。  
  
 一定の時間後に期限切れにされてから経過した項目が最後にアクセスする場合は、キャッシュ項目は、設定する、`slidingExpiration`有効期限の間隔にパラメーターおよび`absoluteExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## Examples  
 次の例を作成、`AddItemToCache`メソッドです。 このメソッドが呼び出されると、設定、`itemRemoved`プロパティを`false`し、登録、`onRemove`メソッドの新しいインスタンスを<xref:System.Web.Caching.CacheItemRemovedCallback>を委任します。 デリゲートのシグネチャがで使用される、`RemovedCallback`メソッドです。 `AddItemToCache`メソッドに関連付けられている値をチェックし、`Key1`キャッシュ内のキー。 値が場合`null`、`Add`メソッド キャッシュ内のキーを持つアイテムを配置する`Key1`の値`Value 1`、60 秒、およびキャッシュが高優先度の絶対有効期限。 また、使用、`onRemove`引数としてメソッドです。 これにより、`RemovedCallback`この項目がキャッシュから削除されたときに呼び出されるメソッド。  
  
> [!NOTE]
>  使用する方法の例については、<xref:System.Web.Caching.CacheDependency>クラスおよび<xref:System.Web.Caching.CacheItemRemovedCallback>デリゲートは、「[アプリケーション データをキャッシュ](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d)です。  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> or <paramref name="value" /> parameter is set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="slidingExpiration" /> parameter is set to less than <see langword="TimeSpan.Zero" /> or more than one year.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="absoluteExpiration" /> and <paramref name="slidingExpiration" /> parameters are both set for the item you are trying to add to the <see langword="Cache" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items stored in the cache.</summary>
        <value>キャッシュに格納されている項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、アプリケーションのパフォーマンスを監視する場合、または ASP.NET のトレース機能を使用する場合に便利で指定できます。  
  
   
  
## Examples  
 次の例の値を取得する、`Count`プロパティ、文字列に変換およびに文字列を割り当てます、<xref:System.Web.UI.WebControls.Label.Text%2A>のプロパティ、 <xref:System.Web.UI.WebControls.Label> Web サーバー コントロール`Label1`です。  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the percentage of physical memory that can be consumed by an application before ASP.NET starts removing items from the cache.</summary>
        <value>アプリケーションに使用できる物理メモリの割合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>プロパティは、アプリケーションが使用できる物理メモリの割合を返します。 使用可能な割合が少なくなると、キャッシュ アルゴリズムは、キャッシュからアイテムの削除を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>でプロパティを設定できる、`percentagePhysicalMemoryUsedLimit`の属性、[要素 (ASP.NET 設定スキーマ) をキャッシュにキャッシュするから](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 場合、`percentagePhysicalMemoryUsedLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを決定し、<xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>プロパティが計算されます。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of bytes available for the cache.</summary>
        <value>キャッシュの使用可能なバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>プロパティは、アプリケーションのプロセスで使用できるバイト数を返します。 この制限に達すると、キャッシュのアルゴリズムは、キャッシュを積極的に清掃を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>でプロパティを設定できる、`privateBytesLimit`の属性、[要素 (ASP.NET 設定スキーマ) をキャッシュにキャッシュするから](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 ときに、`privateBytesLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを決定し、<xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>プロパティには、アルゴリズムによって選択したサイズが含まれています。  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The identifier for the cache item to retrieve.</param>
        <summary>Retrieves the specified item from the <see cref="T:System.Web.Caching.Cache" /> object.</summary>
        <returns>The retrieved cache item, or <see langword="null" /> if the key is not found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、ASP.NET のテキスト ボックス サーバー コントロール用にキャッシュされた値を取得する方法を示します。  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a dictionary enumerator used to iterate through the key settings and their values contained in the cache.</summary>
        <returns>An enumerator to iterate through the <see cref="T:System.Web.Caching.Cache" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目に追加したりこのメソッドは、項目を列挙中にキャッシュから削除します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Collections.IDictionaryEnumerator>オブジェクト、`CacheEnum`を使用して、`GetEnumerator`メソッドです。 列挙子は、キャッシュを移動するキャッシュされた各項目の値を文字列に変換し、Web フォーム ページに値を書き込みます。  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inserts an item into the <see cref="T:System.Web.Caching.Cache" /> object. Use one of the versions of this method to overwrite an existing <see langword="Cache" /> item with the same <paramref name="key" /> parameter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The cache key used to reference the item.</param>
        <param name="value">The object to be inserted into the cache.</param>
        <summary>Inserts an item into the <see cref="T:System.Web.Caching.Cache" /> object with a cache key to reference its location, using default values provided by the <see cref="T:System.Web.Caching.CacheItemPriority" /> enumeration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは一致するキーを持つ既存のキャッシュ アイテムを上書き、`key`パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のないの優先順位でメソッドを挿入<xref:System.Web.Caching.CacheItemPriority.Default>の有効期限の値をスライドさせて<xref:System.Web.Caching.Cache.NoSlidingExpiration>、およびの絶対有効期限値<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## Examples  
 次の例では、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> or <paramref name="value" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">The cache key used to identify the item.</param>
        <param name="value">The object to be inserted in the cache.</param>
        <param name="dependencies">The file or cache key dependencies for the inserted object. When any dependency changes, the object becomes invalid and is removed from the cache. If there are no dependencies, this parameter contains <see langword="null" />.</param>
        <summary>Inserts an object into the <see cref="T:System.Web.Caching.Cache" /> that has file or key dependencies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは一致するキーを持つ既存のキャッシュ アイテムを上書き、`key`パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のないの優先順位でメソッドを挿入<xref:System.Web.Caching.CacheItemPriority.Default>の有効期限の値をスライドさせて<xref:System.Web.Caching.Cache.NoSlidingExpiration>、およびの絶対有効期限値<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## Examples  
 次の例では、XML 構成ファイルでキャッシュの依存関係でアプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> or <paramref name="value" /> parameter is <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">The cache key used to reference the object.</param>
        <param name="value">The object to be inserted in the cache.</param>
        <param name="dependencies">The file or cache key dependencies for the inserted object. When any dependency changes, the object becomes invalid and is removed from the cache. If there are no dependencies, this parameter contains <see langword="null" />.</param>
        <param name="absoluteExpiration">The time at which the inserted object expires and is removed from the cache. To avoid possible issues with local time such as changes from standard time to daylight saving time, use <see cref="P:System.DateTime.UtcNow" /> rather than <see cref="P:System.DateTime.Now" /> for this parameter value. If you are using absolute expiration, the <c>slidingExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">The interval between the time the inserted object is last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed. If you are using sliding expiration, the <c>absoluteExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <summary>Inserts an object into the <see cref="T:System.Web.Caching.Cache" /> with dependencies and expiration policies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、既存`Cache`同じ項目`key`パラメーター。  
  
 場合、`slidingExpiration`にパラメーターが設定されている<xref:System.Web.Caching.Cache.NoSlidingExpiration>、スライド式有効期限が無効になっています。 設定した場合、`slidingExpiration`パラメーターよりも大きい値を<xref:System.TimeSpan.Zero>、`absoluteExpiration`にパラメーターが設定されている<xref:System.DateTime.Now%2A>に含まれる値に加えて、`slidingExpiration`パラメーター。 指定された時間の前に、項目がキャッシュから要求された場合、`absoluteExpiration`パラメーター、アイテムをもう一度、キャッシュに配置されますと`absoluteExpiration`にもう一度設定されます`DateTime.Now`に含まれる値に加えて、`slidingExpiration`パラメーター。 かどうか、項目が要求されていないキャッシュからの日付のうち、`absoluteExpiration`パラメーター、項目がキャッシュから削除します。 . 挿入メソッドのこのオーバー ロードを使用して、キャッシュに追加する項目が、優先度の挿入<xref:System.Web.Caching.CacheItemPriority.Default>です。  
  
   
  
## Examples  
 次の例では、絶対有効期限と、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
> [!NOTE]
>  この形式のため、`Insert`メソッドは、アイテムが依存関係を持たない場合に、キャッシュの依存関係をサポートする必要がありますを宣言する、`dependency`パラメーターとして`null`(`Nothing` Visual Basic で) パラメーターのコンマ区切りリストにします。  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 次の例では、スライド式有効期限を設定してキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> or <paramref name="value" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">You set the <paramref name="slidingExpiration" /> parameter to less than <see langword="TimeSpan.Zero" /> or the equivalent of more than one year.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="absoluteExpiration" /> and <paramref name="slidingExpiration" /> parameters are both set for the item you are trying to add to the <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">The cache key that is used to reference the object.</param>
        <param name="value">The object to insert into the cache.</param>
        <param name="dependencies">The file or cache key dependencies for the item. When any dependency changes, the object becomes invalid and is removed from the cache. If there are no dependencies, this parameter contains <see langword="null" />.</param>
        <param name="absoluteExpiration">The time at which the inserted object expires and is removed from the cache. To avoid possible issues with local time such as changes from standard time to daylight saving time, use <see cref="P:System.DateTime.UtcNow" /> instead of <see cref="P:System.DateTime.Now" /> for this parameter value. If you are using absolute expiration, the <c>slidingExpiration</c> parameter must be set to <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">The interval between the time that the cached object was last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed. If you are using sliding expiration, the <c>absoluteExpiration</c> parameter must be set to <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="onUpdateCallback">A delegate that will be called before the object is removed from the cache. You can use this to update the cached item and ensure that it is not removed from the cache.</param>
        <summary>Inserts an object into the <see cref="T:System.Web.Caching.Cache" /> object together with dependencies, expiration policies, and a delegate that you can use to notify the application before the item is removed from the cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A>メソッドを使用すると、キャッシュに新しい項目を挿入し、項目がキャッシュから削除する前に呼び出されるデリゲートを指定します。 デリゲートでは、キャッシュされたアイテムを更新し、これにより、キャッシュから削除されないようにできます。  
  
 このメソッドは、既存`Cache`同じ項目`key`パラメーター。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>です。  
  
 項目からの経過時間の設定時間後に期限切れに最後にアクセスする場合は、キャッシュ項目設定する必要が、`slidingExpiration`有効期限の間隔をパラメーターの設定、`absoluteExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" />, <paramref name="value" />, or <paramref name="onUpdateCallback" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">You set the <paramref name="slidingExpiration" /> parameter to less than <see langword="TimeSpan.Zero" /> or the equivalent of more than one year.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="absoluteExpiration" /> and <paramref name="slidingExpiration" /> parameters are both set for the item you are trying to add to the <see langword="Cache" />.  -or-  The <paramref name="dependencies" /> parameter is <see langword="null" />, and the <paramref name="absoluteExpiration" /> parameter is set to <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />, and the <paramref name="slidingExpiration" /> parameter is set to <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">The cache key used to reference the object.</param>
        <param name="value">The object to be inserted in the cache.</param>
        <param name="dependencies">The file or cache key dependencies for the item. When any dependency changes, the object becomes invalid and is removed from the cache. If there are no dependencies, this parameter contains <see langword="null" />.</param>
        <param name="absoluteExpiration">The time at which the inserted object expires and is removed from the cache. To avoid possible issues with local time such as changes from standard time to daylight saving time, use <see cref="P:System.DateTime.UtcNow" /> rather than <see cref="P:System.DateTime.Now" /> for this parameter value. If you are using absolute expiration, the <c>slidingExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">The interval between the time the inserted object was last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed. If you are using sliding expiration, the <c>absoluteExpiration</c> parameter must be <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="priority">The cost of the object relative to other items stored in the cache, as expressed by the <see cref="T:System.Web.Caching.CacheItemPriority" /> enumeration. This value is used by the cache when it evicts objects; objects with a lower cost are removed from the cache before objects with a higher cost.</param>
        <param name="onRemoveCallback">A delegate that, if provided, will be called when an object is removed from the cache. You can use this to notify applications when their objects are deleted from the cache.</param>
        <summary>Inserts an object into the <see cref="T:System.Web.Caching.Cache" /> object with dependencies, expiration and priority policies, and a delegate you can use to notify your application when the inserted item is removed from the <see langword="Cache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、既存`Cache`同じ項目`key`パラメーター。  
  
 両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoSlidingExpiration>です。  
  
 一定の時間後に期限切れが渡された最後にアクセスされた項目にする場合は、キャッシュ項目設定する必要が、`slidingExpiration`有効期限の間隔にパラメーターおよび`absoluteExpiration`パラメーターを<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## Examples  
 次の例では、アプリケーションに挿入するときに、項目に高い優先度を割り当てる`Cache`オブジェクト。  
  
> [!NOTE]
>  このメソッドを使用する方法について、<xref:System.Web.Caching.CacheItemRemovedCallback>デリゲートは、「[する方法: 通知、アプリケーション項目がキャッシュから削除](http://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef)です。  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="key" /> or <paramref name="value" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">You set the <paramref name="slidingExpiration" /> parameter to less than <see langword="TimeSpan.Zero" /> or the equivalent of more than one year.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="absoluteExpiration" /> and <paramref name="slidingExpiration" /> parameters are both set for the item you are trying to add to the <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> object that represents the key for the cache item.</param>
        <summary>Gets or sets the cache item at the specified key.</summary>
        <value>指定されたキャッシュ項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、指定されたキャッシュ項目の値を取得するか、キャッシュにそのアイテムと、キーを追加することができます。 項目を使用してキャッシュに追加する、<xref:System.Web.Caching.Cache.Item%2A>プロパティは呼び出すことと同じ、<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>メソッドです。  
  
   
  
## Examples  
 次の例では、`Item`に関連付けられているキャッシュされたオブジェクトの値を取得するプロパティを`Key1`キー。 次を使用して、 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> Web フォーム ページに、値と説明文と B の HTML 要素を書き込みます。  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 次の例では、このプロパティを使用して、キャッシュにテキスト ボックスの値を挿入するを示します。  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used in the <paramref name="absoluteExpiration" /> parameter in an <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> method call to indicate the item should never expire. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する場合、このフィールドを設定、`absoluteExpiration`パラメーターと等しい<xref:System.DateTime.MaxValue>する、最大の可能な限りは、定数を表す`DateTime`値、9999 年 12 月 31 日 11時 59分: 59 PM。  
  
   
  
## Examples  
 次の例で使用する方法、`NoAbsoluteExpiration`内の項目を挿入するときに、絶対有効期限を無効にするフィールド、`Cache`です。  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as the <paramref name="slidingExpiration" /> parameter in an <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> or <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> method call to disable sliding expirations. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドが設定を使用する場合、`slidingExpiration`パラメーターを<xref:System.TimeSpan.Zero?displayProperty=nameWithType>、するフィールドが 0 の定数値です。 キャッシュされた項目に準拠した有効期限が切れる、`absoluteExpiration`パラメーターに関連付けられている、`Insert`または`Add`メソッドの呼び出しです。  
  
   
  
## Examples  
 次の例で挿入メソッドを使用して、アイテムを追加する方法、<xref:System.Web.Caching.Cache>オブジェクトを使用して、`NoSlidingExpiration`フィールドです。  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> identifier for the cache item to remove.</param>
        <summary>Removes the specified item from the application's <see cref="T:System.Web.Caching.Cache" /> object.</summary>
        <returns>The item removed from the <see langword="Cache" />. If the value in the key parameter is not found, returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を作成、`RemoveItemFromCache`メソッドです。 このメソッドが呼び出されると、それを使用して、<xref:System.Web.Caching.Cache.Item%2A>プロパティ キャッシュに関連付けられているオブジェクトが含まれているかどうか確認を`Key1`キーの値。 その場合、`Remove`オブジェクトを削除するメソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can iterate through the <see cref="T:System.Web.Caching.Cache" /> object collection.</summary>
        <returns>An enumerator that can iterate through the <see cref="T:System.Web.Caching.Cache" /> object collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>