<Type Name="FileResponseElement" FullName="System.Web.Caching.FileResponseElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd24cbc50f3bf6e505474e44658c013ecaec897e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70587443" /></Metadata><TypeSignature Language="C#" Value="public class FileResponseElement : System.Web.Caching.ResponseElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FileResponseElement extends System.Web.Caching.ResponseElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.FileResponseElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FileResponseElement&#xA;Inherits ResponseElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileResponseElement : System::Web::Caching::ResponseElement" />
  <TypeSignature Language="F#" Value="type FileResponseElement = class&#xA;    inherit ResponseElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Caching.ResponseElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ファイルとして格納されている出力キャッシュ エントリの一部を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.Caching.FileResponseElement>は、出力キャッシュエントリの本文部分 (ヘッダーではなく) を表します。 <xref:System.Web.Caching.FileResponseElement>オブジェクトのデータは、ファイルの一部またはすべてとして格納できます。 ASP.NET とカスタムの両方の出力キャッシュプロバイダーは、オブジェクトの任意の<xref:System.Web.Caching.FileResponseElement>組み合わせを使用して、複数の部分で応答を返すことができます。 たとえば、あるプロバイダーは、3つの異なる<xref:System.Web.Caching.FileResponseElement>オブジェクトに分割された応答を返すことができ、各オブジェクトをオフセットから別の物理ファイルに取得できます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileResponseElement (string path, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileResponseElement(System::String ^ path, long offset, long length);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.FileResponseElement : string * int64 * int64 -&gt; System.Web.Caching.FileResponseElement" Usage="new System.Web.Caching.FileResponseElement (path, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">ファイルの絶対パス。</param>
        <param name="offset">ファイル内で文字列が開始される位置。</param>
        <param name="length">データの長さ。データは、<paramref name="path" /> で定義されるファイル内の、出力キャッシュ データを表すオフセットから始まります。</param>
        <summary><see cref="T:System.Web.Caching.FileResponseElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全な出力キャッシュ応答が1つのファイルに含まれている場合、プロバイダー <xref:System.Web.Caching.FileResponseElement>は、0のオフセットと、ファイル全体のサイズと同じ長さを使用して、クラスを初期化します。 完全な出力キャッシュ応答がファイルの一部にのみ含まれている場合、プロバイダーは<xref:System.Web.Caching.FileResponseElement> 、出力キャッシュ応答を開始するファイル内のオフセットと長さを、に格納されている出力キャッシュ応答のサイズと同じにして、クラスを初期化します。そのファイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> または <paramref name="length" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Web.Caching.FileResponseElement.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データのサイズを取得します。データは、<see cref="T:System.Web.Caching.FileResponseElement" /> インスタンスのデータが格納されている位置を示すオフセットから始まります。</summary>
        <value>データのサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全な出力キャッシュ応答が1つのファイルに含まれている場合、出力キャッシュプロバイダー <xref:System.Web.Caching.FileResponseElement>は、ファイル全体のサイズと同じ長さを使用してクラスを初期化します。 完全な出力キャッシュ応答がファイルの一部のみに含まれている場合、プロバイダーは<xref:System.Web.Caching.FileResponseElement> 、そのファイルに格納されている出力キャッシュ応答のサイズと同じ長さを使用して、クラスを初期化します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.Web.Caching.FileResponseElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイル内で <see cref="T:System.Web.Caching.FileResponseElement" /> インスタンスのデータが始まる位置を取得します。</summary>
        <value>ファイル内のデータの開始点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全な出力キャッシュ応答が1つのファイルに含まれている場合、プロバイダー <xref:System.Web.Caching.FileResponseElement>はオフセット0を使用してクラスを初期化します。完全な出力キャッシュ応答がファイルの一部にのみ含まれ<xref:System.Web.Caching.FileResponseElement>ている場合、プロバイダーはクラスを初期化します。出力キャッシュ応答を開始するファイル内のオフセットを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.Caching.FileResponseElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Caching.FileResponseElement" /> インスタンスのデータを格納するファイルの場所を取得します。</summary>
        <value>ファイルの絶対パス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
