<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a92a2b8ccbfcd895e5c95c1403543f4380630ab5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597587" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Encodes a string for use in HTML, XML, CSS, and URL strings.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Web.Security.AntiXss.AntiXssEncoder>をオーバーライドするクラス、<xref:System.Web.Util.HttpEncoder>エンコードなど、クラスのメソッド内の文字列をデコードして既定で使用されるクラス<xref:System.Web.HttpUtility>、 <xref:System.Web.HttpServerUtility>、および<xref:System.Net.HttpResponseHeader>です。  
  
 <xref:System.Web.Security.AntiXss.AntiXssEncoder>セーフ リストに存在しないすべての文字は、クラス、によってエンコード、<xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>と<xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>メソッドです。  
  
 置換する、<xref:System.Web.Util.HttpEncoder>クラス、<xref:System.Web.Security.AntiXss.AntiXssEncoder>クラスを使用して登録、`encoderType`次の例に示すように、Web.config ファイルに httpRuntime 要素の属性。  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 別のエンコーディング メソッドの既定の安全な文字の一覧は含まれては、「解説、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>、および<xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A>メソッドです。 使用して、既定の安全な一覧を変更することができます、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <summary>Encodes the specified string for use in cascading style sheets (CSS).</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。  
  
> [!NOTE]
>  引用符 ("") をカスケード スタイル シートに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 CSS の文字のエスケープ シーケンスは、バック スラッシュ文字で構成されます (\\) を ISO 10646 標準の文字コードを表す 16 進数を 6 つまで続きます。 (標準の ISO 10646 は、Unicode を効果的と同じです)。16 進数以外の任意の文字はエスケープ シーケンスを終了します。 後の文字をエスケープ シーケンスが有効な 16 進の場合は、する必要がありますエスケープ シーケンスに 6 桁の数字を含めるか、エスケープ シーケンスを終了する空白文字を使用します。 たとえば、`\000020`に空白を表します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <param name="output">The text writer to use to output the string.</param>
        <summary>Encodes and outputs the specified string for use in an HTML attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|ラテン語アルファベット文字が大文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|ラテン語アルファベット文字が小文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|!|感嘆符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|*|アスタリスク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|+|プラス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|=|等号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|@|商用記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|角かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|`|アクサン グラーブ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|0x00A1 (161 10 進数) と 0x00AC (172 10 進数) の間での特殊文字。|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|0x00AE (174 10 進数) と 0x00FF (255 の 10 進数) の間での特殊文字。|  
|[Latin-Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|ラテンは、0x0100 (256 10 進数) と 0x017F (383 10 進数) の間で文字を拡張します。|  
|[ラテン拡張 B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|ラテンは、0x0180 (10 進 384) と 0x024F (591 10 進数) の間で文字を拡張します。|  
|[IPA 拡張機能](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|0x0250 (592 10 進数) と 0x02AF (687 10 進数) の間の文字を IPA 拡張機能です。|  
|[スペース修飾子文字](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|修飾子文字を 0x02B0 (688 10 進数) と 0x02FF (767 10 進数) の間の間隔。|  
分音記号を組み合わせて] (http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|合成 0x0300 (768 10 進数) と 0x036F (879 10 進数) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encodes the specified string for use as text in HTML markup.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <param name="useNamedEntities">
          <see langword="true" /> to use HTML 4.0 named entities for certain character encodings; <see langword="false" /> to encode by using only <c>&amp;#DECIMAL;</c> notation.</param>
        <summary>Encodes the specified string for use as text in HTML markup and optionally specifies whether to use HTML 4.0 named entities.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|ラテン語アルファベット文字が大文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|ラテン語アルファベット文字が小文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|(スペース)|スペース|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|!|感嘆符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|*|アスタリスク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|+|プラス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|=|等号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|角かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|`|アクサン グラーブ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|0x00A1 (161 10 進数) と 0x00AC (172 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|0x00AE (174 10 進数) と 0x00FF (255 の 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[ラテン拡張 A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|ラテンは、0x0100 (256 10 進数) と 0x017F (383 10 進数) の間で文字を拡張します。|  
|[ラテン拡張文字 B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|ラテンは、0x0180 (10 進 384) と 0x024F (591 10 進数) の間で文字を拡張します。|  
|[IPA 拡張機能](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|0x0250 (592 10 進数) と 0x02AF (687 10 進数) の間の文字を IPA 拡張機能です。|  
|[スペース修飾子文字](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|修飾子文字を 0x02B0 (688 10 進数) と 0x02FF (767 10 進数) の間の間隔。|  
分音記号を組み合わせて] (http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|合成 0x0300 (768 10 進数) と 0x036F (879 10 進数) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <param name="output">The text writer to use to output the string.</param>
        <summary>Encodes the specified string for use as text in HTML markup and outputs the string by using the specified text writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|ラテン語アルファベット文字が大文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|ラテン語アルファベット文字が小文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|(スペース)|スペース|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|!|感嘆符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|*|アスタリスク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|+|プラス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|=|等号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|角かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|`|アクサン グラーブ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|0x00A1 (161 10 進数) と 0x00AC (172 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|0x00AE (174 10 進数) と 0x00FF (255 の 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[ラテン拡張 A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|ラテンは、0x0100 (256 10 進数) と 0x017F (383 10 進数) の間で文字を拡張します。|  
|[ラテン拡張文字 B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|ラテンは、0x0180 (10 進 384) と 0x024F (591 10 進数) の間で文字を拡張します。|  
|[IPA 拡張機能](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|0x0250 (592 10 進数) と 0x02AF (687 10 進数) の間の文字を IPA 拡張機能です。|  
|[スペース修飾子文字](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|修飾子文字を 0x02B0 (688 10 進数) と 0x02FF (767 10 進数) の間の間隔。|  
分音記号を組み合わせて] (http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|合成 0x0300 (768 10 進数) と 0x036F (879 10 進数) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encodes the specified string for use in form submissions whose MIME type is "application/x-www-form-urlencoded".</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <summary>Encodes the specified string for use in form submissions whose MIME type is "application/x-www-form-urlencoded".</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <param name="codePage">The code page to use to encode the <c>input</c> string.</param>
        <summary>Encodes the specified string for use in form submissions whose MIME type is "application/x-www-form-urlencoded" by using the specified code page.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <param name="inputEncoding">The input encoding type.</param>
        <summary>Encodes the specified string for form submissions whose MIME type is "application/x-www-form-urlencoded" by using the specified character encoding type.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">The combination of lower code charts to mark as safe.</param>
        <param name="lowerMidCodeCharts">The combination of lower-middle code charts to mark as safe.</param>
        <param name="midCodeCharts">The combination of middle code charts to mark as safe.</param>
        <param name="upperMidCodeCharts">The combination of upper-middle code charts to mark as safe.</param>
        <param name="upperCodeCharts">The combination of upper code charts to mark as safe.</param>
        <summary>Marks characters from the specified Unicode code charts as safe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セーフ リストでは、すべての XML を HTML、CSS、および URL エンコード方法に影響します。  
  
 いくつかの例外では、Unicode コード テーブルは記述言語に直接対応していません。 多くの場合、特定の言語または言語のセットのサポートを追加するには、コードの複数のグラフを safe としてマークすることが必要です。  
  
 英語を許可しつつ、日本語の言語のサポートを追加するには、次の構文を使用します。  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドを呼び出す必要があります、 `Application_Start` Global.asax ファイル内のメソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> method was called outside the <see langword="Application_Start" /> method in the Global.asax file.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encodes strings and byte arrays for use in a URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <summary>Encodes the specified string for use in a URL.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <param name="codePage">The code page to use to encode the <c>input</c> string.</param>
        <summary>Encodes the specified string for use in a URL by using the specified code page.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <param name="inputEncoding">The input encoding type.</param>
        <summary>Encodes the specified string for use in a URL by using the specified character encoding type.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">The byte array to encode.</param>
        <param name="offset">The index of the first byte to encode.</param>
        <param name="count">The number of bytes to encode.</param>
        <summary>Encodes the specified byte array for use in a URL, starting at the specified offset in the byte array and encoding the specified number of bytes.</summary>
        <returns>The encoded byte array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to encode.</param>
        <summary>Encodes path strings for use in a URL.</summary>
        <returns>The URL that contains the encoded path.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`%SINGLE_BYTE_HEX`表記します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|大文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|小文字の英字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 このメソッドは、URL のパスのみをエンコードします。 このメソッドは、スキームをエンコードできません (など、 `http:`、 `ftp:`、または`file:`)、権限 (など`www.northwind.com`または`www.contoso.com:8080`)、またはクエリ フラグメント (たとえば、 `?v=s978dfs9#x=103`)。 パターンまたは文字列内の機関がない場合は、文字列は、相対パスと見なされますされ、パスをエンコードします。 次の url の部分文字列のみ`/default.htm`はエンコードされます。  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <summary>Encodes the specified string for use in XML attributes.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|ラテン語アルファベット文字が大文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|ラテン語アルファベット文字が小文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|!|感嘆符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|*|アスタリスク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|+|プラス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全停止|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|=|等号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|@|商用記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|角かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|`|アクサン グラーブ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|0x00A1 (161 10 進数) と 0x00AC (172 10 進数) の間での特殊文字。|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|0x00AE (174 10 進数) と 0x00FF (255 の 10 進数) の間での特殊文字。|  
|[ラテン拡張 A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|ラテンは、0x0100 (256 10 進数) と 0x017F (383 10 進数) の間で文字を拡張します。|  
|[ラテン拡張文字 B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|ラテンは、0x0180 (10 進 384) と 0x024F (591 10 進数) の間で文字を拡張します。|  
|[IPA 拡張機能](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|0x0250 (592 10 進数) と 0x02AF (687 10 進数) の間の文字を IPA 拡張機能です。|  
|[スペース修飾子文字](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|修飾子文字を 0x02B0 (688 10 進数) と 0x02FF (767 10 進数) の間の間隔。|  
分音記号を組み合わせて] (http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|合成 0x0300 (768 10 進数) と 0x036F (879 10 進数) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The string to encode.</param>
        <summary>Encodes the specified string for use in XML attributes.</summary>
        <returns>The encoded string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 ("") の単一引用符または (' ') のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|------------------------|--------------------|-----------------|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|ラテン語アルファベット文字が大文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|ラテン語アルファベット文字が小文字|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|番号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|(スペース)|スペース|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|!|感嘆符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|#|番号記号、ハッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|*|アスタリスク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|+|プラス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|-|ハイフン、マイナス記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|.|期間|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|/|スラッシュ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|=|等号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|角かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|\|円記号|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|_|アンダー スコア|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|`|アクサン グラーブ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 コントロールと基本ラテン](https://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|0x00A1 (161 10 進数) と 0x00AC (172 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[C1 のコントロールとラテン語-1 の補足情報](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|0x00AE (174 10 進数) と 0x00FF (255 の 10 進数) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[ラテン拡張 A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|ラテンは、0x0100 (256 10 進数) と 0x017F (383 10 進数) の間で文字を拡張します。|  
|[ラテン拡張文字 B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|ラテンは、0x0180 (10 進 384) と 0x024F (591 10 進数) の間で文字を拡張します。|  
|[IPA 拡張機能](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|0x0250 (592 10 進数) と 0x02AF (687 10 進数) の間の文字を IPA 拡張機能です。|  
|[スペース修飾子文字](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|修飾子文字を 0x02B0 (688 10 進数) と 0x02FF (767 10 進数) の間の間隔。|  
分音記号を組み合わせて] (http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|合成 0x0300 (768 10 進数) と 0x036F (879 10 進数) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> contains a character that has an invalid Unicode value.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> contained a high surrogate code point that was not followed by a low surrogate code point.  -or-  <paramref name="input" /> contained a low surrogate code point that was not preceded by a high surrogate code point.</exception>
      </Docs>
    </Member>
  </Members>
</Type>