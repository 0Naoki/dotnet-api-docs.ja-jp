<Type Name="Parallel" FullName="System.Threading.Tasks.Parallel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3359c2647aa36618a51a68a6ddb97bc856399b27" /><Meta Name="ms.sourcegitcommit" Value="7a844d353e1b3079aa7c0d47a6d2c3b3ce8f9647" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/21/2019" /><Meta Name="ms.locfileid" Value="65960797" /></Metadata><TypeSignature Language="C#" Value="public static class Parallel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Parallel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Parallel" />
  <TypeSignature Language="VB.NET" Value="Public Class Parallel" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parallel abstract sealed" />
  <TypeSignature Language="F#" Value="type Parallel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f45ec-101">並列ループおよび並列領域に対するサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-101">Provides support for parallel loops and regions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-102"><xref:System.Threading.Tasks.Parallel>クラスには、各ループ、および一連のステートメントの実行の一般的な操作、ループなどの並列の置き換えをライブラリに基づくデータが用意されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-102">The <xref:System.Threading.Tasks.Parallel> class provides library-based data parallel replacements for common operations such as for loops, for each loops, and execution of a set of statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-103">この例では、複数の言語コンストラクトを使用して並列ループを実装するためのいくつかの方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-103">This example demonstrates several approaches to implementing a parallel loop using multiple language constructs.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#07](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelintro.cs#07)]
 [!code-vb[System.Threading.Tasks.Parallel#07](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelintro.vb#07)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f45ec-104">すべてのパブリックおよびプロテクト メンバー<see cref="T:System.Threading.Tasks.Parallel" />スレッド セーフでは、複数のスレッドから同時に使用される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-104">All public and protected members of <see cref="T:System.Threading.Tasks.Parallel" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md"><span data-ttu-id="f45ec-105">データの並列化 (タスク並列ライブラリ)</span><span class="sxs-lookup"><span data-stu-id="f45ec-105">Data Parallelism (Task Parallel Library)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Samples-for-Parallel-b4b76364"><span data-ttu-id="f45ec-106">.NET Framework による並列プログラミングのサンプル</span><span class="sxs-lookup"><span data-stu-id="f45ec-106">Samples for Parallel Programming with the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="For">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f45ec-107">反復処理が並列で実行される可能性のある <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-107">Executes a <see langword="for" /> loop in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-108">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-108">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-109">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-109">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-110">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-110">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-111">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-111">Executes a <see langword="for" /> loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-112">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-112">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-113">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-113">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-114">2 つの引数と共に提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-114">It is provided with two arguments:</span></span>  
  
-   <span data-ttu-id="f45ec-115"><xref:System.Int32>反復カウントを表す値です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-115">An <xref:System.Int32> value that represents the iteration count.</span></span>  
  
-   <span data-ttu-id="f45ec-116">A<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことができます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-116">A <xref:System.Threading.Tasks.ParallelLoopState> instance that can be used to break out of the loop prematurely.</span></span> <span data-ttu-id="f45ec-117"><xref:System.Threading.Tasks.ParallelLoopState>オブジェクトが、コンパイラによって作成された; ユーザー コードでインスタンス化することはできません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-117">The <xref:System.Threading.Tasks.ParallelLoopState> object is created by the compiler; it cannot be instantiated in user code.</span></span>  
  
 <span data-ttu-id="f45ec-118">呼び出す、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>メソッド通知、`for`操作を現在後のイテレーションが実行する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-118">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to execute.</span></span> <span data-ttu-id="f45ec-119">ただし、現在の前にすべてのイテレーション 1 つがありますがまだ実行していない場合に実行されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-119">However, all iterations before the current one will still have to be executed if they haven't already.</span></span>  
  
 <span data-ttu-id="f45ec-120">そのため、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>内で、従来の中断操作の使用と似ています`for`などの言語でのループC#が完璧な代替ではありません。たとえば、保証はありません、イテレーション後、現在の 1 つは間違いなく実行されません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-120">Therefore, calling <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="f45ec-121">現在のものが必要ない前にすべてのイテレーションを実行する場合は、使用、<xref:System.Threading.Tasks.ParallelLoopState.Stop%2A>メソッドを使用してではなく<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-121">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="f45ec-122">呼び出す<xref:System.Threading.Tasks.ParallelLoopState.Stop%2A>通知、`for`ループ作業は既に完了しているかどうか、現在の反復処理の前後にあるためすべてに関係なく、残りのすべてのイテレーションを破棄できることが必要です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-122">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="f45ec-123">ただしで<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>、に関するその他のイテレーションは実行されませんの保証はありません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-123">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="f45ec-124">ループが途中で終了した場合、<xref:System.Threading.Tasks.ParallelLoopResult>返される構造体は、ループの完了に関連する情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-124">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="f45ec-125">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-125">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-126">次の例では、並列ループの最大 100 個のイテレーションを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-126">The following example executes up to 100 iterations of a loop in parallel.</span></span> <span data-ttu-id="f45ec-127">各イテレーションでは、1 から 1,000 ミリ秒単位までのランダムな間隔の一時停止します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-127">Each iteration pauses for a random interval from 1 to 1,000 milliseconds.</span></span> <span data-ttu-id="f45ec-128">ループのイテレーションでランダムに生成された値を決定します、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-128">A randomly generated value determines on which iteration of the loop the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="f45ec-129">例のインデックスがより大きいイテレーションなしの出力として、<xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType>への呼び出し後のプロパティ値の開始、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-129">As the output from the example shows, no iterations whose index is greater than the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property value start after the call to the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/cs/break1.cs#2)]
 [!code-vb[System.Threading.Tasks.ParallelLoopState#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallelloopstate/vb/break1.vb#2)]  
  
 <span data-ttu-id="f45ec-130">ループの反復処理がまだときに実行されている可能性がありますので、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType>メソッドが呼び出されると、各反復処理を呼び出す、<xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType>別のイテレーションが呼び出されているかどうかを確認するプロパティ、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-130">Because iterations of the loop are still likely to be executing when the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method is called, each iteration calls the <xref:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration%2A?displayProperty=nameWithType> property to check whether another iteration has called the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f45ec-131">プロパティの値が場合`true`、イテレーションの値を確認します、<xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType>プロパティと、現在のイテレーションのインデックス値よりも大きい場合は、すぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-131">If  the property value is `true`, the iteration checks the value of the <xref:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration%2A?displayProperty=nameWithType> property and, if it is greater than the current iteration's index value, returns immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-132"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-132">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-133">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-133">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <altmember cref="T:System.Threading.Tasks.ParallelLoopState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-134">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-134">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Integer, toExclusive As Integer, body As Action(Of Integer)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-135">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-135">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-136">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-136">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-137">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-137">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-138">反復処理が並列で実行される可能性のある <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-138">Executes a <see langword="for" /> loop in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="f45ec-139">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-139">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-140">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-140">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-141">反復回数で提供されます (<xref:System.Int32>) をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f45ec-141">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="f45ec-142">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-142">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-143">次の例では、<xref:System.Threading.Tasks.Parallel.For%2A>メソッドのランダム バイトを生成するデリゲートの呼び出しで 100 の値し、その合計を計算します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-143">The following example uses the <xref:System.Threading.Tasks.Parallel.For%2A> method for 100 invocations of a delegate that generates random byte values and computes their sum.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/cs/for1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.For#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.for/vb/for1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-144"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-144">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-145">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-145">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-146">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-146">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-147">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-147">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-148">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-148">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-149">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-149">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-150">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-150">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-151">完了したループの部分に関する情報を格納している <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="f45ec-151">A <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> structure that contains information on what portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-152">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-152">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-153">次のパラメーターと共に提供されます: 反復カウント (<xref:System.Int64>)、および<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-153">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="f45ec-154">呼び出す、<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>メソッド通知、`for`操作を現在後のイテレーションを実行する必要はありませんが、現在の前にすべてのイテレーションの操作を行います。</span><span class="sxs-lookup"><span data-stu-id="f45ec-154">Calling the <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> method informs the `for` operation that iterations after the current one don't have to be executed, but all iterations before the current one do.</span></span>  
  
 <span data-ttu-id="f45ec-155">中断の呼び出しは、従来の中断操作を使用してに似ていますそのため、`for`などの言語でループC#が完璧な代替ではありません。たとえば、保証はありません、イテレーション後、現在の 1 つは間違いなく実行されません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-155">Therefore, calling Break is similar to using a break operation within a conventional `for` loop in a language like C#, but it is not a perfect substitute: For example, there is no guarantee that iterations after the current one will definitely not execute.</span></span>  
  
 <span data-ttu-id="f45ec-156">現在のものが必要ない前にすべてのイテレーションを実行する場合は、使用、<xref:System.Threading.Tasks.ParallelLoopState.Stop%2A>メソッドを使用してではなく<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-156">If executing all iterations before the current one is not necessary, use the <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> method instead of using <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>.</span></span> <span data-ttu-id="f45ec-157">呼び出す<xref:System.Threading.Tasks.ParallelLoopState.Stop%2A>通知、`for`ループ作業は既に完了しているかどうか、現在の反復処理の前後にあるためすべてに関係なく、残りのすべてのイテレーションを破棄できることが必要です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-157">Calling <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> informs the `for` loop that it may abandon all remaining iterations, regardless of whether they're before or after the current iteration, because all required work will have already been completed.</span></span> <span data-ttu-id="f45ec-158">ただしで<xref:System.Threading.Tasks.ParallelLoopState.Break%2A>、に関するその他のイテレーションは実行されませんの保証はありません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-158">However, as with <xref:System.Threading.Tasks.ParallelLoopState.Break%2A>, there are no guarantees regarding which other iterations will not execute.</span></span>  
  
 <span data-ttu-id="f45ec-159">ループが途中で終了した場合、<xref:System.Threading.Tasks.ParallelLoopResult>返される構造体は、ループの完了に関連する情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-159">If a loop is ended prematurely, the <xref:System.Threading.Tasks.ParallelLoopResult> structure that is returned will contain relevant information about the loop's completion.</span></span>  
  
 <span data-ttu-id="f45ec-160">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-160">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-161"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-161">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-162">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-162">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-163">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-163">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For (fromInclusive As Long, toExclusive As Long, body As Action(Of Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-164">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-164">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-165">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-165">The end index, exclusive.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-166">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-166">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-167">反復処理が並列で実行される可能性のある、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-167">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="f45ec-168">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-168">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-169">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-169">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-170">反復回数で提供されます (<xref:System.Int64>) をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f45ec-170">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="f45ec-171">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-171">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-172"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-172">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-173">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-173">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-174">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-174">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int32, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-175">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-175">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-176">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-176">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-177">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-177">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-178">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-178">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-179">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-179">Executes a <see langword="for" /> loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-180">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-180">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-181">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-181">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-182">次のパラメーターと共に提供されます: 反復カウント (<xref:System.Int32>)、および<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-182">It is provided with the following parameters: the iteration count (<xref:System.Int32>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="f45ec-183">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-183">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-184"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-184">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-185"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-185">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-186">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-186">-or-</span></span> 
<span data-ttu-id="f45ec-187"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-187">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-188">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-188">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-189"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-189">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-190">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-190">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;int&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int32&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;int&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Action&lt;int&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-191">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-191">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-192">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-192">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-193">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-193">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-194">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-194">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-195">反復処理が並列で実行される可能性があり、ループ オプションを構成できる <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-195">Executes a <see langword="for" /> loop in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="f45ec-196">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-196">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-197">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-197">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-198">反復回数で提供されます (<xref:System.Int32>) をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f45ec-198">It is provided with the iteration count (<xref:System.Int32>) as a parameter.</span></span>  
  
 <span data-ttu-id="f45ec-199">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-199">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-200">次の例では、並列ループを取り消す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-200">The following example shows how to cancel a parallel loop:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforcancel.cs#05)]
 [!code-vb[System.Threading.Tasks.Parallel#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforcancel.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-201"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-201">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-202"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-202">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-203">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-203">-or-</span></span> 
<span data-ttu-id="f45ec-204"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-204">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-205">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-205">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-206"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-206">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-207">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-207">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;int64, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-208">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-208">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-209">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-209">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-210">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-210">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-211">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-211">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-212">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-212">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-213">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-213">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-214">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-214">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-215">次のパラメーターと共に提供されます: 反復カウント (<xref:System.Int64>)、および<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-215">It is provided with the following parameters: the iteration count (<xref:System.Int64>), and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 <span data-ttu-id="f45ec-216">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-216">If `fromInclusive` is greater than or equal to `toExclusive`, the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-217">次の例は、使用する方法を示します、<xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>メソッドを<xref:System.Threading.Tasks.ParallelOptions>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-217">The following example shows how to use the <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method with a <xref:System.Threading.Tasks.ParallelOptions> object:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelfor.cs#03)]
 [!code-vb[System.Threading.Tasks.Parallel#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelfor.vb#03)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-218"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-218">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-219"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-219">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-220">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-220">-or-</span></span> 
<span data-ttu-id="f45ec-221"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-221">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-222">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-222">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-223"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-223">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-224">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-224">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Action&lt;int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="f45ec-225">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-225">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-226">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-226">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-227">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-227">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-228">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-228">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-229">イテレーションが並列で実行される可能性があり、ループ オプションを構成できる、64 ビットのインデックスを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-229">Executes a <see langword="for" /> loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="f45ec-230">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-230">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-231">64 ビットのインデックスをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-231">Supports 64-bit indexes.</span></span> <span data-ttu-id="f45ec-232">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-232">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-233">反復回数で提供されます (<xref:System.Int64>) をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f45ec-233">It is provided with the iteration count (<xref:System.Int64>) as a parameter.</span></span>  
  
 <span data-ttu-id="f45ec-234">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-234">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-235">次の例は、使用する方法を示します<xref:System.Threading.Tasks.ParallelOptions>カスタム タスク スケジューラを指定します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-235">The following example shows how to use <xref:System.Threading.Tasks.ParallelOptions> to specify a custom task scheduler:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforwithscheduler.cs#06)]
 [!code-vb[System.Threading.Tasks.Parallel#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforwithscheduler.vb#06)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-236"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-236">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-237"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-237">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-238">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-238">-or-</span></span> 
<span data-ttu-id="f45ec-239"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-239">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-240">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-240">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-241"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-241">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-242">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-242">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Integer, toExclusive As Integer, localInit As Func(Of TLocal), body As Func(Of Integer, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-243">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-243">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="f45ec-244">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-244">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-245">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-245">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-246">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-246">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-247">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-247">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-248">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-248">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-249">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-249">Executes a <see langword="for" /> loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-250">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-250">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-251">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-251">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-252">次のパラメーターと共に提供されます。 反復カウント (<xref:System.Int32>)、<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じスレッドで実行されるイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-252">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-253">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-253">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-254">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-254">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-255">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-255">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-256">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-256">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-257">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-257">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-258">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-258">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-259"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-259">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-260">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-260">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="f45ec-261">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-261">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="f45ec-262">このメソッドを使用して、例では、次を参照してください。[方法。スレッド ローカル変数を使用する Parallel.For ループを記述する](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-262">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-263"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-263">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-264">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-264">-or-</span></span> 
<span data-ttu-id="f45ec-265"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-265">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-266">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-266">-or-</span></span> 
<span data-ttu-id="f45ec-267"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-267">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-268">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-268">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-269">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-269">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function For(Of TLocal) (fromInclusive As Long, toExclusive As Long, localInit As Func(Of TLocal), body As Func(Of Long, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-270">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-270">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="f45ec-271">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-271">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-272">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-272">The end index, exclusive.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-273">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-273">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-274">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-274">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-275">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-275">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-276">反復処理が並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-276">Executes a <see langword="for" /> loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-277">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-277">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-278">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-278">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-279">次のパラメーターと共に提供されます。 反復カウント (<xref:System.Int64>)、<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じタスクを実行するイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-279">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="f45ec-280">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-280">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-281">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-281">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-282">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-282">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-283">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-283">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-284">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-284">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-285">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-285">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-286"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-286">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-287">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-287">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="f45ec-288">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-288">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 <span data-ttu-id="f45ec-289">このメソッドを使用して、例では、次を参照してください。[方法。スレッド ローカル変数を使用する Parallel.For ループを記述する](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-289">For an example that uses this method, see [How to: Write a Parallel.For Loop with Thread-Local Variables](~/docs/standard/parallel-programming/how-to-write-a-parallel-for-loop-with-thread-local-variables.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-290"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-290">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-291">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-291">-or-</span></span> 
<span data-ttu-id="f45ec-292"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-292">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-293">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-293">-or-</span></span> 
<span data-ttu-id="f45ec-294"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-294">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-295">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-295">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-296">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-296">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int32 fromInclusive, int32 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int32, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(int fromInclusive, int toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;int, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int * int * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-297">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-297">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="f45ec-298">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-298">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-299">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-299">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-300">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-300">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-301">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-301">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-302">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-302">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-303">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-303">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-304">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-304">Executes a <see langword="for" /> loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-305">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-305">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-306">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-306">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-307">次のパラメーターと共に提供されます。 反復カウント (<xref:System.Int32>)、<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じタスクを実行するイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-307">It is provided with the following parameters: the iteration count (<xref:System.Int32>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same task.</span></span>  
  
 <span data-ttu-id="f45ec-308">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-308">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-309">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-309">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-310">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-310">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-311">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-311">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-312">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-312">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-313">このデリゲートは、複数のスレッドで同時に呼び出すことがあります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-313">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-314"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-314">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-315">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-315">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="f45ec-316">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-316">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-317">次の例では、スレッド ローカル変数を使用して、多くの時間のかかる操作の結果の合計を計算します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-317">The following example uses thread-local variables to compute the sum of the results of many lengthy operations.</span></span> <span data-ttu-id="f45ec-318">この例では、4 の並列処理の次数を制限します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-318">This example limits the degree of parallelism to four.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/threadlocalforwithoptions.cs#04)]
 [!code-vb[System.Threading.Tasks.Parallel#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/threadlocalforwithoptions.vb#04)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-319"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-319">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-320">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-320">-or-</span></span> 
<span data-ttu-id="f45ec-321"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-321">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-322">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-322">-or-</span></span> 
<span data-ttu-id="f45ec-323"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-323">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-324">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-324">-or-</span></span> 
<span data-ttu-id="f45ec-325"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-325">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-326"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-326">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-327"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-327">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-328">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-328">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-329">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-329">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="For&lt;TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt; (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult For&lt;TLocal&gt;(int64 fromInclusive, int64 toExclusive, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;int64, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult For(long fromInclusive, long toExclusive, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;long, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member For : int64 * int64 * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;int64, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.For (fromInclusive, toExclusive, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-330">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-330">The type of the thread-local data.</span></span></typeparam>
        <param name="fromInclusive"><span data-ttu-id="f45ec-331">開始インデックス。ここで指定したインデックスから処理が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-331">The start index, inclusive.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="f45ec-332">終了インデックス。ここで指定したインデックスの前のインデックスまで処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-332">The end index, exclusive.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-333">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-333">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-334">各スレッドのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-334">The function delegate that returns the initial state of the local data for each thread.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-335">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-335">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-336">各スレッドのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-336">The delegate that performs a final action on the local state of each thread.</span></span></param>
        <summary><span data-ttu-id="f45ec-337">反復処理が並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="for" /> ループを実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-337">Executes a <see langword="for" /> loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-338">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-338">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-339">`body`デリゲートがイテレーションの範囲の値ごとに 1 回呼び出される (`fromInclusive`、 `toExclusive`)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-339">The `body` delegate is invoked once for each value in the iteration range (`fromInclusive`, `toExclusive`).</span></span> <span data-ttu-id="f45ec-340">次のパラメーターと共に提供されます。 反復カウント (<xref:System.Int64>)、<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じスレッドで実行されるイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-340">It is provided with the following parameters: the iteration count (<xref:System.Int64>), a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-341">`localInit`デリゲートがスレッドごとに、ループの実行に参加し、これらの各スレッドの初期のローカル状態を返す 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-341">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those threads.</span></span> <span data-ttu-id="f45ec-342">これらの初期状態は、最初に渡される`body`各スレッドの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-342">These initial states are passed to the first `body` invocations on each thread.</span></span> <span data-ttu-id="f45ec-343">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-343">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-344">最後に、各スレッドで本文の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-344">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-345">`localFinally`デリゲートが各スレッドのローカル状態に対して最後のアクションを実行するスレッドあたり 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-345">The `localFinally` delegate is invoked once per thread to perform a final action on each thread's local state.</span></span> <span data-ttu-id="f45ec-346">このデリゲートは、複数のスレッドで同時に呼び出すことがあります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-346">This delegate might be invoked concurrently on multiple threads; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-347"><xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-347">The <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-348">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-348">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 <span data-ttu-id="f45ec-349">場合`fromInclusive`がより大きいまたは等しい`toExclusive`メソッドは、イテレーションを実行することがなくすぐを返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-349">If `fromInclusive` is greater than or equal to `toExclusive`, then the method returns immediately without performing any iterations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-350"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-350">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-351">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-351">-or-</span></span> 
<span data-ttu-id="f45ec-352"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-352">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-353">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-353">-or-</span></span> 
<span data-ttu-id="f45ec-354"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-354">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-355">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-355">-or-</span></span> 
<span data-ttu-id="f45ec-356"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-356">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-357"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-357">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-358"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-358">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-359">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-359">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-360">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-360">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForEach&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f45ec-361">イテレーションが並列で実行される可能性のある <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each " />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-361">Executes a <see langword="foreach" /> (<see langword="For Each " /> in Visual Basic) operation in which iterations may run in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As OrderablePartitioner(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-362"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-362">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-363">元のデータ ソースを格納している順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-363">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-364">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-364">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-365"><see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-365">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-366">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-366">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-367">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-367">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-368">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-368">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-369"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-369">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-370">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-370">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-371"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-371">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-372">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-372">-or-</span></span> 
<span data-ttu-id="f45ec-373"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-373">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-374"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />順序付け可能なパーティショナーを返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-374">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-375">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-375">-or-</span></span> 
<span data-ttu-id="f45ec-376"><see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />ソースの順序付け可能なパーティショナーでプロパティを返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-376">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the source orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-377">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-377">-or-</span></span> 
<span data-ttu-id="f45ec-378">ソースの順序付け可能なパーティショナー内のメソッドが返す<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-378">Any methods in the source orderable partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-379">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-379">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-380"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-380">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-381">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-381">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-382">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-382">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-383"><see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-383">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-384">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-384">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-385">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-385">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-386">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-386">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-387"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-387">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-388">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-388">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-389"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-389">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-390">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-390">-or-</span></span> 
<span data-ttu-id="f45ec-391"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-391">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-392"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />パーティショナー返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-392">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-393">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-393">-or-</span></span> 
<span data-ttu-id="f45ec-394">内のメソッド、<paramref name="source" />パーティショナー返します<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-394">A method in the <paramref name="source" /> partitioner returns <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-395">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-395">-or-</span></span> 
<span data-ttu-id="f45ec-396"><see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />メソッドで、<paramref name="source" />パーティショナーでは、正しいパーティション数が返されません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-396">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-397">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-397">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-398">指定したデリゲートのいずれかからスローされる例外を格納するスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="f45ec-398">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As Partitioner(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-399"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-399">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-400">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-400">The partitioner that contains the original data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-401">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-401">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-402"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性のある <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.Partitioner" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-402">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="f45ec-403">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-403">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-404">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-404">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-405">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-405">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-406"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-406">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-407">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-407">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-408">次の例で使用するための範囲のパーティショナーを実装する方法を示しています<xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:。</span><span class="sxs-lookup"><span data-stu-id="f45ec-408">The following example shows how to implement a range partitioner for use with <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/cs/rangepartitioner.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel_RangePartitioners#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel_rangepartitioners/vb/rangepart.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-409"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-409">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-410">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-410">-or-</span></span> 
<span data-ttu-id="f45ec-411"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-411">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-412"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />パーティショナー返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-412">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-413">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-413">-or-</span></span> 
<span data-ttu-id="f45ec-414">ときにスローされる例外内のメソッド、<paramref name="source" />パーティショナー戻り<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-414">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-415">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-415">-or-</span></span> 
<span data-ttu-id="f45ec-416"><see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />メソッドで、<paramref name="source" />パーティショナーでは、正しいパーティション数が返されません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-416">The <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> method in the <paramref name="source" /> partitioner does not return the correct number of partitions.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-417">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-417">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-418">指定したデリゲートのいずれかからスローされる例外を格納するスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="f45ec-418">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState, Long)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-419">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-419">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-420">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-420">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-421">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-421">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-422"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-422">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-423">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-423">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-424">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-424">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-425">次のパラメーターと共に提供されます: 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと現在の要素のインデックス (<xref:System.Int64>)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-425">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-426"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-426">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-427">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-427">-or-</span></span> 
<span data-ttu-id="f45ec-428"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-428">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-429">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-429">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-430">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-430">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource, ParallelLoopState)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-431">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-431">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-432">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-432">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-433">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-433">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-434"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-434">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-435">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-435">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-436">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-436">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-437">次のパラメーターと共に提供されます: 現在の要素と<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-437">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-438"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-438">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-439">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-439">-or-</span></span> 
<span data-ttu-id="f45ec-440"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-440">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-441">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-441">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-442">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-442">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource) (source As IEnumerable(Of TSource), body As Action(Of TSource)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-443">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-443">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-444">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-444">An enumerable data source.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-445">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-445">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-446"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性のある <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-446">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel.</span></span></summary>
        <returns><span data-ttu-id="f45ec-447">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-447">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-448">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-448">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-449">現在の要素と共にパラメーターとして提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-449">It is provided with the current element as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-450">次の例では、<xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29>母音とテキスト ファイル内の空白以外の文字の数をカウントするメソッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-450">The following example uses the <xref:System.Threading.Tasks.Parallel.ForEach%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Action%7B%60%600%7D%29> method to count the number of vowels and non-white-space characters in a text file.</span></span> <span data-ttu-id="f45ec-451">ここで、<xref:System.Threading.Tasks.ParallelLoopResult>メソッドによって返される値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-451">In this case, the <xref:System.Threading.Tasks.ParallelLoopResult> value returned by the method is ignored.</span></span> <span data-ttu-id="f45ec-452">操作を並列で実行できるため、必ず分割不可能な操作は、カウンター変数をインクリメントして、複数のスレッドが同時に、カウンター変数にアクセスするにしないでに注意してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-452">Note that, because operations can run in parallel, you must ensure that incrementing the counter variables is an atomic operation, and that multiple threads do not attempt to access the counter variables simultaneously.</span></span> <span data-ttu-id="f45ec-453">例では、この目的のため、`lock`ステートメント (c#) および`SyncLock`ステートメント (Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="f45ec-453">For this purpose, the example uses the `lock` statement (in C#) and the `SyncLock` statement (in Visual Basic).</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/cs/foreach1.cs#1)]
 [!code-vb[System.Threading.Tasks.Parallel.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel.foreach/vb/foreach1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-454"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-454">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-455">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-455">-or-</span></span> 
<span data-ttu-id="f45ec-456"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-456">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-457">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-457">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-458">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-458">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-459"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-459">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-460">元のデータ ソースを格納している順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-460">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-461">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-461">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-462">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-462">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-463"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-463">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-464">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-464">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-465">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-465">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-466">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-466">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-467"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-467">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-468">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-468">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-469"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました</span><span class="sxs-lookup"><span data-stu-id="f45ec-469">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-470"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-470">The <paramref name="source" /> argument is  <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-471">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-471">-or-</span></span> 
<span data-ttu-id="f45ec-472"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-472">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-473">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-473">-or-</span></span> 
<span data-ttu-id="f45ec-474"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-474">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-475"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-475">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-476"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />順序付け可能なパーティショナーを返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-476">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-477">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-477">-or-</span></span> 
<span data-ttu-id="f45ec-478"><see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />プロパティ、<paramref name="source" />順序付け可能なパーティショナーを返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-478">The <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> property in the <paramref name="source" /> orderable partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-479">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-479">-or-</span></span> 
<span data-ttu-id="f45ec-480">ときにスローされる例外で、メソッド、<paramref name="source" />戻り値の順序付け可能なパーティショナー<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-480">The exception that is thrown when any methods in the <paramref name="source" /> orderable partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-481">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-481">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-482">指定したデリゲートのいずれかからスローされる例外を格納するスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="f45ec-482">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-483"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-483">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-484">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-484">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-485">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-485">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-486">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-486">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-487"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.Partitioner" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-487">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-488">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-488">A  structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-489">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-489">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-490">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-490">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-491"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-491">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-492">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-492">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-493"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-493">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-494"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-494">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-495"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-495">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-496">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-496">-or-</span></span> 
<span data-ttu-id="f45ec-497"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-497">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-498">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-498">-or-</span></span> 
<span data-ttu-id="f45ec-499"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-499">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-500"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />パーティショナー返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-500">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-501">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-501">-or-</span></span> 
<span data-ttu-id="f45ec-502">ときにスローされる例外内のメソッド、<paramref name="source" />パーティショナー戻り<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-502">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-503">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-503">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-504">指定したデリゲートのいずれかからスローされる例外を格納するスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="f45ec-504">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-505"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-505">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-506">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-506">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-507">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-507">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-508">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-508">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-509"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.Partitioner" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-509">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="f45ec-510">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-510">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-511">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-511">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-512">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-512">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-513"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-513">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-514">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-514">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-515"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-515">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-516"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-516">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-517"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-517">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-518">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-518">-or-</span></span> 
<span data-ttu-id="f45ec-519"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-519">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-520">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-520">-or-</span></span> 
<span data-ttu-id="f45ec-521"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-521">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-522"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、<paramref name="source" />パーティショナー返します<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-522">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /> partitioner returns <see langword="false" />.</span></span>  
  
<span data-ttu-id="f45ec-523">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-523">-or-</span></span> 
<span data-ttu-id="f45ec-524">ときにスローされる例外内のメソッド、<paramref name="source" />パーティショナー戻り<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-524">The exception that is thrown when any methods in the <paramref name="source" /> partitioner return <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-525">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-525">Parallel Loops</span></span></related>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-526">指定したデリゲートのいずれかからスローされる例外を格納するスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="f45ec-526">The exception that is thrown to contain an exception thrown from one of the specified delegates.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,long&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`3&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-527">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-527">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-528">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-528">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-529">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-529">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-530">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-530">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-531"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-531">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-532">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-532">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-533">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-533">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-534">次のパラメーターと共に提供されます: 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと現在の要素のインデックス (<xref:System.Int64>)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-534">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and the current element's index (<xref:System.Int64>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-535"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました</span><span class="sxs-lookup"><span data-stu-id="f45ec-535">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-536"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-536">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-537">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-537">-or-</span></span> 
<span data-ttu-id="f45ec-538"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-538">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-539">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-539">-or-</span></span> 
<span data-ttu-id="f45ec-540"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-540">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-541">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-541">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-542"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-542">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-543">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-543">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`2&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource, System::Threading::Tasks::ParallelLoopState ^&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source, System.Threading.Tasks.ParallelLoopState&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource,System.Threading.Tasks.ParallelLoopState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-544">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-544">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-545">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-545">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-546">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-546">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-547">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-547">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-548"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-548">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-549">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-549">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-550">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-550">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-551">次のパラメーターと共に提供されます: 現在の要素と<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-551">It is provided with the following parameters: the current element, and a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-552"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました</span><span class="sxs-lookup"><span data-stu-id="f45ec-552">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-553"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-553">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-554">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-554">-or-</span></span> 
<span data-ttu-id="f45ec-555"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-555">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-556">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-556">-or-</span></span> 
<span data-ttu-id="f45ec-557"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-557">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-558">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-558">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-559"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-559">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-560">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-560">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Action&lt;TSource&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action`1&lt;!!TSource&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Action&lt;TSource&gt; ^ body);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Action&lt;'Source&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="body" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-561">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-561">The type of the data in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-562">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-562">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-563">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-563">An object that configures the behavior of this operation.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-564">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-564">The delegate that is invoked once per iteration.</span></span></param>
        <summary><span data-ttu-id="f45ec-565"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成できる <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-565">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and loop options can be configured.</span></span></summary>
        <returns><span data-ttu-id="f45ec-566">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-566">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-567">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-567">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-568">現在の要素と共にパラメーターとして提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-568">It is provided with the current element as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-569"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました</span><span class="sxs-lookup"><span data-stu-id="f45ec-569">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-570"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-570">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-571">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-571">-or-</span></span> 
<span data-ttu-id="f45ec-572"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-572">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-573">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-573">-or-</span></span> 
<span data-ttu-id="f45ec-574"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-574">The <paramref name="body" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-575">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-575">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-576"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-576">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-577">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-577">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As OrderablePartitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-578"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-578">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-579">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-579">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-580">元のデータ ソースを格納している順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-580">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-581">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-581">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-582">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-582">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-583">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-583">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-584"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-584">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-585">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-585">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-586">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-586">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-587">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-587">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-588"><xref:System.Threading.Tasks.Parallel.ForEach%2A>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-588">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-589">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-589">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="f45ec-590">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-590">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-591">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-591">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-592">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-592">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-593">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-593">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-594">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-594">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-595">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-595">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-596"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-596">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-597">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-597">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-598"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-598">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-599">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-599">-or-</span></span> 
<span data-ttu-id="f45ec-600"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-600">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-601">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-601">-or-</span></span> 
<span data-ttu-id="f45ec-602"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-602">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-603">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-603">-or-</span></span> 
<span data-ttu-id="f45ec-604"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-604">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-605"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、 <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" />返します<see langword="false" />パーティショナーを返しますまたは<see langword="null" />パーティション。</span><span class="sxs-lookup"><span data-stu-id="f45ec-605">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-606">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-606">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-607">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-607">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As Partitioner(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-608"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-608">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-609">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-609">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-610">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-610">The partitioner that contains the original data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-611">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-611">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-612">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-612">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-613">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-613">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-614"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.Partitioner" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-614">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-615">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-615">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-616">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-616">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-617">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-617">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-618"><xref:System.Threading.Tasks.Parallel.ForEach%2A>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-618">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-619">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-619">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="f45ec-620">`localInit`スレッドごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-620">The `localInit` delegate is invoked once for each thread that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-621">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-621">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-622">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-622">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-623">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-623">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-624">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-624">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-625">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-625">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-626"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-626">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-627">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-627">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-628"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-628">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-629">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-629">-or-</span></span> 
<span data-ttu-id="f45ec-630"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-630">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-631">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-631">-or-</span></span> 
<span data-ttu-id="f45ec-632"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-632">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-633">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-633">-or-</span></span> 
<span data-ttu-id="f45ec-634"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-634">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-635"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、 <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" />返します<see langword="false" />パーティショナーを返しますまたは<see langword="null" />パーティション。</span><span class="sxs-lookup"><span data-stu-id="f45ec-635">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-636">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-636">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-637">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-637">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, Long, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-638">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-638">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-639">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-639">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-640">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-640">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-641">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-641">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-642">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-642">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-643">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-643">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-644"><see cref="T:System.Collections.IEnumerable" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-644">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-645">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-645">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-646">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-646">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-647">次のパラメーターと共に提供されます。 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります、現在の要素のインデックス (<xref:System.Int64>)、および実行するイテレーション間で共有できるいくつかのローカルの状態同じスレッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-647">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-648">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-648">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-649">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-649">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-650">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-650">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-651">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-651">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-652">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-652">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-653">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-653">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-654"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-654">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-655">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-655">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-656"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-656">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-657">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-657">-or-</span></span> 
<span data-ttu-id="f45ec-658"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-658">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-659">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-659">-or-</span></span> 
<span data-ttu-id="f45ec-660"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-660">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-661">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-661">-or-</span></span> 
<span data-ttu-id="f45ec-662"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-662">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-663">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-663">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-664">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-664">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEach(Of TSource, TLocal) (source As IEnumerable(Of TSource), localInit As Func(Of TLocal), body As Func(Of TSource, ParallelLoopState, TLocal, TLocal), localFinally As Action(Of TLocal)) As ParallelLoopResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-665">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-665">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-666">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-666">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-667">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-667">An enumerable data source.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-668">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-668">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-669">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-669">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-670">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-670">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-671"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.IEnumerable" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-671">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-672">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-672">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-673">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-673">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-674">次のパラメーターと共に提供されます: 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じスレッドで実行されるイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-674">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-675">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-675">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-676">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-676">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-677">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-677">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-678">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-678">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-679">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するスレッドあたり 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-679">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-680">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-680">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-681"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-681">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-682">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-682">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-683">次の例は、使用する方法を示します、<xref:System.Threading.Tasks.Parallel.ForEach%2A>ローカル状態を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-683">The following example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A> method with local state:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelforeach.cs#02)]
 [!code-vb[System.Threading.Tasks.Parallel#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelforeach.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-684"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-684">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-685">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-685">-or-</span></span> 
<span data-ttu-id="f45ec-686"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-686">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-687">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-687">-or-</span></span> 
<span data-ttu-id="f45ec-688"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-688">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-689">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-689">-or-</span></span> 
<span data-ttu-id="f45ec-690"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-690">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-691">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-691">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-692">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-692">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-693"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-693">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-694">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-694">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-695">元のデータ ソースを格納している順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-695">The orderable partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-696">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-696">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-697">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-697">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-698">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-698">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-699">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-699">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-700"><see langword="foreach" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、64 ビットのインデックスとスレッド ローカル データを持つ <see langword="For Each" /> (Visual Basic の場合は <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-700">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with 64-bit indexes and  with thread-local data on a <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-701">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-701">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-702">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-702">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-703">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-703">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-704"><xref:System.Threading.Tasks.Parallel.ForEach%2A>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-704">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-705">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-705">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="f45ec-706">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-706">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-707">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-707">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-708">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-708">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-709">最後に、各スレッドで本文の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-709">Finally, the last body invocation on each thread returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-710">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-710">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-711">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-711">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-712"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-712">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-713">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-713">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-714"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-714">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-715">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-715">-or-</span></span> 
<span data-ttu-id="f45ec-716"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-716">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-717">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-717">-or-</span></span> 
<span data-ttu-id="f45ec-718"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-718">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-719">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-719">-or-</span></span> 
<span data-ttu-id="f45ec-720"><paramref name="localInit" /> または <paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-720">The <paramref name="localInit" /> or <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-721"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、 <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" />返します<see langword="false" />パーティショナーを返しますまたは<see langword="null" />パーティション。</span><span class="sxs-lookup"><span data-stu-id="f45ec-721">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-722">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-722">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-723"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-723">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-724"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-724">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-725">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-725">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Concurrent.Partitioner&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : System.Collections.Concurrent.Partitioner&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-726"><paramref name="source" /> の要素の型。 </span><span class="sxs-lookup"><span data-stu-id="f45ec-726">The type of the elements in <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-727">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-727">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-728">元のデータ ソースを格納しているパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="f45ec-728">The partitioner that contains the original data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-729">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-729">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-730">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-730">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-731">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-731">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-732">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-732">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-733"><see cref="T:System.Collections.Concurrent.Partitioner" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-733">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation  with thread-local data on a <see cref="T:System.Collections.Concurrent.Partitioner" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-734">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-734">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-735">既定のパーティション構成を上書きする場合、このオーバー ロードが提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-735">This overload is provided for scenarios where you want to override the default partitioning scheme.</span></span> <span data-ttu-id="f45ec-736">たとえば、小さなループ本体は、範囲をパーティション分割によるメリット可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-736">For example, small loop bodies might benefit from partitioning the range.</span></span> <span data-ttu-id="f45ec-737"><xref:System.Threading.Tasks.Parallel.ForEach%2A>メソッドは、動的なパーティション分割をサポートするカスタム パーティショナーを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-737">The <xref:System.Threading.Tasks.Parallel.ForEach%2A> method expects custom partitioners to support dynamic partitioning.</span></span> <span data-ttu-id="f45ec-738">このオーバー ロードは、静的な範囲パーティション分割によるメリットが小さなループ本体を持つシナリオに対して提供されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-738">This overload is provided for scenarios with small loop bodies that might benefit from static range partitioning.</span></span> <span data-ttu-id="f45ec-739">パーティショナーは動的パーティションをサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-739">Partitioners must support dynamic partitions.</span></span>  <span data-ttu-id="f45ec-740">詳細については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)と[方法。動的パーティションを実装する](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-740">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md) and [How to: Implement Dynamic Partitions](~/docs/standard/parallel-programming/how-to-implement-dynamic-partitions.md).</span></span>  
  
 <span data-ttu-id="f45ec-741">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-741">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-742">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-742">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-743">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-743">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-744">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-744">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-745">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するタスクごと 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-745">The `localFinally` delegate is invoked once per task to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-746">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-746">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-747"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-747">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-748">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-748">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-749"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-749">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-750">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-750">-or-</span></span> 
<span data-ttu-id="f45ec-751"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-751">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-752">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-752">-or-</span></span> 
<span data-ttu-id="f45ec-753"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-753">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-754">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-754">-or-</span></span> 
<span data-ttu-id="f45ec-755"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-755">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-756">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-756">-or-</span></span> 
<span data-ttu-id="f45ec-757"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-757">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f45ec-758"><see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />プロパティ、 <paramref name="source" /> <see cref="T:System.Collections.Concurrent.Partitioner" />返します<see langword="false" />パーティショナーを返しますまたは<see langword="null" />パーティション。</span><span class="sxs-lookup"><span data-stu-id="f45ec-758">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> property in the <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> returns <see langword="false" /> or the partitioner returns <see langword="null" /> partitions.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-759">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-759">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-760"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-760">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-761"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-761">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-762">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-762">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`5&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, int64, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, long, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, int64, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-763">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-763">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-764">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-764">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-765">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-765">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-766">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-766">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-767">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-767">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-768">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-768">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-769">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-769">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-770"><see cref="T:System.Collections.IEnumerable" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データと 64 ビットのインデックスを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-770">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data and 64-bit indexes on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-771">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-771">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-772">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-772">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-773">次のパラメーターと共に提供されます。 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>インスタンスを使用して、途中で、ループから抜け出すことがあります、現在の要素のインデックス (<xref:System.Int64>)、および実行するイテレーション間で共有できるいくつかのローカルの状態同じスレッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-773">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, the current element's index (<xref:System.Int64>), and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-774">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-774">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-775">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-775">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-776">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-776">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-777">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-777">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-778">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するスレッドあたり 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-778">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-779">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-779">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-780"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-780">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-781">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-781">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-782"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-782">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-783">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-783">-or-</span></span> 
<span data-ttu-id="f45ec-784"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-784">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-785">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-785">-or-</span></span> 
<span data-ttu-id="f45ec-786"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-786">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-787">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-787">-or-</span></span> 
<span data-ttu-id="f45ec-788"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-788">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-789">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-789">-or-</span></span> 
<span data-ttu-id="f45ec-790"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-790">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-791"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-791">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-792"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-792">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-793">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-793">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-794">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-794">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;TSource,TLocal&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource,TLocal&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Threading.Tasks.ParallelOptions parallelOptions, Func&lt;TLocal&gt; localInit, Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt; body, Action&lt;TLocal&gt; localFinally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ParallelLoopResult ForEach&lt;TSource, TLocal&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Func`1&lt;!!TLocal&gt; localInit, class System.Func`4&lt;!!TSource, class System.Threading.Tasks.ParallelLoopState, !!TLocal, !!TLocal&gt; body, class System.Action`1&lt;!!TLocal&gt; localFinally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TLocal&gt;&#xA; static System::Threading::Tasks::ParallelLoopResult ForEach(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Threading::Tasks::ParallelOptions ^ parallelOptions, Func&lt;TLocal&gt; ^ localInit, Func&lt;TSource, System::Threading::Tasks::ParallelLoopState ^, TLocal, TLocal&gt; ^ body, Action&lt;TLocal&gt; ^ localFinally);" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'Source&gt; * System.Threading.Tasks.ParallelOptions * Func&lt;'Local&gt; * Func&lt;'Source, System.Threading.Tasks.ParallelLoopState, 'Local, 'Local&gt; * Action&lt;'Local&gt; -&gt; System.Threading.Tasks.ParallelLoopResult" Usage="System.Threading.Tasks.Parallel.ForEach (source, parallelOptions, localInit, body, localFinally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ParallelLoopResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TLocal" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="localInit" Type="System.Func&lt;TLocal&gt;" />
        <Parameter Name="body" Type="System.Func&lt;TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal&gt;" />
        <Parameter Name="localFinally" Type="System.Action&lt;TLocal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f45ec-795">ソース内のデータの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-795">The type of the data in the source.</span></span></typeparam>
        <typeparam name="TLocal"><span data-ttu-id="f45ec-796">スレッド ローカル データの型。</span><span class="sxs-lookup"><span data-stu-id="f45ec-796">The type of the thread-local data.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f45ec-797">列挙可能なデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="f45ec-797">An enumerable data source.</span></span></param>
        <param name="parallelOptions"><span data-ttu-id="f45ec-798">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-798">An object that configures the behavior of this operation.</span></span></param>
        <param name="localInit"><span data-ttu-id="f45ec-799">各タスクのローカル データの初期状態を返す関数デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-799">The function delegate that returns the initial state of the local data for each task.</span></span></param>
        <param name="body"><span data-ttu-id="f45ec-800">1 回のイテレーションにつき 1 回呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-800">The delegate that is invoked once per iteration.</span></span></param>
        <param name="localFinally"><span data-ttu-id="f45ec-801">各タスクのローカル状態に対して最後の操作を行うデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f45ec-801">The delegate that performs a final action on the local state of each task.</span></span></param>
        <summary><span data-ttu-id="f45ec-802"><see cref="T:System.Collections.IEnumerable" /> に対して、イテレーションが並列で実行される可能性があり、ループ オプションを構成でき、ループの状態を監視および操作できる、スレッド ローカル データを持つ <see langword="foreach" /> (Visual Basic の場合は <see langword="For Each" />) 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-802">Executes a <see langword="foreach" /> (<see langword="For Each" /> in Visual Basic) operation with thread-local data on an <see cref="T:System.Collections.IEnumerable" /> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</span></span></summary>
        <returns><span data-ttu-id="f45ec-803">完了したループの部分に関する情報を格納している構造。</span><span class="sxs-lookup"><span data-stu-id="f45ec-803">A structure that contains information about which portion of the loop completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-804">`body`デリゲートが内の各要素に対して 1 回呼び出される、`source`列挙可能な。</span><span class="sxs-lookup"><span data-stu-id="f45ec-804">The `body` delegate is invoked once for each element in the `source` enumerable.</span></span> <span data-ttu-id="f45ec-805">次のパラメーターと共に提供されます: 現在の要素を<xref:System.Threading.Tasks.ParallelLoopState>に途中で、ループから抜け出すことができますのインスタンスと同じスレッドで実行されるイテレーション間で共有できるいくつかのローカル状態。</span><span class="sxs-lookup"><span data-stu-id="f45ec-805">It is provided with the following parameters: the current element, a <xref:System.Threading.Tasks.ParallelLoopState> instance that may be used to break out of the loop prematurely, and some local state that may be shared amongst iterations that execute on the same thread.</span></span>  
  
 <span data-ttu-id="f45ec-806">`localInit`タスクごとに、ループの実行に参加し、それらのタスクのそれぞれの初期のローカル状態を返すデリゲートが 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-806">The `localInit` delegate is invoked once for each task that participates in the loop's execution and returns the initial local state for each of those tasks.</span></span> <span data-ttu-id="f45ec-807">これらの初期状態は、最初に渡される`body`各タスクでの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="f45ec-807">These initial states are passed to the first `body` invocations on each task.</span></span> <span data-ttu-id="f45ec-808">次に、以降の本文のすべての呼び出しは、次の本文の呼び出しに渡される可能性がある変更された状態値を返します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-808">Then, every subsequent body invocation returns a possibly modified state value that is passed to the next body invocation.</span></span> <span data-ttu-id="f45ec-809">最後に、各タスクの本体の最後の呼び出しに渡される状態値を返します、`localFinally`を委任します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-809">Finally, the last body invocation on each task returns a state value that is passed to the `localFinally` delegate.</span></span> <span data-ttu-id="f45ec-810">`localFinally`デリゲートが各タスクのローカル状態に対して最後のアクションを実行するスレッドあたり 1 回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-810">The `localFinally` delegate is invoked once per thread to perform a final action on each task's local state.</span></span> <span data-ttu-id="f45ec-811">このデリゲートは複数のタスクで同時に呼び出す可能性があります。したがって、共有変数へのアクセスを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-811">This delegate might be invoked concurrently on multiple tasks; therefore, you must synchronize access to any shared variables.</span></span>  
  
 <span data-ttu-id="f45ec-812"><xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType>メソッドは、既存タスクが完了すると、その実行の有効期間にわたってスレッドよりも多くのタスクを使用することがあり、新しいタスクは置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-812">The <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> method may use more tasks than threads over the lifetime of its execution, as existing tasks complete and are replaced by new tasks.</span></span> <span data-ttu-id="f45ec-813">これにより、基になる<xref:System.Threading.Tasks.TaskScheduler>オブジェクトを追加する機会、変更、またはループのサービスのスレッドを削除します。</span><span class="sxs-lookup"><span data-stu-id="f45ec-813">This gives the underlying <xref:System.Threading.Tasks.TaskScheduler> object the chance to add, change, or remove threads that service the loop.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-814"><paramref name="source" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-814">The <paramref name="source" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-815">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-815">-or-</span></span> 
<span data-ttu-id="f45ec-816"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-816">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-817">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-817">-or-</span></span> 
<span data-ttu-id="f45ec-818"><paramref name="body" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-818">The <paramref name="body" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-819">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-819">-or-</span></span> 
<span data-ttu-id="f45ec-820"><paramref name="localInit" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-820">The <paramref name="localInit" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-821">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-821">-or-</span></span> 
<span data-ttu-id="f45ec-822"><paramref name="localFinally" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-822">The <paramref name="localFinally" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-823"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />引数が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="f45ec-823">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> argument is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-824"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-824">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-825">この例外は、すべてのスレッド上でスローされたすべての個別の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-825">The exception that contains all the individual exceptions thrown on all threads.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/msp-n-p/ff963552(v=pandp.10)"><span data-ttu-id="f45ec-826">並列ループ</span><span class="sxs-lookup"><span data-stu-id="f45ec-826">Parallel Loops</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f45ec-827">指定された一連のアクションの各アクションを実行します (場合によっては並列で)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-827">Executes each of the provided actions, possibly in parallel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Invoke (ParamArray actions As Action())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke actions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions"><span data-ttu-id="f45ec-828">実行対象の <see cref="T:System.Action" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="f45ec-828">An array of <see cref="T:System.Action" /> to execute.</span></span></param>
        <summary><span data-ttu-id="f45ec-829">指定された一連のアクションの各アクションを実行します (場合によっては並列で)。</span><span class="sxs-lookup"><span data-stu-id="f45ec-829">Executes each of the provided actions, possibly in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-830">このメソッドを並列に可能性のある一連の操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-830">This method can be used to execute a set of operations, potentially in parallel.</span></span>  
  
 <span data-ttu-id="f45ec-831">または並列で実行するかどうか、操作が実行される順序に関する保証は行われません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-831">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="f45ec-832">指定された操作が完了するまで、通常や例外的な終了のため完了が発生するかどうかに関係なく、このメソッドは返しません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-832">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="f45ec-833">詳細については、「[方法 :Parallel.Invoke を使用して並列操作を実行する](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-833">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f45ec-834">この例では、使用、<xref:System.Threading.Tasks.Parallel.Invoke%2A>他のメソッド、匿名のデリゲートとラムダ式を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="f45ec-834">This example demonstrates how to use the <xref:System.Threading.Tasks.Parallel.Invoke%2A> method with other methods, anonymous delegates, and lambda expressions.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Parallel#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.parallel/cs/parallelinvoke.cs#01)]
 [!code-vb[System.Threading.Tasks.Parallel#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.parallel/vb/parallelinvoke.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-835"><paramref name="actions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-835">The <paramref name="actions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-836">ときにスローされる例外でのアクション、<paramref name="actions" />配列が例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f45ec-836">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f45ec-837"><paramref name="actions" />配列に含まれる、<see langword="null" />要素。</span><span class="sxs-lookup"><span data-stu-id="f45ec-837">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (System.Threading.Tasks.ParallelOptions parallelOptions, params Action[] actions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class System.Threading.Tasks.ParallelOptions parallelOptions, class System.Action[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Invoke(System::Threading::Tasks::ParallelOptions ^ parallelOptions, ... cli::array &lt;Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Threading.Tasks.ParallelOptions * Action[] -&gt; unit" Usage="System.Threading.Tasks.Parallel.Invoke (parallelOptions, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
        <Parameter Name="actions" Type="System.Action[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parallelOptions"><span data-ttu-id="f45ec-838">この操作の動作を構成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f45ec-838">An object that configures the behavior of this operation.</span></span></param>
        <param name="actions"><span data-ttu-id="f45ec-839">実行対象のアクションの配列。</span><span class="sxs-lookup"><span data-stu-id="f45ec-839">An array of actions to execute.</span></span></param>
        <summary><span data-ttu-id="f45ec-840">操作がユーザーによって取り消されていない限り、指定された各アクションを実行します。アクションは並列で実行される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f45ec-840">Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f45ec-841">このメソッドを並列に可能性のある一連の操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-841">This method can be used to execute a set of operations, potentially in parallel.</span></span> <span data-ttu-id="f45ec-842">渡されたキャンセル トークン、<xref:System.Threading.Tasks.ParallelOptions>構造体には、全体の操作をキャンセルする呼び出し元ができるようにします。</span><span class="sxs-lookup"><span data-stu-id="f45ec-842">The cancellation token passed in with the <xref:System.Threading.Tasks.ParallelOptions> structure enables the caller to cancel the entire operation.</span></span> <span data-ttu-id="f45ec-843">詳細については、「[マネージド スレッドのキャンセル](~/docs/standard/threading/cancellation-in-managed-threads.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-843">For more information, see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 <span data-ttu-id="f45ec-844">または並列で実行するかどうか、操作が実行される順序に関する保証は行われません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-844">No guarantees are made about the order in which the operations execute or whether they execute in parallel.</span></span> <span data-ttu-id="f45ec-845">指定された操作が完了するまで、通常や例外的な終了のため完了が発生するかどうかに関係なく、このメソッドは返しません。</span><span class="sxs-lookup"><span data-stu-id="f45ec-845">This method does not return until each of the provided operations has completed, regardless of whether completion occurs due to normal or exceptional termination.</span></span>  
  
 <span data-ttu-id="f45ec-846">詳細については、「[方法 :Parallel.Invoke を使用して並列操作を実行する](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f45ec-846">For more information, see [How to: Use Parallel.Invoke to Execute Parallel Operations](~/docs/standard/parallel-programming/how-to-use-parallel-invoke-to-execute-parallel-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="f45ec-847"><see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />設定されます。</span><span class="sxs-lookup"><span data-stu-id="f45ec-847">The <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> is set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f45ec-848"><paramref name="actions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-848">The <paramref name="actions" /> argument is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f45ec-849">- または -</span><span class="sxs-lookup"><span data-stu-id="f45ec-849">-or-</span></span> 
<span data-ttu-id="f45ec-850"><paramref name="parallelOptions" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f45ec-850">The <paramref name="parallelOptions" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="f45ec-851">ときにスローされる例外でのアクション、<paramref name="actions" />配列が例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f45ec-851">The exception that is thrown when any action in the <paramref name="actions" /> array throws an exception.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f45ec-852"><paramref name="actions" />配列に含まれる、<see langword="null" />要素。</span><span class="sxs-lookup"><span data-stu-id="f45ec-852">The <paramref name="actions" /> array contains a <see langword="null" /> element.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f45ec-853"><see cref="T:System.Threading.CancellationTokenSource" />に関連付けられている、<see cref="T:System.Threading.CancellationToken" />で、<paramref name="parallelOptions" />は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="f45ec-853">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <see cref="T:System.Threading.CancellationToken" /> in the <paramref name="parallelOptions" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
