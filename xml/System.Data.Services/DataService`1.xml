<Type Name="DataService&lt;T&gt;" FullName="System.Data.Services.DataService&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6dbf3e5db3f7cdec600cec1be62a0cd9db5c76a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataService&lt;T&gt; : System.Data.Services.IRequestHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataService`1&lt;T&gt; extends System.Object implements class System.Data.Services.IRequestHandler" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.DataService`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataService(Of T)&#xA;Implements IRequestHandler" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataService : System::Data::Services::IRequestHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Services.IRequestHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(InstanceContextMode=System.ServiceModel.InstanceContextMode.PerCall)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a8977-101">データ サービスを定義する型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8977-101">Type that defines the data service.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="a8977-102">ADO.NET Data Service 開発のメイン エントリ ポイントです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8977-102">The main entry point for developing an ADO.NET Data Service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-103"><xref:System.Data.Services.DataService%601> クラスは、サーバー システムのすべてのコンポーネントの基本的な統合をつかさどります。</span><span class="sxs-lookup"><span data-stu-id="a8977-103">The <xref:System.Data.Services.DataService%601> class does the basic integration of all components of the server system.</span></span> <span data-ttu-id="a8977-104"><xref:System.Data.Services.DataService%601> クラスから派生したクラスを定義し、互換性のあるデータ モデルを参照することによって、承認とキャッシュにシステムの既定値を使用する新しいデータ サービスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a8977-104">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 <span data-ttu-id="a8977-105"><xref:System.Data.Services.DataService%601> の型は、エンティティ型の <xref:System.Linq.IQueryable%601> コレクションを表すエンティティ セットを返すプロパティを少なくとも 1 つ公開する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8977-105">The type of the <xref:System.Data.Services.DataService%601> must expose at least one property that returns an entity set that is an <xref:System.Linq.IQueryable%601> collection of entity types.</span></span> <span data-ttu-id="a8977-106">このクラスにはさらに、エンティティ リソースを更新するための <xref:System.Data.Services.IUpdatable> インターフェイスが実装されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8977-106">This class must also implement the <xref:System.Data.Services.IUpdatable> interface to enable updates to be made to entity resources.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8977-107">テンプレート クラスによって指定された型のデータを展開する新しいデータ サービスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-107">Creates a new data service that deploys data of the type indicated by the template class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-108"><xref:System.Data.Services.DataService%601> クラスから派生したクラスを定義し、互換性のあるデータ モデルを参照することによって、承認とキャッシュにシステムの既定値を使用する新しいデータ サービスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a8977-108">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachHost">
      <MemberSignature Language="C#" Value="public void AttachHost (System.Data.Services.IDataServiceHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachHost(class System.Data.Services.IDataServiceHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachHost (host As IDataServiceHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachHost(System::Data::Services::IDataServiceHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Data.Services.IDataServiceHost" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="a8977-109">
            <see cref="T:System.Data.Services.IDataServiceHost" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-109">An instance of <see cref="T:System.Data.Services.IDataServiceHost" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8977-110">
            <paramref name="host" /> パラメーターによって識別されたデータ サービスにデータ サービス ホストをアタッチします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-110">Attaches the data service host to the data service identified by the parameter <paramref name="host" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-111">データ サービスは、アタッチされた <xref:System.Data.Services.IDataServiceHost> ホストを使用して要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="a8977-111">The <xref:System.Data.Services.IDataServiceHost> host attached is used by the data service to process requests.</span></span> <span data-ttu-id="a8977-112">データ サービスが Windows Communication Foundation (WCF) でホストされている場合、ホストを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="a8977-112">There is no requirement to set up a host when the data service is hosted in Windows Communication Foundation (WCF).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSource">
      <MemberSignature Language="C#" Value="protected virtual T CreateDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !T CreateDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.CreateDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSource () As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual T CreateDataSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8977-113">データ サービスによって使用されるテンプレート クラスのデータ ソースを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-113">Creates a data source of the template class that will be used by the data service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8977-114">データ ソースのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-114">An instance of the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-115">パラメーターのないコンストラクターが型に存在する場合、そのコンストラクターが既定で使用されます。</span><span class="sxs-lookup"><span data-stu-id="a8977-115">By default, a constructor without parameters on the type will be used if available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDataSource">
      <MemberSignature Language="C#" Value="protected T CurrentDataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T CurrentDataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.CurrentDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentDataSource As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property T CurrentDataSource { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8977-116">現在要求の処理に使用されているデータ ソース インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-116">Gets the data source instance currently being used to process the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8977-117">サービスのデータ ソース インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-117">The data source instance for the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-118">クラスの構築時に使用されたテンプレート クラスのインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="a8977-118">An instance of the template class used when the class was constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="protected virtual void HandleException (System.Data.Services.HandleExceptionArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleException(class System.Data.Services.HandleExceptionArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleException (args As HandleExceptionArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleException(System::Data::Services::HandleExceptionArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.HandleExceptionArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="a8977-119">例外の引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-119">Exception arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8977-120">要求の処理中に例外が発生すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-120">Called when an exception is raised while processing a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-121">データ サービスで `args` インスタンスに変更を加えることによって、例外を応答に含めて返す方法をカスタマイズすることができます。</span><span class="sxs-lookup"><span data-stu-id="a8977-121">A data service may modify the `args` instance to customize how the exception will be sent in the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartProcessingRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnStartProcessingRequest (System.Data.Services.ProcessRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartProcessingRequest(class System.Data.Services.ProcessRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartProcessingRequest (args As ProcessRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartProcessingRequest(System::Data::Services::ProcessRequestArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.ProcessRequestArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="a8977-122">要求に関する情報を格納する <see cref="T:System.Data.Services.ProcessRequestArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-122">
              <see cref="T:System.Data.Services.ProcessRequestArgs" /> that contains information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8977-123">個々の要求が処理される前に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-123">Called before processing each request.</span>
          </span>
          <span data-ttu-id="a8977-124">バッチ要求の場合は、先頭のバッチ要求に対して 1 回、そのバッチの各操作につき 1 回呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-124">For batch requests, it is called one time for the top batch request and one time for each operation in the batch.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingPipeline">
      <MemberSignature Language="C#" Value="public System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.ProcessingPipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessingPipeline As DataServiceProcessingPipeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::DataServiceProcessingPipeline ^ ProcessingPipeline { System::Data::Services::DataServiceProcessingPipeline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.DataServiceProcessingPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8977-125">データ サービス処理パイプラインのイベントを定義するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-125">Gets an object that defines the events for the data service processing pipeline.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8977-126">データ サービス処理パイプラインのイベントを定義するための <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-126">A <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> object that is used to define events for the data service processing pipeline.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8977-127">HTTP 要求を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-127">Processes an HTTP request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8977-128"><xref:System.Data.Services.DataService%601.AttachHost%2A> を呼び出して要求情報を取得し、応答を構築するには、あらかじめ <xref:System.Data.Services.DataService%601.ProcessRequest%2A> メソッドが呼び出されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8977-128">The <xref:System.Data.Services.DataService%601.AttachHost%2A> method should be invoked before you call <xref:System.Data.Services.DataService%601.ProcessRequest%2A> to get request information and build the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestForMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessRequestForMessage (System.IO.Stream messageBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessRequestForMessage(class System.IO.Stream messageBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessRequestForMessage (messageBody As Stream) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessRequestForMessage(System::IO::Stream ^ messageBody);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBody" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="messageBody">
          <span data-ttu-id="a8977-129">HTTP 要求の本文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-129">The body of the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8977-130">HTTP 要求を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-130">Processes an HTTP request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8977-131">応答メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8977-131">Response message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>