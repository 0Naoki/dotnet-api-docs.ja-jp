<Type Name="Compiler" FullName="Microsoft.CSharp.Compiler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9a00009be7e1743cf1802e30f0ef84aa53bb66b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70566023" /></Metadata><TypeSignature Language="C#" Value="public class Compiler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compiler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.Compiler" />
  <TypeSignature Language="VB.NET" Value="Public Class Compiler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compiler" />
  <TypeSignature Language="F#" Value="type Compiler = class" />
  <AssemblyInfo>
    <AssemblyName>cscompmgd</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("The recommended alternative is Microsoft.CSharp.CSharpCodeProvider and System.CodeDom.Compiler.ICodeCompiler.  The CSharpCodeProvider and CodeDom ICodeCompiler provide a much richer set of functionality for specifying how to launch the compiler.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>**注: この API は今後使用しません。** 旧式でない代替手段は、<see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> です。

C# コンパイラ用のマネージド ラッパー。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
C\#コードをインプロセスでコンパイルするには<xref:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)>、を呼び出します。

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static Microsoft.CSharp.CompilerError[] Compile (string[] sourceTexts, string[] sourceTextNames, string target, string[] imports, System.Collections.IDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CSharp.CompilerError[] Compile(string[] sourceTexts, string[] sourceTextNames, string target, string[] imports, class System.Collections.IDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (sourceTexts As String(), sourceTextNames As String(), target As String, imports As String(), options As IDictionary) As CompilerError()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Microsoft::CSharp::CompilerError ^&gt; ^ Compile(cli::array &lt;System::String ^&gt; ^ sourceTexts, cli::array &lt;System::String ^&gt; ^ sourceTextNames, System::String ^ target, cli::array &lt;System::String ^&gt; ^ imports, System::Collections::IDictionary ^ options);" />
      <MemberSignature Language="F#" Value="static member Compile : string[] * string[] * string * string[] * System.Collections.IDictionary -&gt; Microsoft.CSharp.CompilerError[]" Usage="Microsoft.CSharp.Compiler.Compile (sourceTexts, sourceTextNames, target, imports, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>cscompmgd</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.CompilerError[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexts" Type="System.String[]" />
        <Parameter Name="sourceTextNames" Type="System.String[]" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="imports" Type="System.String[]" />
        <Parameter Name="options" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="sourceTexts">それぞれに C\# のコードが含まれる文字列型の配列。</param>
        <param name="sourceTextNames">各 sourceTexts のファイル名が含まれる文字列型の配列。</param>
        <param name="target">出力ファイル名。 この引数は必須です。</param>
        <param name="imports">参照するファイル名が含まれる文字列型の配列。</param>
        <param name="options">コンパイラ オプションの <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>指定された C# ソースをコンパイルして指定されたファイルに出力します。</summary>
        <returns><see cref="T:Microsoft.CSharp.CompilerError" /> 型の配列として診断メッセージを返します。 配列が空の場合、またはすべての要素が警告の場合、コンパイルは成功しました。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
SourceTexts パラメーターの各文字列は、1つのソースファイルに相当します。 SourceTexts テキスト要素が少なくとも1つ必要です。

SourceTextNames パラメーターのファイル名は、コンパイラ診断およびデバッグ情報に使用されます。 配列は必須ですが、 \#行ディレクティブを使用してローカルでオーバーライドできます。 配列の要素数は、sourceTexts パラメーターと同じである必要があります。

Imports パラメーターは、/reference コンパイラオプションと同じです。 このパラメーターは、<see langword="null" /> に設定できます。

Options パラメーターの場合、キーはコンパイラオプションの短い形式です。 値は、オプションに必要な値です。 Options パラメーターにはを<see langword="null" />指定できます。 一部のコンパイラオプションは認識されません。 認識されるオプションと値:

| キー名 | 使用法 |
| --- | --- |
| addmodule | このアセンブリに含めるモジュールの一覧。 モジュール名は、縦棒またはパイプ文字で区切る必要があります。 値は型<xref:System.String>である必要があります。 「 [-Addmodule (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/1s46f83c)参照してください。 |
| baseaddress | ライブラリのベースアドレス。 値は型<xref:System.UInt32>である必要があります。 「 [-Baseaddress (C#コンパイラオプション)](~/docs/csharp/language-reference/compiler-options/baseaddress-compiler-option.md)」を参照してください。 |
| bugreport | バグレポートファイルを生成します。 値は型<xref:System.String>である必要があります。 「 [-Bugreport (C#コンパイラオプション)](https://msdn.microsoft.com/library/kaky3xy9)」を参照してください。 |
| checked | 既定の式の評価を checked (または unchecked) に設定します。 値は型<xref:System.Boolean>である必要があります。 「 [-Checked (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/h25wtyxf)参照してください。 |
| d | 定義するセミコロンで区切られたシンボルのリスト。 値は型<xref:System.String>である必要があります。 「 [-Define (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/0feaad6z)参照してください。 |
| デバッグ | 出力を使用してデバッグ情報を生成します。 値は型<xref:System.Boolean>である必要があります。 Full または pdb のみを指定することはできません。 「 [-Debug (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/8cw0bt21)参照してください。 |
| ドック | XML コメントを格納するファイル名。 値は型<xref:System.String>である必要があります。 「 [-Doc (C#コンパイラオプション)](https://msdn.microsoft.com/library/3260k4x7)」を参照してください。 |
| filealign | PE セクションの配置サイズ。 値は型<xref:System.UInt32>である必要があります。 「 [-Filealign (C#コンパイラオプション)](https://msdn.microsoft.com/library/0s4tzdf2)」を参照してください。 |
| incr | 増分リビルドを有効にします。 値は型<xref:System.Boolean>である必要があります。 |
| lib | モジュールおよび参照アセンブリを検索するときに検索する追加パス。 値は型<xref:System.String>である必要があります。 「 [-Lib (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/s5bac5fx)参照してください。 |
| linkres | マネージリソースをアセンブリにリンクします。 値は型<xref:System.String>である必要があります。 「 [-Linkresource (C#コンパイラオプション)](https://msdn.microsoft.com/library/xawyf94k)」を参照してください。 |
| m | Main メソッドを検索するには、「」と入力します。 値は型<xref:System.String>である必要があります。 「 [-Main (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/x3eht538)参照してください。 |
| nostdlib | Mscorlib.dll を自動的に参照しません。 値は型<xref:System.Boolean>である必要があります。 「 [-Nostdlib (C#コンパイラオプション)](https://msdn.microsoft.com/library/fa13yay7)」を参照してください。 |
| nowarn | 報告しないセミコロンで区切られた警告番号の一覧。 値は型<xref:System.String>である必要があります。 「 [-Nowarn (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/7f28x9z3)参照してください。 |
| o | コンパイラの最適化を有効にします。 値は型<xref:System.Boolean>である必要があります。 「 [-Optimize (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/t0hfscdc)参照してください。 |
| r | 参照されたアセンブリ。 値は文字列型でなければなりません。 複数のアセンブリを指定する場合は、ファイル名を縦棒またはパイプ文字で区切る必要があります。 参照[(C#コンパイラオプション)](https://msdn.microsoft.com/library/yabyz3h4)。 |
| res | マネージリソースを埋め込みます。 値は型<xref:System.String>である必要があります。 「[リソース (C#コンパイラオプション)」を](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md)参照してください。 |
| target | 出力ファイルのターゲットの種類。 "library"、"exe"、"winexe"、または "module" のいずれかになります。 値は型<xref:System.String>である必要があります。 「 [-Target (C#コンパイラオプション)](https://msdn.microsoft.com/library/6h25dztx)」を参照してください。 |
| unsafe | Unsafe コンストラクトを許可します。 値は型<xref:System.Boolean>である必要があります。 「 [-Unsafe (C#コンパイラオプション)](https://msdn.microsoft.com/library/ct597kb0)」を参照してください。 |
| 週 | 警告レベル (0-4)。 値は型<xref:System.String>である必要があります。 「 [-Warn (C#コンパイラオプション)」を](https://msdn.microsoft.com/library/13b90fz7)参照してください。 |
| warnaserror | 警告診断をエラーとして報告します。 値は型<xref:System.Boolean>である必要があります。 「 [-Warnaserror (C#コンパイラオプション)](https://msdn.microsoft.com/library/406xhdz3)」を参照してください。 |
| win32icon | 自動的に生成された Win32 リソースの win32 アイコン。 値は型<xref:System.String>である必要があります。 「 [-Win32icon (C#コンパイラオプション)](https://msdn.microsoft.com/library/2aaxe43f)」を参照してください。 |
| win32res | Win32 リソースファイル。 値は型<xref:System.String>である必要があります。 「 [-Win32res (C#コンパイラオプション)](https://msdn.microsoft.com/library/8f2f5x2e)」を参照してください。 |

]]></format>
        </remarks>
        <altmember cref="T:Microsoft.CSharp.Compiler" />
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceTexts" /> が <see langword="null" /> です。
          
- または -

<paramref name="sourceTextNames" /> は <see langword="null" />です。

- または -

<paramref name="target" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="sourceTexts" /> は空の配列です。

- または -

<paramref name="sourceTextNames" /> が <paramref name="sourceTexts" /> と同じサイズではありません。</exception>
        <related type="Article" href="~/docs/csharp/language-reference/preprocessor-directives/preprocessor-line.md">#line (C# リファレンス)</related>
        <related type="Article" href="~/docs/csharp/language-reference/compiler-options/reference-compiler-option.md">-reference (C# コンパイラ オプション)</related>
        <related type="Article" href="~/docs/csharp/language-reference/compiler-options/index.md">C# コンパイラ オプション</related>
      </Docs>
    </Member>
  </Members>
</Type>
