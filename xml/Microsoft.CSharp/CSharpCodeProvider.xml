<Type Name="CSharpCodeProvider" FullName="Microsoft.CSharp.CSharpCodeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c55c96a55d65915892a0be50ee5782865ef96b1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52231786" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CSharpCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.CSharpCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CSharpCodeProvider : System::CodeDom::Compiler::CodeDomProvider" />
  <TypeSignature Language="F#" Value="type CSharpCodeProvider = class&#xA;    inherit CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="146be-101">C# コード ジェネレーターと C# コード コンパイラのインスタンスへのアクセスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="146be-101">Provides access to instances of the C# code generator and code compiler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146be-102">このクラスは、c# のインスタンスを取得するのに使用できるメソッドを提供します。<xref:System.CodeDom.Compiler.ICodeGenerator>と<xref:System.CodeDom.Compiler.ICodeCompiler>実装します。</span><span class="sxs-lookup"><span data-stu-id="146be-102">This class provides methods that can be used to retrieve instances of the C# <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="146be-103">このクラスには、リンク確認要求し、すべてのメンバーに適用される、クラス レベルで継承確認要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="146be-103">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="146be-104">A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可があるない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="146be-104">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="146be-105">次の例では、c# または Visual Basic コード プロバイダーを使用して、ソース ファイルをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="146be-105">The following example uses either the C# or Visual Basic code provider to compile a source file.</span></span> <span data-ttu-id="146be-106">例が入力ファイルの拡張子をチェックし、対応するを使用して<xref:Microsoft.CSharp.CSharpCodeProvider>または<xref:Microsoft.VisualBasic.VBCodeProvider>コンパイルします。</span><span class="sxs-lookup"><span data-stu-id="146be-106">The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or <xref:Microsoft.VisualBasic.VBCodeProvider> for compilation.</span></span> <span data-ttu-id="146be-107">入力ファイルが、実行可能ファイルにコンパイルされ、コンパイル エラーがコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="146be-107">The input file is compiled into an executable file, and any compilation errors are displayed to the console.</span></span>  
  
 [!code-csharp[CodeDom_CodeProviders#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#1)]
 [!code-vb[CodeDom_CodeProviders#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="146be-108">直前の呼び出し元に対する完全な信頼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="146be-108">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="146be-109">このクラスは、部分的に信頼されたコードでは使用できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="146be-109">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="146be-110">継承クラスの完全な信頼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="146be-110">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="146be-111">部分的に信頼されたコードでは、このクラスを継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="146be-111">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="N:System.CodeDom" />
    <altmember cref="N:System.CodeDom.Compiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="146be-112">
            <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-112">Initializes a new instance of the <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="146be-113">
            <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-113">Initializes a new instance of the <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="146be-114">直前の呼び出し元に対する完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-114">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="146be-115">このクラスは、部分的に信頼されたコードでは使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-115">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="146be-116">継承クラスの完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-116">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="146be-117">部分的に信頼されたコードでは、このクラスを継承できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-117">This class cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerOptions As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpCodeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.CSharp.CSharpCodeProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.CSharp.CSharpCodeProvider" Usage="new Microsoft.CSharp.CSharpCodeProvider providerOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions">
          <span data-ttu-id="146be-118">構成ファイルのプロバイダー オプションが格納された <see cref="T:System.Collections.Generic.IDictionary`2" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-118">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="146be-119">指定したプロバイダー オプションを使用して、<see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-119">Initializes a new instance of the <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> class by using the specified provider options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146be-120">値は、`providerOptions`構成ファイル内の要素から取得されます。</span><span class="sxs-lookup"><span data-stu-id="146be-120">The value for `providerOptions` is obtained from the  element in the configuration file.</span></span> <span data-ttu-id="146be-121">バージョンを識別することができます、<xref:Microsoft.CSharp.CSharpCodeProvider>を指定して使用する、`<providerOption>`要素、オプションの名前として"CompilerVersion"を指定し、オプションの値としてバージョン番号 (たとえば、"v3.5") を指定します。</span><span class="sxs-lookup"><span data-stu-id="146be-121">You can identify the version of the <xref:Microsoft.CSharp.CSharpCodeProvider> you want to use by specifying the `<providerOption>` element, supplying "CompilerVersion" as the option name, and supplying the version number (for example, "v3.5") as the option value.</span></span>  <span data-ttu-id="146be-122">小文字の"v"のバージョン番号の前にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="146be-122">You must precede the version number with a lower case "v".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="146be-123">次の構成ファイルの例では、c# コード プロバイダーのバージョン 3.5 を使用する必要がありますを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="146be-123">The following configuration file example demonstrates how to specify that version 3.5 of the C# code provider should be used.</span></span>  
  
```xml  
<configuration>  
  <system.codedom>  
    <compilers>  
      <!-- zero or more compiler elements -->  
      <compiler  
        language="c#;cs;csharp"  
        extension=".cs"  
        type="Microsoft.CSharp.CSharpCodeProvider, System,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b77a5c561934e089"  
        compilerOptions="/optimize"  
        warningLevel="1" >  
          <providerOption  
            name="CompilerVersion"  
            value="v3.5" />  
      </compiler>  
    </compilers>  
  </system.codedom>  
</configuration>  
```  
  
 <span data-ttu-id="146be-124">次の例では、新しいインスタンスを作成するときに、コンパイラのバージョンを指定する方法を示しています、<xref:Microsoft.CSharp.CSharpCodeProvider>クラス。</span><span class="sxs-lookup"><span data-stu-id="146be-124">The following example shows how to specify the compiler version when you create a new instance of the <xref:Microsoft.CSharp.CSharpCodeProvider> class.</span></span>  
  
 [!code-csharp[CSProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/csprovider.provideroptions/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="146be-125">
            <paramref name="providerOptions" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-125">
              <paramref name="providerOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="146be-126">直前の呼び出し元に対する完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-126">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="146be-127">このメンバーは、部分的に信頼されているコードから使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-127">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/index.md">
          <span data-ttu-id="146be-128">.NET Framework の構成ファイル スキーマ</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-128">Configuration file schema for the .NET Framework</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/compilers-element.md">
          <span data-ttu-id="146be-129">&lt;コンパイラ&gt;要素</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-129">&lt;compilers&gt; Element</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md">
          <span data-ttu-id="146be-130">完全修飾型名の指定</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-130">Specifying Fully Qualified Type Names</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/provideroption-element.md">
          <span data-ttu-id="146be-131">&lt;provideroption&gt;要素</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-131">&lt;provideroption&gt; Element</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="override this.CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="cSharpCodeProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="146be-132">C# コード コンパイラのインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-132">Gets an instance of the C# code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="146be-133">C# <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 実装のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-133">An instance of the C# <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="override this.CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="cSharpCodeProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="146be-134">C# コード ジェネレーターのインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-134">Gets an instance of the C# code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="146be-135">C# <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 実装のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-135">An instance of the C# <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="146be-136">ソース コード ファイルを作成するときに使用するファイル名拡張子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-136">Gets the file name extension to use when creating source code files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="146be-137">生成されるソース コード ファイルで使用するファイル名の拡張子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-137">The file name extension to use for generated source code files.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146be-138">このファイル名拡張子は、通常、言語のソース コード ファイルで使用される拡張子です。</span><span class="sxs-lookup"><span data-stu-id="146be-138">This file name extension is usually the extension used by the language's source code files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="cSharpCodeProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="146be-139">コード生成の対象となる <see cref="T:System.CodeDom.CodeTypeMember" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-139">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="146be-140">書き込み先の <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-140">The <see cref="T:System.IO.TextWriter" /> to write to.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="146be-141">コードの生成時に使用する <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-141">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="146be-142">指定したテキスト ライターおよびコード ジェネレーターのオプションを使用して、指定したクラス メンバーのコードを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-142">Generates code for the specified class member using the specified text writer and code generator options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146be-143">メンバーは、コンテキストに応じて異なる方法で生成されます。</span><span class="sxs-lookup"><span data-stu-id="146be-143">Members are generated differently depending on their context.</span></span> <span data-ttu-id="146be-144">たとえば、インターフェイスのメソッドまたは列挙体のフィールドが生成されますメソッドまたはクラスのフィールドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="146be-144">For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.</span></span>  <span data-ttu-id="146be-145">この実装では、クラスのコンテキスト内のメンバーのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="146be-145">This implementation generates code for a member in the class context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="146be-146">次のコード例の使用を示しています、 <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A> CodeDOM グラフで使用するコード フラグメントを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="146be-146">The following code example shows the use of the <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A> method to create a code fragment to be used in a CodeDOM graph.</span></span> <span data-ttu-id="146be-147">このコード例が示されている例の一部、<xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A>のメソッド、<xref:System.CodeDom.Compiler.CodeDomProvider>クラス。</span><span class="sxs-lookup"><span data-stu-id="146be-147">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="cSharpCodeProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="146be-148">型コンバーターを取得する対象のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-148">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="146be-149">指定したオブジェクト型の <see cref="T:System.ComponentModel.TypeConverter" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-149">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="146be-150">指定した型の <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="146be-150">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="146be-151">派生クラスでは、特定のデータ型の特定の種類の型コンバーターを提供するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="146be-151">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>