<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AuthenticatedStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b832715225eb5210e665ec01b31aa01c2856f0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b832715225eb5210e665ec01b31aa01c2856f0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</source>
          <target state="translated">ストリームを介して資格情報を渡し、クライアント サーバー アプリケーションの認証を要求または実行するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>This abstract class provides methods and properties that are common to authenticated streams.</source>
          <target state="translated">この抽象クラスは、認証されたストリームに共通するメソッドとプロパティを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Authenticated streams can provide authentication, data signing, and encryption services that can help maintain the integrity and confidentiality of data transmitted using the <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>.</source>
          <target state="translated">認証されたストリームを認証、署名、データを提供し、役立つ暗号化サービスを使用して送信されるデータの機密性と整合性を維持、<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The security protocol implemented by a class that derives from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> together with the security protocols supported on the client and server will determine the security features that are available to an application.</source>
          <target state="translated">派生したクラスによって実装されたセキュリティ プロトコル<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>セキュリティと共にクライアントとサーバーでサポートされているプロトコルがアプリケーションに備わっているセキュリティ機能を決定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> classes inherit from <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> and implement the Negotiate and Secure Sockets Layer security protocols, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph>クラスから継承<ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>し、それぞれ、Negotiate、および Secure Sockets Layer のセキュリティ プロトコルを実装します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following code example demonstrates displaying the properties of an authenticated stream.</source>
          <target state="translated">次のコード例では、認証されたストリームのプロパティを表示するを示します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following members must be overridden in a derived class: <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>, and <ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>.</source>
          <target state="translated">次のメンバーは、派生クラスでオーバーライドする必要があります: <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>、 <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>、 <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>、 <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>、および<ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> がデータの送受信に使用する <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether closing this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> object also closes <bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> オブジェクトを閉じると、<bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept> も閉じられるかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream.</source>
          <target state="translated">指定すると<ph id="ph1">`true`</ph>の<ph id="ph2">`leaveStreamOpen`</ph>パラメーター、閉じる、<ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>に影響を与えません、<ph id="ph4">`innerStream`</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This constructor is provided for implementers of authenticated streams, and can be called only by classes that are derived from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">このコンス トラクターは、認証されたストリームの実装を提供しから派生したクラスによってのみ呼び出すことができる<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph> が等価です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Gets the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> がデータの送受信に使用するストリームを取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> can use this property to access the stream passed to the <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>.</source>
          <target state="translated">継承するクラス<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>に渡されたストリームにアクセスするこのプロパティを使用することができます、<ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">認証が成功したかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">認証が成功した場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The methods called to perform authentication are defined in the classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">継承するクラスに認証を実行すると呼ばれるメソッドが定義されている<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値の表示を示しています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether data sent using this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> is encrypted.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> を使用して送信するデータが暗号化されるかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</source>
          <target state="translated">暗号化したデータのプライバシーの保護を利用します。つまり、ことデータは、転送中は、サード パーティが解読できないことを確認するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値の表示を示しています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both server and client have been authenticated.</source>
          <target state="translated">サーバーとクライアントの両方が認証されているかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client and server have been authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">クライアントとサーバーが認証されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Not all security protocols support mutual authentication.</source>
          <target state="translated">すべてのセキュリティ プロトコルは、相互認証をサポートします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>To determine whether mutual authentication is supported by the security protocol implemented in a class that inherits from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>, check the class documentation.</source>
          <target state="translated">継承するクラスで実装されたセキュリティ プロトコルで相互認証がサポートされているかどうかを判断する<ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>クラスのドキュメントを確認します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値の表示を示しています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection was authenticated as the server.</source>
          <target state="translated">接続のローカル側がサーバーとして認証されたかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was authenticated as the server side of a client-server authenticated connection; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the local endpoint was authenticated as the client.</source>
          <target state="translated">ローカル エンドポイントが、認証されたクライアント サーバー接続のサーバー側として認証されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。ローカル エンドポイントがクライアントとして認証されている場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Most security protocols used for client-server authentication define specific behavior and requirements for supplying credentials for authentication based on whether you are the client or the server.</source>
          <target state="translated">クライアントとサーバー認証に使用されるセキュリティ プロトコルのほとんどは、特定の動作と、クライアントまたはサーバーかどうかに基づく認証の資格情報を提供するための要件を定義します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値の表示を示しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">このストリームを使用して送信されるデータに署名するかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">データの送信前に署名する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">データの整合性を保護することにデータの署名つまり、データが転送中に改ざんされているかどうかを決定する受信者と役に立ちます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">次のコード例では、このプロパティの値の表示を示しています。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>Gets whether the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data has been left open.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> がデータの送受信に使用するストリームが、開いたままになっているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner stream has been left open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">内部ストリームが開いたままになっている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`true`</ph>, the stream passed to the constructor of this class will not be closed after the instance of this class is closed.</source>
          <target state="translated">設定すると<ph id="ph1">`true`</ph>、このクラスのインスタンスが閉じられた後、このクラスのコンス トラクターに渡されたストリームは閉じられません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`false`</ph>, closing the instance of this class will also close the underlined transport stream.</source>
          <target state="translated">設定すると<ph id="ph1">`false`</ph>、このクラスのインスタンスを閉じると、基になるトランスポート ストリームも閉じられます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>The default value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このプロパティの既定値は <ph id="ph1">`false`</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>