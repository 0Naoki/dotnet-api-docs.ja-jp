<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8bf23efccb1474bd1dc46b2b65868f679fc3e78" />
    <Meta Name="ms.sourcegitcommit" Value="1699faabfa691bcec226e9c5879fdae10a86b548" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/26/2018" />
    <Meta Name="ms.locfileid" Value="47189160" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d2e0d-101">Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2e0d-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-102">SSL プロトコルは、機密性と整合性チェックを使用して送信されるメッセージを提供するのに役立ちます、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-103">によって提供される SSL 接続を<xref:System.Net.Security.SslStream>、通信するクライアントとサーバー間で機密情報をする場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="d2e0d-104">使用して、<xref:System.Net.Security.SslStream>から読み取って、ネットワーク上転送中になっている情報を改ざんできないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="d2e0d-105"><xref:System.Net.Security.SslStream>インスタンスを作成するときにストリームを使用してデータを送信する、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-106">指定するオプションがあるこの基になるストリームを指定するときに閉じるかどうか、<xref:System.Net.Security.SslStream>も基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="d2e0d-107">通常、<xref:System.Net.Security.SslStream>クラスで使用されます、<xref:System.Net.Sockets.TcpClient>と<xref:System.Net.Sockets.TcpListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="d2e0d-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A>メソッドを提供、<xref:System.Net.Sockets.NetworkStream>で使用するために適した、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="d2e0d-109">作成した後、<xref:System.Net.Security.SslStream>サーバーと、必要に応じて、クライアントを認証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="d2e0d-110">サーバーが、X509 を提供する必要があります証明書をその id を確立しするクライアントもように要求できます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="d2e0d-111">使用して情報を送信する前に認証を実行する必要があります、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-112">クライアントは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドで、認証が完了するまでブロック、または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッドで、認証が完了するを待つをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="d2e0d-113">サーバーは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="d2e0d-114">クライアントとサーバーの両方が認証を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="d2e0d-115">認証は、セキュリティ サポート プロバイダー (SSPI) チャンネル プロバイダーによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="d2e0d-116">クライアントに指定することで、サーバーの証明書の検証を制御する機会を与えるが、<xref:System.Net.Security.RemoteCertificateValidationCallback>デリゲートを作成するとき、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-117">サーバーを指定して検証を制御できますも、<xref:System.Net.Security.RemoteCertificateValidationCallback>を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="d2e0d-118">デリゲートによって参照されるメソッドには、リモート パーティの証明書と証明書の検証中に発生した SSPI エラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="d2e0d-119">サーバーは、デリゲートを指定した場合に、デリゲートのメソッドが、サーバーがクライアント認証を要求するかどうかに関係なく呼び出されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="d2e0d-120">サーバーがクライアント認証を要求していない場合、サーバーのデリゲート メソッドは、null の証明書と証明書のエラーの空の配列を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="d2e0d-121">サーバーは、クライアント認証を必要とする場合、クライアントは、認証用の 1 つまたは複数の証明書を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="d2e0d-122">クライアントには、複数の証明書がある場合は、クライアントができる、<xref:System.Net.Security.LocalCertificateSelectionCallback>デリゲートをサーバーの正しい証明書を選択します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="d2e0d-123">クライアントの証明書は、現在のユーザーの"My"証明書ストアである必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="d2e0d-124">証明書を使用してクライアント認証はサポートされていません、 <xref:System.Security.Authentication.SslProtocols.Ssl2> (バージョン 2 を SSL) プロトコル。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="d2e0d-125">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、および<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-126">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d2e0d-127">サーバー (および必要に応じて、クライアント) の id が確立されている、SSL ハンドシェイクとも呼ばれる、認証プロセスが成功すると、および<xref:System.Net.Security.SslStream>メッセージを交換するクライアントとサーバーで使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="d2e0d-128">情報を送受信する前に、クライアントとサーバーくださいセキュリティ サービスとレベルによって提供される、<xref:System.Net.Security.SslStream>プロトコル、アルゴリズム、および選択の強度が整合性の要件を満たすかどうかを判断して機密性。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="d2e0d-129">現在の設定が十分でない場合、ストリームは閉じする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="d2e0d-130">によって提供されるセキュリティ サービスを確認することができます、<xref:System.Net.Security.SslStream>を使用して、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="d2e0d-131">次の表では、認証、暗号化、およびデータの署名に使用される暗号化の設定を報告する要素を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="d2e0d-132">要素</span><span class="sxs-lookup"><span data-stu-id="d2e0d-132">Element</span></span>|<span data-ttu-id="d2e0d-133">メンバー</span><span class="sxs-lookup"><span data-stu-id="d2e0d-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="d2e0d-134">サーバーおよび必要に応じて、クライアントを認証するために使用するセキュリティ プロトコル。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="d2e0d-135"><xref:System.Net.Security.SslStream.SslProtocol%2A>プロパティと関連付けられている<xref:System.Security.Authentication.SslProtocols>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="d2e0d-136">キー交換アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-136">The key exchange algorithm.</span></span>|<span data-ttu-id="d2e0d-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.ExchangeAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d2e0d-138">メッセージの整合性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-138">The message integrity algorithm.</span></span>|<span data-ttu-id="d2e0d-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.HashAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d2e0d-140">メッセージの機密性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="d2e0d-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.CipherAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d2e0d-142">選択したアルゴリズムの強みです。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="d2e0d-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>、 <xref:System.Net.Security.SslStream.HashStrength%2A>、および<xref:System.Net.Security.SslStream.CipherStrength%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="d2e0d-144">認証が成功した後、同期を使用してデータを送信することができます<xref:System.Net.Security.SslStream.Write%2A>または非同期<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="d2e0d-145">同期を使用してデータを受信する<xref:System.Net.Security.SslStream.Read%2A>または非同期<xref:System.Net.Security.SslStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="d2e0d-146">指定した場合、<xref:System.Net.Security.SslStream.%23ctor%2A>を基になるストリームが開いたままにする必要がありますが終わったら、そのストリームを閉じるそれを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-147">かどうか、アプリケーションを作成する、<xref:System.Net.Security.SslStream>オブジェクトは、通常のユーザーの資格情報で実行、アプリケーションでは、アクセス許可が明示的に指定されてユーザーにこれを行う場合を除き、ローカル コンピューター ストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="d2e0d-148"><xref:System.Net.Security.SslStream> 前提と他のタイムアウト<xref:System.IO.IOException>内部ストリームからスローされたときに扱われます致命的、呼び出し元によって。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="d2e0d-149">再利用、<xref:System.Net.Security.SslStream>後タイムアウトはガベージを返します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="d2e0d-150">アプリケーションにする必要があります<xref:System.IO.Stream.Close%2A>、<xref:System.Net.Security.SslStream>このような場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="d2e0d-151">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="d2e0d-152">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの Api を介して TLS/SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションは、既定でセキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="d2e0d-153">開発者は、RC4 サービスを使用した既存 SSL3 サービスまたは TLS 相互運用性を維持するためにこの動作を無効にすることがあります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="d2e0d-154">[この記事で](https://support.microsoft.com/kb/3069494)新しい動作を無効にするために、コードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="d2e0d-155">.NET Framework 4.7 SslStreams TLS のバージョンを指定しないが、システムの既定値として定義されている TLS のバージョンを使用する認証メソッドの新しいオーバー ロードを追加します[SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="d2e0d-156">TLS のバージョンのベスト プラクティスの変化に応じて、時間の経過と共に、既定値を後で変更できる方法として、アプリでこれらのメソッドを使用してリビルドして、アプリを再デプロイする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="d2e0d-157">参照してください[トランスポート層セキュリティ (TLS) のベスト プラクティスは、.NET Framework で](~/docs/framework/network-programming/tls.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-158">作成する次のコード例に示します、<xref:System.Net.Sockets.TcpListener>を使用して、<xref:System.Net.Security.SslStream>クライアントと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="d2e0d-159">作成する次のコード例に示します、<xref:System.Net.Sockets.TcpClient>を使用して、<xref:System.Net.Security.SslStream>サーバーと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-160">
            <see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-161">防ぐために、<xref:System.Net.Security.SslStream>から指定したストリームを閉じると、使用して、<xref:System.Net.Security.SslStream.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="d2e0d-162">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-163">
            <see cref="T:System.Net.Security.SslStream" /> を指定して <see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-164">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d2e0d-165">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-166">
            <paramref name="innerStream" /> が読み取り可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-166">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="d2e0d-167">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-167">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-168">
            <paramref name="innerStream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-168">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-169">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-169">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d2e0d-170">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-170">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-171">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-171">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="d2e0d-172">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="d2e0d-173">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="d2e0d-174">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-174">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-175">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-176">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d2e0d-177">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d2e0d-178">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-179">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-180">
            <paramref name="innerStream" /> が読み取り可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-180">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="d2e0d-181">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-181">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-182">
            <paramref name="innerStream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-182">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-183">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-183">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d2e0d-184">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-184">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-185">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-185">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="d2e0d-186">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="d2e0d-187">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="d2e0d-188">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-188">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="d2e0d-189">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-190">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-191">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d2e0d-192">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返された Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="d2e0d-193">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="d2e0d-194">セキュリティ プロトコルと暗号化アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="d2e0d-195">メソッドを使用すると、選択した暗号アルゴリズムとの強度が、アプリケーションのための十分なかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="d2e0d-196">場合は、メソッドが返す、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="d2e0d-197">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d2e0d-198">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-199">フレームワークでは、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="d2e0d-200">最初の要素は、Framework は、SSL セッションを再利用しようとすると、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (1 つないかどうか)、または匿名のセッションを再利用しようと<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-201">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-202">次のコード例を作成、<xref:System.Net.Security.SslStream>し、認証のクライアント部分を開始します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-203">
            <paramref name="innerStream" /> が読み取り可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-203">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="d2e0d-204">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-204">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-205">
            <paramref name="innerStream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-205">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-206">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-206">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d2e0d-207">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-207">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-208">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-208">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="d2e0d-209">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="d2e0d-210">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="d2e0d-211">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-211">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="d2e0d-212">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="d2e0d-213">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-214">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-215">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d2e0d-216">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返された Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="d2e0d-217">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="d2e0d-218">セキュリティ プロトコルと暗号化アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="d2e0d-219">メソッドを使用すると、選択した暗号アルゴリズムとの強度が、アプリケーションのための十分なかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="d2e0d-220">場合は、メソッドが返す、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="d2e0d-221">`userCertificateSelectionCallback`デリゲートは、アプリケーションが複数の証明書と証明書を動的に選択する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="d2e0d-222">"MY"ストアに証明書は、デリゲートが呼び出されたメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-223">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d2e0d-224">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-225">フレームワークでは、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="d2e0d-226">フレームワークが P:System.Net.HttpWebRequest.ClientCertificates (存在する場合) の最初の要素を使用して、SSL セッションを再利用しようとすると、または空の P:System.Net.HttpWebRequest.ClientCertificates がある場合は、匿名のセッションを再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-227">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="d2e0d-228">この例が示されている例の一部、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-229">
            <paramref name="innerStream" /> が読み取り可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-229">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="d2e0d-230">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-230">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-231">
            <paramref name="innerStream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-231">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-232">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-232">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d2e0d-233">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-233">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-234">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-234">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="d2e0d-235">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="d2e0d-236">
            <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="d2e0d-237">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-237">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="d2e0d-238">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="d2e0d-239">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <param name="encryptionPolicy">
          <span data-ttu-id="d2e0d-240">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-241">指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-242">Null 暗号の使用が必要なときに、`encryptionPolicy`にパラメーターが設定されている<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-243">
            <paramref name="innerStream" /> が読み取り可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-243">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="d2e0d-244">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-244">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-245">
            <paramref name="innerStream" /> が書き込み可能ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-245">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
          <span data-ttu-id="d2e0d-246">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-246">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-247">
            <paramref name="encryptionPolicy" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-247">
              <paramref name="encryptionPolicy" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-248">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-248">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d2e0d-249">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-249">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-250">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-250">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-251">クライアントとサーバー間の接続のクライアント側を認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-251">Authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-252">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-253">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d2e0d-254">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-254"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="d2e0d-255">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d2e0d-256">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d2e0d-257">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-258">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-259">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-260">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-261">
            <paramref name="targetHost" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-261">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-262">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-262">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-263">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-263">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-264">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-264">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-265">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-266">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-266">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-267">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-267">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-268">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-268">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-269">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-270">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-271">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-272">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="d2e0d-273">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-274">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-275">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-276">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-277">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-278">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-279">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-280">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-281">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-282">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-283">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="d2e0d-284">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-284">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-285">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-286">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-287">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-288">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-289">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-290">非同期操作としてクライアントとサーバー間の接続でクライアント側を認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-291">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-292">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-293">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-293">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="d2e0d-294">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-294">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d2e0d-295">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-295"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="d2e0d-296">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-296">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d2e0d-297">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-297">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d2e0d-298">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-298">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-299">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-299">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-300">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-300">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-301">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-301">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-302">
            <paramref name="targetHost" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-302">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-303">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-303">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-304">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-304">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-305">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-305">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-306">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-306">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-307">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-307">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-308">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-308">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-309">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-309">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-310">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-310">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-311">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-311">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-312">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-312">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-313">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-313">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="d2e0d-314">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-314">The authentication process uses the specified certificate collection and the system default SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-315">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-315">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-316">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-316">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-317">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-317">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-318">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-318">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-319">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-319">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-320">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-320">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-321">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-321">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-322">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-322">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-323">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-323">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-324">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-324">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-325">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-325">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="d2e0d-326">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-326">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-327">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="d2e0d-328">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-329">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-329">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-330">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-330">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-331">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-331">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-332">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-332">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-333">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-333">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-334">サーバーによって呼び出され、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-334">Called by servers to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-335">サーバーの認証に使用する証明書。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-335">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-336">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-336">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d2e0d-337">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-337"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d2e0d-338">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-338">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d2e0d-339">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-339">This method blocks until the operation completes.</span></span> <span data-ttu-id="d2e0d-340">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-340">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-341">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-341">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-342">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-342">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-343">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-343">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-344">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-344">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-345">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-345">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-346">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-346">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-347">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-347">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-348">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-348">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-349">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-349">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-350">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-351">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-351">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-352">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-352">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-353">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-353">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-354">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-354">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-355">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-355">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-356">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-356">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-357">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-357">This method blocks until the operation completes.</span></span> <span data-ttu-id="d2e0d-358">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-358">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-359">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-359">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-360">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-360">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-361">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-361">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-362">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-362">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-363">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-363">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-364">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-364">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-365">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-365">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-366">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-366">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-367">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-367">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-368">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-368">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-369">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-369">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-370">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-370">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-371">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-371">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-372">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-372">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-373">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-373">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-374">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-374">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-375">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-375">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-376">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-376">This method blocks until the operation completes.</span></span> <span data-ttu-id="d2e0d-377">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-377">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-378">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-378">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-379">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-379">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-380">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-380">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-381">
            <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-381">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-382">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-382">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-383">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-383">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-384">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-384">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-385">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-385">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-386">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-386">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-387">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-387">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-388">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-388">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-389">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-389">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-390">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-390">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-391">サーバーの認証に使用する証明書。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-391">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-392">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-392">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-393">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-393">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="d2e0d-394">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-394">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-395">このメソッドが使用して認証<xref:System.Security.Authentication.SslProtocols.Default>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-395">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="d2e0d-396">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-396">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d2e0d-397">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-397">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d2e0d-398">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-398">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-399">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-399">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-400">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-400">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-401">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-401">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-402">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-402">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-403">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-403">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-404">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-404">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-405">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-405">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-406">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-406">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-407">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-407">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-408">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-408">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-409">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-409">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-410">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-410">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-411">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-411">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-412">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-412">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-413">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-413">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-414">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-415">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-415">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-416">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-416">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-417">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-417">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-418">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-418">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-419">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-419">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-420">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-420">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-421">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-421">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-422">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-422">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-423">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-423">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="d2e0d-424">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-424">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-425">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-425">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-426">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-426">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-427">クライアントとサーバー間の接続でクライアント側を認証する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-427">Begins an operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-428">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-428">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="d2e0d-429">認証が完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-429">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-430">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-430">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-431">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-431">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-432">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-432">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-433">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-433">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-434">クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-434">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-435">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-435">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d2e0d-436">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-436"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="d2e0d-437">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-437">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="d2e0d-438">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-438">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d2e0d-439">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-439">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d2e0d-440">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-440">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-441">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-441">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-442">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-442">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-443">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-443">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-444">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-444">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-445">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-445">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-446">
            <paramref name="targetHost" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-446">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-447">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-447">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-448">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-449">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-449">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-450">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-450">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-451">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-451">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-452">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-452">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-453">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-453">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-454">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-454">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-455">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-455">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-456">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-456">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-457">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-457">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-458">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-458">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-459">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-459">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-460">指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-460">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-461">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-461">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-462">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-462">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d2e0d-463">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-463">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d2e0d-464">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-464">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-465">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-465">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-466">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-466">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-467">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-467">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-468">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-468">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-469">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-469">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-470">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-470">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-471">
            <paramref name="targetHost" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-471">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-472">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-472">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-473">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-473">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-474">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-474">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-475">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-475">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-476">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-476">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-477">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-477">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-478">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-478">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="d2e0d-479">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-479">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="d2e0d-480">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-480">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-481">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-481">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-482">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-482">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-483">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-483">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-484">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-484">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-485">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-485">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-486">クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-486">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-487">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-487">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-488">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-488">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d2e0d-489">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-489">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d2e0d-490">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-490">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-491">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-491">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-492">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-492">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-493">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-493">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-494">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-494">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-495">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-495">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2e0d-496">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-496">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-497">
            <paramref name="targetHost" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-497">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-498">
            <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-498">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-499">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-499">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-500">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-500">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-501">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-501">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-502">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-502">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-503">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-503">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-504">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-504">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-505">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-505">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-506">クライアントとサーバー間の接続のサーバー側の認証を処理する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-506">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-507">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-507">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="d2e0d-508">認証が完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-508">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-509">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-509">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-510">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-510">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-511">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-511">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-512">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-512">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-513">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-513">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-514">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-514">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d2e0d-515">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-515"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d2e0d-516">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-516">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d2e0d-517">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-517">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d2e0d-518">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-518">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-519">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-519">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-520">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-520">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-521">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-521">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-522">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-522">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-523">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-523">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-524">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-524">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-525">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-525">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-526">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-526">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-527">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-527">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-528">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-528">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-529">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-529">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-530">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-530">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-531">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-531">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-532">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-532">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-533">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-533">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-534">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-534">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-535">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-535">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-536">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-536">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-537">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-537">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-538">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-538">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-539">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-539">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-540">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-540">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-541">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-541">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-542">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-542">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="d2e0d-543">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-543">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-544">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-544">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-545">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-545">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-546">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-546">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-547">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-547">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-548">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-548">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-549">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-549">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-550">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-550">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-551">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-551">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-552">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-552">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-553">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-553">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-554">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-554">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-555">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-555">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-556">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-556">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-557">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-557">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="d2e0d-558">サーバーの認証に使用される X509Certificate。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-558">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="d2e0d-559">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-559">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="d2e0d-560">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-560">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="d2e0d-561">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-561">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="d2e0d-562">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-562">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-563">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-563">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-564">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-564">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="d2e0d-565">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-565">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-566">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-566">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-567">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-567">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d2e0d-568">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-568">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="d2e0d-569">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-569">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-570">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-570">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-571">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-571">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d2e0d-572">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-572">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-573">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-573">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-574">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-574">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-575">
            <paramref name="serverCertificate" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-575">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-576">
            <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-576">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-577">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-577">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-578">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-578">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="d2e0d-579">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-579">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-580">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-580">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="d2e0d-581">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-581">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-582">認証が既に実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-582">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-583">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-583">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d2e0d-584">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-584">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d2e0d-585">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-585">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d2e0d-586">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-586">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2e0d-587">ストリームから読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-587">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-588">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-588">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-589">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-589">A user-defined object that contains information about the read operation.</span>
          </span>
          <span data-ttu-id="d2e0d-590">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-590">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-591">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-591">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-592">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-592">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-593">暗号化や署名が有効になっている場合、読み取り操作はの基になるストリームからデータを読み取り、データの整合性をチェックや、暗号化を解除します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-593">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="d2e0d-594">呼び出すことによって、非同期読み取り操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-594">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="d2e0d-595">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-595">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d2e0d-596">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-596">This method does not block while the operation completes.</span></span> <span data-ttu-id="d2e0d-597">操作が完了するまでにブロックするを使用して、<xref:System.Net.Security.SslStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-597">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="d2e0d-598">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d2e0d-598">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d2e0d-599"><xref:System.Net.Security.SslStream>クラスは、複数の同時読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-599">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="d2e0d-600">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-600">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-601">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-601">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-602">次のコード例では、非同期読み取り操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-602">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="d2e0d-603">読み取りが完了すると、次のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-603">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-604">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-604">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-605">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-605">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="d2e0d-606">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-606">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="d2e0d-607">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-607">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-608">
            <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-608">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-609">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-609">The read operation failed.</span>
          </span>
          <span data-ttu-id="d2e0d-610">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-610">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-611">暗号化が使用されていますが、データを復号化できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-611">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-612">既に実行中の読み取り操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-612">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-613">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-613">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-614">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-614">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d2e0d-615">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-615">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d2e0d-616">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-616">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2e0d-617">
            <c>buffer</c> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-617">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="d2e0d-618">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-618">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="d2e0d-619">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-619">A user-defined object that contains information about the write operation.</span>
          </span>
          <span data-ttu-id="d2e0d-620">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-620">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-621">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-621">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-622">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-622">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2e0d-623">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-623">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-624">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-624">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-625">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-625">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="d2e0d-626">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-626">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="d2e0d-627">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-627">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-628">
            <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-628">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-629">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-629">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-630">既に実行中の書き込み操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-630">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-631">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-631">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-632">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-632">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-633">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-633">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-634">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-634">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-635">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します<xref:System.IO.Stream.CanRead%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-635">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d2e0d-636">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-636">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-637">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-637">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-638">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-638">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-639">このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-639">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-640">位置を設定しないで、<xref:System.Net.Security.SslStream>オブジェクトまたはその基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-640">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="d2e0d-641">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-641">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-642">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-642">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-643">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-643">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-644">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.CanTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-644">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d2e0d-645">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-645">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-646">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-646">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-647">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-647">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-648">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-648">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-649">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します<xref:System.IO.Stream.CanWrite%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-649">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d2e0d-650">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-650">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-651">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-651">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-652">証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-652">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-653">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-653">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-654">証明書失効リストには、発行元によって失効した証明書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-654">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="d2e0d-655">リストを照合パフォーマンスに影響を与えますが、アプリケーションのセキュリティが向上します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-655">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-656">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-656">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-657">この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-657">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-658">
            <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-658">A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-659">値<xref:System.Security.Authentication.CipherAlgorithmType.Null>が必要です、<xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティと、<xref:System.Net.Security.EncryptionPolicy.NoEncryption>構築に使用される列挙値、<xref:System.Net.Security.SslStream>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-659">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] <span data-ttu-id="d2e0d-660">[!INCLUDE[winxp](~/includes/winxp-md.md)]をサポートしていない、<xref:System.Security.Authentication.CipherAlgorithmType.Null>値。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-660"> and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="d2e0d-661">場合にも、<xref:System.Security.Authentication.CipherAlgorithmType.Null>構築に使用される値、<xref:System.Net.Security.SslStream>インスタンス、<xref:System.Net.Security.EncryptionPolicy>プロパティになります<xref:System.Security.Authentication.CipherAlgorithmType.None>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-661">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="d2e0d-662"><xref:System.Security.Authentication.CipherAlgorithmType.Null> Windows Vista 以降でのみ値が返されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-662">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-663">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-663">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-664">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-664">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-665">この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-665">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-666">アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-666">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-667">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-667">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d2e0d-668">このプロパティは、次の値のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-668">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="d2e0d-669">0</span><span class="sxs-lookup"><span data-stu-id="d2e0d-669">0</span></span>  
  
-   <span data-ttu-id="d2e0d-670">40</span><span class="sxs-lookup"><span data-stu-id="d2e0d-670">40</span></span>  
  
-   <span data-ttu-id="d2e0d-671">56</span><span class="sxs-lookup"><span data-stu-id="d2e0d-671">56</span></span>  
  
-   <span data-ttu-id="d2e0d-672">80</span><span class="sxs-lookup"><span data-stu-id="d2e0d-672">80</span></span>  
  
-   <span data-ttu-id="d2e0d-673">128</span><span class="sxs-lookup"><span data-stu-id="d2e0d-673">128</span></span>  
  
-   <span data-ttu-id="d2e0d-674">168</span><span class="sxs-lookup"><span data-stu-id="d2e0d-674">168</span></span>  
  
-   <span data-ttu-id="d2e0d-675">192</span><span class="sxs-lookup"><span data-stu-id="d2e0d-675">192</span></span>  
  
-   <span data-ttu-id="d2e0d-676">256</span><span class="sxs-lookup"><span data-stu-id="d2e0d-676">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-677">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-677">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d2e0d-678">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-678">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-679">
            <see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-679">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-680">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-680">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d2e0d-681">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-681">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d2e0d-682"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-682"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d2e0d-683">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Security.SslStream>参照。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-683">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="d2e0d-684">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-684">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d2e0d-685">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d2e0d-685">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="d2e0d-686">オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d2e0d-686">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="d2e0d-687">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d2e0d-687">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="d2e0d-688">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d2e0d-688">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d2e0d-689">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-689">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-690">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-690">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-691">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-691">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="d2e0d-692">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-692">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-693">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-693">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-694">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-694">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-695">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-695">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d2e0d-696">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-696">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-697">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-697">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-698">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-698">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-699">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-699">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-700">完了する保留中のサーバー認証がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-700">There is no pending server authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d2e0d-701">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-701">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-702">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-702">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-703">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-703">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="d2e0d-704">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-704">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d2e0d-705">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-705">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d2e0d-706">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-706">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d2e0d-707">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-707">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d2e0d-708">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-708">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-709">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-709">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-710">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-710">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="d2e0d-711">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-711">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-712">完了する保留中のクライアント認証がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-712">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d2e0d-713">
            <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-713">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-714">
            <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-714">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-715">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-715">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-716">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-716">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="d2e0d-717">この操作を同期的に実行するには、使用、<xref:System.Net.Security.SslStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-717">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="d2e0d-718">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-718">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-719">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-719">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-720">次のコード例では、読み取り操作の非同期の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-720">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-721">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-721">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-722">
            <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-722">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-723">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-723">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-724">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-724">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d2e0d-725">
            <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-725">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-726">
            <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-726">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-727">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-727">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="d2e0d-728">アプリケーションは、正常に認証が完了するまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-728">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-729">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-729">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d2e0d-730">この操作を同期的に実行するには、使用、<xref:System.Net.Security.SslStream.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-730">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-731">次のコード例では、非同期書き込み操作の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-731">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-732">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-732">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-733">
            <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-733">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-734">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-734">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-735">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-735">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-736">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-736">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-737">このメソッドは<xref:System.IO.Stream.Flush%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-737">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-738">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-738">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-739">メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-739">Gets the algorithm used for generating message authentication codes (MACs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-740">
            <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-740">A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-741">メッセージ認証アルゴリズムは、メッセージのハッシュと改ざんや偽造の検出に使用される署名を生成します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-741">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-742">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-742">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-743">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-743">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-744">このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-744">Gets a value that identifies the strength of the hash algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-745">
            <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-745">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span>
          </span>
          <span data-ttu-id="d2e0d-746">有効値は 128 または 160 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-746">Valid values are 128 or 160.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-747">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-747">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-748">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-748">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-749">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-749">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-750">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-750">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-751">クライアントが呼び出すことによって認証、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-751">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="d2e0d-752">サーバーを呼び出すことによって認証、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-752">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-753">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-753">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-754">この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-754">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-755">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-755">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-756">暗号化は、データのプライバシーを保護すること、つまり役に立つことデータは、転送中は、サード パーティが解読できないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-756">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-757">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-757">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-758">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-758">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-759">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-759">
              <see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-760">相互認証は、サーバー、クライアント認証証明書を提供する必要が生じると、サーバーによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-760">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-761">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-761">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-762">この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-762">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-763">ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-763">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-764">このプロパティが返されますかどうか、認証に失敗しましたまたは発生しなかった、`false`します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-764">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="d2e0d-765">サーバーで、認証に呼び出し、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-765">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-766">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-766">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-767">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-767">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-768">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-768">
              <see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-769">署名によって、データの整合性を保護するデータを namely やすく、受信者が、データが転送中に改ざんされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-769">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-770">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-770">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-771">この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-771">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-772">
            <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-772">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-773">このプロパティの値が<xref:System.Security.Authentication.ExchangeAlgorithmType.None>まで、認証が行われます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-773">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d2e0d-774">キー交換アルゴリズムは、共有キーを生成するための情報を保護します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-774">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-775">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-775">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-776">このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-776">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-777">
            <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-777">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-778">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-778">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d2e0d-779">一般的なシナリオではこのプロパティの値は、次のいずれか。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-779">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="d2e0d-780">512</span><span class="sxs-lookup"><span data-stu-id="d2e0d-780">512</span></span>  
  
-   <span data-ttu-id="d2e0d-781">768</span><span class="sxs-lookup"><span data-stu-id="d2e0d-781">768</span></span>  
  
-   <span data-ttu-id="d2e0d-782">1024</span><span class="sxs-lookup"><span data-stu-id="d2e0d-782">1024</span></span>  
  
-   <span data-ttu-id="d2e0d-783">2048</span><span class="sxs-lookup"><span data-stu-id="d2e0d-783">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-784">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-784">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-785">基になるストリームの長さを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-785">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-786">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-786">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="d2e0d-787">基になるストリームの長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-787">The length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-788">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.Length%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-788">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="d2e0d-789">基になるストリームがシーク可能でない場合、このメソッドは通常は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-789">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="d2e0d-790">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-790">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-791">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-791">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-792">ローカル エンドポイントの認証に使用する証明書を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-792">Gets the certificate used to authenticate the local endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-793">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-793">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2e0d-794">次のコード例では、このプロパティによって返される証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-794">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-795">認証に失敗したか、認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-795">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-796">基になるストリーム内の現在位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-796">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-797">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-797">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="d2e0d-798">基になるストリームの現在の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-798">The current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-799">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.Position%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-799">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="d2e0d-800">基になるストリームがシーク可能でない場合、このメソッドは通常は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-800">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="d2e0d-801">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-801">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-802">このプロパティの設定は、サポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-802">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="d2e0d-803">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-803">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-804">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-804">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d2e0d-805">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-805">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d2e0d-806">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-806">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2e0d-807">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-807">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-808">このストリームからデータを読み取り、指定した配列に格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-808">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-809">読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-809">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span>
          </span>
          <span data-ttu-id="d2e0d-810">読み取るデータがこれ以上存在しない場合は 0 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-810">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-811">読み取る最大`count`ストリームからバイトに保存`buffer`から始まる`offset`します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-811">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="d2e0d-812">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-812">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="d2e0d-813">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-813">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-814">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-814">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d2e0d-815">この操作を非同期的に実行するには使用、<xref:System.Net.Security.SslStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-815">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-816">次のコード例に示しますからの読み取り、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-816">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-817">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-817">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-818">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-818">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="d2e0d-819">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-819">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="d2e0d-820">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-820">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-821">
            <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-821">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-822">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-822">The read operation failed.</span>
          </span>
          <span data-ttu-id="d2e0d-823">内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-823">Check the inner exception, if present to determine the cause of the failure.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-824">既に実行中の読み取り操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-824">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-825">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-825">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-826">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-826">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-827">読み取り操作がブロックしてデータを待機する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-827">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-828">同期読み取り操作が失敗するまでの時間を指定する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-828">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-829">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.ReadTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-829">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="d2e0d-830">このプロパティを設定するときに、<xref:System.IO.Stream.ReadTimeout%2A>基になるストリームの値が指定された値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-830">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="d2e0d-831">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.SslStream.ReadTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では読み取ることの操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-831">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-832">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-832">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-833">リモート エンドポイントの認証に使用する証明書を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-833">Gets the certificate used to authenticate the remote endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-834">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-834">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2e0d-835">次のコード例では、このプロパティによって返される証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-835">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-836">認証に失敗したか、認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-836">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="d2e0d-837">この値は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-837">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="d2e0d-838">この値は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-838">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-839">
            <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-839">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-840">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-840">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-841">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-841">Do not call this method.</span></span> <span data-ttu-id="d2e0d-842">関数は、継承されますでサポートされていない、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-842">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-843">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-843">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d2e0d-844">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-844">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-845">基になるストリームの長さを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-845">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-846">このメソッドは<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>時に指定した基になるストリームでこの<xref:System.Net.Security.SslStream>が作成されました。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-846">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-847">この SslStream を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-847">Shuts down this SslStream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2e0d-848">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-848">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-849">この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-849">Gets a value that indicates the security protocol used to authenticate this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-850">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-850">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-851">サポートされているセキュリティ プロトコルが指定されたときに、<xref:System.Net.Security.SslStream>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-851">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="d2e0d-852">使用してインスタンスを作成する場合、セキュリティ プロトコルがコンス トラクターに渡されなかった、<xref:System.Security.Authentication.SslProtocols.Default>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-852">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="d2e0d-853">クライアントとサーバーでサポートされるプロトコルに基づく認証に使用される実際のプロトコルが選択されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-853">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-854">次の例では、指定したストリームのセキュリティ プロパティが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-854">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-855">拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-855">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-856">拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-856">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="d2e0d-857">統合 Windows 認証と拡張保護</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-857">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-858">このストリームにデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-858">Writes data to this stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d2e0d-859">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-859">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-860">このストリームに指定したデータを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-860">Writes the specified data to this stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-861">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-861">This method blocks while the operation completes.</span></span> <span data-ttu-id="d2e0d-862">使用して、操作が完了するまでのブロックを防ぐため、<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-862">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="d2e0d-863">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-863">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-864">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-864">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d2e0d-865"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-865">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-866">次のコード例に示します認証への書き込み<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-866">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-867">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-867">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-868">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-868">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-869">既に実行中の書き込み操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-869">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-870">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-870">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-871">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-871">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d2e0d-872">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-872">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d2e0d-873">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-873">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2e0d-874">
            <c>buffer</c> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-874">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2e0d-875">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-875">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-876">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-876">This method blocks while the operation completes.</span></span> <span data-ttu-id="d2e0d-877">操作には、操作が完了するまでブロックされないように、完了すると、使用、<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-877">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="d2e0d-878">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-878">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d2e0d-879">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-879">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d2e0d-880"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-880">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2e0d-881">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-881">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2e0d-882">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-882">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="d2e0d-883">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-883">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="d2e0d-884">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-884">-or-</span>
          </span>
          <span data-ttu-id="d2e0d-885">
            <paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-885">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d2e0d-886">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-886">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d2e0d-887">既に実行中の書き込み操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-887">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d2e0d-888">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-888">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2e0d-889">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-889">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2e0d-890">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-890">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2e0d-891">同期書き込み操作が失敗するまでの時間を指定する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2e0d-891">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2e0d-892">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.WriteTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-892">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="d2e0d-893">設定操作で指定された値の設定、<xref:System.IO.Stream.WriteTimeout%2A>基になるストリームの値。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-893">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="d2e0d-894">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.SslStream.WriteTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では書き込み操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-894">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2e0d-895">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="d2e0d-895">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>