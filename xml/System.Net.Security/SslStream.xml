<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="17615-101">Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="17615-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-102">SSL プロトコルは、機密性と整合性チェックを使用して送信されるメッセージを提供するのに役立ちます、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-103">によって提供される、SSL 接続<xref:System.Net.Security.SslStream>、通信して、クライアントとサーバー間で機密情報をする場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="17615-104">使用して、<xref:System.Net.Security.SslStream>から読み取りや、ネットワーク上を転送中にある間に情報が改ざんできないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="17615-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="17615-105"><xref:System.Net.Security.SslStream>インスタンスで作成するときに指定するストリームを使用してデータを転送、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-106">指定するオプションがあるこの基になるストリームを指定するときに終了するかどうか、<xref:System.Net.Security.SslStream>も、基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="17615-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="17615-107">通常、<xref:System.Net.Security.SslStream>クラスが使用されて、<xref:System.Net.Sockets.TcpClient>と<xref:System.Net.Sockets.TcpListener>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="17615-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A>メソッドには、<xref:System.Net.Sockets.NetworkStream>で使用するのに適した、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="17615-109">作成した後、<xref:System.Net.Security.SslStream>サーバーと、必要に応じて、クライアントを認証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="17615-110">X509 を提供する必要があります、サーバー証明書をその id を確立しするクライアントもように要求できます。</span><span class="sxs-lookup"><span data-stu-id="17615-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="17615-111">使用して情報を送信する前に認証を実行する必要があります、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-112">クライアントは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドで、認証が完了するまでブロック、または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッドで、認証が完了するための待機をブロックしません。</span><span class="sxs-lookup"><span data-stu-id="17615-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="17615-113">サーバーは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="17615-114">クライアントとサーバーの両方が認証を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="17615-115">認証は、セキュリティ サポート プロバイダー (SSPI) チャネル プロバイダーによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="17615-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="17615-116">クライアントを指定することで、サーバーの証明書の検証を制御する機会が与えられます、<xref:System.Net.Security.RemoteCertificateValidationCallback>デリゲートを作成するとき、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-117">サーバーでは検証を指定することによっても制御できます、<xref:System.Net.Security.RemoteCertificateValidationCallback>を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="17615-118">デリゲートによって参照されるメソッドには、リモート パーティの証明書および証明書の検証中に発生した SSPI エラーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="17615-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="17615-119">サーバーは、デリゲートを指定した場合、デリゲートのメソッドが呼び出されること、サーバーがクライアント認証を要求するかどうかに関係なくに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="17615-120">サーバーがクライアント認証を要求していない場合、サーバーのデリゲート メソッドは、null の証明書と証明書のエラーの空の配列を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="17615-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="17615-121">サーバーは、クライアント認証を必要とする場合、クライアントは認証用の 1 つまたは複数の証明書を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="17615-122">クライアントが提供できるクライアントに複数の証明書がある場合、<xref:System.Net.Security.LocalCertificateSelectionCallback>デリゲートをサーバーの正しい証明書を選択します。</span><span class="sxs-lookup"><span data-stu-id="17615-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="17615-123">クライアントの証明書は、現在のユーザーの"My"証明書ストアにある必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="17615-124">証明書を使用してクライアント認証はサポートされていません、 <xref:System.Security.Authentication.SslProtocols.Ssl2> SSL バージョン 2 プロトコル。</span><span class="sxs-lookup"><span data-stu-id="17615-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="17615-125">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、および<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-126">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="17615-127">サーバー (および必要に応じて、クライアント) の id を確立、SSL ハンドシェイクとも呼ばれる、認証プロセスが成功した場合、および<xref:System.Net.Security.SslStream>メッセージを交換するクライアントとサーバーで使用できます。</span><span class="sxs-lookup"><span data-stu-id="17615-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="17615-128">情報を送受信する前に、クライアントとサーバーくださいセキュリティ サービスとレベルによって提供される、<xref:System.Net.Security.SslStream>プロトコル、アルゴリズム、およびオン長所が整合性および機密性が実現するための要件を満たしているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="17615-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="17615-129">現在の設定が十分なされていない場合は、ストリームが閉じている必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="17615-130">によって提供されるセキュリティ サービスを確認することができます、<xref:System.Net.Security.SslStream>を使用して、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="17615-131">次の表は、認証、暗号化、およびデータの署名に使用される暗号化の設定を報告する要素を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="17615-132">要素</span><span class="sxs-lookup"><span data-stu-id="17615-132">Element</span></span>|<span data-ttu-id="17615-133">メンバー</span><span class="sxs-lookup"><span data-stu-id="17615-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="17615-134">サーバーと、必要に応じて、クライアントを認証するために使用するセキュリティ プロトコルです。</span><span class="sxs-lookup"><span data-stu-id="17615-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="17615-135"><xref:System.Net.Security.SslStream.SslProtocol%2A>プロパティおよび関連付けられた<xref:System.Security.Authentication.SslProtocols>列挙します。</span><span class="sxs-lookup"><span data-stu-id="17615-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="17615-136">キー交換アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="17615-136">The key exchange algorithm.</span></span>|<span data-ttu-id="17615-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>プロパティおよび関連付けられた<xref:System.Security.Authentication.ExchangeAlgorithmType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="17615-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="17615-138">メッセージの整合性アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="17615-138">The message integrity algorithm.</span></span>|<span data-ttu-id="17615-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A>プロパティおよび関連付けられた<xref:System.Security.Authentication.HashAlgorithmType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="17615-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="17615-140">メッセージの機密性アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="17615-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="17615-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティおよび関連付けられた<xref:System.Security.Authentication.CipherAlgorithmType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="17615-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="17615-142">選択したアルゴリズムの強度です。</span><span class="sxs-lookup"><span data-stu-id="17615-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="17615-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>、 <xref:System.Net.Security.SslStream.HashStrength%2A>、および<xref:System.Net.Security.SslStream.CipherStrength%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="17615-144">認証が成功した後、同期を使用してデータを送信することができます<xref:System.Net.Security.SslStream.Write%2A>または非同期<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="17615-145">同期を使用してデータを受信できる<xref:System.Net.Security.SslStream.Read%2A>または非同期<xref:System.Net.Security.SslStream.BeginRead%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="17615-146">指定した場合、<xref:System.Net.Security.SslStream.%23ctor%2A>基になるストリームを開いたままにすることが完了したら、そのストリームを終了する必要が使用することです。</span><span class="sxs-lookup"><span data-stu-id="17615-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-147">かどうか、アプリケーションを作成する、<xref:System.Net.Security.SslStream>通常のユーザーの資格情報を持つオブジェクトが実行され、アプリケーションはアクセス許可が明示的に指定されてユーザーにこれを行う場合を除き、ローカル コンピューター ストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="17615-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="17615-148"><xref:System.Net.Security.SslStream> いるものと、タイムアウト時間と共に、他の<xref:System.IO.IOException>内部ストリームからスローされた 1 つは処理されます、致命的な呼び出し元によってです。</span><span class="sxs-lookup"><span data-stu-id="17615-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="17615-149">再利用して、<xref:System.Net.Security.SslStream>後、タイムアウト時間はガベージを返します。</span><span class="sxs-lookup"><span data-stu-id="17615-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="17615-150">アプリケーションにする必要があります<xref:System.IO.Stream.Close%2A>、<xref:System.Net.Security.SslStream>このような場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17615-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="17615-151">.NET Framework 4.6 には、安全性の低い暗号およびハッシュ アルゴリズムの接続をブロックする新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17615-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="17615-152">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの Api を介した TLS と SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションでは、既定では、セキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="17615-153">開発者は、既存 SSL3 サービスまたは TLS で RC4 サービスと相互運用性を維持するために、この動作を除外する必要あります。</span><span class="sxs-lookup"><span data-stu-id="17615-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="17615-154">[この記事](https://support.microsoft.com/kb/3069494)新しい動作を無効にするように、コードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="17615-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="17615-155">TLS バージョンを指定しないが、代わりにシステムの既定値として定義されている TLS バージョンを使用する SslStreams を認証するメソッドの新しいオーバー ロードを追加する .NET Framework 4.7 [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)です。</span><span class="sxs-lookup"><span data-stu-id="17615-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="17615-156">後で、長期にわたって TLS バージョンのベスト プラクティスの変更として、既定の設定を変更できる手段として、アプリでこれらのメソッドを使用リビルドして、アプリを再配置する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="17615-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-157">次のコード例で、<xref:System.Net.Sockets.TcpListener>を使用して、<xref:System.Net.Security.SslStream>クライアントと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="17615-157">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="17615-158">次のコード例では、作成するを示します、<xref:System.Net.Sockets.TcpClient>を使用して、<xref:System.Net.Security.SslStream>サーバーと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="17615-158">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-159"><see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-159">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-160">防ぐために、<xref:System.Net.Security.SslStream>から指定したストリームを閉じると、使用して、<xref:System.Net.Security.SslStream.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="17615-160">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17615-161"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-161">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="17615-162"><see cref="T:System.Net.Security.SslStream" /> を指定して <see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-162">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-163">暗号化ポリシーですの構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>を構築するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-163">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="17615-164">暗号化ポリシーが に設定されているときに Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="17615-164">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-165"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-165"><paramref name="innerStream" /> is not readable.</span></span>  
  
 <span data-ttu-id="17615-166">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-166">-or-</span></span>  
  
 <span data-ttu-id="17615-167"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-167"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-168"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-168"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="17615-169">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-169">-or-</span></span>  
  
 <span data-ttu-id="17615-170"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="17615-170"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17615-171"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-171">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="17615-172"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="17615-172">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="17615-173">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-173">This parameter indicates if the inner stream is left open.</span></span></param>
        <summary><span data-ttu-id="17615-174">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-174">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-175">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>に影響を与えません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になったときにします。</span><span class="sxs-lookup"><span data-stu-id="17615-175">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="17615-176">暗号化ポリシーですの構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>を構築するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-176">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="17615-177">暗号化ポリシーが に設定されているときに Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="17615-177">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-178">次のコード例では、このコンス トラクターを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-178">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-179"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-179"><paramref name="innerStream" /> is not readable.</span></span>  
  
 <span data-ttu-id="17615-180">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-180">-or-</span></span>  
  
 <span data-ttu-id="17615-181"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-181"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-182"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-182"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="17615-183">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-183">-or-</span></span>  
  
 <span data-ttu-id="17615-184"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="17615-184"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17615-185"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-185">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="17615-186"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="17615-186">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="17615-187">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-187">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="17615-188">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-188">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <summary><span data-ttu-id="17615-189">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-189">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-190">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>に影響を与えません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になったときにします。</span><span class="sxs-lookup"><span data-stu-id="17615-190">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="17615-191">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返される Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="17615-191">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="17615-192">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="17615-192">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="17615-193">セキュリティ プロトコルおよび暗号アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-193">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="17615-194">メソッドを使用すると、選択した暗号アルゴリズムと長所がアプリケーションのための十分なのかを判断します。</span><span class="sxs-lookup"><span data-stu-id="17615-194">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="17615-195">場合は、メソッドが返す必要があります、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="17615-195">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="17615-196">暗号化ポリシーですの構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>を構築するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-196">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="17615-197">暗号化ポリシーが に設定されているときに Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="17615-197">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-198">フレームワークでは、SSL セッションを作成するときはキャッシュ、可能であれば、新しい要求のキャッシュされているセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="17615-198">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="17615-199">フレームワークでの最初の要素を使用するときに、SSL セッションを再利用する、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (かどうかがある 1 つ)、匿名のセッションを再利用を試みる<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="17615-199">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-200">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-200">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-201">次のコード例を作成、<xref:System.Net.Security.SslStream>し、認証のクライアント部分を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-201">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-202"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-202"><paramref name="innerStream" /> is not readable.</span></span>  
  
 <span data-ttu-id="17615-203">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-203">-or-</span></span>  
  
 <span data-ttu-id="17615-204"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-204"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-205"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-205"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="17615-206">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-206">-or-</span></span>  
  
 <span data-ttu-id="17615-207"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="17615-207"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17615-208"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-208">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="17615-209"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="17615-209">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="17615-210">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-210">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="17615-211">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-211">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="17615-212">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-212">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <summary><span data-ttu-id="17615-213">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-213">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-214">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>に影響を与えません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になったときにします。</span><span class="sxs-lookup"><span data-stu-id="17615-214">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="17615-215">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返される Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="17615-215">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="17615-216">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="17615-216">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="17615-217">セキュリティ プロトコルおよび暗号アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-217">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="17615-218">メソッドを使用すると、選択した暗号アルゴリズムと長所がアプリケーションのための十分なのかを判断します。</span><span class="sxs-lookup"><span data-stu-id="17615-218">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="17615-219">場合は、メソッドが返す必要があります、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="17615-219">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="17615-220">`userCertificateSelectionCallback`デリゲートは、アプリケーションが複数の証明書と証明書を動的に選択する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="17615-220">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="17615-221">"MY"ストアに証明書は、デリゲートが呼び出されるメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-221">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="17615-222">暗号化ポリシーですの構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>を構築するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-222">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="17615-223">暗号化ポリシーが に設定されているときに Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="17615-223">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-224">フレームワークでは、SSL セッションを作成するときはキャッシュ、可能であれば、新しい要求のキャッシュされているセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="17615-224">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="17615-225">フレームワークが P:System.Net.HttpWebRequest.ClientCertificates (存在する場合) の最初の要素を使用するときに、SSL セッションを再利用する、または P:System.Net.HttpWebRequest.ClientCertificates がある場合は、匿名のセッションを再利用する試行が空です。</span><span class="sxs-lookup"><span data-stu-id="17615-225">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-226">次のコード例では、このコンス トラクターを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-226">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="17615-227">この例に示されている例の一部である、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-227">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-228"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-228"><paramref name="innerStream" /> is not readable.</span></span>  
  
 <span data-ttu-id="17615-229">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-229">-or-</span></span>  
  
 <span data-ttu-id="17615-230"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-230"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-231"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-231"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="17615-232">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-232">-or-</span></span>  
  
 <span data-ttu-id="17615-233"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="17615-233"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17615-234"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-234">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="17615-235"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="17615-235">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="17615-236">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-236">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="17615-237">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-237">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="17615-238">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-238">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <param name="encryptionPolicy"><span data-ttu-id="17615-239">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="17615-239">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span></span></param>
        <summary><span data-ttu-id="17615-240">指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="17615-240">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-241">Null 暗号の使用が必要なときに、`encryptionPolicy`にパラメーターが設定されている<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="17615-241">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-242"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-242"><paramref name="innerStream" /> is not readable.</span></span>  
  
 <span data-ttu-id="17615-243">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-243">-or-</span></span>  
  
 <span data-ttu-id="17615-244"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-244"><paramref name="innerStream" /> is not writable.</span></span>  
  
 <span data-ttu-id="17615-245">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-245">-or-</span></span>  
  
 <span data-ttu-id="17615-246"><paramref name="encryptionPolicy" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="17615-246"><paramref name="encryptionPolicy" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-247"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-247"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="17615-248">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-248">-or-</span></span>  
  
 <span data-ttu-id="17615-249"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="17615-249"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-250">クライアントとサーバー間の接続のクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-250">Authenticate the client side of a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-251">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-251">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="17615-252">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-252">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="17615-253"> 認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="17615-253"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="17615-254">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-254">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="17615-255">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-255">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="17615-256">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-256">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-257">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-257">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-258">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-258">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-259">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-259">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-260"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-260"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-261">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-261">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-262">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-262">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-263">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-263">-or-</span></span>  
  
 <span data-ttu-id="17615-264">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-264">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-265">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-265">-or-</span></span>  
  
 <span data-ttu-id="17615-266">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-266">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-267">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-267">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-268">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-268">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-269">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-269">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-270">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-270">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-271">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-271">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="17615-272">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="17615-272">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-273">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-273">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-274">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-274">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-275">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-275">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-276">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-276">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-277">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-277">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-278">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-278">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-279">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-279">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-280">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-280">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-281">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-281">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-282">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-282">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="17615-283">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="17615-283">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-284">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-284">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-285">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-285">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-286">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-286">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-287">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-287">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-288">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-288">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-289">非同期操作としてクライアントとサーバー間の接続でクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-289">Authenticate the client side of a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-290">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-290">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="17615-291">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-291">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17615-292"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-292">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="17615-293">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-293">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="17615-294"> 認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="17615-294"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="17615-295">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-295">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="17615-296">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-296">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="17615-297">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-297">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-298">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-298">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-299">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-299">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-300">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-300">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-301"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-301"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-302">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-302">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-303">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-303">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-304">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-304">-or-</span></span>  
  
 <span data-ttu-id="17615-305">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-305">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-306">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-306">-or-</span></span>  
  
 <span data-ttu-id="17615-307">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-307">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-308">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-308">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-309">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-309">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-310">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-310">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-311">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-311">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-312">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-312">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17615-313">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="17615-313">The authentication process uses the specified certificate collection and the system default SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-314">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-314">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-315">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-315">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-316">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-316">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-317">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-317">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-318">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-318">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-319">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-319">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-320">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-320">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-321">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-321">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-322">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-322">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-323">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-323">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-324">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-324">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17615-325">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="17615-325">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-326"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-326">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="17615-327">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-327">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-328">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-328">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-329">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-329">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-330">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-330">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-331">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-331">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-332">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-332">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-333">サーバーによって呼び出され、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-333">Called by servers to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-334">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="17615-334">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="17615-335">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-335">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="17615-336"> 証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-336"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="17615-337">クライアントは、認証用証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="17615-337">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="17615-338">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-338">This method blocks until the operation completes.</span></span> <span data-ttu-id="17615-339">操作が完了するまでブロックを防ぐためには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-339">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-340">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-340">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-341">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-341">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-342"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-342"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-343">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-343">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-344">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-344">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-345">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-345">-or-</span></span>  
  
 <span data-ttu-id="17615-346">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-346">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-347">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-347">-or-</span></span>  
  
 <span data-ttu-id="17615-348">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-348">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-349">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-349">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-350">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-350">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-351">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-351">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-352">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-352">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-353">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-353">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-354">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-354">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-355">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-355">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-356">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-356">This method blocks until the operation completes.</span></span> <span data-ttu-id="17615-357">操作が完了するまでブロックを防ぐためには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-357">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-358">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-358">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-359">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-359">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-360"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-360"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-361">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-361">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-362">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-362">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-363">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-363">-or-</span></span>  
  
 <span data-ttu-id="17615-364">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-364">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-365">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-365">-or-</span></span>  
  
 <span data-ttu-id="17615-366">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-366">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-367">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-367">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-368">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-368">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-369">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-369">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-370">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-370">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-371">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-371">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-372">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-372">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-373">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-373">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-374">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-374">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-375">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-375">This method blocks until the operation completes.</span></span> <span data-ttu-id="17615-376">操作が完了するまでブロックを防ぐためには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-376">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-377">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-377">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-378">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-378">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-379"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-379"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-380"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-380"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-381">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-381">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-382">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-382">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-383">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-383">-or-</span></span>  
  
 <span data-ttu-id="17615-384">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-384">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-385">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-385">-or-</span></span>  
  
 <span data-ttu-id="17615-386">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-386">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-387">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-387">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-388">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-388">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-389">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-389">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-390">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="17615-390">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="17615-391">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="17615-391">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17615-392"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-392">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="17615-393">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-393">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-394">このメソッドは<xref:System.Security.Authentication.SslProtocols.Default>します。</span><span class="sxs-lookup"><span data-stu-id="17615-394">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="17615-395">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-395">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="17615-396">クライアントは、認証用証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="17615-396">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="17615-397">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-397">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-398">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-398">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-399"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-399"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-400">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-400">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-401">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-401">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-402">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-402">-or-</span></span>  
  
 <span data-ttu-id="17615-403">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-403">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-404">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-404">-or-</span></span>  
  
 <span data-ttu-id="17615-405">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-405">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-406">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-406">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-407">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-407">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-408">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-408">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-409">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-409">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-410">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-410">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-411">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-411">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-412">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-412">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17615-413">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-413">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-414">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-414">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-415">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-415">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-416">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-416">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-417">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-417">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-418">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-418">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-419">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-419">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-420">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-420">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="17615-421">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-421">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17615-422"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-422">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="17615-423">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-423">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-424">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-424">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-425">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-425">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-426">クライアントとサーバー間の接続でクライアント側を認証する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-426">Begins an operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-427">認証が進行中は、このメソッドのオーバー ロードはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="17615-427">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="17615-428">認証を完了を待っている間にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-428">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-429">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-429">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-430">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-430">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-431">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-431">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-432">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-432">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-433">クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-433">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span></span></summary>
        <returns><span data-ttu-id="17615-434">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-434">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="17615-435"> 認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="17615-435"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="17615-436">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-436">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="17615-437">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-437">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="17615-438">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-438">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17615-439">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-439">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-440">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-440">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-441">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-441">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-442">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-442">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-443">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-443">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-444">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-444">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-445"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-445"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-446">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-446">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-447">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-447">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-448">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-448">-or-</span></span>  
  
 <span data-ttu-id="17615-449">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-449">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-450">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-450">-or-</span></span>  
  
 <span data-ttu-id="17615-451">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-451">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-452">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-452">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-453">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-453">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-454">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-454">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-455">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-455">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-456">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-456">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-457">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-457">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-458">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-458">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-459">指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-459">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-460">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-460">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-461">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-461">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="17615-462">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-462">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17615-463">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-463">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-464">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-464">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-465">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-465">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-466">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-466">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-467">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-467">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-468">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-468">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-469">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-469">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-470"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-470"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-471">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-471">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-472">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-472">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-473">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-473">-or-</span></span>  
  
 <span data-ttu-id="17615-474">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-474">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-475">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-475">-or-</span></span>  
  
 <span data-ttu-id="17615-476">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-476">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-477">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-477">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="17615-478">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="17615-478">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="17615-479">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="17615-479">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-480">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-480">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-481">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-481">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-482">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-482">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-483">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-483">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-484">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-484">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-485">クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-485">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-486">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-486">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-487">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-487">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="17615-488">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-488">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17615-489">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-489">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-490">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-490">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-491">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-491">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-492">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-492">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-493">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-493">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-494">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-494">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17615-495">SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-495">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-496"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-496"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-497"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-497"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-498">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-498">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-499">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-499">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-500">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-500">-or-</span></span>  
  
 <span data-ttu-id="17615-501">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-501">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-502">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-502">-or-</span></span>  
  
 <span data-ttu-id="17615-503">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-503">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-504">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-504">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-505">クライアントとサーバー間の接続のサーバー側の認証を処理する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-505">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-506">認証が進行中は、このメソッドのオーバー ロードはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="17615-506">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="17615-507">認証を完了を待っている間にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-507">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-508">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-508">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-509">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-509">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-510">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-510">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-511">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-511">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-512">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-512">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span></span></summary>
        <returns><span data-ttu-id="17615-513">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-513">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="17615-514"> 証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-514"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="17615-515">クライアントは、認証用証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="17615-515">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="17615-516">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-516">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17615-517">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-517">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-518">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-518">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-519">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-519">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-520">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-520">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-521">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-521">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-522">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-522">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-523"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-523"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-524">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-524">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-525">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-525">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-526">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-526">-or-</span></span>  
  
 <span data-ttu-id="17615-527">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-527">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-528">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-528">-or-</span></span>  
  
 <span data-ttu-id="17615-529">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-529">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-530">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-530">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-531">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-531">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-532">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-532">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-533">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-533">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-534">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-534">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-535">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-535">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-536">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-536">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-537">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-537">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-538">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-538">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-539">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-539">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-540">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-540">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-541">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-541">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="17615-542">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-542">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-543">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-543">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-544">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-544">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-545">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-545">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-546">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-546">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-547">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-547">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-548"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-548"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-549">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-549">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-550">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-550">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-551">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-551">-or-</span></span>  
  
 <span data-ttu-id="17615-552">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-552">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-553">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-553">-or-</span></span>  
  
 <span data-ttu-id="17615-554">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-554">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-555">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-555">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-556">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-556">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="17615-557">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="17615-557">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="17615-558">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-558">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="17615-559">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="17615-559">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="17615-560">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-560">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="17615-561">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-561">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-562">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-562">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-563">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-563">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="17615-564">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-564">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-565">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-565">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span></span></summary>
        <returns><span data-ttu-id="17615-566">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-566">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="17615-567">呼び出しで、認証の非同期操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-567">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="17615-568">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-568">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-569">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-569">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-570">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="17615-570">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17615-571">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-571">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-572">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-572">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-573">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-573">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-574"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-574"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-575"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="17615-575"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-576">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-576">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-577">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-577">Authentication has already occurred.</span></span>  
  
 <span data-ttu-id="17615-578">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-578">-or-</span></span>  
  
 <span data-ttu-id="17615-579">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="17615-579">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
 <span data-ttu-id="17615-580">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-580">-or-</span></span>  
  
 <span data-ttu-id="17615-581">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="17615-581">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-582">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-582">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17615-583">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-583">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17615-584">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="17615-584">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17615-585">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="17615-585">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="17615-586">ストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="17615-586">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-587">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-587">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-588">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-588">A user-defined object that contains information about the read operation.</span></span> <span data-ttu-id="17615-589">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-589">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-590">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-590">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="17615-591">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-591">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-592">暗号化や署名が有効になっている場合、読み取り操作が基になるストリームからデータを読み取り、データの整合性をチェックおよび復号化できます。</span><span class="sxs-lookup"><span data-stu-id="17615-592">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="17615-593">非同期の読み取り操作を呼び出すことによって完了する必要があります、<xref:System.Net.Security.SslStream.EndRead%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-593">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="17615-594">通常、このメソッドはによって、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="17615-594">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="17615-595">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="17615-595">This method does not block while the operation completes.</span></span> <span data-ttu-id="17615-596">操作が完了するまでをブロックするを使用して、<xref:System.Net.Security.SslStream.Read%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-596">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="17615-597">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17615-597">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17615-598"><xref:System.Net.Security.SslStream>クラスが複数の同時読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17615-598">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="17615-599">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-599">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-600">いずれかの呼び出しを認証するために、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-600">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-601">次のコード例では、非同期読み取り操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="17615-601">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="17615-602">次のメソッドは、読み取りが完了するときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="17615-602">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-603"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-603"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-604"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="17615-604"><paramref name="offset" />
  <paramref name="&lt;" />
 <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="17615-605"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-605"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="17615-606">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-606">-or-</span></span>  

<span data-ttu-id="17615-607"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-607"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-608">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-608">The read operation failed.</span></span>  
  
 <span data-ttu-id="17615-609">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-609">-or-</span></span>  
  
 <span data-ttu-id="17615-610">暗号化が使用されていますが、データを復号化できませんでした。</span><span class="sxs-lookup"><span data-stu-id="17615-610">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-611">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="17615-611">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-612">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-612">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-613">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-613">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17615-614">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="17615-614">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17615-615">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="17615-615">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="17615-616"><c>buffer</c> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-616">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17615-617">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="17615-617">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17615-618">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-618">A user-defined object that contains information about the write operation.</span></span> <span data-ttu-id="17615-619">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="17615-619">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17615-620">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="17615-620">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="17615-621">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-621">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17615-622">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-622">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-623"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-623"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-624"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="17615-624"><paramref name="offset" />
  <paramref name="&lt;" />
 <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="17615-625"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-625"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="17615-626">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-626">-or-</span></span>  

<span data-ttu-id="17615-627"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-627"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-628">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-628">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-629">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="17615-629">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-630">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-630">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-631">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-631">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-632">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-632">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value>
          <span data-ttu-id="17615-633">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-633"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-634">成功した認証が発生した場合、このプロパティは呼び出しによって返される値を返します<xref:System.IO.Stream.CanRead%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-634">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="17615-635">インスタンスを作成するときに、基になるストリームが指定されている、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-635">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-636">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-636">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-637">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-637">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="17615-638">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-638">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-639">位置を設定しないでください、<xref:System.Net.Security.SslStream>オブジェクトまたはその基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-639">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="17615-640">インスタンスを作成するときに、基になるストリームが指定されている、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-640">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-641">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-641">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value>
          <span data-ttu-id="17615-642">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-642"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-643">このプロパティを呼び出すことによって返される値を返します<xref:System.IO.Stream.CanTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-643">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="17615-644">インスタンスを作成するときに、基になるストリームが指定されている、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-644">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-645">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-645">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-646">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-646">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value>
          <span data-ttu-id="17615-647">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-647"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-648">成功した認証が発生した場合、このプロパティは呼び出しによって返される値を返します<xref:System.IO.Stream.CanWrite%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-648">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="17615-649">インスタンスを作成するときに、基になるストリームが指定されている、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-649">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-650">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-650">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-651">証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-651">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span></span></summary>
        <value>
          <span data-ttu-id="17615-652">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-652"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-653">証明書失効リストには、発行元によって失効した証明書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="17615-653">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="17615-654">悪影響を及ぼす一覧を確認すると、パフォーマンスに影響を与えますが、アプリケーションのセキュリティが向上します。</span><span class="sxs-lookup"><span data-stu-id="17615-654">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-655">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-655">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-656">この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-656">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="17615-657"><see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-657">A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-658">値<xref:System.Security.Authentication.CipherAlgorithmType.Null>に必要な<xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティと、<xref:System.Net.Security.EncryptionPolicy.NoEncryption>列挙値が構築するために使用される、<xref:System.Net.Security.SslStream>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-658">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]<span data-ttu-id="17615-659"> および[!INCLUDE[winxp](~/includes/winxp-md.md)]サポートしていない、<xref:System.Security.Authentication.CipherAlgorithmType.Null>値。</span><span class="sxs-lookup"><span data-stu-id="17615-659"> and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="17615-660">場合でも、<xref:System.Security.Authentication.CipherAlgorithmType.Null>値が構築するために使用される、 <xref:System.Net.Security.SslStream> 、インスタンス、<xref:System.Net.Security.EncryptionPolicy>プロパティになります<xref:System.Security.Authentication.CipherAlgorithmType.None>です。</span><span class="sxs-lookup"><span data-stu-id="17615-660">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="17615-661"><xref:System.Security.Authentication.CipherAlgorithmType.Null> Windows Vista 以降でのみ値が返されます。</span><span class="sxs-lookup"><span data-stu-id="17615-661">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-662">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-662">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-663">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-663">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-664">この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-664">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="17615-665">アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-665">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-666">認証が行われるまで、このプロパティの値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="17615-666">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="17615-667">このプロパティは、次の値のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="17615-667">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="17615-668">0</span><span class="sxs-lookup"><span data-stu-id="17615-668">0</span></span>  
  
-   <span data-ttu-id="17615-669">40</span><span class="sxs-lookup"><span data-stu-id="17615-669">40</span></span>  
  
-   <span data-ttu-id="17615-670">56</span><span class="sxs-lookup"><span data-stu-id="17615-670">56</span></span>  
  
-   <span data-ttu-id="17615-671">80</span><span class="sxs-lookup"><span data-stu-id="17615-671">80</span></span>  
  
-   <span data-ttu-id="17615-672">128</span><span class="sxs-lookup"><span data-stu-id="17615-672">128</span></span>  
  
-   <span data-ttu-id="17615-673">168</span><span class="sxs-lookup"><span data-stu-id="17615-673">168</span></span>  
  
-   <span data-ttu-id="17615-674">192</span><span class="sxs-lookup"><span data-stu-id="17615-674">192</span></span>  
  
-   <span data-ttu-id="17615-675">256</span><span class="sxs-lookup"><span data-stu-id="17615-675">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-676">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-676">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="17615-677">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-677"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="17615-678"><see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="17615-678">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-679">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-679">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="17615-680">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="17615-680">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="17615-681"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="17615-681"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="17615-682">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Security.SslStream>参照します。</span><span class="sxs-lookup"><span data-stu-id="17615-682">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="17615-683">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="17615-683">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="17615-684"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="17615-684"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="17615-685">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-685">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="17615-686">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="17615-686">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="17615-687">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="17615-687">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17615-688"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-688">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="17615-689"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="17615-689">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-690">操作が完了していない場合、このメソッドはそれまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-690">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="17615-691">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-691">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-692">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-692">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-693">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-693">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-694">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-694">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="17615-695">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-695">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-696"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-696"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-697"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="17615-697"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-698">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-698">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-699">完了する保留中のサーバー認証がありません。</span><span class="sxs-lookup"><span data-stu-id="17615-699">There is no pending server authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17615-700"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-700">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="17615-701"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="17615-701">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-702">操作が完了していない場合、このメソッドはそれまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-702">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="17615-703">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスがによって使用される、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-703">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="17615-704">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>相互認証が行われたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="17615-704">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17615-705">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、され、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="17615-705">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="17615-706">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="17615-706">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="17615-707">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-707">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-708"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-708"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-709"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="17615-709"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17615-710">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="17615-710">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-711">完了する保留中のクライアント認証がありません。</span><span class="sxs-lookup"><span data-stu-id="17615-711">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17615-712"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-712">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="17615-713"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="17615-713">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="17615-714">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-714">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-715">操作が完了していない場合、このメソッドはそれまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-715">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="17615-716">この操作を同期的に実行するを使用して、<xref:System.Net.Security.SslStream.Read%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-716">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="17615-717">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-717">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-718">いずれかの呼び出しを認証するために、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-718">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-719">次のコード例では、読み取り操作の非同期の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="17615-719">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-720"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-720"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-721"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="17615-721"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-722">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-722">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-723">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-723">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17615-724"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="17615-724">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="17615-725"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="17615-725">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-726">操作が完了していない場合、このメソッドはそれまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-726">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="17615-727">アプリケーションは、正常に認証が完了するまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-727">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-728">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-728">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17615-729">この操作を同期的に実行するを使用して、<xref:System.Net.Security.SslStream.Write%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-729">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-730">次のコード例では、非同期の書き込み操作の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="17615-730">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-731"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-731"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-732"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="17615-732"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-733">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-733">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-734">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-734">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17615-735">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="17615-735">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-736">このメソッドを呼び出して<xref:System.IO.Stream.Flush%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-736">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-737">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-737">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-738">メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-738">Gets the algorithm used for generating message authentication codes (MACs).</span></span></summary>
        <value><span data-ttu-id="17615-739"><see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-739">A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-740">メッセージ認証アルゴリズムは、メッセージのハッシュと改ざんとフォージェリを検出するために使用する署名を生成します。</span><span class="sxs-lookup"><span data-stu-id="17615-740">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-741">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-741">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-742">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="17615-742">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-743">このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-743">Gets a value that identifies the strength of the hash algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="17615-744"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-744">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span></span> <span data-ttu-id="17615-745">有効値は 128 または 160 です。</span><span class="sxs-lookup"><span data-stu-id="17615-745">Valid values are 128 or 160.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-746">認証が行われるまで、このプロパティの値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="17615-746">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-747">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-747">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-748">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-748">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value>
          <span data-ttu-id="17615-749">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-749"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-750">クライアントの認証を呼び出して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-750">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="17615-751">呼び出してサーバーに認証、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-751">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-752">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-752">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-753">この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-753">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span></span></summary>
        <value>
          <span data-ttu-id="17615-754">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-754"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-755">暗号化は、データのプライバシーを保護すること、つまり役に立つことデータは、転送中は、サード パーティが解読できないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="17615-755">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-756">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-756">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-757">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-757">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="17615-758">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-758"><see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-759">相互認証は、サーバーが、クライアント認証証明書を提供するときに、サーバーによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="17615-759">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-760">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-760">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-761">この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-761">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span></span></summary>
        <value>
          <span data-ttu-id="17615-762">ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-762"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-763">認証失敗または発生しなかった、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="17615-763">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="17615-764">サーバーで、認証に呼び出して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-764">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-765">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-765">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-766">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-766">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value>
          <span data-ttu-id="17615-767">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17615-767"><see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-768">署名によって、データの整合性を保護するデータ、つまりなります、受信者、データが転送中に改ざんされているかどうかを特定します。</span><span class="sxs-lookup"><span data-stu-id="17615-768">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-769">次のコード例では、このプロパティの値の表示を示しています。</span><span class="sxs-lookup"><span data-stu-id="17615-769">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-770">この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-770">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="17615-771"><see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-771">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-772">このプロパティの値が<xref:System.Security.Authentication.ExchangeAlgorithmType.None>認証が行われるまでです。</span><span class="sxs-lookup"><span data-stu-id="17615-772">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="17615-773">キー交換アルゴリズムは、共有キーを生成するための情報を保護します。</span><span class="sxs-lookup"><span data-stu-id="17615-773">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-774">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-774">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-775">このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-775">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="17615-776"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-776">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-777">認証が行われるまで、このプロパティの値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="17615-777">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="17615-778">一般的なシナリオでこのプロパティの値とは、次のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="17615-778">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="17615-779">512</span><span class="sxs-lookup"><span data-stu-id="17615-779">512</span></span>  
  
-   <span data-ttu-id="17615-780">768</span><span class="sxs-lookup"><span data-stu-id="17615-780">768</span></span>  
  
-   <span data-ttu-id="17615-781">1024</span><span class="sxs-lookup"><span data-stu-id="17615-781">1024</span></span>  
  
-   <span data-ttu-id="17615-782">2048</span><span class="sxs-lookup"><span data-stu-id="17615-782">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-783">次のコード例では、指定したストリーム用の暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-783">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-784">基になるストリームの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-784">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="17615-785"><see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="17615-785">A <see cref="T:System.Int64" />.</span></span>  
  
 <span data-ttu-id="17615-786">基になるストリームの長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-786">The length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-787">このプロパティを呼び出すことによって返される値を返します<xref:System.IO.Stream.Length%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-787">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="17615-788">基になるストリームがシーク可能でない場合は、このメソッドは通常、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17615-788">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="17615-789">基になるストリームの実行時の型では、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="17615-789">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-790">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-790">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-791">ローカル エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-791">Gets the certificate used to authenticate the local endpoint.</span></span></summary>
        <value><span data-ttu-id="17615-792">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17615-792">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17615-793">次のコード例では、このプロパティによって返された証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-793">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-794">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-794">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-795">基になるストリーム内の現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="17615-795">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="17615-796"><see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="17615-796">A <see cref="T:System.Int64" />.</span></span>  
  
 <span data-ttu-id="17615-797">基になるストリームの現在の位置。</span><span class="sxs-lookup"><span data-stu-id="17615-797">The current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-798">このプロパティを呼び出すことによって返される値を返します<xref:System.IO.Stream.Position%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-798">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="17615-799">基になるストリームがシーク可能でない場合は、このメソッドは通常、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="17615-799">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="17615-800">基になるストリームの実行時の型では、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="17615-800">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-801">このプロパティの設定は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-801">Setting this property is not supported.</span></span>  
  
 <span data-ttu-id="17615-802">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-802">-or-</span></span>  
  
 <span data-ttu-id="17615-803">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-803">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17615-804">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="17615-804">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17615-805">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-805">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="17615-806">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-806">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span></span></param>
        <summary><span data-ttu-id="17615-807">このストリームからデータを読み取り、指定した配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="17615-807">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="17615-808">読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-808">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span></span> <span data-ttu-id="17615-809">読み取るデータがこれ以上存在しない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="17615-809">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-810">メソッドは、最大数を読み取ります`count`ストリームからバイトに格納`buffer`始点`offset`です。</span><span class="sxs-lookup"><span data-stu-id="17615-810">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="17615-811">複数の同時読み取り操作を行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-811">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="17615-812">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-812">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-813">いずれかの呼び出しを認証するために、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-813">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17615-814">この操作を非同期的に実行するを使用して、<xref:System.Net.Security.SslStream.BeginRead%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-814">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-815">次のコード例に示しますからの読み取り、<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-815">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-816"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-816"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-817"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="17615-817"><paramref name="offset" />
  <paramref name="&lt;" />
 <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="17615-818"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-818"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="17615-819">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-819">-or-</span></span>  

<span data-ttu-id="17615-820"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-820"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-821">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-821">The read operation failed.</span></span> <span data-ttu-id="17615-822">内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="17615-822">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-823">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="17615-823">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-824">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-824">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-825">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-825">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-826">読み取り操作がブロックしてデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="17615-826">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="17615-827">同期読み取り操作が失敗するまでの時間を指定する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-827">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-828">このプロパティを呼び出すことによって返される値を返します<xref:System.IO.Stream.ReadTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-828">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="17615-829">このプロパティを設定すると、<xref:System.IO.Stream.ReadTimeout%2A>基になるストリームの値が指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="17615-829">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="17615-830">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、 <xref:System.Net.Security.SslStream.ReadTimeout%2A> (ミリ秒単位) があり設定されて<xref:System.Threading.Timeout.Infinite>既定では読み取ることの操作はタイムアウトにならないようにします。</span><span class="sxs-lookup"><span data-stu-id="17615-830">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-831">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="17615-831">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-832">リモート エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-832">Gets the certificate used to authenticate the remote endpoint.</span></span></summary>
        <value><span data-ttu-id="17615-833">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17615-833">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17615-834">次のコード例では、このプロパティによって返された証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="17615-834">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-835">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-835">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="17615-836">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="17615-836">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="17615-837">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="17615-837">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="17615-838"><see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="17615-838">Throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="17615-839">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="17615-839">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-840">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="17615-840">Do not call this method.</span></span> <span data-ttu-id="17615-841">関数は、継承されますでサポートされていない、<xref:System.Net.Security.SslStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="17615-841">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-842">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="17615-842">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17615-843">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-843">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="17615-844">基になるストリームの長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="17615-844">Sets the length of the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-845">このメソッドを呼び出して<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>ときに指定した基になるストリームこの<xref:System.Net.Security.SslStream>作成されました。</span><span class="sxs-lookup"><span data-stu-id="17615-845">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17615-846">この SslStream を終了します。</span><span class="sxs-lookup"><span data-stu-id="17615-846">Shuts down this SslStream.</span></span></summary>
        <returns><span data-ttu-id="17615-847">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-847">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-848">この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-848">Gets a value that indicates the security protocol used to authenticate this connection.</span></span></summary>
        <value><span data-ttu-id="17615-849">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="17615-849">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-850">サポートされているセキュリティ プロトコルが指定されたときに、<xref:System.Net.Security.SslStream>を作成します。</span><span class="sxs-lookup"><span data-stu-id="17615-850">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="17615-851">使用してインスタンスを作成する場合は、コンス トラクターに渡されたセキュリティ プロトコルはありません、<xref:System.Security.Authentication.SslProtocols.Default>です。</span><span class="sxs-lookup"><span data-stu-id="17615-851">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="17615-852">クライアントとサーバーでサポートされるプロトコルに基づく認証に使用される実際のプロトコルが選択されます。</span><span class="sxs-lookup"><span data-stu-id="17615-852">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-853">次の例では、指定したストリームのセキュリティ プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="17615-853">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-854">拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="17615-854">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span></span></summary>
        <value><span data-ttu-id="17615-855">拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17615-855">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17615-856">このストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17615-856">Writes data to this stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17615-857">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="17615-857">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <summary><span data-ttu-id="17615-858">このストリームに指定したデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17615-858">Writes the specified data to this stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-859">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-859">This method blocks while the operation completes.</span></span> <span data-ttu-id="17615-860">操作が完了するまでブロックを回避するには<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-860">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="17615-861">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-861">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-862">いずれかの呼び出しを認証するために、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-862">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17615-863"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17615-863">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-864">次のコード例に示します認証への書き込み<xref:System.Net.Security.SslStream>です。</span><span class="sxs-lookup"><span data-stu-id="17615-864">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-865"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-865"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-866">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-866">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-867">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="17615-867">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-868">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-868">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-869">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-869">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17615-870">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="17615-870">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17615-871">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-871">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="17615-872"><c>buffer</c> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-872">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <c>buffer</c>.</span></span></param>
        <summary><span data-ttu-id="17615-873">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="17615-873">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-874">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="17615-874">This method blocks while the operation completes.</span></span> <span data-ttu-id="17615-875">操作は、操作を完了するまでブロックされないように、完了すると、使用して、<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-875">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="17615-876">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="17615-876">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17615-877">いずれかの呼び出しを認証するために、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="17615-877">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17615-878"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="17615-878">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17615-879"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="17615-879"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17615-880"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />。</span><span class="sxs-lookup"><span data-stu-id="17615-880"><paramref name="offset" />
  <paramref name="&lt;" />
 <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="17615-881"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-881"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="17615-882">- または -</span><span class="sxs-lookup"><span data-stu-id="17615-882">-or-</span></span>  

<span data-ttu-id="17615-883"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="17615-883"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17615-884">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="17615-884">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17615-885">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="17615-885">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17615-886">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="17615-886">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17615-887">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="17615-887">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17615-888">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="17615-888">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="17615-889">同期書き込み操作が失敗するまでの時間を指定する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="17615-889">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17615-890">このプロパティを呼び出すことによって返される値を返します<xref:System.IO.Stream.WriteTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="17615-890">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="17615-891">指定された値の設定、集合演算、<xref:System.IO.Stream.WriteTimeout%2A>基になるストリームの値。</span><span class="sxs-lookup"><span data-stu-id="17615-891">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="17615-892">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、 <xref:System.Net.Security.SslStream.WriteTimeout%2A> (ミリ秒単位) に設定されている<xref:System.Threading.Timeout.Infinite>既定では書き込み操作はタイムアウトにならないようにします。</span><span class="sxs-lookup"><span data-stu-id="17615-892">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17615-893">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="17615-893">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>