<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e305f3ca5a340be90246737c76cb650bbb3d23f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56395856" /></Metadata><TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d28e3-101">Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-102">SSL プロトコルは、機密性と整合性チェックを使用して送信されるメッセージを提供するのに役立ちます、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-103">によって提供される SSL 接続を<xref:System.Net.Security.SslStream>、通信するクライアントとサーバー間で機密情報をする場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="d28e3-104">使用して、<xref:System.Net.Security.SslStream>から読み取って、ネットワーク上転送中になっている情報を改ざんできないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="d28e3-105"><xref:System.Net.Security.SslStream>インスタンスを作成するときにストリームを使用してデータを送信する、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-106">指定するオプションがあるこの基になるストリームを指定するときに閉じるかどうか、<xref:System.Net.Security.SslStream>も基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="d28e3-107">通常、<xref:System.Net.Security.SslStream>クラスで使用されます、<xref:System.Net.Sockets.TcpClient>と<xref:System.Net.Sockets.TcpListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="d28e3-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A>メソッドを提供、<xref:System.Net.Sockets.NetworkStream>で使用するために適した、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="d28e3-109">作成した後、<xref:System.Net.Security.SslStream>サーバーと、必要に応じて、クライアントを認証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="d28e3-110">サーバーが、X509 を提供する必要があります証明書をその id を確立しするクライアントもように要求できます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="d28e3-111">使用して情報を送信する前に認証を実行する必要があります、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-112">クライアントは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドで、認証が完了するまでブロック、または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッドで、認証が完了するを待つをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="d28e3-113">サーバーは、同期を使用して認証を開始<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または非同期<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="d28e3-114">クライアントとサーバーの両方が認証を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="d28e3-115">認証は、セキュリティ サポート プロバイダー (SSPI) チャンネル プロバイダーによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="d28e3-116">クライアントに指定することで、サーバーの証明書の検証を制御する機会を与えるが、<xref:System.Net.Security.RemoteCertificateValidationCallback>デリゲートを作成するとき、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-117">サーバーを指定して検証を制御できますも、<xref:System.Net.Security.RemoteCertificateValidationCallback>を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="d28e3-118">デリゲートによって参照されるメソッドには、リモート パーティの証明書と証明書の検証中に発生した SSPI エラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="d28e3-119">サーバーは、デリゲートを指定した場合に、デリゲートのメソッドが、サーバーがクライアント認証を要求するかどうかに関係なく呼び出されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="d28e3-120">サーバーがクライアント認証を要求していない場合、サーバーのデリゲート メソッドは、null の証明書と証明書のエラーの空の配列を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="d28e3-121">サーバーは、クライアント認証を必要とする場合、クライアントは、認証用の 1 つまたは複数の証明書を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="d28e3-122">クライアントには、複数の証明書がある場合は、クライアントができる、<xref:System.Net.Security.LocalCertificateSelectionCallback>デリゲートをサーバーの正しい証明書を選択します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="d28e3-123">クライアントの証明書は、現在のユーザーの"My"証明書ストアである必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="d28e3-124">証明書を使用してクライアント認証はサポートされていません、 <xref:System.Security.Authentication.SslProtocols.Ssl2> (バージョン 2 を SSL) プロトコル。</span><span class="sxs-lookup"><span data-stu-id="d28e3-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="d28e3-125">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、および<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-126">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d28e3-127">サーバー (および必要に応じて、クライアント) の id が確立されている、SSL ハンドシェイクとも呼ばれる、認証プロセスが成功すると、および<xref:System.Net.Security.SslStream>メッセージを交換するクライアントとサーバーで使用できます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="d28e3-128">情報を送受信する前に、クライアントとサーバーくださいセキュリティ サービスとレベルによって提供される、<xref:System.Net.Security.SslStream>プロトコル、アルゴリズム、および選択の強度が整合性の要件を満たすかどうかを判断して機密性。</span><span class="sxs-lookup"><span data-stu-id="d28e3-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="d28e3-129">現在の設定が十分でない場合、ストリームは閉じする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="d28e3-130">によって提供されるセキュリティ サービスを確認することができます、<xref:System.Net.Security.SslStream>を使用して、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="d28e3-131">次の表では、認証、暗号化、およびデータの署名に使用される暗号化の設定を報告する要素を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="d28e3-132">要素</span><span class="sxs-lookup"><span data-stu-id="d28e3-132">Element</span></span>|<span data-ttu-id="d28e3-133">メンバー</span><span class="sxs-lookup"><span data-stu-id="d28e3-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="d28e3-134">サーバーおよび必要に応じて、クライアントを認証するために使用するセキュリティ プロトコル。</span><span class="sxs-lookup"><span data-stu-id="d28e3-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="d28e3-135"><xref:System.Net.Security.SslStream.SslProtocol%2A>プロパティと関連付けられている<xref:System.Security.Authentication.SslProtocols>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d28e3-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="d28e3-136">キー交換アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-136">The key exchange algorithm.</span></span>|<span data-ttu-id="d28e3-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.ExchangeAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d28e3-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d28e3-138">メッセージの整合性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-138">The message integrity algorithm.</span></span>|<span data-ttu-id="d28e3-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.HashAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d28e3-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d28e3-140">メッセージの機密性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="d28e3-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティと関連付けられている<xref:System.Security.Authentication.CipherAlgorithmType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d28e3-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="d28e3-142">選択したアルゴリズムの強みです。</span><span class="sxs-lookup"><span data-stu-id="d28e3-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="d28e3-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>、 <xref:System.Net.Security.SslStream.HashStrength%2A>、および<xref:System.Net.Security.SslStream.CipherStrength%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="d28e3-144">認証が成功した後、同期を使用してデータを送信することができます<xref:System.Net.Security.SslStream.Write%2A>または非同期<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="d28e3-145">同期を使用してデータを受信する<xref:System.Net.Security.SslStream.Read%2A>または非同期<xref:System.Net.Security.SslStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="d28e3-146">指定した場合、<xref:System.Net.Security.SslStream.%23ctor%2A>を基になるストリームが開いたままにする必要がありますが終わったら、そのストリームを閉じるそれを使用します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-147">かどうか、アプリケーションを作成する、<xref:System.Net.Security.SslStream>オブジェクトは、通常のユーザーの資格情報で実行、アプリケーションでは、アクセス許可が明示的に指定されてユーザーにこれを行う場合を除き、ローカル コンピューター ストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="d28e3-148"><xref:System.Net.Security.SslStream> 前提と他のタイムアウト<xref:System.IO.IOException>内部ストリームからスローされたときに扱われます致命的、呼び出し元によって。</span><span class="sxs-lookup"><span data-stu-id="d28e3-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="d28e3-149">再利用、<xref:System.Net.Security.SslStream>後タイムアウトはガベージを返します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="d28e3-150">アプリケーションにする必要があります<xref:System.IO.Stream.Close%2A>、<xref:System.Net.Security.SslStream>このような場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="d28e3-151">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="d28e3-152">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの API を介して TLS/SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションは、既定でセキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="d28e3-153">開発者は、RC4 サービスを使用した既存 SSL3 サービスまたは TLS 相互運用性を維持するためにこの動作を無効にすることがあります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="d28e3-154">[この記事で](https://support.microsoft.com/kb/3069494)新しい動作を無効にするために、コードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="d28e3-155">.NET Framework 4.7 SslStreams TLS のバージョンを指定しないが、システムの既定値として定義されている TLS のバージョンを使用する認証メソッドの新しいオーバー ロードを追加します[SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="d28e3-156">TLS のバージョンのベスト プラクティスの変化に応じて、時間の経過と共に、既定値を後で変更できる方法として、アプリでこれらのメソッドを使用してリビルドして、アプリを再デプロイする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="d28e3-157">参照してください[トランスポート層セキュリティ (TLS) のベスト プラクティスは、.NET Framework で](~/docs/framework/network-programming/tls.md)します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="d28e3-158">作成する次のコード例に示します、<xref:System.Net.Sockets.TcpListener>を使用して、<xref:System.Net.Security.SslStream>クライアントと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="d28e3-159">作成する次のコード例に示します、<xref:System.Net.Sockets.TcpClient>を使用して、<xref:System.Net.Security.SslStream>サーバーと通信するクラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-160"><see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-161">防ぐために、<xref:System.Net.Security.SslStream>から指定したストリームを閉じると、使用して、<xref:System.Net.Security.SslStream.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="d28e3-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="d28e3-162"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="d28e3-163">指定した <see cref="T:System.Net.Security.SslStream" /> を使用して、<see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-164">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d28e3-165">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-166"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-166"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="d28e3-167">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-167">-or-</span></span> 
 <span data-ttu-id="d28e3-168"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-168"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-169"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-169"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d28e3-170">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-170">-or-</span></span> 
 <span data-ttu-id="d28e3-171"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-171"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="d28e3-172"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="d28e3-173"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="d28e3-174">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-174">This parameter indicates if the inner stream is left open.</span></span></param>
        <summary><span data-ttu-id="d28e3-175">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-176">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d28e3-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d28e3-177">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d28e3-178">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-179">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-180"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-180"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="d28e3-181">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-181">-or-</span></span> 
 <span data-ttu-id="d28e3-182"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-182"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-183"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-183"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d28e3-184">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-184">-or-</span></span> 
 <span data-ttu-id="d28e3-185"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-185"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="d28e3-186"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="d28e3-187"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="d28e3-188">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-188">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="d28e3-189">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <summary><span data-ttu-id="d28e3-190">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-191">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d28e3-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d28e3-192">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返された Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="d28e3-193">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="d28e3-194">セキュリティ プロトコルと暗号化アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="d28e3-195">メソッドを使用すると、選択した暗号アルゴリズムとの強度が、アプリケーションのための十分なかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="d28e3-196">場合は、メソッドが返す、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="d28e3-197">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d28e3-198">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-199">フレームワークでは、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="d28e3-200">最初の要素は、Framework は、SSL セッションを再利用しようとすると、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (1 つないかどうか)、または匿名のセッションを再利用しようと<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-201">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-202">次のコード例を作成、<xref:System.Net.Security.SslStream>し、認証のクライアント部分を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-203"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-203"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="d28e3-204">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-204">-or-</span></span> 
 <span data-ttu-id="d28e3-205"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-205"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-206"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-206"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d28e3-207">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-207">-or-</span></span> 
 <span data-ttu-id="d28e3-208"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-208"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="d28e3-209"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="d28e3-210"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="d28e3-211">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-211">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="d28e3-212">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="d28e3-213">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-214">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-215">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.SslStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="d28e3-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="d28e3-216">`userCertificateValidationCallback`デリゲートの`certificateErrors`引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返された Windows エラー コードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="d28e3-217">によって呼び出されるメソッドの戻り値、`userCertificateValidationCallback`デリゲートは、認証が成功したかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="d28e3-218">セキュリティ プロトコルと暗号化アルゴリズムが既に選択されているときに、`userCertificateValidationCallback`デリゲートのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="d28e3-219">メソッドを使用すると、選択した暗号アルゴリズムとの強度が、アプリケーションのための十分なかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="d28e3-220">場合は、メソッドが返す、`false`を防ぐために、<xref:System.Net.Security.SslStream>作成されません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="d28e3-221">`userCertificateSelectionCallback`デリゲートは、アプリケーションが複数の証明書と証明書を動的に選択する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="d28e3-222">"MY"ストアに証明書は、デリゲートが呼び出されたメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="d28e3-223">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy>の既定値は<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>の<xref:System.Net.Security.SslStream>構築されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="d28e3-224">暗号化ポリシーを設定すると、Null 暗号の使用する必要が<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-225">フレームワークでは、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="d28e3-226">フレームワークが P:System.Net.HttpWebRequest.ClientCertificates (存在する場合) の最初の要素を使用して、SSL セッションを再利用しようとすると、または空の P:System.Net.HttpWebRequest.ClientCertificates がある場合は、匿名のセッションを再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-227">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="d28e3-228">この例が示されている例の一部、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-229"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-229"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="d28e3-230">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-230">-or-</span></span> 
 <span data-ttu-id="d28e3-231"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-231"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-232"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-232"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d28e3-233">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-233">-or-</span></span> 
 <span data-ttu-id="d28e3-234"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-234"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="d28e3-235"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="d28e3-236"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="d28e3-237">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-237">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="d28e3-238">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="d28e3-239">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <param name="encryptionPolicy"><span data-ttu-id="d28e3-240">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span></span></param>
        <summary><span data-ttu-id="d28e3-241">指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-242">Null 暗号の使用が必要なときに、`encryptionPolicy`にパラメーターが設定されている<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-243"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-243"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="d28e3-244">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-244">-or-</span></span> 
 <span data-ttu-id="d28e3-245"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-245"><paramref name="innerStream" /> is not writable.</span></span>  
  
<span data-ttu-id="d28e3-246">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-246">-or-</span></span> 
 <span data-ttu-id="d28e3-247"><paramref name="encryptionPolicy" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-247"><paramref name="encryptionPolicy" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-248"><paramref name="innerStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-248"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d28e3-249">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-249">-or-</span></span> 
 <span data-ttu-id="d28e3-250"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-250"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-251">クライアントとサーバー間の接続のクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-251">Authenticate the client side of a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-252">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="d28e3-253">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d28e3-254">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-254">No client certificates are used in the authentication.</span></span> <span data-ttu-id="d28e3-255">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d28e3-256">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d28e3-257">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-258">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-259">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-260">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-261"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-261"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-262">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-262">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-263">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-263">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-264">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-264">-or-</span></span> 
<span data-ttu-id="d28e3-265">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-266">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-266">-or-</span></span> 
<span data-ttu-id="d28e3-267">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-267">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-268">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-268">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-269">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-270">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-271">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-272">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="d28e3-273">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-274">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-275">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-276">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-277">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-278">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-279">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-280">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-281">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-282">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-283">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="d28e3-284">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-284">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-285">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-286">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-287">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-288">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-289">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-290">非同期操作としてクライアントとサーバー間の接続でクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-291">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="d28e3-292">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d28e3-293">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-293">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d28e3-294">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-294">No client certificates are used in the authentication.</span></span> <span data-ttu-id="d28e3-295">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-295">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d28e3-296">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-296">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d28e3-297">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-297">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-298">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-298">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-299">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-299">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-300">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-300">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-301"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-301"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-302">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-302">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-303">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-303">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-304">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-304">-or-</span></span> 
<span data-ttu-id="d28e3-305">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-305">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-306">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-306">-or-</span></span> 
<span data-ttu-id="d28e3-307">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-307">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-308">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-308">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-309">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-309">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-310">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-310">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-311">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-311">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-312">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-312">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="d28e3-313">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-313">The authentication process uses the specified certificate collection and the system default SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-314">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-314">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-315">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-315">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-316">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-316">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-317">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-317">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-318">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-318">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-319">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-319">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-320">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-320">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-321">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-321">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-322">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-322">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-323">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-323">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-324">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-324">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="d28e3-325">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-325">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-326">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-326">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-327">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-327">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-328">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-328">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-329">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-329">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-330">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-330">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-331">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-331">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-332">サーバーによって呼び出され、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-332">Called by servers to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-333">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="d28e3-333">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="d28e3-334">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-334">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d28e3-335">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-335">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d28e3-336">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-336">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d28e3-337">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-337">This method blocks until the operation completes.</span></span> <span data-ttu-id="d28e3-338">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-338">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-339">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-339">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-340">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-340">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-341"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-341"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-342">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-342">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-343">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-343">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-344">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-344">-or-</span></span> 
<span data-ttu-id="d28e3-345">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-345">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-346">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-346">-or-</span></span> 
<span data-ttu-id="d28e3-347">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-347">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-348">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-348">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-349">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-349">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-350">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-350">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-351">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-351">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-352">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-352">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-353">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-353">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-354">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-354">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-355">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-355">This method blocks until the operation completes.</span></span> <span data-ttu-id="d28e3-356">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-356">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-357">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-357">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-358">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-358">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-359"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-359"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-360">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-360">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-361">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-361">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-362">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-362">-or-</span></span> 
<span data-ttu-id="d28e3-363">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-363">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-364">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-364">-or-</span></span> 
<span data-ttu-id="d28e3-365">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-365">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-366">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-366">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-367">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-367">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-368">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-368">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-369">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-369">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-370">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-370">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-371">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-371">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-372">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-372">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-373">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-373">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-374">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-374">This method blocks until the operation completes.</span></span> <span data-ttu-id="d28e3-375">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-375">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-376">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-376">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-377">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-377">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-378"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-378"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-379"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-379"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-380">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-380">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-381">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-381">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-382">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-382">-or-</span></span> 
<span data-ttu-id="d28e3-383">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-383">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-384">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-384">-or-</span></span> 
<span data-ttu-id="d28e3-385">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-385">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-386">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-386">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-387">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-387">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-388">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-388">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-389">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="d28e3-389">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="d28e3-390">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-390">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d28e3-391">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-391">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-392">このメソッドが使用して認証<xref:System.Security.Authentication.SslProtocols.Default>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-392">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="d28e3-393">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-393">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d28e3-394">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-394">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d28e3-395">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-395">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-396">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-396">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-397"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-397"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-398">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-398">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-399">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-399">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-400">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-400">-or-</span></span> 
<span data-ttu-id="d28e3-401">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-401">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-402">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-402">-or-</span></span> 
<span data-ttu-id="d28e3-403">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-403">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-404">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-404">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-405">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-405">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-406">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-406">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-407">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-407">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-408">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-408">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-409">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-409">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-410">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-410">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d28e3-411">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-411">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-412">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-412">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-413">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-413">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-414">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-414">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-415">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-415">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-416">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-416">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-417">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-417">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-418">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-418">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="d28e3-419">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-419">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d28e3-420">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-420">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-421">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-421">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-422">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-422">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-423">クライアントとサーバー間の接続でクライアント側を認証する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-423">Begins an operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-424">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-424">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="d28e3-425">認証が完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-425">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-426">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-426">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-427">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-427">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-428">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-428">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-429">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-429">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-430">クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-430">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span></span></summary>
        <returns><span data-ttu-id="d28e3-431">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-431">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d28e3-432">認証では、クライアント証明書は使用されません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-432">No client certificates are used in the authentication.</span></span> <span data-ttu-id="d28e3-433">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-433">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="d28e3-434">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-434">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d28e3-435">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-435">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d28e3-436">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-436">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-437">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-437">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-438">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-438">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-439">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-439">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-440">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-440">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-441">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-441">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-442"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-442"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-443">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-443">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-444">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-444">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-445">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-445">-or-</span></span> 
<span data-ttu-id="d28e3-446">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-446">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-447">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-447">-or-</span></span> 
<span data-ttu-id="d28e3-448">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-448">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-449">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-449">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-450">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-450">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-451">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-451">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-452">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-452">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-453">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-453">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-454">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-454">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-455">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-455">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-456">指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-456">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-457">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-457">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-458">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-458">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d28e3-459">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-459">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d28e3-460">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-460">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-461">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-461">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-462">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-462">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-463">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-463">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-464">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-464">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-465">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-465">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-466">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-466">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-467"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-467"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-468">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-468">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-469">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-469">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-470">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-470">-or-</span></span> 
<span data-ttu-id="d28e3-471">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-471">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-472">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-472">-or-</span></span> 
<span data-ttu-id="d28e3-473">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-473">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-474">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-474">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="d28e3-475">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="d28e3-475">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="d28e3-476">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-476">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-477">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-477">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-478">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-478">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-479">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-479">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-480">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-480">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-481">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-481">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-482">クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-482">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-483">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-483">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-484">指定された値`targetHost`サーバーの証明書の名前が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-484">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="d28e3-485">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-485">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d28e3-486">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-486">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-487">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-487">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-488">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-488">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-489">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-489">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-490">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-490">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-491">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-491">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d28e3-492">SSL バージョン 2 のプロトコルでは、クライアント証明書はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-492">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-493"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-493"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-494"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-494"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-495">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-495">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-496">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-496">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-497">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-497">-or-</span></span> 
<span data-ttu-id="d28e3-498">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-498">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-499">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-499">-or-</span></span> 
<span data-ttu-id="d28e3-500">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-500">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-501">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-501">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-502">クライアントとサーバー間の接続のサーバー側の認証を処理する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-502">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-503">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-503">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="d28e3-504">認証が完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-504">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-505">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-505">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-506">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-506">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-507">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-507">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-508">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-508">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-509">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-509">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span></span></summary>
        <returns><span data-ttu-id="d28e3-510">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-510">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="d28e3-511">証明書失効リストは、認証時にチェックされません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-511">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="d28e3-512">クライアントは、認証に対して証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-512">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="d28e3-513">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-513">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="d28e3-514">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-514">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-515">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-515">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-516">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-516">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-517">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-517">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-518">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-518">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-519">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-519">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-520"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-520"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-521">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-521">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-522">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-522">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-523">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-523">-or-</span></span> 
<span data-ttu-id="d28e3-524">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-524">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-525">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-525">-or-</span></span> 
<span data-ttu-id="d28e3-526">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-526">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-527">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-527">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-528">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-528">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-529">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-529">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-530">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-530">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-531">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-531">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-532">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-532">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-533">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-533">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-534">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-534">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-535">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-535">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-536">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-536">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-537">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-537">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-538">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-538">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="d28e3-539">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-539">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-540">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-540">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-541">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-541">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-542">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-542">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-543">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-543">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-544">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-544">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-545"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-545"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-546">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-546">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-547">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-547">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-548">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-548">-or-</span></span> 
<span data-ttu-id="d28e3-549">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-549">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-550">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-550">-or-</span></span> 
<span data-ttu-id="d28e3-551">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-551">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-552">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-552">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-553">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-553">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="d28e3-554">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="d28e3-554">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="d28e3-555">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-555">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="d28e3-556">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-556">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="d28e3-557">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-557">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="d28e3-558">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-558">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-559">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-559">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-560">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-560">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="d28e3-561">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-561">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-562">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-562">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span></span></summary>
        <returns><span data-ttu-id="d28e3-563">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-563">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="d28e3-564">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-564">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="d28e3-565">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-565">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-566">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-566">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-567">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-567">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="d28e3-568">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-568">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-569">表示された場合、 <xref:System.Security.Authentication.AuthenticationException>、この<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-569">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-570">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-570">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-571"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-571"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-572"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-572"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-573">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-573">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-574">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-574">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="d28e3-575">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-575">-or-</span></span> 
<span data-ttu-id="d28e3-576">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-576">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="d28e3-577">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-577">-or-</span></span> 
<span data-ttu-id="d28e3-578">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-578">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-579">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-579">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d28e3-580">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-580">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d28e3-581">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="d28e3-581">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d28e3-582">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d28e3-582">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="d28e3-583">ストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="d28e3-583">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-584">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-584">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-585">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-585">A user-defined object that contains information about the read operation.</span></span> <span data-ttu-id="d28e3-586">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-586">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-587">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-587">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="d28e3-588">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-588">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-589">暗号化や署名が有効になっている場合、読み取り操作はの基になるストリームからデータを読み取り、データの整合性をチェックや、暗号化を解除します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-589">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="d28e3-590">呼び出すことによって、非同期読み取り操作を完了する必要があります、<xref:System.Net.Security.SslStream.EndRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-590">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="d28e3-591">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-591">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="d28e3-592">このメソッドは、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-592">This method does not block while the operation completes.</span></span> <span data-ttu-id="d28e3-593">操作が完了するまでにブロックするを使用して、<xref:System.Net.Security.SslStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-593">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="d28e3-594">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="d28e3-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="d28e3-595"><xref:System.Net.Security.SslStream>クラスは、複数の同時読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-595">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="d28e3-596">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-596">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-597">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-597">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-598">次のコード例では、非同期読み取り操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-598">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="d28e3-599">読み取りが完了すると、次のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-599">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-600"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-600"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-601"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span><span class="sxs-lookup"><span data-stu-id="d28e3-601"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="d28e3-602"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-602"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d28e3-603">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-603">-or-</span></span> 
 <span data-ttu-id="d28e3-604"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-604"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-605">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-605">The read operation failed.</span></span>  
  
<span data-ttu-id="d28e3-606">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-606">-or-</span></span> 
<span data-ttu-id="d28e3-607">暗号化が使用されていますが、データを復号化できませんでした。</span><span class="sxs-lookup"><span data-stu-id="d28e3-607">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-608">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-608">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-609">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-609">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-610">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-610">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d28e3-611">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="d28e3-611">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d28e3-612">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d28e3-612">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="d28e3-613"><paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-613">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="d28e3-614">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d28e3-614">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="d28e3-615">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-615">A user-defined object that contains information about the write operation.</span></span> <span data-ttu-id="d28e3-616">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-616">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="d28e3-617">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-617">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="d28e3-618">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-618">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d28e3-619">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-619">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-620"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-620"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-621"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span><span class="sxs-lookup"><span data-stu-id="d28e3-621"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="d28e3-622"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-622"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d28e3-623">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-623">-or-</span></span> 
 <span data-ttu-id="d28e3-624"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-624"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-625">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-625">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-626">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-626">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-627">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-627">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-628">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-628">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-629">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-629">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="d28e3-630">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-630"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-631">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します<xref:System.IO.Stream.CanRead%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-631">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d28e3-632">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-632">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-633">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-633">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-634">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-634">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="d28e3-635">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-635">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-636">位置を設定しないで、<xref:System.Net.Security.SslStream>オブジェクトまたはその基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-636">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="d28e3-637">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-637">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-638">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-638">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="d28e3-639">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-639"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-640">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.CanTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-640">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d28e3-641">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-641">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-642">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-642">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-643">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-643">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="d28e3-644">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-644"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-645">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します<xref:System.IO.Stream.CanWrite%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-645">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="d28e3-646">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-646">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-647">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-647">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-648">証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-648">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span></span></summary>
        <value><span data-ttu-id="d28e3-649">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-649"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-650">証明書失効リストには、発行元によって失効した証明書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-650">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="d28e3-651">リストを照合パフォーマンスに影響を与えますが、アプリケーションのセキュリティが向上します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-651">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-652">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-652">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-653">この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-653">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="d28e3-654">これで使用する一括暗号化アルゴリズムを識別する値<see cref="T:System.Net.Security.SslStream" />します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-654">A value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-655">値<xref:System.Security.Authentication.CipherAlgorithmType.Null>が必要です、<xref:System.Net.Security.SslStream.CipherAlgorithm%2A>プロパティと、<xref:System.Net.Security.EncryptionPolicy.NoEncryption>構築に使用される列挙値、<xref:System.Net.Security.SslStream>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-655">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] <span data-ttu-id="d28e3-656">[!INCLUDE[winxp](~/includes/winxp-md.md)]をサポートしていない、<xref:System.Security.Authentication.CipherAlgorithmType.Null>値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-656">and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="d28e3-657">場合にも、<xref:System.Security.Authentication.CipherAlgorithmType.Null>構築に使用される値、<xref:System.Net.Security.SslStream>インスタンス、<xref:System.Net.Security.EncryptionPolicy>プロパティになります<xref:System.Security.Authentication.CipherAlgorithmType.None>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-657">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="d28e3-658"><xref:System.Security.Authentication.CipherAlgorithmType.Null> Windows Vista 以降でのみ値が返されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-658">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-659">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-659">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-660">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-660">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-661">この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-661">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="d28e3-662">アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-662">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-663">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-663">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d28e3-664">このプロパティは、次の値のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-664">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="d28e3-665">0</span><span class="sxs-lookup"><span data-stu-id="d28e3-665">0</span></span>  
  
-   <span data-ttu-id="d28e3-666">40</span><span class="sxs-lookup"><span data-stu-id="d28e3-666">40</span></span>  
  
-   <span data-ttu-id="d28e3-667">56</span><span class="sxs-lookup"><span data-stu-id="d28e3-667">56</span></span>  
  
-   <span data-ttu-id="d28e3-668">80</span><span class="sxs-lookup"><span data-stu-id="d28e3-668">80</span></span>  
  
-   <span data-ttu-id="d28e3-669">128</span><span class="sxs-lookup"><span data-stu-id="d28e3-669">128</span></span>  
  
-   <span data-ttu-id="d28e3-670">168</span><span class="sxs-lookup"><span data-stu-id="d28e3-670">168</span></span>  
  
-   <span data-ttu-id="d28e3-671">192</span><span class="sxs-lookup"><span data-stu-id="d28e3-671">192</span></span>  
  
-   <span data-ttu-id="d28e3-672">256</span><span class="sxs-lookup"><span data-stu-id="d28e3-672">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-673">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-673">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d28e3-674">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-674"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d28e3-675"><see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-675">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-676">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-676">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d28e3-677">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-677">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d28e3-678"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-678"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d28e3-679">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Security.SslStream>参照。</span><span class="sxs-lookup"><span data-stu-id="d28e3-679">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="d28e3-680">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-680">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d28e3-681">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-681">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d28e3-682">オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-682">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d28e3-683">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-683">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d28e3-684">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-684">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d28e3-685"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-685">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="d28e3-686"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-686">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-687">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-687">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="d28e3-688">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-688">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-689">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-689">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-690">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-690">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-691">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-691">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d28e3-692">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-692">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-693"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-693"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-694"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="d28e3-694"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-695">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-695">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-696">完了する保留中のサーバー認証がありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-696">There is no pending server authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d28e3-697"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-697">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="d28e3-698"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-698">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-699">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-699">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="d28e3-700">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.SslStream.IsEncrypted%2A>と<xref:System.Net.Security.SslStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-700">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="d28e3-701">チェック、<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-701">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="d28e3-702">受信した認証に失敗した場合、 <xref:System.Security.Authentication.AuthenticationException>、これと<xref:System.Net.Security.SslStream>使用できなくします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-702">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="d28e3-703">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d28e3-703">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="d28e3-704">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-704">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-705"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-705"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-706"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="d28e3-706"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="d28e3-707">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-707">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-708">完了する保留中のクライアント認証がありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-708">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d28e3-709"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-709">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="d28e3-710"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-710">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="d28e3-711">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-711">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-712">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-712">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="d28e3-713">この操作を同期的に実行するには、使用、<xref:System.Net.Security.SslStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-713">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="d28e3-714">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-714">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-715">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-715">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-716">次のコード例では、読み取り操作の非同期の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-716">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-717"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-717"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-718"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="d28e3-718"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-719">完了する保留中の読み取り操作がありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-719">There is no pending read operation to complete.</span></span>

<span data-ttu-id="d28e3-720">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-720">-or-</span></span>

<span data-ttu-id="d28e3-721">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-721">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-722">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-722">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d28e3-723"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-723">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="d28e3-724"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-724">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-725">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-725">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="d28e3-726">アプリケーションは、正常に認証が完了するまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-726">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-727">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-727">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d28e3-728">この操作を同期的に実行するには、使用、<xref:System.Net.Security.SslStream.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-728">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-729">次のコード例では、非同期書き込み操作の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-729">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-730"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-730"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-731"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="d28e3-731"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-732">完了する保留中の書き込み操作がありません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-732">There is no pending write operation to complete.</span></span>

<span data-ttu-id="d28e3-733">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-733">-or-</span></span>

<span data-ttu-id="d28e3-734">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-734">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-735">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-735">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d28e3-736">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-736">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-737">このメソッドは<xref:System.IO.Stream.Flush%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-737">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-738">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="d28e3-738">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-739">メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-739">Gets the algorithm used for generating message authentication codes (MACs).</span></span></summary>
        <value><span data-ttu-id="d28e3-740">メッセージ認証コード (Mac) を生成するために使用されるアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-740">The algorithm used for generating message authentication codes (MACs).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-741">メッセージ認証アルゴリズムは、メッセージのハッシュと改ざんや偽造の検出に使用される署名を生成します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-741">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-742">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-742">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-743">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-743">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-744">このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-744">Gets a value that identifies the strength of the hash algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="d28e3-745"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-745">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span></span> <span data-ttu-id="d28e3-746">有効値は 128 または 160 です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-746">Valid values are 128 or 160.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-747">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-747">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-748">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-748">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-749">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-749">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="d28e3-750">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-750"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-751">クライアントが呼び出すことによって認証、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-751">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="d28e3-752">サーバーを呼び出すことによって認証、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-752">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-753">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-753">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-754">この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-754">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="d28e3-755">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-755"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-756">暗号化は、データのプライバシーを保護すること、つまり役に立つことデータは、転送中は、サード パーティが解読できないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-756">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-757">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-757">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-758">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-758">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="d28e3-759">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-759"><see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-760">相互認証は、サーバー、クライアント認証証明書を提供する必要が生じると、サーバーによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-760">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-761">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-761">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-762">この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-762">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="d28e3-763">ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-763"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-764">このプロパティが返されますかどうか、認証に失敗しましたまたは発生しなかった、`false`します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-764">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="d28e3-765">サーバーで、認証に呼び出し、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-765">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-766">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-766">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-767">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-767">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="d28e3-768">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-768"><see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-769">署名によって、データの整合性を保護するデータを namely やすく、受信者が、データが転送中に改ざんされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-769">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-770">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-770">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-771">この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-771">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="d28e3-772"><see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-772">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-773">このプロパティの値が<xref:System.Security.Authentication.ExchangeAlgorithmType.None>まで、認証が行われます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-773">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d28e3-774">キー交換アルゴリズムは、共有キーを生成するための情報を保護します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-774">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-775">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-775">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-776">このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-776">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="d28e3-777"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-777">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-778">このプロパティの値は、認証が行われるまで、0 です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-778">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="d28e3-779">一般的なシナリオではこのプロパティの値は、次のいずれか。</span><span class="sxs-lookup"><span data-stu-id="d28e3-779">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="d28e3-780">512</span><span class="sxs-lookup"><span data-stu-id="d28e3-780">512</span></span>  
  
-   <span data-ttu-id="d28e3-781">768</span><span class="sxs-lookup"><span data-stu-id="d28e3-781">768</span></span>  
  
-   <span data-ttu-id="d28e3-782">1024</span><span class="sxs-lookup"><span data-stu-id="d28e3-782">1024</span></span>  
  
-   <span data-ttu-id="d28e3-783">2048</span><span class="sxs-lookup"><span data-stu-id="d28e3-783">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-784">次のコード例では、指定したストリーム用の暗号化設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-784">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-785">基になるストリームの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-785">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="d28e3-786">基になるストリームの長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-786">The length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-787">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.Length%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-787">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="d28e3-788">基になるストリームがシーク可能でない場合、このメソッドは通常は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-788">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="d28e3-789">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-789">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-790">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-790">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-791">ローカル エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-791">Gets the certificate used to authenticate the local endpoint.</span></span></summary>
        <value><span data-ttu-id="d28e3-792">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-792">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d28e3-793">次のコード例では、このプロパティによって返される証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-793">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-794">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-794">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-795">基になるストリーム内の現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-795">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="d28e3-796">基になるストリームの現在の位置。</span><span class="sxs-lookup"><span data-stu-id="d28e3-796">The current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-797">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.Position%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-797">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="d28e3-798">基になるストリームがシーク可能でない場合、このメソッドは通常は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-798">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="d28e3-799">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-799">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-800">このプロパティの設定は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-800">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="d28e3-801">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-801">-or-</span></span> 
<span data-ttu-id="d28e3-802">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-802">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d28e3-803">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="d28e3-803">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d28e3-804">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-804">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="d28e3-805">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-805">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span></span></param>
        <summary><span data-ttu-id="d28e3-806">このストリームからデータを読み取り、指定した配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-806">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="d28e3-807">読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-807">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span></span> <span data-ttu-id="d28e3-808">読み取るデータがこれ以上存在しない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-808">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-809">読み取る最大`count`ストリームからバイトに保存`buffer`から始まる`offset`します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-809">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="d28e3-810">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-810">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="d28e3-811">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-811">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-812">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-812">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d28e3-813">この操作を非同期的に実行するには使用、<xref:System.Net.Security.SslStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-813">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-814">次のコード例に示しますからの読み取り、<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-814">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-815"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-815"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-816"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span><span class="sxs-lookup"><span data-stu-id="d28e3-816"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="d28e3-817"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-817"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d28e3-818">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-818">-or-</span></span> 
 <span data-ttu-id="d28e3-819"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-819"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-820">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-820">The read operation failed.</span></span> <span data-ttu-id="d28e3-821">内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-821">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-822">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-822">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-823">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-823">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-824">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-824">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sslStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-825">読み取り操作がブロックしてデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-825">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="d28e3-826">同期読み取り操作が失敗するまでの時間。</span><span class="sxs-lookup"><span data-stu-id="d28e3-826">The amount of time that elapses before a synchronous read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-827">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.ReadTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-827">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="d28e3-828">このプロパティを設定するときに、<xref:System.IO.Stream.ReadTimeout%2A>基になるストリームの値が指定された値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-828">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="d28e3-829">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.SslStream.ReadTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では読み取ることの操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-829">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-830">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-830">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-831">リモート エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-831">Gets the certificate used to authenticate the remote endpoint.</span></span></summary>
        <value><span data-ttu-id="d28e3-832">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-832">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d28e3-833">次のコード例では、このプロパティによって返される証明書を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-833">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-834">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-834">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="d28e3-835">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-835">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="d28e3-836">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-836">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="d28e3-837">
  <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-837">Throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="d28e3-838">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-838">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-839">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="d28e3-839">Do not call this method.</span></span> <span data-ttu-id="d28e3-840">関数は、継承されますでサポートされていない、<xref:System.Net.Security.SslStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="d28e3-840">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-841">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-841">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d28e3-842">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-842">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="d28e3-843">基になるストリームの長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-843">Sets the length of the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-844">このメソッドは<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>時に指定した基になるストリームでこの<xref:System.Net.Security.SslStream>が作成されました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-844">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d28e3-845">この SslStream を終了します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-845">Shuts down this SslStream.</span></span></summary>
        <returns><span data-ttu-id="d28e3-846">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-846">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-847">この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-847">Gets a value that indicates the security protocol used to authenticate this connection.</span></span></summary>
        <value><span data-ttu-id="d28e3-848">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-848">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-849">サポートされているセキュリティ プロトコルが指定されたときに、<xref:System.Net.Security.SslStream>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-849">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="d28e3-850">使用してインスタンスを作成する場合、セキュリティ プロトコルがコンス トラクターに渡されなかった、<xref:System.Security.Authentication.SslProtocols.Default>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-850">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="d28e3-851">クライアントとサーバーでサポートされるプロトコルに基づく認証に使用される実際のプロトコルが選択されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-851">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-852">次の例では、指定したストリームのセキュリティ プロパティが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-852">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-853">拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-853">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span></span></summary>
        <value><span data-ttu-id="d28e3-854">拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d28e3-854">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="d28e3-855">統合 Windows 認証と拡張保護</span><span class="sxs-lookup"><span data-stu-id="d28e3-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d28e3-856">このストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-856">Writes data to this stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d28e3-857">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="d28e3-857">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <summary><span data-ttu-id="d28e3-858">このストリームに指定したデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-858">Writes the specified data to this stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-859">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-859">This method blocks while the operation completes.</span></span> <span data-ttu-id="d28e3-860">使用して、操作が完了するまでのブロックを防ぐため、<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-860">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="d28e3-861">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-861">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-862">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-862">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d28e3-863"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-863">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-864">次のコード例に示します認証への書き込み<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-864">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-865"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-865"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-866">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-866">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-867">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-867">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-868">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-868">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-869">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-869">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d28e3-870">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="d28e3-870">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d28e3-871">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-871">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="d28e3-872"><paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d28e3-872">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="d28e3-873">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d28e3-873">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-874">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-874">This method blocks while the operation completes.</span></span> <span data-ttu-id="d28e3-875">操作には、操作が完了するまでブロックされないように、完了すると、使用、<xref:System.Net.Security.SslStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-875">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="d28e3-876">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-876">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="d28e3-877">最初の呼び出しを認証する、 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d28e3-877">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="d28e3-878"><xref:System.Net.Security.SslStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-878">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d28e3-879"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d28e3-879"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d28e3-880"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span><span class="sxs-lookup"><span data-stu-id="d28e3-880"><paramref name="offset" />
          <paramref name="&lt;" />
          <paramref name="0" />.</span></span>  
  
 <span data-ttu-id="d28e3-881"><paramref name="-or-" /><paramref name="offset" /> &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-881"><paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d28e3-882">または</span><span class="sxs-lookup"><span data-stu-id="d28e3-882">-or-</span></span> 
 <span data-ttu-id="d28e3-883"><paramref name="offset" />+ count &gt; <paramref name="buffer" /> の長さ。</span><span class="sxs-lookup"><span data-stu-id="d28e3-883"><paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d28e3-884">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-884">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d28e3-885">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-885">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d28e3-886">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="d28e3-886">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d28e3-887">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="d28e3-887">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d28e3-888">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-888">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="d28e3-889">同期書き込み操作が失敗するまでに経過した時間数。</span><span class="sxs-lookup"><span data-stu-id="d28e3-889">The amount of time that elapses before a synchronous write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d28e3-890">このプロパティは、呼び出しによって返される値を返します<xref:System.IO.Stream.WriteTimeout%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="d28e3-890">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="d28e3-891">設定操作で指定された値の設定、<xref:System.IO.Stream.WriteTimeout%2A>基になるストリームの値。</span><span class="sxs-lookup"><span data-stu-id="d28e3-891">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="d28e3-892">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.SslStream.WriteTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では書き込み操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="d28e3-892">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d28e3-893">次のコード例では、このプロパティの値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="d28e3-893">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>