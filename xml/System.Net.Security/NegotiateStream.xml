<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="440e3168fb00e14f288d11a68c367234fe8d4432" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39872015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6cdc5-101">クライアント サーバー通信で Negotiate セキュリティ プロトコルを使用してクライアントの認証と (オプションで) サーバーの認証を行うストリームを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6cdc5-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-102">使用して、<xref:System.Net.Security.NegotiateStream>認証およびセキュリティで保護された情報をクラスが、クライアントとサーバーの間で送信します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="6cdc5-103">使用して<xref:System.Net.Security.NegotiateStream>次を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="6cdc5-104">権限の借用または委任のサーバーにクライアントの資格情報を送信します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="6cdc5-105">サーバー認証を要求します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="6cdc5-106">暗号化や、データを転送する前にサインインします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="6cdc5-107">認証は、情報を送信する前に実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="6cdc5-108">クライアントは、同期を使用して認証を要求<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドで、認証が完了するまでブロック、または非同期<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>メソッドで、認証が完了するを待機中にブロックしないでください。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="6cdc5-109">サーバーは、同期を使用して認証を要求<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>または非同期<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="6cdc5-110">クライアント、および必要に応じて、サーバーは、Negotiate セキュリティ プロトコルを使用して認証されます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="6cdc5-111">Windows 95/98 システムでは、Windows NT LAN Manager (NTLM) は、認証に使用されるプロトコルです。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="6cdc5-112">その他のプラットフォーム、Kerberos プロトコルが認証に使用場合、クライアントとサーバーの両方をサポートします。それ以外の場合、NTLM が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="6cdc5-113">これらのプロトコルの詳細な説明についてには、msdn のプラットフォーム SDK ドキュメントを参照して msdn.microsoft.com/library/ にします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="6cdc5-114"><xref:System.Net.Security.NegotiateStream>クラスは、セキュリティ サポート プロバイダー インターフェイス (SSPI) を使用して認証を実行します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="6cdc5-115">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスで使用される、<xref:System.Net.Security.NegotiateStream>転送中に、データを保護するためにします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="6cdc5-116">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="6cdc5-117">リモート クライアントまたはサーバーを使用してに関する情報を取得することができます、<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="6cdc5-118">認証が失敗した場合が表示されます、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-119">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="6cdc5-120">同期を使用してデータを送信する<xref:System.Net.Security.NegotiateStream.Write%2A>または非同期<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="6cdc5-121">同期を使用してデータを受信する<xref:System.Net.Security.NegotiateStream.Read%2A>または非同期<xref:System.Net.Security.NegotiateStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="6cdc5-122">セキュリティ サービスの暗号化または署名が有効になっているなど、これらは自動的に適用してデータを<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-123"><xref:System.Net.Security.NegotiateStream>を作成するときにストリームを使用してデータ転送、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-124">指定するオプションがあるこの基になるストリームを指定するときに閉じるかどうか、<xref:System.Net.Security.NegotiateStream>も基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-125">次のコード例に示しますを使用するクライアント サーバー接続のクライアント側、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-126">クライアントが認証し、サーバーにメッセージを非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="6cdc5-127">次のコード例に示しますを使用するクライアント サーバー接続のサーバー側、<xref:System.Net.Security.NegotiateStream>にクライアントを認証し、クライアントから送信されたメッセージを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-128">
            <see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-129">防ぐために、<xref:System.Net.Security.NegotiateStream>から指定したストリームを閉じると、使用して、<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6cdc5-130">
            <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-131">
            <see cref="T:System.Net.Security.NegotiateStream" /> を指定して <see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6cdc5-132">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6cdc5-133">
            <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="6cdc5-134">この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じても、<c>innerstream</c> が影響を受けないことを示す場合は <see langword="true" />。この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じると、<c>innerStream</c> も閉じられることを示す場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-135">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-136">指定すると`true`の`leaveStreamOpen`パラメーター、閉じる、<xref:System.Net.Security.NegotiateStream>も何も起こりません、`innerStream`ストリーム; 明示的に閉じる必要があります`innerStream`が不要になった場合。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-137">次のコード例では、このコンス トラクターの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="6cdc5-138">このコード例が示されている例の一部、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-139">
            <paramref name="innerStream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-140">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-140">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-141">
            <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-141">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-142">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-143">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-144">認証に使用して、クライアントの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-144">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-145">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-145">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-146">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-146">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-147"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-147">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-148">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-148">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-149">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-149">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-150">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-150">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-151">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-151">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-152">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-152">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-153">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-153">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-154">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-154">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-155">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-155">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-156">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-156">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-157">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-157">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-158">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-158">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-159">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-159">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-160">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-160">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-161">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-161">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-162">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-163">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-163">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-164">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-164">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-165">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-165">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-166">認証プロセスでは、指定したクライアントの資格情報を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-166">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-167">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-167">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-168"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-168">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-169">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-169">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-170">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-170">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-171">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-172">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-173">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-173">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-174">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-174">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-175">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-175">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-176">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-176">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-177">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-177">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-178">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-178">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-179">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-179">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-180">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-180">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-181">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-181">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-182">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-183">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-183">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-184">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-184">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-185">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-185">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-186">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-186">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-187">認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-187">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-188">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-188">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-189"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-189">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-190"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>拡張保護では、このメソッドに渡されるため、`binding`からのアプリケーションでパラメーターを取得すると<xref:System.Net.Security.SslStream.TransportContext%2A>プロパティに関連付けられている<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-190">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-191">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-191">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-192">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-192">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-193">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-193">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-194">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-194">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-195">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-195">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-196">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-196">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-197">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-197">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-198">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-198">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-199">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-199">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-200">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-200">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-201">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-201">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-202">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-202">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-203">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-203">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-204">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-204">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-205">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-205">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-206">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-206">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-207">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-207">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-208">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-208">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-209">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-209">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-210">認証プロセスでは、指定した資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-210">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-211">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-211">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-212">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-212">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-213">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-213">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-214">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-214">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-215">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-215">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-216">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-216">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-217">
            <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-217">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-218">
            <paramref name="targetName" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-218">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-219">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-219">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-220">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-220">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-221">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-222">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-223">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-223">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-224">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-224">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-225">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-225">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-226">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-226">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-227">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-227">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-228">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-228">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-229">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-230">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-230">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-231">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-231">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-232">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-232">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-233">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-233">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-234">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-234">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-235">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-235">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-236">認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-236">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-237">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-237">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-238">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-238">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-239">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-239">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-240">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-240">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-241"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>拡張保護では、このメソッドに渡されるため、`binding`からのアプリケーションでパラメーターを取得すると<xref:System.Net.Security.SslStream.TransportContext%2A>プロパティに関連付けられている<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-241">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-242">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-242">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-243">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-243">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-244">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-244">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-245">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-245">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-246">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-246">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-247">
            <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-247">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-248">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-248">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-249">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-249">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-250">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-251">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-252">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-252">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-253">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-253">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-254">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-254">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-255">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-255">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-256">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-256">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-257">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-257">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-258">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-258">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-259">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-259">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-260">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-260">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-261">認証に使用して、クライアントの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-261">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-262">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-262">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-263">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-263">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-264"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-264">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-265">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-265">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-266">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-266">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-267">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-267">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-268">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-268">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-269">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-269">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-270">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-270">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-271">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-271">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-272">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-272">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-273">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-273">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-274">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-274">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-275">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-275">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-276">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-276">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-277">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-277">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-278">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-278">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-279">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-279">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-280">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-280">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-281">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-281">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-282">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-282">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-283">認証プロセスでは、指定したクライアントの資格情報を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-283">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-284">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-284">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-285">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-285">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-286">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-286">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-287"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-287">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-288">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-288">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-289">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-289">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-290">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-290">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-291">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-291">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-292">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-292">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-293">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-293">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-294">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-294">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-295">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-295">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-296">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-296">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-297">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-297">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-298">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-298">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-299">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-299">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-300">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-300">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-301">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-301">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-302">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-302">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-303">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-303">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-304">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-304">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-305">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-305">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-306">認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-306">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-307">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-307">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-308">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-309">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>、相互認証が要求されたとします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="6cdc5-310"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>拡張保護では、このメソッドに渡されるため、`binding`からのアプリケーションでパラメーターを取得すると<xref:System.Net.Security.SslStream.TransportContext%2A>プロパティに関連付けられている<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-312">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-313">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-314">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-314">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-315">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-315">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-316">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-316">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-317">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-317">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-318">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-318">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-319">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-319">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-320">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-320">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-321">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-321">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-322">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-322">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-323">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-323">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-324">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-324">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-325">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-325">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-326">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-326">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-327">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-327">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-328">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-328">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-329">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-329">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-330">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-330">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-331">認証プロセスでは、指定した資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-331">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-332">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-332">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-333">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-333">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-334">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-335">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-336">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-337">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-338">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-339">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-340">
            <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-340">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-341">
            <paramref name="targetName" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-341">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-342">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-342">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-343">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-343">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-344">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-344">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-345">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-345">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-346">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-346">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-347">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-347">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-348">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-348">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-349">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-349">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-350">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-350">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-351">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-352">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-353">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-354">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-355">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-356">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-357">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-358">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-359">認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-359">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-360">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-360">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-361">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-361">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-362">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-362">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-363">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-363">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-364">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-364">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-365">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-365">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-366"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>拡張保護では、このメソッドに渡されるため、`binding`からのアプリケーションでパラメーターを取得すると<xref:System.Net.Security.SslStream.TransportContext%2A>プロパティに関連付けられている<xref:System.Net.Security.SslStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-366">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-367">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-367">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-368">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-368">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-369">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-369">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-370">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-370">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-371">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-371">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-372">
            <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-372">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-373">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-373">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-374">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-374">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-375">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-376">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-377">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-377">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-378">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-378">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-379">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-379">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-380">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-380">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-381">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-381">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-382">クライアント サーバー接続の認証のサーバー側を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-382">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-383">これらのメソッドは、認証が進行中はブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="6cdc5-384">認証が完了するを待機中にブロックからアプリケーションを防ぐためには、使用、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-385">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-386">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-387">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-388">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルと<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-389">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-390">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-391">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="6cdc5-392">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-393">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-394">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-395">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-395">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-396">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-396">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-397">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-398">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-399">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-399">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-400">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-400">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-401">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-402">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="6cdc5-403">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-404">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-405">認証プロセスでは、指定した拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-405">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-406">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-407">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-408">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルと<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-409">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-410">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-411">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-412">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="6cdc5-413">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-414">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-415">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-416">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-417">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-418">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-418">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-419">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-420">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-421">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-421">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-422">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-422">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-423">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-424">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-424">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-425">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-425">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-426">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-426">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-427">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-427">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-428">認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-428">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-429">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-429">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-430">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-430">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-431">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-431">This method blocks until the operation completes.</span></span> <span data-ttu-id="6cdc5-432">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-432">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-433">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-433">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-434">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-434">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-435">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-435">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-436">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-436">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-437">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-437">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-438">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-438">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-439">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-439">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-440">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-440">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-441">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-441">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-442">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-442">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-443">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-443">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-444">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-444">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-445">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-445">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-446">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-446">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-447">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-447">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-448">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-449">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-449">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="6cdc5-450">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-450">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-451">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-451">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-452">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-452">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-453">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-453">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-454">認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-454">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-455">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-455">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-456">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-456">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-457">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-457">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-458">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-458">This method blocks until the operation completes.</span></span> <span data-ttu-id="6cdc5-459">操作が完了するまでのブロックを防ぐための 1 つを使用して、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-459">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-460">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-460">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-461">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-461">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-462">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-462">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-463">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-463">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-464">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-464">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-465">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-465">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-466">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-466">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-467">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-467">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-468">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-468">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-469">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-469">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-470">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-470">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-471">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-471">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-472">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-472">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-473">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-473">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-474">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-474">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-475">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-475">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-476">クライアントとサーバー間の接続のサーバー側の認証を非同期操作として処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-476">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-477">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-477">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-478">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-478">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-479">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-479">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-480">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-480">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-481">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-481">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-482">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルと<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-482">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-483">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-483">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-484">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-484">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-485">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-485">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-486">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-486">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-487">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-488">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-489">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-489">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-490">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-490">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-491">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-491">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-492">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-492">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-493">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-493">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-494">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-494">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="6cdc5-495">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-495">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-496">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-496">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-497">認証プロセスでは、指定した拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-497">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-498">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-498">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-499">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-499">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-500">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-501">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-502">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルと<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-503">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-504">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-505">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-506">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-507">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-508">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-509">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-509">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-510">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-510">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-511">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-511">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-512">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-512">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-513">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-513">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-514">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-514">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-515">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-516">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-516">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-517">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-518">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-519">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-520">認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-520">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-521">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-521">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-522">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-522">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-523">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-524">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-525">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-526">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-527">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-527">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-528">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-528">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-529">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-529">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-530">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-530">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-531">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-531">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-532">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-532">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-533">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-533">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-534">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-535">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-535">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-536">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-536">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-537">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-537">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-538">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-538">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-539">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-540">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-541">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="6cdc5-542">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-543">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-544">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-545">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6cdc5-546">認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-547">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-547">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6cdc5-548">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-548">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-549">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-549">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-550">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-550">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-551">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-551">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-552">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-552">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-553">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-553">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-554">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-554">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-555">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-555">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-556">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-556">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-557">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-557">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-558">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-558">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-559">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-559">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-560">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-560">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-561">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-561">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-562">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-562">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-563">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-563">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-564">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-564">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-565">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-565">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-566">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-566">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-567">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-567">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-568">クライアントとサーバー間の接続のクライアント側を認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-569">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="6cdc5-570">認証が完了するを待機中にブロックするには、いずれかを使用、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-571">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-572">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-572">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="6cdc5-573">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-573">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-574">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-575">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-575">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-576">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-577">認証に使用して、クライアントの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-578">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-579">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルと<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="6cdc5-580"><xref:System.Net.Security.NegotiateStream>クラスが相互認証に使用される SPN を作成します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-581">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-582">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-583">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6cdc5-584">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-585">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-586">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-587">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-588">次のコード例では、クライアントの非同期の認証を開始するには、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-588">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-589">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-590">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-591">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-592">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-593">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-594">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-595">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-595">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-596">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-596">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-597">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-597">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-598">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-599">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-600">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-601">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-602">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-603">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-604">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-605">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-606">認証プロセスでは、指定した資格情報を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-606">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="6cdc5-607">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-608">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-609">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-610">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-611">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6cdc5-612">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-613">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-614">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-615">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-616">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-617">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-617">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-618">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-618">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-619">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-619">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-620">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-620">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-621">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-621">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-622">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-622">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-623">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-623">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-624">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-624">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-625">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-625">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-626">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-626">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-627">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-627">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-628">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-629">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-630">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-631">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-632">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-633">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-634">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-634">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-635">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-635">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-636">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-637">認証プロセスでは、指定した資格情報およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-637">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="6cdc5-638">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-638">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-639">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-640">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-641">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-642">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6cdc5-643">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-644">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-645">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-646">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-647">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-647">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-648">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-648">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-649">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-649">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-650">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-651">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-652">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-653">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-654">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-654">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-655">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-655">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-656">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-656">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-657">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-658">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-658">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-659">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-659">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-660">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-660">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-661">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-661">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-662">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-662">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-663">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-663">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-664">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-664">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-665">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-665">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-666">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-666">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-667">認証プロセスでは、指定した資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-667">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="6cdc5-668">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-668">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-669">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-669">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-670">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-670">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-671">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-671">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-672">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-672">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-673">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-673">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-674">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-674">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-675">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-675">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-676">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-676">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6cdc5-677">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-677">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-678">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-678">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-679">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-679">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-680">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-680">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-681">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-681">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-682">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-682">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-683">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-683">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-684">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-684">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-685">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-685">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-686">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-686">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-687">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-687">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-688">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-688">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-689">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-690">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-690">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-691">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-691">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-692">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-692">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-693">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-693">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-694">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-694">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-695">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-695">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="6cdc5-696">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-696">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="6cdc5-697">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-697">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-698">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-698">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="6cdc5-699">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-699">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-700">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-700">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-701">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-701">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-702">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-702">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-703">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-703">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-704">認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-704">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="6cdc5-705">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-705">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-706">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-706">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-707">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-707">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-708">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-708">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-709">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-709">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-710">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-710">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-711">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-711">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-712">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-712">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-713">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-713">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6cdc5-714">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-714">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-715">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-715">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-716">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-716">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-717">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-717">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-718">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-718">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6cdc5-719">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-719">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-720">
            <paramref name="targetName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-720">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-721">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-721">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-722">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-722">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-723">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-723">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-724">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-724">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-725">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-725">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-726">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-726">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-727">このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-727">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="6cdc5-728">ストリームを使用して、クライアントとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-728">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-729">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-729">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-730">クライアントとサーバー間の接続のサーバー側の認証を処理する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-730">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-731">このメソッドのオーバー ロードでは、認証の進行中はブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-731">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="6cdc5-732">認証が完了するを待機中にブロックを使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-732">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-733">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-733">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-734">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-734">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="6cdc5-735">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-735">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-736">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-736">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-737">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-737">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-738">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-738">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-739">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-739">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-740">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-740">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-741">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-741">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-742">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-742">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-743">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-743">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-744">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-744">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-745">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-745">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-746">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-746">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-747">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-747">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-748">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-748">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-749">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-749">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-750">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-750">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-751">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-751">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-752">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-752">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-753">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-753">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-754">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-754">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="6cdc5-755">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-755">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-756">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-756">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-757">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-757">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-758">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-758">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-759">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-759">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-760">認証プロセスでは、指定した拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-760">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="6cdc5-761">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-761">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-762">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-762">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-763">認証に使用して、サーバーの<xref:System.Net.CredentialCache.DefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-763">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="6cdc5-764">サーバーのサービス プリンシパル名 (SPN) が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-764">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="6cdc5-765">偽装レベルが<xref:System.Security.Principal.TokenImpersonationLevel.Identification>、セキュリティ レベルが<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-765">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="6cdc5-766">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-766">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-767">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-767">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-768">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-768">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-769">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-769">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-770">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-770">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-771">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-771">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-772">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-772">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-773">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-773">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-774">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-774">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-775">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-775">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-776">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-776">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-777">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-777">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-778">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-778">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-779">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-779">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-780">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-780">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-781">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-781">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-782">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-782">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-783">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-783">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-784">操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-784">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="6cdc5-785">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-785">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-786">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-786">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-787">認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-787">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="6cdc5-788">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-788">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-789">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-789">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-790">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-790">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-791">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-791">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-792">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-792">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-793">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-793">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-794">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-794">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-795">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-795">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-796">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-796">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="6cdc5-797">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-797">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-798">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-798">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-799">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-799">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-800">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-800">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-801">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-802">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-803">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-804">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-805">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-806">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-807">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-807">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-808">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-808">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-809">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-809">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-810">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-810">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-811">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-811">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-812">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-812">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6cdc5-813">明示的なを使用する<see cref="T:System.Net.NetworkCredential" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-813">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="6cdc5-814">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-814">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="6cdc5-815">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-815">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="6cdc5-816">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-816">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="6cdc5-817">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-817">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="6cdc5-818">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-818">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-819">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-819">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-820">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-820">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-821">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-821">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-822">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-822">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="6cdc5-823">認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-823">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="6cdc5-824">このメソッドはブロックしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-824">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-825">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-825">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-826">使用して、`requiredProtectionLevel`認証済みのストリームを使用して送信されるデータのセキュリティ サービスを要求するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-826">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="6cdc5-827">たとえば、暗号化および署名されたデータを表示するには、次のように指定します。、<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-827">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="6cdc5-828">認証が成功したとは限りませんが、要求された<xref:System.Net.Security.ProtectionLevel>が許可されています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-828">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="6cdc5-829">確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-829">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="6cdc5-830">場合、`policy`パラメーターが`null`が拡張保護ポリシーを使用し、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-830">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="6cdc5-831">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-831">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-832">操作が完了するまでにブロックするのいずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-832">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6cdc5-833">呼び出すことによって、非同期認証操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-833">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="6cdc5-834">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-834">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-835">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-835">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-836">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-836">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-837">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-837">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-838">
            <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-838">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-839">
            <paramref name="credential" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-839">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6cdc5-840">
            <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-840">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-841">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-841">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-842">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-842">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-843">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-843">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-844">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-844">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-845">認証が既に発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-845">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6cdc5-846">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-846">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-847">このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-847">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="6cdc5-848">このストリームを使用して、サーバーとして認証を再試行することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-848">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-849">Windows 95 と Windows 98 はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-849">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-850">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-850">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6cdc5-851">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-851">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6cdc5-852">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-852">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6cdc5-853">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-853">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6cdc5-854">ストリームから読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-854">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-855">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-855">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-856">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-856">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="6cdc5-857">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-857">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-858">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-858">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-859">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-859">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-860">暗号化、署名または暗号化および署名が有効になっている場合、読み取り操作は基になるストリームからデータを読み取ります、データの整合性をチェックし、暗号化を解除します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-860">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="6cdc5-861">使用中のデータの暗号化や署名などのセキュリティ サービスなし、されていない場合、このメソッドは、基になるストリームの非同期読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-861">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="6cdc5-862">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-862">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-863">操作が完了するまでにブロックするを使用して、<xref:System.Net.Security.NegotiateStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-863">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="6cdc5-864">呼び出すことによって、非同期読み取り操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-864">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="6cdc5-865">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-865">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-866">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-866">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-867"><xref:System.Net.Security.NegotiateStream>クラスは、複数の同時読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-867">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="6cdc5-868">他の操作が、同じストリームで既に実行中の読み取り中に、読み取り操作を開始しようとした場合、<xref:System.NotSupportedException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-868">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="6cdc5-869">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-869">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-870">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-870">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-871">次のコード例では、非同期読み取り操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-871">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="6cdc5-872">このコード例が示されている例の一部、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-872">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-873">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-873">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-874">
            <paramref name="offset" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-874">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="6cdc5-875">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-875">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-876">
            <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-876">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6cdc5-877">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-877">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-878">
            <paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-878">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-879">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-879">The read operation failed.</span>
          </span>
          <span data-ttu-id="6cdc5-880">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-880">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-881">暗号化が使用されていますが、データを復号化できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-881">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-882">既に実行中の読み取り操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-882">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-883">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-883">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-884">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-884">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6cdc5-885">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-885">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6cdc5-886">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-886">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6cdc5-887">
            <c>buffer</c> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-887">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6cdc5-888">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-888">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6cdc5-889">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-889">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="6cdc5-890">このオブジェクトは、操作の完了時に <c>asyncCallback</c> デリゲートに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-890">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-891">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-891">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-892">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-892">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-893">暗号化、署名または暗号化および署名が有効になっている場合このメソッド バッファーからデータを読み取ります、暗号化、署名、または暗号化し署名、および基になるストリームを使用して送信します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-893">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="6cdc5-894">使用中のデータの暗号化や署名などのセキュリティ サービスなし、されていない場合、このメソッドは、基になるストリームに非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-894">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="6cdc5-895">このメソッドは非同期であり、操作が完了するにはブロックしません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-895">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="6cdc5-896">操作が完了するまでにブロックするを使用して、<xref:System.Net.Security.NegotiateStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-896">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="6cdc5-897">呼び出すことによって、非同期読み取り操作を完了する必要があります、<xref:System.Net.Security.NegotiateStream.EndWrite%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-897">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="6cdc5-898">通常、メソッドは、によって呼び出される、`asyncCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-898">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="6cdc5-899">詳細については、非同期プログラミング モデルを使用して、次を参照してください[Calling Synchronous Methods Asynchronously。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6cdc5-899">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6cdc5-900"><xref:System.Net.Security.NegotiateStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-900">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="6cdc5-901">別の書き込み操作の同一のストリームで既に実行中に、書き込み操作を開始しようとした場合、<xref:System.NotSupportedException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-901">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="6cdc5-902">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-902">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-903">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-903">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-904">次のコード例では、非同期の書き込み操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-904">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="6cdc5-905">次のメソッドは、操作の完了時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-905">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-906">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-906">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-907">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-907">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="6cdc5-908">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-908">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-909">
            <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-909">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6cdc5-910">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-910">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-911">
            <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-911">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-912">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-912">The write operation failed.</span>
          </span>
          <span data-ttu-id="6cdc5-913">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-913">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-914">暗号化が使用されていますが、データを暗号化できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-914">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-915">既に実行中の書き込み操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-915">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-916">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-916">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-917">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-917">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-918">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-918">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-919">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-919">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-920">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します、<xref:System.IO.Stream.CanRead%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-920">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-921">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-921">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-922">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-922">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-923">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-923">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-924">このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-924">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-925">位置を設定しないで、<xref:System.Net.Security.NegotiateStream>オブジェクトまたはその基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-925">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="6cdc5-926">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-926">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-927">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-927">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-928">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-928">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-929">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-929">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-930">このプロパティは、呼び出しによって返される値を返します、<xref:System.IO.Stream.CanTimeout%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-930">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-931">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-931">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-932">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-932">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-933">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-933">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-934">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-934">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-935">認証が成功したが発生した場合、このプロパティは呼び出すことによって返される値を返します、<xref:System.IO.Stream.CanWrite%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-935">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-936">インスタンスを作成するときに、基になるストリームが指定されて、<xref:System.Net.Security.NegotiateStream>クラス。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-936">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-937">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-937">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6cdc5-938">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-938">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-939">
            <see cref="T:System.Net.Security.NegotiateStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-939">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-940">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-940">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6cdc5-941">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-941">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6cdc5-942"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-942"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6cdc5-943">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Security.NegotiateStream>参照。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-943">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="6cdc5-944">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-944">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6cdc5-945">
            <para>
              <see langword="Dispose" /> 他のオブジェクトで何度も呼び出せます。オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-945">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6cdc5-946">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-946">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-947">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-947">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-948">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-948">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="6cdc5-949">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-949">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-950">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-950">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-951">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-951">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-952">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-952">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="6cdc5-953">この操作を同期的に実行するには、いずれかの操作を使用して、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-953">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-954">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-954">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-955">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-955">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-956">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-956">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-957">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-957">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-958">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-958">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-959">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-959">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-960">完了する保留中のクライアント認証がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-960">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6cdc5-961">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-961">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-962">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-962">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-963">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-963">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="6cdc5-964">認証が成功した場合、確認する必要があります、<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>と<xref:System.Net.Security.NegotiateStream.IsSigned%2A>プロパティを確認してどのようなセキュリティ サービスを使って、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-964">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="6cdc5-965">チェック、<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>プロパティを相互認証が発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-965">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6cdc5-966">受信した認証に失敗した場合、<xref:System.Security.Authentication.AuthenticationException>または<xref:System.Security.Authentication.InvalidCredentialException>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-966">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="6cdc5-967">この場合、別の資格情報を使用して認証を再試行できます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-967">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="6cdc5-968">この操作を同期的に実行するには、使用、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-968">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-969">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-969">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-970">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-970">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6cdc5-971">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-971">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-972">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-972">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="6cdc5-973">認証に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-973">The authentication failed.</span>
          </span>
          <span data-ttu-id="6cdc5-974">このオブジェクトを使用して、認証を再試行できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-974">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-975">完了する保留中の認証がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-975">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6cdc5-976">
            <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-976">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-977">
            <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の読み取り操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-977">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-978">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-978">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-979">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-979">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="6cdc5-980">この操作を同期的に実行するには、使用、<xref:System.Net.Security.NegotiateStream.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-980">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="6cdc5-981">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-981">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-982">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-982">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-983">次のコード例では、読み取り操作の非同期の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-983">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="6cdc5-984">操作を開始する例を参照してください<xref:System.Net.Security.NegotiateStream.BeginRead%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-984">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-985">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-985">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-986">
            <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-986">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-987">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-987">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-988">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-988">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6cdc5-989">
            <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-989">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-990">
            <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の書き込み操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-990">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-991">操作が完了していない場合、このメソッドは、終了する前をブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-991">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="6cdc5-992">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-992">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-993">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-993">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6cdc5-994">この操作を同期的に実行するには、使用、<xref:System.Net.Security.NegotiateStream.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-994">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-995">次のコード例では、非同期書き込み操作を完了するために呼び出されるメソッドを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-995">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="6cdc5-996">操作を開始する例を参照してください<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-996">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-997">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-997">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-998">
            <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-998">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-999">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-999">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-1000">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1000">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1001">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1001">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1002">このメソッドは<xref:System.IO.Stream.Flush%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1002">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1003">次のコード例では、ストリームのフラッシュを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1003">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1004">サーバーでクライアントの資格情報を使用する方法を示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1004">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1005">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1005">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1006">このメソッドを呼び出す前に正常に認証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1006">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="6cdc5-1007">クライアントは、のいずれかを呼び出すことによって認証を要求するときに、偽装レベルを指定、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1007">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="6cdc5-1008">指定せずに認証する場合、 <xref:System.Security.Principal.TokenImpersonationLevel> 、<xref:System.Security.Principal.TokenImpersonationLevel.Identification>使用されます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1008">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1009">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1009">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-1010">認証に失敗したか、認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1010">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1011">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1011">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1012">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1012">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1013">クライアントが呼び出すことによって認証、<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1013">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="6cdc5-1014">サーバーを呼び出すことによって認証、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1014">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1015">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1015">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1016">この <see cref="T:System.Net.Security.NegotiateStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1016">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1017">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1017">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1018">暗号化は、データのプライバシーを保護するのに役立ちます具体的には、これはことデータが転送中に、サード パーティによって解読できないことを確認するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1018">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1019">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1019">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1020">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1020">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1021">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1021">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1022">相互認証は、クライアントが、サーバー認証に対して資格情報を提供するときに、クライアントによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1022">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="6cdc5-1023">既定では、クライアントは、相互認証を要求します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1023">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="6cdc5-1024">Negotiate プロトコルは、クライアントとサーバーでサポートされるセキュリティ プロトコルに応じて、NTLM または Kerberos のいずれかを選択します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1024">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="6cdc5-1025">NTLM は、相互認証をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1025">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1026">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1027">この <see cref="T:System.Net.Security.NegotiateStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1028">ローカル エンドポイントが、認証される接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1028">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1029">このプロパティが返されますかどうか、認証に失敗しましたまたは発生しなかった、`false`します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1029">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="6cdc5-1030">サーバーで、認証に呼び出し、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1030">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1031">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1031">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1032">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1032">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1033">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1033">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1034">データの署名は、データの整合性を保護するのに役立ちますつまり、受信者をデータが転送中に改ざんされているかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1034">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1035">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1035">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1036">基になるストリームの長さを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1036">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1037">基になるストリームの長さを指定する <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1037">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1038">このプロパティは、呼び出しによって返される値を返します、<xref:System.IO.Stream.Length%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1038">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-1039">基になるストリームがシーク可能でない場合このプロパティは通常、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1039">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="6cdc5-1040">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1040">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1041">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1041">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-1042">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1042">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1043">基になるストリーム内の現在位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1043">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1044">基になるストリーム内の現在の位置を指定する <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1044">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1045">このプロパティは、呼び出しによって返される値を返します、<xref:System.IO.Stream.Position%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1045">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-1046">基になるストリームがシーク可能でない場合このプロパティは通常、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1046">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="6cdc5-1047">基になるストリームの実行時の型は、スローされる例外の実行時の型を決定します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1047">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-1048">このプロパティの設定は、サポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1048">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="6cdc5-1049">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1049">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-1050">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1050">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6cdc5-1051">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1051">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6cdc5-1052">このストリームから読み取ったデータの格納を開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1052">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6cdc5-1053">ストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1053">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-1054">このストリームからデータを読み取り、指定した配列に格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1054">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-1055">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1055">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="6cdc5-1056">読み取るデータがこれ以上存在しない場合は 0 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1056">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1057">読み取る最大`count`現在からのバイト ストリームし、に保存`buffer`から始まる`offset`します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1057">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="6cdc5-1058">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1058">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-1059">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1059">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6cdc5-1060">この操作を非同期的に実行するには使用、<xref:System.Net.Security.NegotiateStream.BeginRead%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1060">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1061">次のコード例に示しますからの読み取り、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1061">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-1062">読み取り操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1062">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-1063">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1063">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-1064">
            <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作は既に実行されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1064">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1065">読み取り操作がブロックしてデータを待機する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1065">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1066">読み取り操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1066">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1067">このプロパティは、呼び出しによって返される値を返します、<xref:System.IO.Stream.ReadTimeout%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1067">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-1068">このプロパティを設定するときに、<xref:System.IO.Stream.ReadTimeout%2A>基になるストリームの値が指定された値に設定します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1068">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="6cdc5-1069">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では読み取ることの操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1069">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1070">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1070">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1071">この認証されたストリームを共有するリモート側の ID に関する情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1071">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1072">リモート エンドポイントの ID を示す <see cref="T:System.Security.Principal.IIdentity" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1072">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1073">クライアントによってアクセスされると、このプロパティを返します、<xref:System.Security.Principal.GenericIdentity>サーバーと使用される認証プロトコルのサービス プリンシパル名 (SPN) を格納しています。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1073">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="6cdc5-1074">サーバーによってアクセスされると、このプロパティを返します、<xref:System.Security.Principal.WindowsIdentity>クライアントをについて説明します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1074">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="6cdc5-1075">場合、<xref:System.Security.Principal.WindowsIdentity>が利用できない、クライアント情報が返されますのサーバーに、<xref:System.Security.Principal.GenericIdentity>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1075">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1076">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1076">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-1077">認証に失敗したか、認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1077">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6cdc5-1078">この値は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1078">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6cdc5-1079">この値は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1079">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-1080">
            <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1080">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6cdc5-1081">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1081">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1082">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1082">Do not call this method.</span></span> <span data-ttu-id="6cdc5-1083">関数は、継承されますでサポートされていない<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1083">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-1084">シークは、<see cref="T:System.Net.Security.NegotiateStream" /> でサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1084">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6cdc5-1085">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1085">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-1086">基になるストリームの長さを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1086">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6cdc5-1087">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1087">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6cdc5-1088">ストリームに書き込むバイトの読み取りを開始する位置を示す、<c>buffer</c> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1088">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6cdc5-1089">
            <c>buffer</c> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1089">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6cdc5-1090">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1090">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1091">暗号化、署名または暗号化および署名が有効になっている場合このメソッド バッファーからデータを読み取ります、暗号化、署名、または暗号化し署名、および基になるストリームを使用して送信します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1091">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="6cdc5-1092">このメソッドを呼び出す場合、使用中のデータの暗号化や署名などのセキュリティのサービスなし、<xref:System.IO.Stream.Write%2A>基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1092">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="6cdc5-1093">このメソッドは、書き込み操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1093">This method blocks while the write operation completes.</span></span> <span data-ttu-id="6cdc5-1094">使用して、操作が完了するまでのブロックを防ぐため、<xref:System.Net.Security.NegotiateStream.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1094">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="6cdc5-1095">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1095">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6cdc5-1096">を認証するには、のいずれかを呼び出して、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>、または<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1096">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6cdc5-1097"><xref:System.Net.Security.NegotiateStream>クラスが複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1097">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="6cdc5-1098">別の書き込み操作の同一のストリームで既に実行中に、書き込み操作を開始しようとした場合、<xref:System.NotSupportedException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1098">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1099">次のコード例に示しますへの書き込み、<xref:System.Net.Security.NegotiateStream>します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1099">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cdc5-1100">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1100">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6cdc5-1101">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1101">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="6cdc5-1102">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1102">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-1103">
            <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1103">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6cdc5-1104">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1104">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-1105">
            <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1105">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6cdc5-1106">書き込み操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1106">The write operation failed.</span>
          </span>
          <span data-ttu-id="6cdc5-1107">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1107">\- or -</span>
          </span>
          <span data-ttu-id="6cdc5-1108">暗号化が使用されていますが、データを暗号化できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1108">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6cdc5-1109">既に実行中の書き込み操作が存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1109">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6cdc5-1110">このオブジェクトは閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1110">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6cdc5-1111">認証が行われていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1111">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6cdc5-1112">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1112">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6cdc5-1113">書き込み操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6cdc5-1113">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cdc5-1114">このプロパティは、呼び出しによって返される値を返します、<xref:System.IO.Stream.WriteTimeout%2A>プロパティを基になるストリーム。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1114">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="6cdc5-1115">設定操作で指定された値の設定、<xref:System.IO.Stream.WriteTimeout%2A>基になるストリームの値。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1115">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="6cdc5-1116">基になるストリームがある場合、 <xref:System.Net.Sockets.NetworkStream>、<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>はミリ秒でありに設定されている<xref:System.Threading.Timeout.Infinite>既定では書き込み操作はタイムアウトしないようにします。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1116">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cdc5-1117">次のコード例では、このプロパティの値を表示するを示します。</span><span class="sxs-lookup"><span data-stu-id="6cdc5-1117">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>