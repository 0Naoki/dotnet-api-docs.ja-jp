<Type Name="IManipulator" FullName="System.Windows.Input.IManipulator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3de4edd1b9994b12bb7d3da83bf103dfcac18d6f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.IManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4fd48-101">操作の作成に必要な入力の位置を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4fd48-101">Provides the position of input that is needed to create a manipulation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd48-102">それぞれのタッチ ポイントが、<xref:System.Windows.Input.IManipulator>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fd48-102">Each touch point is an <xref:System.Windows.Input.IManipulator> object.</span></span>  <span data-ttu-id="4fd48-103">たとえば、2 本の指を使用して、オブジェクトのサイズを変更する場合、<xref:System.Windows.Input.TouchDevice>を実装する<xref:System.Windows.Input.IManipulator>、各指が作成されます。</span><span class="sxs-lookup"><span data-stu-id="4fd48-103">For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="4fd48-104">
            <see cref="T:System.Windows.Input.IManipulator" /> の位置を計算するための座標系として使用する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-104">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fd48-105">
            <see cref="T:System.Windows.Input.IManipulator" /> オブジェクトの位置を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-105">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fd48-106">
            <see cref="T:System.Windows.Input.IManipulator" /> オブジェクトの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-106">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fd48-107">オブジェクトの一意の識別子を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-107">Gets or sets a unique identifier for the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fd48-108">オブジェクトの一意の識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-108">A unique identifier for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd48-109"><xref:System.Windows.Input.IManipulator.Id%2A>プロパティは、特定の型のオブジェクトごとに一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4fd48-109">The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type.</span></span>  <span data-ttu-id="4fd48-110">たとえば場合、型`Manipulator1`と`Manipulator2`実装<xref:System.Windows.Input.IManipulator>、すべての型のオブジェクト`Maniplulator1`一意である必要があります<xref:System.Windows.Input.IManipulator.Id%2A>値が型のオブジェクト`Manipulator1`と同じである可能性があります<xref:System.Windows.Input.IManipulator.Id%2A>型のオブジェクトとして`Manipulator2`です。</span><span class="sxs-lookup"><span data-stu-id="4fd48-110">For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationEnded">
      <MemberSignature Language="C#" Value="public void ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ManipulationEnded(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="4fd48-111">操作が取り消された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-111">
              <see langword="true" /> if the manipulation is canceled; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fd48-112">操作が終了すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-112">Called when the manipulation ends.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.IManipulator.Updated" />
      <MemberSignature Language="VB.NET" Value="Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fd48-113">
            <see cref="T:System.Windows.Input.IManipulator" /> オブジェクトの位置が変更されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fd48-113">Occurs when the <see cref="T:System.Windows.Input.IManipulator" /> object changes position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>