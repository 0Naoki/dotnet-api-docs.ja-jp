<Type Name="MouseDevice" FullName="System.Windows.Input.MouseDevice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0729a58d93b967e0f1ec4222c5c72e38c0ca49c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MouseDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MouseDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MouseDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseDevice abstract : System::Windows::Input::InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3c27d-101">マウス デバイスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c27d-101">Represents a mouse device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-102"><xref:System.Windows.Input.MouseDevice>をサポートしている、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]インフラストラクチャ コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="3c27d-102">The <xref:System.Windows.Input.MouseDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="3c27d-103">マウスの入力を使用して関連する、<xref:System.Windows.Input.Mouse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3c27d-103">For mouse related input, use the <xref:System.Windows.Input.Mouse> class.</span></span>  <span data-ttu-id="3c27d-104"><xref:System.Windows.Input.Mouse>クラスがアプリケーションに、マウスを表し、メソッド、プロパティ、およびマウスの状態を反映するイベントを提供します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-104">The <xref:System.Windows.Input.Mouse> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-105">このデバイスの入力を報告している <see cref="T:System.Windows.PresentationSource" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-105">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-106">このデバイスの入力のソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-106">The source of input for this device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3c27d-107">アクティブなソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-107">for getting the active source.</span>
          </span>
          <span data-ttu-id="3c27d-108">関連付けられた列挙は:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-108">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-109">指定された要素に対するマウス入力をキャプチャします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-109">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-110">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3c27d-110">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="3c27d-111">場合、<xref:System.Windows.Input.CaptureMode>が指定されていない、既定値<xref:System.Windows.Input.CaptureMode>は<xref:System.Windows.Input.CaptureMode.Element>します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-111">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="3c27d-112">マウスのキャプチャを解放する呼び出し<xref:System.Windows.Input.MouseDevice.Capture%2A>渡す`null`をキャプチャする要素として。</span><span class="sxs-lookup"><span data-stu-id="3c27d-112">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="3c27d-113">マウスがキャプチャされる場合と、<xref:System.Windows.Input.Mouse.MouseDown>または<xref:System.Windows.Input.Mouse.MouseUp>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>と<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>最初に発生します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-113">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="3c27d-114">これにより、キャプチャした要素の前にキャプチャを解放する機会、<xref:System.Windows.Input.Mouse.MouseDown>と<xref:System.Windows.Input.Mouse.MouseUp>イベント ルーティングされます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-114">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3c27d-115">マウスをキャプチャする要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-115">The element to capture the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-116">指定された要素に対するマウス イベントをキャプチャします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-116">Captures mouse events to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-117">要素がマウスをキャプチャできた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-117">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-118">境界内にカーソルがあるかどうかのマウス入力を受け取る要素は、マウスをキャプチャ、</span><span class="sxs-lookup"><span data-stu-id="3c27d-118">When an element captures the mouse, it receives mouse input whether the cursor is within its borders</span></span>  
  
 <span data-ttu-id="3c27d-119">場合、<xref:System.Windows.Input.CaptureMode>が指定されていない、既定値<xref:System.Windows.Input.CaptureMode>は<xref:System.Windows.Input.CaptureMode.Element>します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-119">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="3c27d-120">マウスのキャプチャを解放する呼び出し<xref:System.Windows.Input.MouseDevice.Capture%2A>渡す`null`をキャプチャする要素として。</span><span class="sxs-lookup"><span data-stu-id="3c27d-120">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="3c27d-121">マウスがキャプチャされる場合と、<xref:System.Windows.Input.Mouse.MouseDown>または<xref:System.Windows.Input.Mouse.MouseUp>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>と<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>最初に発生します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-121">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="3c27d-122">これにより、キャプチャした要素の前にキャプチャを解放する機会、<xref:System.Windows.Input.Mouse.MouseDown>と<xref:System.Windows.Input.Mouse.MouseUp>イベント ルーティングされます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-122">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c27d-123">
            <paramref name="element" /> が <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-123">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3c27d-124">マウスをキャプチャする要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-124">The element to capture the mouse..</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="3c27d-125">使用するキャプチャ ポリシー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-125">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-126">指定した <see cref="T:System.Windows.Input.CaptureMode" /> を使用して、指定された要素に対するマウス入力をキャプチャします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-126">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-127">要素がマウスをキャプチャできた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-127">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-128">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3c27d-128">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="3c27d-129">マウスのキャプチャを解放する呼び出し<xref:System.Windows.Input.MouseDevice.Capture%2A>渡す`null`をキャプチャする要素として。</span><span class="sxs-lookup"><span data-stu-id="3c27d-129">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="3c27d-130">マウスがキャプチャされる場合と、<xref:System.Windows.Input.Mouse.MouseDown>または<xref:System.Windows.Input.Mouse.MouseUp>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>と<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>最初に発生します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-130">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="3c27d-131">これにより、キャプチャした要素の前にキャプチャを解放する機会、<xref:System.Windows.Input.Mouse.MouseDown>と<xref:System.Windows.Input.Mouse.MouseUp>イベント ルーティングされます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-131">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c27d-132">
            <paramref name="element" /> が <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-132">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3c27d-133">
            <paramref name="captureMode" /> は有効な <see cref="T:System.Windows.Input.CaptureMode" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-133">
              <paramref name="captureMode" /> is not a valid <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-134">マウスでキャプチャされた <see cref="T:System.Windows.IInputElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-134">Gets the <see cref="T:System.Windows.IInputElement" /> that is captured by the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-135">マウスでキャプチャされた要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-135">The element which is captured by the mouse.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-136">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3c27d-136">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-137">マウス ポインターのすぐ下にある要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-137">Gets the element that the mouse pointer is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-138">マウス ポインターの下にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-138">The element the mouse pointer is over.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-139">その要素にマウスをキャプチャしたが場合、マウスが要素上で直接と見なされます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-139">The mouse is considered directly over an element if the mouse has been captured to that element.</span></span>  
  
 <span data-ttu-id="3c27d-140">コントロールは、複数の要素で構成されます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-140">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="3c27d-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> 上にマウス ポインターが複合コントロールおよびコントロール自体ではなく特定の要素を報告します。</span><span class="sxs-lookup"><span data-stu-id="3c27d-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span>  <span data-ttu-id="3c27d-142">のどの部分に応じてなど、 <xref:System.Windows.Controls.Button> 、上にポインターが、<xref:System.Windows.Input.MouseDevice.DirectlyOver%2A>プロパティのレポートを<xref:System.Windows.Controls.TextBox>の<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティまたは<xref:Microsoft.Windows.Themes.ButtonChrome>です。</span><span class="sxs-lookup"><span data-stu-id="3c27d-142">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="3c27d-143">使用して、<xref:System.Windows.IInputElement.IsMouseOver%2A>プロパティ<xref:System.Windows.UIElement>と<xref:System.Windows.ContentElement>にマウスが要素、そのビジュアル子要素が含まれているかどうかを決定したり複合要素を制御したりします。</span><span class="sxs-lookup"><span data-stu-id="3c27d-143">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Input.MouseButtonState GetButtonState(valuetype System.Windows.Input.MouseButton mouseButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Input::MouseButtonState GetButtonState(System::Windows::Input::MouseButton mouseButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mouseButton" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouseButton">
          <span data-ttu-id="3c27d-144">照会されているボタン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-144">The button which is being queried.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-145">マウスの指定したボタンの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-145">Gets the state of the specified mouse button.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-146">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-146">The state of the button.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClientPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-147">マウス ポインターの位置をクライアント座標で計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-147">Calculates the position of the mouse pointer, in client coordinates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetClientPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-148">マウス ポインターの位置をクライアント座標で計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-148">Calculates the position of the mouse pointer, in client coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-149">マウス ポインターのクライアント座標での位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-149">The position of the mouse pointer, in client coordinates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition(class System.Windows.PresentationSource presentationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition(System::Windows::PresentationSource ^ presentationSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentationSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="presentationSource">
          <span data-ttu-id="3c27d-150">マウス位置の取得元のソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-150">The source in which to obtain the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-151">指定した <see cref="T:System.Windows.PresentationSource" /> のマウス ポインターの位置をクライアント座標で計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-151">Calculates the position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-152">指定した <see cref="T:System.Windows.PresentationSource" /> のマウス ポインターの位置 (クライアント座標)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-152">The position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="3c27d-153">マウス位置の計算に使用する座標系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-153">The frame of reference in which to calculate the position of the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-154">指定した要素に相対的なマウスの位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-154">Gets the position of the mouse relative to a specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-155">
            <paramref name="relativeTo" /> パラメーターに対して相対的なマウスの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-155">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-156">マウス ポインターの位置を指定された相対計算<xref:System.Windows.IInputElement>0, 0、元の要素の左上隅にします。</span><span class="sxs-lookup"><span data-stu-id="3c27d-156">The position of the mouse pointer is calculated relative to the specified <xref:System.Windows.IInputElement> with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c27d-157">
            <paramref name="relativeTo" /> が <see langword="null" /> であるか、<see cref="T:System.Windows.UIElement" /> でも <see cref="T:System.Windows.ContentElement" /> でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-157">
              <paramref name="relativeTo" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScreenPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetScreenPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetScreenPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetScreenPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetScreenPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetScreenPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-158">マウス ポインターの画面位置を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-158">Calculates the screen position of the mouse pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-159">マウス ポインターの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-159">The position of the mouse pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-160">このマウス デバイスの左ボタンの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-160">Gets the state of the left mouse button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-161">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-161">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-162">このマウス デバイスの中央ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-162">The state of the middle button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-163">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-163">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-164">アプリケーション全体のカーソルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-164">Gets or sets the cursor for the entire application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-165">オーバーライドされたカーソル。<see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> が設定されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-165">The override cursor or <see langword="null" /> if <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-166"><xref:System.Windows.Input.Cursor>を<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A>がセットには、アプリケーション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-166">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="3c27d-167">オーバーライドをオフに<xref:System.Windows.Input.Cursor>設定、<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A>に`null`です。</span><span class="sxs-lookup"><span data-stu-id="3c27d-167">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="3c27d-168">設定<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A>に<xref:System.Windows.Input.Cursors.None%2A>が強制的に表示されますが、マウス カーソルが、マウス イベントは処理されます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-168">Setting <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-169">このマウス デバイスの右ボタンの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-169">Gets the state of the right button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-170">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-170">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">
          <span data-ttu-id="3c27d-171">マウス ポインターの設定先のカーソル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-171">The cursor to set the mouse pointer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c27d-172">指定した <see cref="T:System.Windows.Input.Cursor" /> にマウス ポインターを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-172">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c27d-173">マウス カーソルが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-173">
              <see langword="true" /> if the mouse cursor is set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-174">このカーソルは常に特定適用されないことに注意してください<xref:System.Windows.UIElement>がではなくアプリケーション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="3c27d-174">Note that this cursor does not apply any particular <xref:System.Windows.UIElement>, but rather it applies to the whole application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-175">マウスを強制的に再同期します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-175">Forces the mouse to resynchronize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-176"><xref:System.Windows.Input.MouseDevice>レイアウトの変更と呼び出しを監視<xref:System.Windows.Input.MouseDevice.Synchronize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c27d-176">The <xref:System.Windows.Input.MouseDevice> monitors layout changes and calls <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span></span>  <span data-ttu-id="3c27d-177">あります。 マウス入力システムが変更に応答するため、更新を強制する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c27d-177">There are cases in which the mouse input system must be forced to update for it to respond to changes.</span></span>  <span data-ttu-id="3c27d-178">たとえば、タイマー上にマウス ポインターを再同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c27d-178">For example, you must resynchronize the mouse on a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-179">このマウス デバイスからの入力が送られる <see cref="T:System.Windows.IInputElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-179">Gets the <see cref="T:System.Windows.IInputElement" /> that the input from this mouse device is sent to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-180">入力を受け取る要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-180">The element that receives the input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c27d-181">ターゲットを<xref:System.Windows.Input.MouseDevice>が上にマウスがオブジェクトとマウスのキャプチャを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c27d-181">The target for a <xref:System.Windows.Input.MouseDevice> is the object the mouse is over or the object with mouse capture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-182">マウス カーソルを強制的に更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-182">Forces the mouse cursor to update.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-183">このマウス デバイスの第 1 拡張ボタンの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-183">Gets the state of the first extended button on this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-184">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-184">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c27d-185">このマウス デバイスの第 2 拡張ボタンの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-185">Gets the state of the second extended button of this mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c27d-186">ボタンの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c27d-186">The state of the button.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>