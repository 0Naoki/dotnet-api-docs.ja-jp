<Type Name="MouseButtonEventHandler" FullName="System.Windows.Input.MouseButtonEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54ad5699db92d3a1a8eb4e60eb729ea20911ab2b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69170643" /></Metadata><TypeSignature Language="C#" Value="public delegate void MouseButtonEventHandler(object sender, MouseButtonEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MouseButtonEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MouseButtonEventHandler(sender As Object, e As MouseButtonEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MouseButtonEventHandler(System::Object ^ sender, MouseButtonEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MouseButtonEventHandler = delegate of obj * MouseButtonEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="be799-101">イベント ハンドラーがアタッチされているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="be799-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="be799-102">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="be799-102">The event data.</span></span></param>
    <summary><span data-ttu-id="be799-103"><see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> など、マウス ボタン関連のルーティング イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="be799-103">Represents the method that will handle mouse button related routed events, for example <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be799-104">このデリゲートは、添付された次のイベントと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="be799-104">This delegate is used with the following attached events.</span></span>  
  
-   <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement?displayProperty=nameWithType>  
  
 <span data-ttu-id="be799-105">このデリゲートは、次のルーティングイベントで使用されます。</span><span class="sxs-lookup"><span data-stu-id="be799-105">This delegate is used with the following routed events.</span></span> <span data-ttu-id="be799-106">これらのルーティングイベントは、前に示した添付イベントを転送して、の[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]一般的な要素モデルによりアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="be799-106">These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span>  
  
-   <xref:System.Windows.UIElement.MouseDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseLeftButtonDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseLeftButtonUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseRightButtonDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseRightButtonUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseLeftButtonDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseLeftButtonUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseRightButtonDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseRightButtonUp?displayProperty=nameWithType>  
  
 <span data-ttu-id="be799-107">添付イベントと基本要素のルーティングイベントは、イベントデータを共有します。また、ルーティングイベントのバブルおよびトンネリングバージョンも、イベントデータを共有します。</span><span class="sxs-lookup"><span data-stu-id="be799-107">The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data.</span></span> <span data-ttu-id="be799-108">これは、イベントがルーティングされるときにイベントの処理される特性に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="be799-108">This can affect the handled characteristics of the event as it travels the event route.</span></span> <span data-ttu-id="be799-109">詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="be799-109">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be799-110">次の例では<xref:System.Windows.UIElement.MouseDown> 、イベントのソースの背景色を変更するイベントハンドラーを作成します。</span><span class="sxs-lookup"><span data-stu-id="be799-110">The following example creates a <xref:System.Windows.UIElement.MouseDown> event handler that changes the background color of the source of the event.</span></span>  <span data-ttu-id="be799-111">背景色は、どのボタンが押されたかによって決まります。</span><span class="sxs-lookup"><span data-stu-id="be799-111">The background color is determined by which button is pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
  </Docs>
</Type>
