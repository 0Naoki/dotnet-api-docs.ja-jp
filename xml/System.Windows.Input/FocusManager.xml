<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd77aaa7681a047a933975b1634a243e93cd6a2f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52229797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="79c77-101">フォーカス範囲を決定し設定するため、およびその範囲内でフォーカスされた要素を設定するための静的メソッド、添付プロパティ、およびイベントを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="79c77-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-102">Windows Presentation Foundation (WPF) があるフォーカスに関する 2 つの概念: キーボード フォーカスと論理フォーカスします。</span><span class="sxs-lookup"><span data-stu-id="79c77-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="79c77-103">キーボード フォーカスは、現在キーボード入力を受信する要素に関連します。</span><span class="sxs-lookup"><span data-stu-id="79c77-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="79c77-104">キーボード フォーカスを持つ 1 つだけの要素があります。</span><span class="sxs-lookup"><span data-stu-id="79c77-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="79c77-105">キーボード フォーカスを持つには、この要素が<xref:System.Windows.IInputElement.IsKeyboardFocused%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="79c77-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> キーボード フォーカスを持つ要素を返します。</span><span class="sxs-lookup"><span data-stu-id="79c77-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="79c77-107">論理フォーカスに関連する、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>特定フォーカス範囲内です。</span><span class="sxs-lookup"><span data-stu-id="79c77-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="79c77-108">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-109">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-110">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-111">論理フォーカスを持つ複数の要素が存在できますが、単一のフォーカス範囲内で論理フォーカスを持つ要素を 1 つしか存在できません。</span><span class="sxs-lookup"><span data-stu-id="79c77-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="79c77-112">論理フォーカスを持つ要素では、キーボード フォーカスが必ずしもがありませんが、キーボード フォーカスを持つ要素が論理フォーカスを持ちます。</span><span class="sxs-lookup"><span data-stu-id="79c77-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="79c77-113">フォーカス範囲内でフォーカス範囲を定義することになります。</span><span class="sxs-lookup"><span data-stu-id="79c77-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="79c77-114">この場合は、親のフォーカス範囲と子のフォーカス範囲の両方を持ちます、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="79c77-115">次のシナリオはされている WPF アプリケーションでキーボード フォーカスと論理フォーカスを変更する方法を示しています、<xref:System.Windows.Window>で、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.Menu>を持つ、<xref:System.Windows.Controls.MenuItem>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="79c77-116">キーボード フォーカスが変更されたとき、<xref:System.Windows.Controls.TextBox>を<xref:System.Windows.Controls.MenuItem>、<xref:System.Windows.Controls.TextBox>損失キーボード フォーカスの論理フォーカスは保持されます、<xref:System.Windows.Window>スコープに注目します。</span><span class="sxs-lookup"><span data-stu-id="79c77-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="79c77-117"><xref:System.Windows.Controls.MenuItem>がキーボード フォーカスを取得しの論理フォーカスを取得、<xref:System.Windows.Controls.Menu>スコープに注目します。</span><span class="sxs-lookup"><span data-stu-id="79c77-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="79c77-118">ルートにキーボード フォーカスを返す場合<xref:System.Windows.Window>、内の要素<xref:System.Windows.Window>論理フォーカスを持つフォーカス範囲では、この例ではキーボード フォーカスを取得します。、<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="79c77-119"><xref:System.Windows.Controls.TextBox>キーボード フォーカスと論理フォーカスになりました。</span><span class="sxs-lookup"><span data-stu-id="79c77-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="79c77-120"><xref:System.Windows.Controls.MenuItem> 、キーボード フォーカスを失いますの論理フォーカスを保持、<xref:System.Windows.Controls.Menu>スコープに注目します。</span><span class="sxs-lookup"><span data-stu-id="79c77-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="79c77-121">既定値<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上、 <xref:System.Windows.Window>、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ToolBar>、および<xref:System.Windows.Controls.ContextMenu>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="79c77-122">フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)と[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-123">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="79c77-124">追加するイベント ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-124">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-125">
            <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントのハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-126">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="79c77-127">追加するイベント ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-127">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-128">
            <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントのハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-129">このプロパティが添付される要素に論理フォーカスがあるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-129">Determines whether the element this property is attached to has logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-130"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>は特定のフォーカス範囲の論理フォーカスのある要素です。</span><span class="sxs-lookup"><span data-stu-id="79c77-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="79c77-131">このオブジェクトは、キーボード フォーカスがない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="79c77-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="79c77-132">キーボード フォーカスはキーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="79c77-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="79c77-133">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="79c77-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>を取得し、指定したフォーカス範囲内でフォーカスがある要素を設定するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="79c77-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79c77-135">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="79c77-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79c77-136">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="79c77-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="79c77-137">メタデータのプロパティを設定**は true。**</span><span class="sxs-lookup"><span data-stu-id="79c77-137">Metadata properties set to **true**</span></span>|<span data-ttu-id="79c77-138">なし</span><span class="sxs-lookup"><span data-stu-id="79c77-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79c77-139">次の例では、作成する方法を示しています、<xref:System.Windows.Controls.Button>フォーカスがある要素。</span><span class="sxs-lookup"><span data-stu-id="79c77-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-140">
            <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-141">指定したフォーカス範囲で論理フォーカスを持つ要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-141">The element with logical focus in the specified focus scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-142">指定したフォーカス範囲内で論理フォーカスを持つ要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-142">Gets the element with logical focus within the specified focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79c77-143">論理フォーカスを持つ指定したフォーカス範囲内の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-143">The element in the specified focus scope with logical focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-144"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>は特定のフォーカス範囲の論理フォーカスのある要素です。</span><span class="sxs-lookup"><span data-stu-id="79c77-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="79c77-145">このオブジェクトは、キーボード フォーカスがない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="79c77-145">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="79c77-146">キーボード フォーカスはキーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="79c77-146">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="79c77-147">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-147">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="79c77-148">場合`element`がフォーカス範囲では、このメソッドが返す`null`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-148">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="79c77-149">使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>、指定したフォーカス範囲内で論理フォーカスを持つ要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="79c77-149">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79c77-150">次の例では、論理フォーカスを持つ要素を設定を使用して、<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>を使用して論理フォーカスを持つ要素を取得し、<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-150">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79c77-151">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-151">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-152">最も近いフォーカス範囲を取得する対象となる要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-152">The element to get the closest focus scope for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-153">
            <see langword="true" /> に設定された <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> を持ち、指定した要素に最も近い先祖を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-153">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79c77-154">指定した要素のフォーカス範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-154">The focus scope for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-155">既定値<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上、 <xref:System.Windows.Window>、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ToolBar>、<xref:System.Windows.Controls.ContextMenu>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-155">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="79c77-156">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-156">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-157">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-157">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-158">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-158">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-159">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-159">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79c77-160">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-160">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-161">添付プロパティの読み込み元の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-161">The element from which to read the attached property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-162">指定した <see cref="T:System.Windows.DependencyObject" /> がフォーカス範囲であるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-162">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79c77-163">
            <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> が指定した要素で <see langword="true" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-163">
              <see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-164">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-164">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-165">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-165">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-166">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-166">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-167">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-167">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-168">要素がフォーカスを取得すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-168">Occurs when an element gets focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-169">
            <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-169">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-170">このプロパティが添付される要素がフォーカス範囲であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-170">Determines whether the element this property is attached to is a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-171">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-171">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-172">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-172">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-173">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-173">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-174">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-174">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79c77-175">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="79c77-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79c77-176">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="79c77-176">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="79c77-177">メタデータのプロパティを設定**は true。**</span><span class="sxs-lookup"><span data-stu-id="79c77-177">Metadata properties set to **true**</span></span>|<span data-ttu-id="79c77-178">なし</span><span class="sxs-lookup"><span data-stu-id="79c77-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79c77-179">次の例では、<xref:System.Windows.Controls.StackPanel>フォーカス範囲。</span><span class="sxs-lookup"><span data-stu-id="79c77-179">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-180">
            <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-180">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-181">既定値<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上、 <xref:System.Windows.Window>、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ToolBar>、<xref:System.Windows.Controls.ContextMenu>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-181">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="79c77-182">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-182">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-183">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-183">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-184">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-184">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-185">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-185">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-186">要素がフォーカスを失ったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-186">Occurs when an element loses focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c77-187">
            <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-187">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-188">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-188">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="79c77-189">削除するイベント ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-189">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-190">
            <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントのハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-190">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-191">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-191">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="79c77-192">削除するイベント ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-192">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-193">
            <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントのハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-193">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-194">指定した要素を <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> にするフォーカス範囲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-194">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="79c77-195">論理フォーカスの指定先にする要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-195">The element to give logical focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-196">指定した要素に論理フォーカスを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-196">Sets logical focus on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-197"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>は特定のフォーカス範囲の論理フォーカスのある要素です。</span><span class="sxs-lookup"><span data-stu-id="79c77-197">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="79c77-198">このオブジェクトは、キーボード フォーカスがない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="79c77-198">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="79c77-199">キーボード フォーカスはキーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="79c77-199">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="79c77-200">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-200">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="79c77-201">要素がフォーカス範囲の先祖であるフォーカス範囲を指定することになります。</span><span class="sxs-lookup"><span data-stu-id="79c77-201">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="79c77-202">たとえば場合、<xref:System.Windows.Controls.StackPanel>フォーカス範囲とその親は、<xref:System.Windows.Window>フォーカス範囲を<xref:System.Windows.Controls.TextBox>の子、<xref:System.Windows.Controls.StackPanel>を指定できます、<xref:System.Windows.Window>を呼び出すときに、フォーカス範囲として<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="79c77-202">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="79c77-203"><xref:System.Windows.Controls.TextBox> 、<xref:System.Windows.Input.FocusManager.FocusedElement%2A>両方の<xref:System.Windows.Window>スコープを集中し、<xref:System.Windows.Controls.StackPanel>フォーカス スコープ。</span><span class="sxs-lookup"><span data-stu-id="79c77-203">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="79c77-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 指定したフォーカス範囲で指定された要素の論理フォーカスを与えるし、要素にキーボード フォーカスを試みます。</span><span class="sxs-lookup"><span data-stu-id="79c77-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79c77-205">次の例では、論理フォーカスを持つ要素を設定を使用して、<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>を使用して論理フォーカスを持つ要素を取得し、<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-205">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="79c77-206">フォーカス範囲にする要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-206">The element to make a focus scope.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="79c77-207">
            <paramref name="element" /> がフォーカス範囲である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-207">
              <see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c77-208">指定した <see cref="T:System.Windows.DependencyObject" /> をフォーカス範囲として設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c77-208">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c77-209">フォーカス範囲を追跡するコンテナー要素とは、<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>そのスコープ内で。</span><span class="sxs-lookup"><span data-stu-id="79c77-209">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="79c77-210">既定で、<xref:System.Windows.Window>クラスは、フォーカス範囲は、 <xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>、および<xref:System.Windows.Controls.ToolBar>クラス。</span><span class="sxs-lookup"><span data-stu-id="79c77-210">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="79c77-211">フォーカス範囲である要素に<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="79c77-211">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="79c77-212">フォーカス、キーボード フォーカスと論理フォーカスの詳細については、次を参照してください。、[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="79c77-212">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79c77-213">次の例を使用して要素をフォーカス範囲を<xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>します。</span><span class="sxs-lookup"><span data-stu-id="79c77-213">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>