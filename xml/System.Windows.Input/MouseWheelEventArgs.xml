<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="145eac32eebf0ccf5760619232176f72766e2476" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36505696" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="198f1-101">マウス デバイスのマウス ホイールの差分値の変化を通知するさまざまなイベントにデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="198f1-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198f1-102"><xref:System.Windows.Input.MouseWheelEventArgs> 次のイベントと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="198f1-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="198f1-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (添付イベント)</span><span class="sxs-lookup"><span data-stu-id="198f1-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="198f1-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (添付イベント)</span><span class="sxs-lookup"><span data-stu-id="198f1-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="198f1-105"><xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>プロパティは、マウス ホイールを上へ移動された場合は、正または前方 (奥ユーザー) または負の場合は、マウス ホイールを下へ移動または (ユーザー) に向かって旧バージョンとします。</span><span class="sxs-lookup"><span data-stu-id="198f1-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="198f1-106">このイベントは、小さなマウス ホイールの動きの場合でも発生します。</span><span class="sxs-lookup"><span data-stu-id="198f1-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="198f1-107">一部のシナリオでは、デルタが特定のしきい値を超えたかどうかをチェックして、小さなマウス ホイールのデルタを調整するハンドラーを実装することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="198f1-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="198f1-108">それ以外の場合、マウス ホイールの差分が非常に小さいため、マウス ホイールの動作に関連付けられているすべての UI の更新が行われない場合、ハンドラーを起動することもできます。</span><span class="sxs-lookup"><span data-stu-id="198f1-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="198f1-109">正確にどのようにハンドラーで、しきい値の動作を実装する、そのしきい値にする必要があります実装ごとに異なります。</span><span class="sxs-lookup"><span data-stu-id="198f1-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="198f1-110">次の例では移動、<xref:System.Windows.Controls.TextBox>場合、マウス ホイール<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>が正の値と、移動、<xref:System.Windows.Controls.TextBox>場合をマウスのホイール<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>が負の値。</span><span class="sxs-lookup"><span data-stu-id="198f1-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="198f1-111"><xref:System.Windows.Controls.TextBox>にアタッチされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="198f1-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">
          <span data-ttu-id="198f1-112">このイベントに関連付けられたマウス デバイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-112">The mouse device associated with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="198f1-113">入力が発生した時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-113">The time when the input occurred.</span>
          </span>
        </param>
        <param name="delta">
          <span data-ttu-id="198f1-114">ホイールが変更された量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-114">The amount the wheel has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="198f1-115">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="198f1-116">マウス ホイールが変化した量を示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-116">Gets a value that indicates the amount that the mouse wheel has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="198f1-117">ホイールが変更された量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-117">The amount the wheel has changed.</span>
          </span>
          <span data-ttu-id="198f1-118">この値は、マウス ホイールが上方に (ユーザーから離れる方向に) 回される場合に正の値になり、マウス ホイールが下方に (ユーザーに向かって) 回される場合に負の値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198f1-119">この値の効果的な上限と下限の範囲は、可能性のあるデバイスの実装または他の呼び出し元のイベントが発生し、定義されていないためから取得されます。</span><span class="sxs-lookup"><span data-stu-id="198f1-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="198f1-120">次の例では移動、<xref:System.Windows.Controls.TextBox>場合、マウス ホイール<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>が正の値と、移動、<xref:System.Windows.Controls.TextBox>場合をマウスのホイール<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>が負の値。</span><span class="sxs-lookup"><span data-stu-id="198f1-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="198f1-121"><xref:System.Windows.Controls.TextBox>にアタッチされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="198f1-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="198f1-122">型固有の方法で呼び出しを行うジェネリック ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-122">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="198f1-123">ハンドラーを呼び出す対象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-123">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="198f1-124">型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="198f1-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198f1-125">この実装は、ジェネリック ハンドラーをキャスト、<xref:System.Windows.Input.MouseWheelEventHandler>してそれを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="198f1-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="198f1-126">この実装パターンとその理由の詳細については、次を参照してください。<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="198f1-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>