<Type Name="CommandBinding" FullName="System.Windows.Input.CommandBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73971c0ddba6c7d04667419167297e08af183edc" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48720792" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBinding" />
  <TypeSignature Language="F#" Value="type CommandBinding = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29724-101">
        <see cref="T:System.Windows.Input.RoutedCommand" /> を、コマンドを実装するイベント ハンドラーにバインドします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29724-101">Binds a <see cref="T:System.Windows.Input.RoutedCommand" /> to the event handlers that implement the command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29724-102">A<xref:System.Windows.Input.CommandBinding>を持つコマンドを関連付けます、 <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed>と<xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute>イベントを実装し、コマンドの状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="29724-102">A <xref:System.Windows.Input.CommandBinding> associates a command with the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> and <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events which implement and determine the status of the command.</span></span>  
  
 <span data-ttu-id="29724-103">ときに、<xref:System.Windows.Input.RoutedCommand.Execute%2A>または<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>のメソッド、<xref:System.Windows.Input.RoutedCommand>が呼び出される、 <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed>または<xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute>イベントは、コマンド ターゲットで発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-103">When the <xref:System.Windows.Input.RoutedCommand.Execute%2A> or <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> or the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events are raised on the command target.</span></span>  <span data-ttu-id="29724-104">コマンド ターゲットがある場合、<xref:System.Windows.Input.CommandBinding>コマンドは、適切なハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29724-104">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the appropriate handlers are called.</span></span>  <span data-ttu-id="29724-105">コマンド ターゲットがあるない場合、<xref:System.Windows.Input.CommandBinding>コマンドは、イベントはツリーを通じてルーティング、要素を持つ要素まで、<xref:System.Windows.Input.CommandBinding>が見つかった。</span><span class="sxs-lookup"><span data-stu-id="29724-105">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the events are routed through the element tree until an element that has a <xref:System.Windows.Input.CommandBinding> is found.</span></span>  
  
 <span data-ttu-id="29724-106">A<xref:System.Windows.Input.CommandBinding>が制限された使用を<xref:System.Windows.Input.ICommand>でない、<xref:System.Windows.Input.RoutedCommand>します。</span><span class="sxs-lookup"><span data-stu-id="29724-106">A <xref:System.Windows.Input.CommandBinding> has limited use with an <xref:System.Windows.Input.ICommand> that is not a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="29724-107">ため、これは、<xref:System.Windows.Input.CommandBinding>にコマンドのバインド、<xref:System.Windows.Input.ExecutedRoutedEventHandler>と<xref:System.Windows.Input.CanExecuteRoutedEventHandler>をリッスンする、<xref:System.Windows.Input.CommandManager.Executed>と<xref:System.Windows.Input.CommandManager.CanExecute>ルーティング イベントである場合に発生します、<xref:System.Windows.Input.RoutedCommand.Execute%2A>と<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>のメソッド<xref:System.Windows.Input.RoutedCommand>と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="29724-107">This is because a <xref:System.Windows.Input.CommandBinding> binds the command to the <xref:System.Windows.Input.ExecutedRoutedEventHandler> and the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which listen to the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> routed events which are raised when the <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of the <xref:System.Windows.Input.RoutedCommand> are called.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29724-108">
            <see cref="T:System.Windows.Input.CommandBinding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-108">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29724-109">
            <see cref="T:System.Windows.Input.CommandBinding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-109">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="29724-110">新しい <see cref="T:System.Windows.Input.RoutedCommand" /> の基となるコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-110">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29724-111">指定された <see cref="T:System.Windows.Input.CommandBinding" /> を使用して、<see cref="T:System.Windows.Input.ICommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-111">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="29724-112">新しい <see cref="T:System.Windows.Input.RoutedCommand" /> の基となるコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-112">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="29724-113">新しい <see cref="E:System.Windows.Input.CommandBinding.Executed" /> の <see cref="T:System.Windows.Input.RoutedCommand" /> イベントのハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-113">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29724-114">指定した <see cref="T:System.Windows.Input.CommandBinding" /> および指定した <see cref="T:System.Windows.Input.ICommand" /> イベント ハンドラーを使用して、<see cref="E:System.Windows.Input.CommandBinding.Executed" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-114">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed, class System.Windows.Input.CanExecuteRoutedEventHandler canExecute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler, canExecute As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed, System::Windows::Input::CanExecuteRoutedEventHandler ^ canExecute);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed, canExecute)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
        <Parameter Name="canExecute" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="29724-115">新しい <see cref="T:System.Windows.Input.RoutedCommand" /> の基となるコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-115">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="29724-116">新しい <see cref="E:System.Windows.Input.CommandBinding.Executed" /> の <see cref="T:System.Windows.Input.RoutedCommand" /> イベントのハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-116">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <param name="canExecute">
          <span data-ttu-id="29724-117">新しい <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> の <see cref="T:System.Windows.Input.RoutedCommand" /> イベントのハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-117">The handler for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29724-118">指定した <see cref="T:System.Windows.Input.CommandBinding" />、および指定した <see cref="T:System.Windows.Input.ICommand" /> および <see cref="E:System.Windows.Input.CommandBinding.Executed" /> イベント ハンドラーを使用して、<see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-118">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler CanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.CanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event CanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ CanExecute;" />
      <MemberSignature Language="F#" Value="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29724-119">この <see cref="T:System.Windows.Input.CommandBinding" /> に関連付けられたコマンドがコマンド ターゲットで実行可能かどうかのチェックを開始したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-119">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29724-120">ときに、<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>メソッドを<xref:System.Windows.Input.RoutedCommand>が呼び出される、<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>イベントは、コマンド ターゲットで発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-120">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target.</span></span>  <span data-ttu-id="29724-121">イベントが処理されない場合、<xref:System.Windows.Input.CommandBinding.CanExecute>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-121">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  <span data-ttu-id="29724-122">コマンド ターゲットがある場合、<xref:System.Windows.Input.CommandBinding>コマンドの場合、<xref:System.Windows.Input.CommandBinding.CanExecute>をハンドラー<xref:System.Windows.Input.CommandBinding>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29724-122">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="29724-123">コマンド ターゲットがあるない場合、<xref:System.Windows.Input.CommandBinding>コマンドの場合、<xref:System.Windows.Input.CommandBinding.CanExecute>イベント バブルを要素ツリーを持つ要素を検索、<xref:System.Windows.Input.CommandBinding>コマンドに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="29724-123">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  
  
<a name="routedEventInfo_CanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29724-124">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="29724-124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29724-125">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="29724-125">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.CanExecuteEvent>|  
|<span data-ttu-id="29724-126">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="29724-126">Routing strategy</span></span>|<span data-ttu-id="29724-127">バブル</span><span class="sxs-lookup"><span data-stu-id="29724-127">Bubbling</span></span>|  
|<span data-ttu-id="29724-128">Delegate</span><span class="sxs-lookup"><span data-stu-id="29724-128">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="29724-129">対応するトンネル イベントは<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>します。</span><span class="sxs-lookup"><span data-stu-id="29724-129">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29724-130">次の例では、作成、<xref:System.Windows.Input.CommandBinding>マップされる、<xref:System.Windows.Input.ExecutedRoutedEventHandler>と<xref:System.Windows.Input.CanExecuteRoutedEventArgs>ハンドラーを<xref:System.Windows.Input.ApplicationCommands.Open%2A>コマンド。</span><span class="sxs-lookup"><span data-stu-id="29724-130">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="29724-131">次に示す、<xref:System.Windows.Input.CanExecuteRoutedEventHandler>セット<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>に`true`します。</span><span class="sxs-lookup"><span data-stu-id="29724-131">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.CommandBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29724-132">この <see cref="T:System.Windows.Input.ICommand" /> に関連付けられた <see cref="T:System.Windows.Input.CommandBinding" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-132">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29724-133">このバインディングに関連付けられたコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-133">The command associated with this binding.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29724-134">次の例では、作成、<xref:System.Windows.Input.CommandBinding>マップされる、<xref:System.Windows.Input.ExecutedRoutedEventHandler>と<xref:System.Windows.Input.CanExecuteRoutedEventArgs>ハンドラーを<xref:System.Windows.Input.ApplicationCommands.Open%2A>コマンド。</span><span class="sxs-lookup"><span data-stu-id="29724-134">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="29724-135">次に示す、<xref:System.Windows.Input.CanExecuteRoutedEventHandler>セット<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>に`true`します。</span><span class="sxs-lookup"><span data-stu-id="29724-135">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 <span data-ttu-id="29724-136">次に示します、<xref:System.Windows.Input.ExecutedRoutedEventHandler>作成し、<xref:System.Windows.MessageBox>コマンドを実行するとします。</span><span class="sxs-lookup"><span data-stu-id="29724-136">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Executed">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler Executed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler Executed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.Executed" />
      <MemberSignature Language="VB.NET" Value="Public Event Executed As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ Executed;" />
      <MemberSignature Language="F#" Value="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29724-137">この <see cref="T:System.Windows.Input.CommandBinding" /> に関連付けられたコマンドが実行されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-137">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29724-138">ときに、<xref:System.Windows.Input.RoutedCommand>を実行する生成、<xref:System.Windows.Input.CommandBinding.PreviewExecuted>コマンド ターゲットでのイベント。</span><span class="sxs-lookup"><span data-stu-id="29724-138">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="29724-139">場合、<xref:System.Windows.Input.CommandBinding.PreviewExecuted>イベントが処理されない、<xref:System.Windows.Input.CommandBinding.Executed>イベントは、コマンド ターゲットで発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-139">If the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on the command target.</span></span>  <span data-ttu-id="29724-140">コマンド ターゲットがある場合、<xref:System.Windows.Input.CommandBinding>の特定のコマンド、<xref:System.Windows.Input.CommandBinding.Executed>をハンドラー<xref:System.Windows.Input.CommandBinding>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29724-140">If the command target has a <xref:System.Windows.Input.CommandBinding> for the specific command, the <xref:System.Windows.Input.CommandBinding.Executed> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="29724-141">コマンド ターゲットがあるない場合、<xref:System.Windows.Input.CommandBinding>特定のコマンド、<xref:System.Windows.Input.CommandBinding.Executed>イベント バブル アップを持つ要素を検索する要素のツリーを<xref:System.Windows.Input.CommandBinding>コマンドに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="29724-141">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for that specific command the <xref:System.Windows.Input.CommandBinding.Executed> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="29724-142">場合、<xref:System.Windows.Input.CommandBinding>が見つからない、コマンドは処理されません。</span><span class="sxs-lookup"><span data-stu-id="29724-142">If a <xref:System.Windows.Input.CommandBinding> is not found, the command is not handled.</span></span>  
  
<a name="routedEventInfo_Executed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29724-143">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="29724-143">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29724-144">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="29724-144">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.ExecutedEvent>|  
|<span data-ttu-id="29724-145">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="29724-145">Routing strategy</span></span>|<span data-ttu-id="29724-146">バブル</span><span class="sxs-lookup"><span data-stu-id="29724-146">Bubbling</span></span>|  
|<span data-ttu-id="29724-147">Delegate</span><span class="sxs-lookup"><span data-stu-id="29724-147">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="29724-148">対応するトンネル イベントは<xref:System.Windows.Input.CommandBinding.PreviewExecuted>します。</span><span class="sxs-lookup"><span data-stu-id="29724-148">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29724-149">次の例では、作成、<xref:System.Windows.Input.CommandBinding>マップされる、<xref:System.Windows.Input.ExecutedRoutedEventHandler>と<xref:System.Windows.Input.CanExecuteRoutedEventArgs>ハンドラーを<xref:System.Windows.Input.ApplicationCommands.Open%2A>コマンド。</span><span class="sxs-lookup"><span data-stu-id="29724-149">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="29724-150">次に示します、<xref:System.Windows.Input.ExecutedRoutedEventHandler>作成し、<xref:System.Windows.MessageBox>コマンドを実行するとします。</span><span class="sxs-lookup"><span data-stu-id="29724-150">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewCanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewCanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ PreviewCanExecute;" />
      <MemberSignature Language="F#" Value="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29724-151">この <see cref="T:System.Windows.Input.CommandBinding" /> に関連付けられたコマンドが、現在のコマンドの対象でコマンドを実行できるかどうかについてのチェックを開始したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-151">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the current command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29724-152">ときに、<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>メソッドを<xref:System.Windows.Input.RoutedCommand>が呼び出され、<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>コマンド ターゲットがコマンド ターゲットでイベントが発生します、<xref:System.Windows.Input.CommandBinding>コマンド。</span><span class="sxs-lookup"><span data-stu-id="29724-152">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target if the command target has a <xref:System.Windows.Input.CommandBinding> for the command.</span></span> <span data-ttu-id="29724-153">次に、<xref:System.Windows.Input.CommandBinding.CanExecute>をハンドラー<xref:System.Windows.Input.CommandBinding>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29724-153">Then the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="29724-154">コマンド ターゲットがあるない場合、<xref:System.Windows.Input.CommandBinding>コマンドの場合、<xref:System.Windows.Input.CommandBinding.CanExecute>イベント バブルを要素ツリーを持つ要素を検索、<xref:System.Windows.Input.CommandBinding>コマンドに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="29724-154">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="29724-155">イベントが処理されない場合、<xref:System.Windows.Input.CommandBinding.CanExecute>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-155">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  
  
<a name="routedEventInfo_PreviewCanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29724-156">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="29724-156">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29724-157">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="29724-157">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|  
|<span data-ttu-id="29724-158">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="29724-158">Routing strategy</span></span>|<span data-ttu-id="29724-159">トンネリング</span><span class="sxs-lookup"><span data-stu-id="29724-159">Tunneling</span></span>|  
|<span data-ttu-id="29724-160">Delegate</span><span class="sxs-lookup"><span data-stu-id="29724-160">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="29724-161">対応するバブル イベントが<xref:System.Windows.Input.CommandBinding.CanExecute>します。</span><span class="sxs-lookup"><span data-stu-id="29724-161">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.CanExecute>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewExecuted">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewExecuted As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ PreviewExecuted;" />
      <MemberSignature Language="F#" Value="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29724-162">この <see cref="T:System.Windows.Input.CommandBinding" /> に関連付けられたコマンドが実行されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29724-162">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29724-163">ときに、<xref:System.Windows.Input.RoutedCommand>を実行する生成、<xref:System.Windows.Input.CommandBinding.PreviewExecuted>コマンド ターゲットでのイベント。</span><span class="sxs-lookup"><span data-stu-id="29724-163">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="29724-164">コマンド ターゲットがある場合、<xref:System.Windows.Input.CommandBinding>コマンド、<xref:System.Windows.Input.CommandBinding.PreviewExecuted>をハンドラー<xref:System.Windows.Input.CommandBinding>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="29724-164">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="29724-165">コマンド ターゲットがあるない場合、<xref:System.Windows.Input.CommandBinding>コマンド、<xref:System.Windows.Input.CommandBinding.PreviewExecuted>イベント トンネルを持つ要素を検索する要素ツリーの下、<xref:System.Windows.Input.CommandBinding>コマンドに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="29724-165">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event tunnels down the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="29724-166">プレビュー イベントが処理されない場合、<xref:System.Windows.Input.CommandBinding.Executed>コマンド ターゲットでイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="29724-166">If the preview event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on command target.</span></span>  
  
<a name="routedEventInfo_PreviewExecuted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29724-167">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="29724-167">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29724-168">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="29724-168">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|  
|<span data-ttu-id="29724-169">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="29724-169">Routing strategy</span></span>|<span data-ttu-id="29724-170">トンネリング</span><span class="sxs-lookup"><span data-stu-id="29724-170">Tunneling</span></span>|  
|<span data-ttu-id="29724-171">Delegate</span><span class="sxs-lookup"><span data-stu-id="29724-171">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="29724-172">対応するバブル イベントが<xref:System.Windows.Input.CommandBinding.Executed>します。</span><span class="sxs-lookup"><span data-stu-id="29724-172">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.Executed>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>