<Type Name="TouchEventArgs" FullName="System.Windows.Input.TouchEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c74a7ee25dbc4576c25b963031c93ff156a6ffb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39770647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TouchEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TouchEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TouchEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchEventArgs : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type TouchEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a2ca6-101">タッチ入力イベントのデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2ca6-101">Provides data for touch input events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ca6-102">次のイベントを使用して、<xref:System.Windows.Input.TouchEventArgs>します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-102">The following events use <xref:System.Windows.Input.TouchEventArgs>.</span></span>  
  
-   <xref:System.Windows.UIElement.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchMove?displayProperty=nameWithType>  
  
   
  
## Examples  
 <span data-ttu-id="a2ca6-103">次の例のハンドル、<xref:System.Windows.UIElement.TouchUp>で発生するイベント、<xref:System.Windows.Controls.Canvas>します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-103">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="a2ca6-104">チェック、<xref:System.Windows.Input.TouchDevice.Captured%2A>にイベントを発生させたデバイスがキャプチャされることを確認するプロパティ、<xref:System.Windows.Controls.Canvas>します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-104">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="a2ca6-105">である場合、<xref:System.Windows.Input.TouchDevice>解放されます。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-105">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="a2ca6-106">この例が記載されている長い例の一部、<xref:System.Windows.Input.TouchDevice>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-106">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TouchEventArgs (System.Windows.Input.TouchDevice touchDevice, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.TouchDevice touchDevice, int32 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TouchEventArgs(System::Windows::Input::TouchDevice ^ touchDevice, int timestamp);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchEventArgs : System.Windows.Input.TouchDevice * int -&gt; System.Windows.Input.TouchEventArgs" Usage="new System.Windows.Input.TouchEventArgs (touchDevice, timestamp)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="a2ca6-107">このイベントに関連付ける入力デバイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-107">The input device to associate with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="a2ca6-108">入力が発生した時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-108">The time when the input occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ca6-109">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-109">Initializes a new instance of the <see cref="T:System.Windows.Input.TouchEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchEventArgs.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="a2ca6-110">座標空間を定義する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-110">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ca6-111">最新のタッチ イベントと前回のタッチ イベントの間に収集されたすべてのタッチ ポイントを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-111">Returns all touch points that were collected between the most recent and previous touch events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ca6-112">最新のタッチ イベントと前回のタッチ イベントの間に収集されたすべてのタッチ ポイント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-112">All touch points that were collected between the most recent and previous touch events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchEventArgs.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="a2ca6-113">座標空間を定義する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-113">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ca6-114">指定された要素に対する相対的なタッチ デバイスの現在の位置を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-114">Returns the current position of the touch device relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2ca6-115">指定された要素に対する相対的なタッチ デバイスの現在の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-115">The current position of the touch device relative to the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="touchEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="a2ca6-116">型固有の方法で呼び出しを行うジェネリック ハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-116">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="a2ca6-117">ハンドラーを呼び出す対象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-117">The target on which to call the handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2ca6-118">型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-118">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2ca6-119">この実装は、ジェネリック ハンドラー、キャスト、<xref:System.EventHandler%601>型の<xref:System.Windows.Input.TouchEventArgs>してそれを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-119">This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it.</span></span> <span data-ttu-id="a2ca6-120">この実装パターンとその理由の詳細については、次を参照してください。<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-120">For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchDevice TouchDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.TouchDevice TouchDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchEventArgs.TouchDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchDevice As TouchDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::TouchDevice ^ TouchDevice { System::Windows::Input::TouchDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchDevice : System.Windows.Input.TouchDevice" Usage="System.Windows.Input.TouchEventArgs.TouchDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2ca6-121">イベントを生成したタッチを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-121">Gets the touch that generated the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2ca6-122">イベントを生成したタッチ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2ca6-122">The touch that generated the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2ca6-123">次の例のハンドル、<xref:System.Windows.UIElement.TouchUp>で発生するイベント、<xref:System.Windows.Controls.Canvas>します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-123">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="a2ca6-124">チェック、<xref:System.Windows.Input.TouchDevice.Captured%2A>にイベントを発生させたデバイスがキャプチャされることを確認するプロパティ、<xref:System.Windows.Controls.Canvas>します。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-124">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="a2ca6-125">である場合、<xref:System.Windows.Input.TouchDevice>解放されます。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-125">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="a2ca6-126">この例が記載されている長い例の一部、<xref:System.Windows.Input.TouchDevice>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="a2ca6-126">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>