<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyBinding.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7ffcff8092d477e75345cd0afc6f0d3c265489e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7ffcff8092d477e75345cd0afc6f0d3c265489e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Binds a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (or another  <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> implementation).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (または他の <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> の実装) にバインドします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> associates a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, such as a <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>関連付けます、<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>で、 <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>、ように、<ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is the primary implementation of the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface for the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> commanding system .</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> プライマリの実装、<ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph>のためのインターフェイス、<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>システムのコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> value.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>が実行されるコマンドが呼び出されるコマンドの動作は、さらに影響を受けるコマンド固有の要因によってなどが、<ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">コマンド実行の詳細については、次を参照してください。、<bpt id="p1">[</bpt>コマンド実行の概要<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>With the exception of the function keys and the numeric keypad keys, a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain exactly one <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">ファンクション キーと、テンキーのキーを有効なを除き<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>1 つだけ含める必要があります<ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph>と 1 つまたは複数<ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Function keys and numeric keypad keys do not require a modifier key in order to be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">ファンクション キーおよびテンキーのキーは必要ありません修飾子キーを有効にするのに<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>It is possible to specify an invalid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> with an invalid associated gesture, either through <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> or code.</source>
          <target state="translated">無効なを指定することは<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>関連付けジェスチャを使用するか、無効な<ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>またはコード。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For instance, there is no validation that prevents creating and binding a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> that contains only a nonfunction key, or only modifiers but no key.</source>
          <target state="translated">インスタンスを作成してバインドを妨げる検証は行われません、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>修飾子がキーなし、またはのみ以外キーのみを格納しています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Such a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> will never attempt to invoke its associated command.</source>
          <target state="translated">このような<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>その関連付けられたコマンドを呼び出すことはありませんを試みます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">定義するときに、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>2 つの方法を指定する、<ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">確立するために最初の方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>の属性、<ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">2 番目の方法は、定義する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>属性および<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>の属性、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">場合と、 <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性は、すべての設定、定義されている属性最後が使用されますの<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">場所などの状況を可能性がありますが、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性から<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> can be defined on a specific object or at the class level by registering a <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>登録することによって特定のオブジェクトで、またはクラス レベルで定義できます、<ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph>上、<ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The most typical way to define a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is within the control template, setting the <ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph> property in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> by declaring one or more <ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elements.</source>
          <target state="translated">定義する最も一般的な方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>コントロール テンプレートの設定では、<ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph>プロパティ<ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>1 つまたは複数を宣言することによって<ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>または<ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and adds it to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of the root window.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>に追加し、<ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph>ルート ウィンドウのです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The command to associate with <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept> に関連付けるコマンド。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The key combination to associate with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept> に関連付けるキーの組み合わせ。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> と <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> を使用して、<ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> or <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> または <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The command to invoke.</source>
          <target state="translated">呼び出すコマンド。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The key to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept> に関連付けるキー。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The modifiers to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept> に関連付ける修飾子。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> which will be converted into a <ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> と指定した <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> および <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> に変換される <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> を使用して、<ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>Creates an instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>Gets or sets the gesture associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> に関連付けられているジェスチャを取得または設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The key sequence.</source>
          <target state="translated">キー シーケンス。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>含める必要があります、<ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph>と 1 つまたは複数<ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The following example shows how to bind a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> using a <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (the markup and code examples specify different keys but are otherwise equivalent).</source>
          <target state="translated">次の例は、バインドする方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>を<ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>を使用して、 <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (マークアップおよびコードの例は、異なるキーを指定するただし、それ以外の場合と同じ)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>the value <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> is being set to is not a <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">設定されている <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> は <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> に関連付けられている <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The key part of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> のキー部分。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>含める必要があります、<ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph>と 1 つまたは複数<ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">定義するときに、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>2 つの方法を指定する、<ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">確立するために最初の方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>の属性、<ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">2 番目の方法は、定義する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>属性および<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>の属性、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">場合と、 <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性は、すべての設定、定義されている属性最後が使用されますの<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">場所などの状況を可能性がありますが、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性から<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.KeyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph> 依存関係プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> に関連付けられている <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The modifier keys of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> の変換キー。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>含める必要があります、<ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph>と 1 つまたは複数<ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">定義するときに、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>2 つの方法を指定する、<ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">確立するために最初の方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>で<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>の属性、<ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">2 番目の方法は、定義する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>属性および<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>の属性、<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">場合と、 <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性は、すべての設定、定義されている属性最後が使用されますの<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">場所などの状況を可能性がありますが、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性から<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性の使用方法</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>One or more modifier keys, defined by the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeration, delimited with a "+" character.</source>
          <target state="translated">によって定義された 1 つまたは複数の修飾子キー、<ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>列挙型、「+」文字で区切られます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.ModifiersProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph> 依存関係プロパティを識別します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>