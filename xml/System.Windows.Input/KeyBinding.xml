<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd5a45163260024674fb94da554be682f2069dad" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70481868" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Input.KeyGesture" /> を <see cref="T:System.Windows.Input.RoutedCommand" /> (または他の <see cref="T:System.Windows.Input.ICommand" /> の実装) にバインドします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は、など<xref:System.Windows.Input.KeyGesture>のに<xref:System.Windows.Input.ICommand> <xref:System.Windows.Input.RoutedCommand>関連付けられています。 <xref:System.Windows.Input.KeyBinding> <xref:System.Windows.Input.RoutedCommand>は、 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]コマンドを使用する<xref:System.Windows.Input.ICommand>システムのインターフェイスの主要な実装です。  一般に、を実行<xref:System.Windows.Input.KeyGesture>すると、コマンドが呼び出されます。ただし、コマンドの動作は、値などの<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>コマンド固有の要因によってさらに影響を受けます。  コマンドの詳細については、「[コマンドの概要](~/docs/framework/wpf/advanced/commanding-overview.md)」を参照してください。  
  
 関数キーとテンキーキーを除き、有効<xref:System.Windows.Input.KeyGesture>なには1つ<xref:System.Windows.Input.Key> <xref:System.Windows.Input.ModifierKeys>以上のが含まれている必要があります。  関数キーとテンキーキーは、有効<xref:System.Windows.Input.KeyGesture>なであるために修飾キーを必要としません。 無効な<xref:System.Windows.Input.KeyGesture>とを<xref:System.Windows.Input.KeyBinding>指定するには、またはコードを使用[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]して、無効な関連するジェスチャを使用できます。 たとえば、関数以外のキーのみを含むを<xref:System.Windows.Input.KeyGesture>作成してバインドすることはできません。また、修飾子だけでなく、キーも含まれません。 このよう<xref:System.Windows.Input.KeyBinding>な a は、関連付けられたコマンドを呼び出そうとしません。  
  
 <xref:System.Windows.Input.KeyGesture>で<xref:System.Windows.Input.KeyBinding> を定義するときには、を指定する2つの方法があります。 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] <xref:System.Windows.Input.KeyBinding>で<xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding>を確立する最初の方法は、要素の属性を定義することです。これにより、キーと修飾子を1つの文字列として指定できるようになります。たとえば、"CTRL + P" などです。 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 2番目の方法は、 <xref:System.Windows.Input.KeyBinding.Key%2A> <xref:System.Windows.Input.KeyBinding>要素の属性<xref:System.Windows.Input.KeyBinding.Modifiers%2A>と属性を定義することです。 を<xref:System.Windows.Input.KeyGesture>設定する方法はどちらも同じで、基になる同じオブジェクトを変更しますが、両方が使用されている場合は競合が発生します。  、、および<xref:System.Windows.Input.KeyGesture>属性がすべて設定されている場合は、最後に定義された属性がに使用されます。 <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding.Modifiers%2A> <xref:System.Windows.Input.KeyBinding.Key%2A> たとえば、 <xref:System.Windows.Input.KeyBinding.Key%2A>セットが last ジェスチャのキーコンポーネントだけを上書きし、ジェスチャの修飾子を同じままにするという状況が生じる可能性があります。 一般に、の<xref:System.Windows.Input.KeyBinding.Gesture%2A> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]属性のみを使用することをお勧めします。これにより、あいまいさを回避し、最も合理化された構文を提供し、シリアル化の最も簡単な表現を提供します。  
  
 は、クラス <xref:System.Windows.Input.CommandManager> にを<xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>登録することによって、特定のオブジェクトまたはクラスレベルで定義できます。 <xref:System.Windows.Input.KeyBinding> を定義する最も一般的<xref:System.Windows.Input.KeyBinding>な方法は、コントロールテンプレート内にあります。1つ<xref:System.Windows.Input.MouseBinding>以上の要素または<xref:System.Windows.Input.KeyBinding>要素を宣言して、で<xref:System.Windows.UIElement.InputBindings%2A> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]プロパティを設定します。  
  
   
  
## Examples  
 を<xref:System.Windows.Input.KeyBinding>作成し、ルートウィンドウ<xref:System.Windows.Input.InputBindingCollection>のに追加する例を次に示します。  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Input.KeyBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Input.KeyBinding" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command"><paramref name="gesture" /> に関連付けるコマンド。</param>
        <param name="gesture"><paramref name="command" /> に関連付けるキーの組み合わせ。</param>
        <summary>指定した <see cref="T:System.Windows.Input.KeyBinding" /> と <see cref="T:System.Windows.Input.ICommand" /> を使用して、<see cref="T:System.Windows.Input.KeyGesture" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> または <paramref name="gesture" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">呼び出すコマンド。</param>
        <param name="key"><paramref name="command" /> に関連付けるキー。</param>
        <param name="modifiers"><paramref name="command" /> に関連付ける変換キー。</param>
        <summary>指定した <see cref="T:System.Windows.Input.KeyBinding" /> と指定した <see cref="T:System.Windows.Input.ICommand" /> および <see cref="T:System.Windows.Input.Key" /> に変換される <see cref="T:System.Windows.Input.ModifierKeys" /> を使用して、<see cref="T:System.Windows.Input.KeyGesture" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Input.KeyBinding" /> のインスタンスを作成します。</summary>
        <returns>新しいオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Input.KeyBinding" /> に関連付けられているジェスチャを取得または設定します。</summary>
        <value>キー シーケンス。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 関数キーとテンキーキーを除き、に<xref:System.Windows.Input.KeyGesture>は、 <xref:System.Windows.Input.Key>と1つ<xref:System.Windows.Input.ModifierKeys>以上のが含まれている必要があります。  
  
   
  
## Examples  
 次の例では、を<xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand>使用して<xref:System.Windows.Input.KeyBinding>をにバインドする方法を示します (マークアップとコード例では、異なるキーを指定しますが、それ以外は同等です)。  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定されている <paramref name="gesture" /> は <see cref="T:System.Windows.Input.KeyGesture" /> ではありません。</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Input.Key" /> に関連付けられている <see cref="T:System.Windows.Input.KeyGesture" /> の <see cref="T:System.Windows.Input.KeyBinding" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.KeyGesture" /> のキー部分。 既定値は <see cref="F:System.Windows.Input.Key.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 関数キーとテンキーキーを除き、に<xref:System.Windows.Input.KeyGesture>は、 <xref:System.Windows.Input.Key>と1つ<xref:System.Windows.Input.ModifierKeys>以上のが含まれている必要があります。  
  
 <xref:System.Windows.Input.KeyGesture>で<xref:System.Windows.Input.KeyBinding> を定義するときには、を指定する2つの方法があります。 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] <xref:System.Windows.Input.KeyBinding>で<xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding>を確立する最初の方法は、要素の属性を定義することです。これにより、キーと修飾子を1つの文字列として指定できるようになります。たとえば、"CTRL + P" などです。 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 2番目の方法は、 <xref:System.Windows.Input.KeyBinding.Key%2A> <xref:System.Windows.Input.KeyBinding>要素の属性<xref:System.Windows.Input.KeyBinding.Modifiers%2A>と属性を定義することです。 を<xref:System.Windows.Input.KeyGesture>設定する方法はどちらも同じで、基になる同じオブジェクトを変更しますが、両方が使用されている場合は競合が発生します。  、、および<xref:System.Windows.Input.KeyGesture>属性がすべて設定されている場合は、最後に定義された属性がに使用されます。 <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding.Modifiers%2A> <xref:System.Windows.Input.KeyBinding.Key%2A> たとえば、 <xref:System.Windows.Input.KeyBinding.Key%2A>セットが last ジェスチャのキーコンポーネントだけを上書きし、ジェスチャの修飾子を同じままにするという状況が生じる可能性があります。 一般に、の<xref:System.Windows.Input.KeyBinding.Gesture%2A> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]属性のみを使用することをお勧めします。これにより、あいまいさを回避し、最も合理化された構文を提供し、シリアル化の最も簡単な表現を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Input.KeyBinding.Key" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Input.ModifierKeys" /> に関連付けられている <see cref="T:System.Windows.Input.KeyGesture" /> の <see cref="T:System.Windows.Input.KeyBinding" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.KeyGesture" /> の変換キー。  既定値は <see cref="F:System.Windows.Input.ModifierKeys.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 関数キーとテンキーキーを除き、に<xref:System.Windows.Input.KeyGesture>は、 <xref:System.Windows.Input.Key>と1つ<xref:System.Windows.Input.ModifierKeys>以上のが含まれている必要があります。  
  
 <xref:System.Windows.Input.KeyGesture>で<xref:System.Windows.Input.KeyBinding> を定義するときには、を指定する2つの方法があります。 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] <xref:System.Windows.Input.KeyBinding>で<xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding>を確立する最初の方法は、要素の属性を定義することです。これにより、キーと修飾子を1つの文字列として指定できるようになります。たとえば、"CTRL + P" などです。 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 2番目の方法は、 <xref:System.Windows.Input.KeyBinding.Key%2A> <xref:System.Windows.Input.KeyBinding>要素の属性<xref:System.Windows.Input.KeyBinding.Modifiers%2A>と属性を定義することです。 を<xref:System.Windows.Input.KeyGesture>設定する方法はどちらも同じで、基になる同じオブジェクトを変更しますが、両方が使用されている場合は競合が発生します。  、、および<xref:System.Windows.Input.KeyGesture>属性がすべて設定されている場合は、最後に定義された属性がに使用されます。 <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding.Modifiers%2A> <xref:System.Windows.Input.KeyBinding.Key%2A> たとえば、 <xref:System.Windows.Input.KeyBinding.Key%2A>セットが last ジェスチャのキーコンポーネントだけを上書きし、ジェスチャの修飾子を同じままにするという状況が生じる可能性があります。 一般に、の<xref:System.Windows.Input.KeyBinding.Gesture%2A> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]属性のみを使用することをお勧めします。これにより、あいまいさを回避し、最も合理化された構文を提供し、シリアル化の最も簡単な表現を提供します。  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreModifierKeys*  
 列挙体で定義される<xref:System.Windows.Input.ModifierKeys> 、"+" 文字で区切られた1つ以上の修飾キー。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
