<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7ffcff8092d477e75345cd0afc6f0d3c265489e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51ccf-101">
        <see cref="T:System.Windows.Input.KeyGesture" /> を <see cref="T:System.Windows.Input.RoutedCommand" /> (または他の <see cref="T:System.Windows.Input.ICommand" /> の実装) にバインドします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="51ccf-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51ccf-102">A<xref:System.Windows.Input.KeyBinding>関連付けます、<xref:System.Windows.Input.KeyGesture>で、 <xref:System.Windows.Input.ICommand>、ように、<xref:System.Windows.Input.RoutedCommand>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="51ccf-103"><xref:System.Windows.Input.RoutedCommand> プライマリの実装、<xref:System.Windows.Input.ICommand>のためのインターフェイス、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]システムのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="51ccf-104">通常、<xref:System.Windows.Input.KeyGesture>が実行されるコマンドが呼び出されるコマンドの動作は、さらに影響を受けるコマンド固有の要因によってなどが、<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>値。</span><span class="sxs-lookup"><span data-stu-id="51ccf-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="51ccf-105">コマンド実行の詳細については、次を参照してください。、[コマンド実行の概要](~/docs/framework/wpf/advanced/commanding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="51ccf-106">ファンクション キーと、テンキーのキーを有効なを除き<xref:System.Windows.Input.KeyGesture>1 つだけ含める必要があります<xref:System.Windows.Input.Key>と 1 つまたは複数<xref:System.Windows.Input.ModifierKeys>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="51ccf-107">ファンクション キーおよびテンキーのキーは必要ありません修飾子キーを有効にするのに<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-108">無効なを指定することは<xref:System.Windows.Input.KeyGesture>と<xref:System.Windows.Input.KeyBinding>関連付けジェスチャを使用するか、無効な[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]またはコード。</span><span class="sxs-lookup"><span data-stu-id="51ccf-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="51ccf-109">インスタンスを作成してバインドを妨げる検証は行われません、<xref:System.Windows.Input.KeyGesture>修飾子がキーなし、またはのみ以外キーのみを格納しています。</span><span class="sxs-lookup"><span data-stu-id="51ccf-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="51ccf-110">このような<xref:System.Windows.Input.KeyBinding>その関連付けられたコマンドを呼び出すことはありませんを試みます。</span><span class="sxs-lookup"><span data-stu-id="51ccf-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="51ccf-111">定義するときに、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]2 つの方法を指定する、<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-112">確立するために最初の方法、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]を定義するのには、<xref:System.Windows.Input.KeyBinding.Gesture%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="51ccf-113">2 番目の方法は、定義する、<xref:System.Windows.Input.KeyBinding.Key%2A>属性および<xref:System.Windows.Input.KeyBinding.Modifiers%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素。</span><span class="sxs-lookup"><span data-stu-id="51ccf-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="51ccf-114">設定のどちらの方法、<xref:System.Windows.Input.KeyGesture>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</span><span class="sxs-lookup"><span data-stu-id="51ccf-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="51ccf-115">場合と、 <xref:System.Windows.Input.KeyBinding.Key%2A>、 <xref:System.Windows.Input.KeyBinding.Modifiers%2A>、および<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性は、すべての設定、定義されている属性最後が使用されますの<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-116">場所などの状況を可能性がありますが、<xref:System.Windows.Input.KeyBinding.Key%2A>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</span><span class="sxs-lookup"><span data-stu-id="51ccf-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="51ccf-117">一般に、お勧めのみに使用する、<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性から[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="51ccf-118">A<xref:System.Windows.Input.KeyBinding>登録することによって特定のオブジェクトで、またはクラス レベルで定義できます、<xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>上、<xref:System.Windows.Input.CommandManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="51ccf-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="51ccf-119">定義する最も一般的な方法、<xref:System.Windows.Input.KeyBinding>コントロール テンプレートの設定では、<xref:System.Windows.UIElement.InputBindings%2A>プロパティ[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]1 つまたは複数を宣言することによって<xref:System.Windows.Input.MouseBinding>または<xref:System.Windows.Input.KeyBinding>要素。</span><span class="sxs-lookup"><span data-stu-id="51ccf-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51ccf-120">次の例を作成、<xref:System.Windows.Input.KeyBinding>に追加し、<xref:System.Windows.Input.InputBindingCollection>ルート ウィンドウのです。</span><span class="sxs-lookup"><span data-stu-id="51ccf-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-121">
            <see cref="T:System.Windows.Input.KeyBinding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-122">
            <see cref="T:System.Windows.Input.KeyBinding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="51ccf-123">
            <c>gesture</c> に関連付けるコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-123">The command to associate with <c>gesture</c>.</span>
          </span>
        </param>
        <param name="gesture">
          <span data-ttu-id="51ccf-124">
            <c>command</c> に関連付けるキーの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-124">The key combination to associate with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51ccf-125">指定した <see cref="T:System.Windows.Input.KeyBinding" /> と <see cref="T:System.Windows.Input.ICommand" /> を使用して、<see cref="T:System.Windows.Input.KeyGesture" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51ccf-126">
            <paramref name="command" /> または <paramref name="gesture" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-126">
              <paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="51ccf-127">呼び出すコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-127">The command to invoke.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="51ccf-128">
            <c>command</c> に関連付けるキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-128">The key to be associated with <c>command</c>.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="51ccf-129">
            <c>command</c> に関連付ける修飾子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-129">The modifiers to be associated with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51ccf-130">指定した <see cref="T:System.Windows.Input.KeyBinding" /> と指定した <see cref="T:System.Windows.Input.ICommand" /> および <see cref="T:System.Windows.Input.Key" /> に変換される <see cref="T:System.Windows.Input.ModifierKeys" /> を使用して、<see cref="T:System.Windows.Input.KeyGesture" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-131">
            <see cref="T:System.Windows.Input.KeyBinding" /> のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51ccf-132">新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-132">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-133">この <see cref="T:System.Windows.Input.KeyBinding" /> に関連付けられているジェスチャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51ccf-134">キー シーケンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-134">The key sequence.</span>
          </span>
          <span data-ttu-id="51ccf-135">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-135">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51ccf-136">ファンクション キーと、テンキーを除いて、<xref:System.Windows.Input.KeyGesture>含める必要があります、<xref:System.Windows.Input.Key>と 1 つまたは複数<xref:System.Windows.Input.ModifierKeys>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51ccf-137">次の例は、バインドする方法を示しています、<xref:System.Windows.Input.KeyGesture>を<xref:System.Windows.Input.RoutedCommand>を使用して、 <xref:System.Windows.Input.KeyBinding> (マークアップおよびコードの例は、異なるキーを指定するただし、それ以外の場合と同じ)。</span><span class="sxs-lookup"><span data-stu-id="51ccf-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51ccf-138">設定されている <paramref name="gesture" /> は <see cref="T:System.Windows.Input.KeyGesture" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-139">この <see cref="T:System.Windows.Input.Key" /> に関連付けられている <see cref="T:System.Windows.Input.KeyGesture" /> の <see cref="T:System.Windows.Input.KeyBinding" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51ccf-140">
            <see cref="T:System.Windows.Input.KeyGesture" /> のキー部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="51ccf-141">既定値は <see cref="F:System.Windows.Input.Key.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51ccf-142">ファンクション キーと、テンキーを除いて、<xref:System.Windows.Input.KeyGesture>含める必要があります、<xref:System.Windows.Input.Key>と 1 つまたは複数<xref:System.Windows.Input.ModifierKeys>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="51ccf-143">定義するときに、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]2 つの方法を指定する、<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-144">確立するために最初の方法、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]を定義するのには、<xref:System.Windows.Input.KeyBinding.Gesture%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="51ccf-145">2 番目の方法は、定義する、<xref:System.Windows.Input.KeyBinding.Key%2A>属性および<xref:System.Windows.Input.KeyBinding.Modifiers%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素。</span><span class="sxs-lookup"><span data-stu-id="51ccf-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="51ccf-146">設定のどちらの方法、<xref:System.Windows.Input.KeyGesture>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</span><span class="sxs-lookup"><span data-stu-id="51ccf-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="51ccf-147">場合と、 <xref:System.Windows.Input.KeyBinding.Key%2A>、 <xref:System.Windows.Input.KeyBinding.Modifiers%2A>、および<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性は、すべての設定、定義されている属性最後が使用されますの<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-148">場所などの状況を可能性がありますが、<xref:System.Windows.Input.KeyBinding.Key%2A>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</span><span class="sxs-lookup"><span data-stu-id="51ccf-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="51ccf-149">一般に、お勧めのみに使用する、<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性から[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-150">
            <see cref="P:System.Windows.Input.KeyBinding.Key" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-151">この <see cref="T:System.Windows.Input.ModifierKeys" /> に関連付けられている <see cref="T:System.Windows.Input.KeyGesture" /> の <see cref="T:System.Windows.Input.KeyBinding" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51ccf-152">
            <see cref="T:System.Windows.Input.KeyGesture" /> の変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="51ccf-153">既定値は <see cref="F:System.Windows.Input.ModifierKeys.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51ccf-154">ファンクション キーと、テンキーを除いて、<xref:System.Windows.Input.KeyGesture>含める必要があります、<xref:System.Windows.Input.Key>と 1 つまたは複数<xref:System.Windows.Input.ModifierKeys>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="51ccf-155">定義するときに、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]2 つの方法を指定する、<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-156">確立するために最初の方法、<xref:System.Windows.Input.KeyBinding>で[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]を定義するのには、<xref:System.Windows.Input.KeyBinding.Gesture%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素は、キーと修飾子を 1 つの文字列、たとえば"CTRL + P"として指定する構文を使用します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="51ccf-157">2 番目の方法は、定義する、<xref:System.Windows.Input.KeyBinding.Key%2A>属性および<xref:System.Windows.Input.KeyBinding.Modifiers%2A>の属性、<xref:System.Windows.Input.KeyBinding>要素。</span><span class="sxs-lookup"><span data-stu-id="51ccf-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="51ccf-158">設定のどちらの方法、<xref:System.Windows.Input.KeyGesture>は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます。</span><span class="sxs-lookup"><span data-stu-id="51ccf-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="51ccf-159">場合と、 <xref:System.Windows.Input.KeyBinding.Key%2A>、 <xref:System.Windows.Input.KeyBinding.Modifiers%2A>、および<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性は、すべての設定、定義されている属性最後が使用されますの<xref:System.Windows.Input.KeyGesture>です。</span><span class="sxs-lookup"><span data-stu-id="51ccf-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="51ccf-160">場所などの状況を可能性がありますが、<xref:System.Windows.Input.KeyBinding.Key%2A>セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします。</span><span class="sxs-lookup"><span data-stu-id="51ccf-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="51ccf-161">一般に、お勧めのみに使用する、<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性から[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。 このあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="51ccf-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="51ccf-162">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="51ccf-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51ccf-163">XAML 値</span><span class="sxs-lookup"><span data-stu-id="51ccf-163">XAML Values</span></span>  
 <span data-ttu-id="51ccf-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="51ccf-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="51ccf-165">によって定義された 1 つまたは複数の修飾子キー、<xref:System.Windows.Input.ModifierKeys>列挙型、「+」文字で区切られます。</span><span class="sxs-lookup"><span data-stu-id="51ccf-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51ccf-166">
            <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51ccf-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>