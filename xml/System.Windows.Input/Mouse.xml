<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Mouse.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac583e98a291f9d5f6cefe7297d93f8f8195e0f1c0a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83e98a291f9d5f6cefe7297d93f8f8195e0f1c0a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Mouse">
          <source>Represents the mouse device to a specific thread.</source>
          <target state="translated">特定のスレッドに対するマウス デバイスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>クラスには、マウスが用意されています、関連するイベント メソッドと、マウスの状態に関する情報を提供するプロパティです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>Each event that <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.</source>
          <target state="translated">各イベントを<ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>添付イベントも再によって公開されている要素の基本クラスとして定義<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph>として新しいルーティングされたイベント。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>Generally, it is more convenient to handle mouse events for an application on <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse&gt;</ph> events.</source>
          <target state="translated">これは通常、アプリケーションのマウス イベントを処理する方が便利<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>を使用するのではなく、<ph id="ph3">&lt;xref:System.Windows.Input.Mouse&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>入力概要<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>The static members of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class delegate to the primary <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> of the calling thread's input manager.</source>
          <target state="translated">静的メンバー、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>プライマリ クラス デリゲート<ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph>呼び出し元のスレッドの入力のマネージャーのです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Mouse">
          <source>Captures mouse input to the specified element.</source>
          <target state="translated">指定された要素に対するマウス入力をキャプチャします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>が指定されていない、既定値<ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>は<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">マウスのキャプチャを解放する呼び出し<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>渡す<ph id="ph2">`null`</ph>をキャプチャする要素として。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">マウスがキャプチャされる場合と、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>最初に発生します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">これにより、キャプチャした要素の前にキャプチャを解放する機会、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベント ルーティングされます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>The element to capture the mouse.</source>
          <target state="translated">マウスをキャプチャする要素。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>Captures mouse input to the specified element.</source>
          <target state="translated">指定された要素に対するマウス入力をキャプチャします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がマウスをキャプチャできた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>が指定されていない、既定値<ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>は<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">マウスのキャプチャを解放する呼び出し<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>渡す<ph id="ph2">`null`</ph>をキャプチャする要素として。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">マウスがキャプチャされる場合と、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>最初に発生します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">これにより、キャプチャした要素の前にキャプチャを解放する機会、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベント ルーティングされます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>The following example shows how to capture the mouse to a specific element by using the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> method.</source>
          <target state="translated">次の例を使用して特定の要素にマウスをキャプチャする方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The element to capture the mouse.</source>
          <target state="translated">マウスをキャプチャする要素。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The capture policy to use.</source>
          <target state="translated">使用するキャプチャ ポリシー。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>Captures mouse input to the specified element using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph> を使用して、指定された要素に対するマウス入力をキャプチャします。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がマウスをキャプチャできた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</source>
          <target state="translated">要素は、マウスをキャプチャ、ときに、境界内にカーソルがあるかどうか、マウス入力を受け取ります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">マウスのキャプチャを解放する呼び出し<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>渡す<ph id="ph2">`null`</ph>をキャプチャする要素として。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">マウスがキャプチャされる場合と、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>最初に発生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">これにより、キャプチャした要素の前にキャプチャを解放する機会、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>イベント ルーティングされます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The following example shows how to capture the mouse to a specific element by using the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> method.</source>
          <target state="translated">次の例を使用して特定の要素にマウスをキャプチャする方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.Captured">
          <source>Gets the element that has captured the mouse.</source>
          <target state="translated">マウスをキャプチャした要素を取得します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The element captured by the mouse.</source>
          <target state="translated">マウスでキャプチャされる要素。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">マウスでは、ドラッグ アンド ドロップ操作中にのみ通常このような方法にキャプチャされ、ドラッグ アンド ドロップ操作の削除アクションが発生するまでにキャプチャを保持します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The follow example shows how to obtain the element that has mouse capture.</source>
          <target state="translated">次の例では、マウスのキャプチャを持つ要素を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Gets the element the mouse pointer is directly over.</source>
          <target state="translated">マウス ポインターのすぐ下にある要素を取得します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>The element the mouse pointer is over.</source>
          <target state="translated">マウス ポインターの下にある要素。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Controls can be composed of multiple elements.</source>
          <target state="translated">コントロールは、複数の要素で構成されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> reports the specific element in the composite control the mouse pointer is over and not the control itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> 上にマウス ポインターが複合コントロールおよびコントロール自体ではなく特定の要素を報告します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>For example, depending on which part of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> the pointer is over, the <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> property could report the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or the <ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>.</source>
          <target state="translated">のどの部分に応じてなど、 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 、上にポインターが、<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph>プロパティのレポートを<ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>プロパティまたは<ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph>プロパティ<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph>にマウスが要素、そのビジュアル子要素が含まれているかどうかを決定したり複合要素を制御したりします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</source>
          <target state="translated">要素にマウスのキャプチャがある場合は、マウス ポインターと見なされます要素のすぐ上の場所に関係なくにマウス ポインターが。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>The elements <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> are in relation to.</source>
          <target state="translated">要素 <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> が関連しています。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>An array of objects.</source>
          <target state="translated">オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</source>
          <target state="translated">最後のマウス移動イベント以後のマウス ポインターの座標を最大 64 個取得します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>The number of points returned.</source>
          <target state="translated">返されるポイントの数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The coordinate space in which to calculate the position of the mouse.</source>
          <target state="translated">マウス位置の計算に使用する座標空間。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Gets the position of the mouse relative to a specified element.</source>
          <target state="translated">指定した要素に相対的なマウスの位置を取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse relative to the parameter <ph id="ph1">&lt;paramref name="relativeTo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relativeTo" /&gt;</ph> パラメーターに対して相対的なマウスの位置。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</source>
          <target state="translated">マウス ポインターの位置は、指定した要素の原点、0, 0 要素の左上隅に対して相対的に計算されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>During drag-and-drop operations, the position of the mouse cannot be reliably determined through <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>.</source>
          <target state="translated">ドラッグ アンド ドロップ操作中に、マウスの位置を確実に判定できない<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> calls.</source>
          <target state="translated">これは、基になるによって制御される動作の多くで、削除が完了するまで (キャプチャを含む可能性があります)、マウスの制御は、ドラッグ元要素によって保持されるので、<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>呼び出しです。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Try the following approaches instead:</source>
          <target state="translated">代わりに、次の方法を試してください。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.DragEventArgs&gt;</ph> that is passed to the drag events (<ph id="ph3">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>).</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Windows.DragEventArgs&gt;</ph>ドラッグ イベントに渡される (<ph id="ph3">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Call <bpt id="p1">[</bpt>GetCursorPos<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>, using P/Invoke.</source>
          <target state="translated">呼び出す<bpt id="p1">[</bpt>GetCursorPos<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>P/invoke を使用します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph> to determine the position of the mouse pointer.</source>
          <target state="translated">次の例は、使用する方法を示しています。<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>マウス ポインターの位置を決定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse pointer is stored in a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure.</source>
          <target state="translated">マウス ポインターの位置が格納されている、<ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Point.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Point.Y%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph> object are displayed in a <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Point.X%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Point.Y%2A&gt;</ph>の値、<ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph>でオブジェクトを表示、<ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>Gets the state of the left button of the mouse.</source>
          <target state="translated">マウスの左ボタンの状態を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>The state of the left mouse button.</source>
          <target state="translated">マウスの左ボタンの状態。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.LeftButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">次の例があることを確認して、マウスの左ボタンが押されたかどうかを確認する方法を示していますの状態、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.LeftButton%2A&gt;</ph>と等しい、<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列挙値<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">ボタンが押されると、更新プログラムのサンプルでの要素を表示するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>Gets the state of the middle button of the mouse.</source>
          <target state="translated">マウスの中央ボタンの状態を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>The state of the middle mouse button.</source>
          <target state="translated">マウスの中央ボタンの状態。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MiddleButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">次の例があることを確認して、マウスの中央ボタンが押されたかどうかを確認する方法を示していますの状態、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MiddleButton%2A&gt;</ph>と等しい、<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列挙値<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">ボタンが押されると、更新プログラムのサンプルでの要素を表示するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>Represents the number of units the mouse wheel is rotated to scroll one line.</source>
          <target state="translated">1 行スクロールするためにマウス ホイールが回転する単位数を表します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>In the current <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, the value of this field is 120.</source>
          <target state="translated">現在の<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>、このフィールドの値は 120 です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</source>
          <target state="translated">フィールドが公開の意図は、おそらくノッチなし自由に回転を表すホイールが含まれる高解像度マウス ホイール、将来のビルドに対応するベンダーのようにすることです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</source>
          <target state="translated">このようなデバイスが各メッセージに、回転あたりより小さい値を持つ複数のメッセージを送信は予想されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>To support this possibility, you should either add the incoming delta values until the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</source>
          <target state="translated">この可能性をサポートするために、まで、受信する差分値を追加する必要がありますか、 <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph> (デルタ回転には、同じ応答を取得する) ように量に達すると、またはより頻繁にメッセージに応答の一部の行をスクロールします。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</source>
          <target state="translated">スクロールの単位を選択し、そのデルタに達すると、おそらくマウスの感度のユーザーが制御できるシステム パラメーターの参照やマウス ホイールのデルタのしきい値を推測するまでは、独自のデルタを蓄積する可能性がありますもします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>Gets or sets the cursor for the entire application.</source>
          <target state="translated">アプリケーション全体のカーソルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The override cursor or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Input.Mouse.OverrideCursor" /&gt;</ph> is not set.</source>
          <target state="translated">オーバーライドされたカーソル。<ph id="ph2">&lt;see cref="P:System.Windows.Input.Mouse.OverrideCursor" /&gt;</ph> が設定されていない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> that <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to will be applied to the whole application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>を<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>がセットには、アプリケーション全体に適用されます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>To clear the override <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>, set <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">オーバーライドをオフに<ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>設定、<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>に<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph> will force the mouse cursor not to be displayed, but mouse events are still processed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>に<ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph>が強制的に表示されますが、マウス カーソルが、マウス イベントは処理されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The following example shows an event handler for a <ph id="ph1">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> that is used to toggle the scope of a cursor change between a single element and the entire application.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>1 つの要素と全体のアプリケーション間でカーソルの変更のスコープを切り替えるために使用されます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>If the control that raised the event is the <ph id="ph1">`rbScopeElement`</ph><ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, a flag that denotes the scope of the cursor change is set and <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">イベントを発生させたコントロールがある場合、 <ph id="ph1">`rbScopeElement`</ph> <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>、カーソルの変更のスコープを示すフラグが設定されてと<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>に設定されている<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>If the control that raised the event is the <ph id="ph1">`rbScopeApplication`</ph><ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, a flag that denotes the scope of the cursor change is set and <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to the <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Controls.Border&gt;</ph> control named <ph id="ph6">`DisplayArea`</ph>.</source>
          <target state="translated">イベントを発生させたコントロールがある場合、 <ph id="ph1">`rbScopeApplication`</ph> <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>、カーソルの変更のスコープを示すフラグが設定されてと<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>に設定されている、<ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph>のプロパティ、<ph id="ph5">&lt;xref:System.Windows.Controls.Border&gt;</ph>という名前のコントロール<ph id="ph6">`DisplayArea`</ph>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>Gets the primary mouse device.</source>
          <target state="translated">プライマリ マウス デバイスを取得します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>The device.</source>
          <target state="translated">デバイス。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このプロパティは、Windows Presentation Foundation インフラストラクチャをサポートしているし、コードから直接使用するものではありません。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">ルーティング イベントの識別子は、ルーティングされたイベントが登録され、ルーティングされたイベントを登録するクラスのフィールドと、結果が格納されているときに作成されます。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">多くの場合、特定のルーティング イベントを識別するのにイベント システム メソッドへのパラメーターとしてこれらの識別子を使用します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The event handler.</source>
          <target state="translated">イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>Gets the state of the right button.</source>
          <target state="translated">マウスの右ボタンの状態を取得します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>The state of the right mouse button.</source>
          <target state="translated">マウスの右ボタンの状態。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.RightButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">次の例があることを確認して、マウスの右ボタンが押されたかどうかを確認する方法を示していますの状態、<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.RightButton%2A&gt;</ph>と等しい、<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列挙値<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">ボタンが押されると、更新プログラムのサンプルでの要素を表示するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>The cursor to set the mouse pointer to.</source>
          <target state="translated">マウス ポインターの設定先のカーソル。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>Sets the mouse pointer to the specified <ph id="ph1">&lt;see cref="T:System.Windows.Input.Cursor" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Input.Cursor" /&gt;</ph> にマウス ポインターを設定します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the cursor was set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">カーソルが設定された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>The cursor being set does not apply to any particular element, but rather it applies to the whole application.</source>
          <target state="translated">特定の要素に設定されているカーソルは適用されませんではなく、アプリケーション全体に適用されます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</source>
          <target state="translated">したがって、マウス ポインターがカーソルを設定するオブジェクトの上にカーソルを設定した後に、カーソルは一度変更します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>To force the mouse pointer to a specific <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> and to force this <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> on all elements, set the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> property.</source>
          <target state="translated">特定にマウス ポインターを強制的に<ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>と強制的に実行する<ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph>、すべての要素で設定、<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>To set the cursor on a specific element, use the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property on either <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">特定の要素にカーソルを設定するには、使用、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph>いずれかのプロパティ<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>For more information on the base elements, see the <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
          <target state="translated">基本要素の詳細については、次を参照してください。、<bpt id="p1">[</bpt>基本要素の概要<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Synchronize">
          <source>Forces the mouse to resynchronize.</source>
          <target state="translated">マウスを強制的に再同期します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.UpdateCursor">
          <source>Forces the mouse cursor to be updated.</source>
          <target state="translated">マウス カーソルを強制的に更新します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>Gets the state of the first extended button.</source>
          <target state="translated">マウスの第 1 拡張ボタンの状態を取得します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>The state of the first extended mouse button.</source>
          <target state="translated">マウスの第 1 拡張ボタンの状態。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton1%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">次の例は、いることを確認して、最初の拡張のマウス ボタンが押されたかどうかを確認する方法を示しています。 の状態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton1%2A&gt;</ph>がと等しい、<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列挙値<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">ボタンが押されると、更新プログラムのサンプルでの要素を表示するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>Gets the state of the second extended button.</source>
          <target state="translated">マウスの第 2 拡張ボタンの状態を取得します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>The state of the second extended mouse button.</source>
          <target state="translated">マウスの第 2 拡張ボタンの状態。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton2%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">次の例があることを確認して 2 番目の拡張のマウス ボタンが押されたかどうかを確認する方法を示していますの状態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton2%2A&gt;</ph>と等しい、<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列挙値<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">ボタンが押されると、更新プログラムのサンプルでの要素を表示するメソッドが呼び出されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>