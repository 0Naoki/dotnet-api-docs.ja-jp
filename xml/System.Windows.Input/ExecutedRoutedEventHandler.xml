<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e128fe4824481b4e3dc209fbcdd4599518ff8ebd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69172901" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary><see cref="E:System.Windows.Input.CommandBinding.Executed" /> と <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> のルーティング イベントだけでなく、関連する添付イベントも処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このデリゲートには、 <xref:System.Windows.Input.RoutedCommand>の実装ロジックが含まれています。  コマンドから実装ロジックを分離すると、さまざまなソースと型からコマンドを呼び出すことができ、コマンドロジックを一元化できます。  
  
 このデリゲートは、 <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>および<xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>にも使用されます。これは<xref:System.Windows.Input.CommandManager> 、コマンドのインフラストラクチャの多くを実装するクラスの添付イベントです。 しかし、ほとんどの実用的な<xref:System.Windows.Input.CommandBinding.Executed>ハンドラーでは、 <xref:System.Windows.Input.CommandBinding> <xref:System.Windows.Input.CommandManager>レベルで作業するのではなく、特定ののイベントを処理します。  
  
 で<xref:System.Windows.Input.ExecutedRoutedEventArgs>は、実行されたコマンドの結果として発生するルーティングイベントのイベントハンドラーを記述するときに、通常、次のプロパティが重要になります。  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A>コマンドが実行されたターゲットを報告します。 コマンドが実行されたら、ルーティングイベントを発生さ<xref:System.Windows.RoutedEventArgs.Source%2A>せたオブジェクトとして、ルーティングイベントの用語の方が一般的であると考えることもできます。  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>実行されたコマンドを報告します。 このプロパティは、コマンドバインドを使用する場合や、複数のコマンドを処理する可能性があるハンドラーを記述する場合に便利です。  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>実行中のコマンドによって渡されたコマンド固有のパラメーターを報告します。 すべてのコマンドがコマンド固有のパラメーターを使用したり、使用したりするわけではありません。  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A>実行されたコマンドからのルーティングイベントが、ルート上の別の要素によって既に処理されているかどうかを報告します。 ルーティングイベントハンドラーの場合、に<xref:System.Windows.RoutedEventArgs.Handled%2A> `true`設定するイベントを処理するときに、意味のある処理を行うハンドラーを使用することをお勧めします。 これにより、イベントの一般的なハンドラーが、ルートに沿ってもう一度イベントを処理するのを防ぐことができます。 ルーティングイベントの処理の詳細については、「[ルーティングイベントを処理済みとしてマークする」および「クラス処理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)」を参照してください。  
  
 このデリゲート<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> は、<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>およびのハンドラーも表します。これは、コマンドのインフラストラクチャの多くを実装するクラスのアタッチされたイベントです。<xref:System.Windows.Input.CommandManager> しかし、ほとんどの実用的な<xref:System.Windows.Input.CommandBinding.Executed>ハンドラーでは、 <xref:System.Windows.Input.CommandBinding> <xref:System.Windows.Input.CommandManager>レベルで作業するのではなく、特定ののイベントを処理します。  
  
 コマンド実行の詳細については、「[コマンド実行の概要](~/docs/framework/wpf/advanced/commanding-overview.md)」を参照してください。  
  
   
  
## Examples  
 この例では<xref:System.Windows.Input.ExecutedRoutedEventHandler> 、コマンドの実行時にターゲットにビジュアルプロパティを設定するを作成します。 この例では、 <xref:System.Windows.Input.CanExecuteRoutedEventHandler>同じコマンドのも含まれています。  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>
