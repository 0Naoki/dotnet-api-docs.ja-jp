<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stylus.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a4e69947199dbc29d80cc4d70e182b90000807b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a4e69947199dbc29d80cc4d70e182b90000807b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Stylus">
          <source>Provides access to general information about a tablet pen.</source>
          <target state="translated">タブレット ペンに関する一般的な情報にアクセスします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Stylus">
          <source>The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">スタイラスがの境界から出た場合でも、次の例は、スタイラスの座標を記録する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Stylus">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textBox1`</ph>, and that the <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph> events are connected to event handlers.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と呼ばれる<ph id="ph2">`textBox1`</ph>、および、 <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph>イベントがイベント ハンドラーに接続しています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to add.</source>
          <target state="translated">追加するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Stylus">
          <source>Captures the stylus that is bound to a particular element.</source>
          <target state="translated">特定の要素にバインドされたスタイラスをキャプチャします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>The element to capture the stylus to.</source>
          <target state="translated">スタイラスのキャプチャ先の要素。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>Captures the stylus to the specified element.</source>
          <target state="translated">指定した要素でスタイラスをキャプチャします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stylus is captured to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">スタイラスが <ph id="ph2">&lt;paramref name="element" /&gt;</ph> にキャプチャされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29&gt;</ph> method to ensure that <ph id="ph2">`element`</ph> receives stylus events even when the cursor goes out of the elements' bounds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29&gt;</ph>ことを確認するメソッド<ph id="ph2">`element`</ph>カーソルが要素の境界外に出るときにも、スタイラス イベントを受け取ります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>To release the stylus, call <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.None&gt;</ph>.</source>
          <target state="translated">解放するには、スタイラスを呼び出す<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph>で、 <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> 'éý'<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.None&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29&gt;</ph> method returns <ph id="ph2">`false`</ph> if <ph id="ph3">`element`</ph> is not visible or enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29&gt;</ph>メソッドを返します。<ph id="ph2">`false`</ph>場合<ph id="ph3">`element`</ph>は非表示または有効にします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">スタイラスがの境界から出た場合でも、次の例は、スタイラスの座標を記録する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
          <source>This example assumes there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textBox1`</ph>, and that the <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph> events are connected to event handlers.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と呼ばれる<ph id="ph2">`textBox1`</ph>、および、 <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph>イベントがイベント ハンドラーに接続しています。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The element to capture the stylus to.</source>
          <target state="translated">スタイラスのキャプチャ先の要素。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>Captures the stylus to the specified element.</source>
          <target state="translated">指定した要素でスタイラスをキャプチャします。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stylus is captured to <ph id="ph2">&lt;paramref name="element" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">スタイラスが <ph id="ph2">&lt;paramref name="element" /&gt;</ph> にキャプチャされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph> method to ensure that <ph id="ph2">`element`</ph> receives stylus events even when the cursor goes out of the elements' bounds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph>ことを確認するメソッド<ph id="ph2">`element`</ph>カーソルが要素の境界外に出るときにも、スタイラス イベントを受け取ります。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>To release the stylus, call <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.None&gt;</ph>.</source>
          <target state="translated">解放するには、スタイラスを呼び出す<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph>で、 <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> 'éý'<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.None&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph> method returns <ph id="ph2">`false`</ph> if <ph id="ph3">`element`</ph> is not visible or enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29&gt;</ph>メソッドを返します。<ph id="ph2">`false`</ph>場合<ph id="ph3">`element`</ph>は非表示または有効にします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">スタイラスがの境界から出た場合でも、次の例は、スタイラスの座標を記録する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textBox1`</ph>, and that the <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph> events are connected to the event handlers.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と呼ばれる<ph id="ph2">`textBox1`</ph>、および、 <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusDown&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Input.Stylus.StylusUp&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Input.Stylus.StylusMove&gt;</ph>イベントがイベント ハンドラーに接続しています。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Stylus.Captured">
          <source>Gets the element to which the stylus is bound.</source>
          <target state="translated">スタイラスのバインド先の要素を取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.Captured">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.IInputElement" /&gt;</ph> to which the stylus is bound.</source>
          <target state="translated">スタイラスのバインド先の <ph id="ph1">&lt;see cref="T:System.Windows.IInputElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.Captured">
          <source>The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</source>
          <target state="translated">次の例では、ユーザーがスタイラスがデジタイザーに触れたときにスタイラスがキャプチャされないようにする方法を示します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.Captured">
          <source>This example assumes that the <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.PreviewStylusDown&gt;</ph> event is connected to the event handler.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.PreviewStylusDown&gt;</ph>イベントがイベント ハンドラーに関連付けられています。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Stylus.CurrentStylusDevice">
          <source>Gets the stylus that represents the stylus currently in use.</source>
          <target state="translated">現在使用されているスタイラスを表すスタイラスを取得します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.CurrentStylusDevice">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusDevice" /&gt;</ph> that represents the stylus currently in use.</source>
          <target state="translated">現在使用されているスタイラスを表す <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusDevice" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.CurrentStylusDevice">
          <source>The following example demonstrates how to erase the text that is selected with an inverted stylus.</source>
          <target state="translated">次の例では、逆のスタイラスで選択されているテキストを消去する方法を示します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.CurrentStylusDevice">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textBox1`</ph> and that the <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusUpEvent&gt;</ph> event is connected to the event handler.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と呼ばれる<ph id="ph2">`textBox1`</ph>ことと、<ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusUpEvent&gt;</ph>イベントがイベント ハンドラーに関連付けられています。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Stylus.DirectlyOver">
          <source>Gets the element that is directly beneath the stylus.</source>
          <target state="translated">スタイラスの真下にある要素を取得します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.DirectlyOver">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.IInputElement" /&gt;</ph> that is directly beneath the stylus.</source>
          <target state="translated">スタイラスの真下にある <ph id="ph1">&lt;see cref="T:System.Windows.IInputElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.DirectlyOver">
          <source>The following example demonstrates how to determine which element the stylus is positioned over.</source>
          <target state="translated">次の例では、上にスタイラスが置かれたのどの要素を決定する方法を示します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Stylus.DirectlyOver">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textBox1`</ph> and that the <ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusInAirMove&gt;</ph> event is connected to the event handler.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と呼ばれる<ph id="ph2">`textBox1`</ph>ことと、<ph id="ph3">&lt;xref:System.Windows.Input.Stylus.StylusInAirMove&gt;</ph>イベントがイベント ハンドラーに関連付けられています。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to determine whether flicks are enabled.</source>
          <target state="translated">フリックが有効かどうかを確認する対象となる <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> 添付プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified element has flicks enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した要素でフリックが有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</source>
          <target state="translated">Windows Vista では、可能性のあるシステム ジェスチャのいずれかのフリックは短い、クイック、直線の線で、ナビゲーションやショートカット コマンドにマップすることができます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>By default, flicks are disabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</source>
          <target state="translated">既定では、フリックが無効になって、 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>Flicks are enabled on all other controls.</source>
          <target state="translated">その他のすべてのコントロールでは、フリックが有効にします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
          <source>The following example demonstrates how to determine whether flicks are enabled on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">次の例でフリックが有効かどうかを確認する方法、<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to determine whether press and hold is enabled.</source>
          <target state="translated">プレス アンド ホールドが有効かどうかを判断する対象となる <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> 添付プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified element has press and hold enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>;</source>
          <target state="translated">指定した要素でプレス アンド ホールドが有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
          <source>The following example demonstrates how to enable press and hold on a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>.</source>
          <target state="translated">次の例では、プレス アンド ホールドする方法、<ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> called <ph id="ph2">`horizontalSlider1`</ph>.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>と呼ばれる<ph id="ph2">`horizontalSlider1`</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to determine whether tap feedback enabled.</source>
          <target state="translated">タップ フィードバックが有効かどうかを確認する対象となる <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> 添付プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified element has tap feedback enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した要素でタップ フィードバックが有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>In Windows Vista, a short animation occurs when the user taps the control.</source>
          <target state="translated">Windows Vista では、短いアニメーションは、ユーザーがコントロールをタップしたときに発生します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>By default, tap feedback is disabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">既定では、タップ フィードバックが無効になって、<ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>It is enabled on all other controls.</source>
          <target state="translated">その他のすべてのコントロールが有効にします。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
          <source>The following example demonstrates how to determine whether tap feedback is enabled on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">次の例でタップ フィードバックが有効になっているかどうかを確認する方法、<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to determine whether touch input feedback enabled.</source>
          <target state="translated">タッチ入力フィードバックが有効かどうかを確認する対象となる <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> 添付プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if touch input feedback is enabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">タッチ入力フィードバックが有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)">
          <source>The following example demonstrates how to determine whether tap feedback is enabled on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">次の例でタップ フィードバックが有効になっているかどうかを確認する方法、<ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.GotStylusCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> 添付プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> 添付プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> 添付プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> 添付プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.LostStylusCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.PreviewStylusUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">このイベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>The event handler to remove.</source>
          <target state="translated">削除するイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to enable flicks.</source>
          <target state="translated">フリックを有効にする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable flicks; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable flicks.</source>
          <target state="translated">フリックを有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。無効にする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /&gt;</ph> 添付プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</source>
          <target state="translated">Windows Vista では、可能性のあるシステム ジェスチャのいずれかのフリックは短い、クイック、直線の線で、ナビゲーションやショートカット コマンドにマップすることができます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>By default, flicks are disabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</source>
          <target state="translated">既定では、フリックが無効になって、 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Flicks are enabled on all other controls.</source>
          <target state="translated">その他のすべてのコントロールでは、フリックが有効にします。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The following example demonstrates how to disable flicks on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">次の例では、フリックを無効にする方法、<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to enable press and hold.</source>
          <target state="translated">プレス アンド ホールドを有効にする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable press and hold; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable press and hold.</source>
          <target state="translated">プレス アンド ホールドを有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。無効にする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /&gt;</ph> 添付プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Press and hold maps to the right-click on a mouse.</source>
          <target state="translated">マウスの右クリックする地図を押したままにします。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</source>
          <target state="translated">Windows Vista で場所ユーザー可能性がありますを押しながら、タブレット ペンを右クリックをシミュレートする必要のないような状況と予測される場合で、要素上でこの動作を無効にすることができます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The following example demonstrates how to enable press and hold on a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>.</source>
          <target state="translated">次の例では、プレス アンド ホールドする方法、<ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> called <ph id="ph2">`horizontalSlider1`</ph>.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph>と呼ばれる<ph id="ph2">`horizontalSlider1`</ph>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to enable tap feedback.</source>
          <target state="translated">タップ フィードバックを有効にする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable tap feedback; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable tap feedback.</source>
          <target state="translated">タップ フィードバックを有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。無効にする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /&gt;</ph> 添付プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>In Windows Vista, a short animation occurs when the user taps the control.</source>
          <target state="translated">Windows Vista では、短いアニメーションは、ユーザーがコントロールをタップしたときに発生します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>By default, tap feedback is disabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">既定では、タップ フィードバックが無効になって、<ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>It is enabled on all other controls.</source>
          <target state="translated">その他のすべてのコントロールが有効にします。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The following example disables tap feedback on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">次の例でタップ フィードバックを無効にする<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> on which to enable tap feedback.</source>
          <target state="translated">タップ フィードバックを有効にする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable touch input feedback; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable touch input feedback.</source>
          <target state="translated">タッチ入力フィードバックを有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。無効にする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> attached property on the specified element.</source>
          <target state="translated">指定した要素の <ph id="ph1">&lt;see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /&gt;</ph> 添付プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The following example enables touch feedback on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">次の例では、タッチ フィードバックを有効にする<ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusButtonDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusButtonUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusDown" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusEnterEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusEnter" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusInAirMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusInRangeEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusInRange" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusLeaveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusLeave" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusMove" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusSystemGestureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Stylus.StylusUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Stylus.StylusUp" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>Synchronizes the cursor and the user interface.</source>
          <target state="translated">カーソルとユーザー インターフェイスを同期します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>Applications may need to determine the element on which the cursor is located.</source>
          <target state="translated">アプリケーションは、カーソルが配置されている要素を決定する必要があります。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>If the application uses animation, the <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph> method might return an element that has moved out from under the cursor.</source>
          <target state="translated">アプリケーションは、アニメーションを使用している場合、<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph>メソッドは、カーソルの下移動された要素を返す場合があります。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Synchronize%2A&gt;</ph> to be sure that <ph id="ph2">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph> returns the proper element.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Synchronize%2A&gt;</ph>ことを確認<ph id="ph2">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph>適切な要素を返します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>The following example demonstrates how to get the element that is under the cursor.</source>
          <target state="translated">次の例では、カーソルの下にある要素を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Stylus.Synchronize">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Synchronize%2A&gt;</ph> ensures that <ph id="ph2">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph> returns the correct element.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Input.Stylus.Synchronize%2A&gt;</ph>確実<ph id="ph2">&lt;xref:System.Windows.Input.Stylus.DirectlyOver%2A&gt;</ph>正しい要素を返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>