<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00553c6c120f3a4f990ef06df0c85978b83f474c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70620644" /></Metadata><TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Windows.Input.Touch.FrameReported>イベントは、Silverlight [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]との互換性をサポートするためにに含まれています。 Silverlight との互換性を確保する必要がない場合は、 <xref:System.Windows.UIElement.TouchDown> 、 <xref:System.Windows.UIElement3D>、または<xref:System.Windows.ContentElement>の<xref:System.Windows.UIElement>よう<xref:System.Windows.UIElement.TouchMove>な touch イベントを使用します。  
  
 タッチイベント<xref:System.Windows.Input.TouchFrameEventArgs>に関連する<xref:System.Windows.Input.TouchPoint>値を取得するには、を使用します。 <xref:System.Windows.Input.TouchPoint.Position%2A> <xref:System.Windows.Input.TouchAction.Down> <xref:System.Windows.Input.TouchAction.Up> から、 <xref:System.Windows.Input.TouchAction> タッチのを取得し、が、 <xref:System.Windows.Input.TouchAction.Move>、またはのいずれのアクションであったかを判断できます。 <xref:System.Windows.Input.TouchPoint> また、 <xref:System.Windows.Input.TouchPoint>を使用して<xref:System.Windows.Input.TouchDevice>を取得することもできます。 では、デバイス<xref:System.Windows.Input.TouchDevice.Id%2A>を特定し、タッチされた要素に関する情報を取得できます。 <xref:System.Windows.Input.TouchDevice>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Input.Touch.FrameReported> 、イベントを処理し、の<xref:System.Windows.Input.TouchFrameEventArgs>タッチデータにアクセスします。 で<xref:System.Windows.Controls.Canvas>タッチが <xref:System.Windows.Controls.Canvas> 押されると、がにキャプチャされます。 <xref:System.Windows.Input.TouchDevice> タッチがリフト<xref:System.Windows.Input.TouchDevice>されると、が解放されます。 タッチが上<xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A>を移動すると、がチェックされます。 最初のタッチから移動した場合は、その場所が記録されます。 2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。  
  
 この例は、 <xref:System.Windows.Input.Touch>クラスの概要で使用できる大規模な例の一部です。  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">座標空間を定義する要素。 WPF 絶対座標を使用するには、<paramref name="relativeTo" /> を <see langword="null" /> として指定します。</param>
        <summary>指定された要素に対する相対的なプライマリ タッチ デバイスの現在のタッチ点を返します。</summary>
        <returns>指定した要素を基準とするプライマリ <see cref="T:System.Windows.Input.TouchDevice" /> の現在の位置。または、プライマリ <see cref="T:System.Windows.Input.TouchDevice" /> がアクティブでない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一連のアクティブなタッチデバイスでは、最初のデバイス<xref:System.Windows.Input.TouchDevice.Activated>がプライマリタッチデバイスになります。 たとえば、2本の指が画面に触れる場合、1つ下の指がプライマリタッチデバイスによって表されます。 2番目の指が押されている間に最初の指がリフトされ`null`た場合、プライマリタッチデバイスはになります。  
  
   
  
## Examples  
 次のコードは、 <xref:System.Windows.Input.TouchFrameEventArgs>から取得したタッチポイントを処理します。 で<xref:System.Windows.Controls.Canvas>タッチが <xref:System.Windows.Controls.Canvas> 押されると、がにキャプチャされます。 <xref:System.Windows.Input.TouchDevice> タッチがリフト<xref:System.Windows.Input.TouchDevice>されると、が解放されます。 タッチが上<xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A>を移動すると、がチェックされます。 が<xref:System.Windows.Input.TouchDevice.Id%2A> 、最初の<xref:System.Windows.Input.TouchDevice.Id%2A>タッチポイントのと一致する場合は、その場所が記録されます。 2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。  
  
 この例は、 <xref:System.Windows.Input.Touch>クラスの概要で使用できる大規模な例の一部です。  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">座標空間を定義する要素。 WPF 絶対座標を使用するには、<paramref name="relativeTo" /> を <see langword="null" /> として指定します。</param>
        <summary>アクティブな各タッチ デバイスの、指定した要素を基準とする現在のタッチ点が格納されているコレクションを返します。</summary>
        <returns>アクティブな各 <see cref="T:System.Windows.Input.TouchPoint" /> の現在の <see cref="T:System.Windows.Input.TouchDevice" /> が格納されたコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコードは、 <xref:System.Windows.Input.TouchFrameEventArgs>から取得したタッチポイントを処理します。 キャンバスでタッチが押されると、 <xref:System.Windows.Input.TouchDevice>がキャンバスにキャプチャされます。 タッチが発生<xref:System.Windows.Input.TouchDevice>すると、が解放されます。 タッチがキャンバス<xref:System.Windows.Input.TouchDevice.Id%2A>上を移動すると、がチェックされます。 が<xref:System.Windows.Input.TouchDevice.Id%2A> 、最初の<xref:System.Windows.Input.TouchDevice.Id%2A>タッチポイントのと一致する場合は、その場所が記録されます。 2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。  
  
 この例は、 <xref:System.Windows.Input.Touch>クラスの概要で使用できる大規模な例の一部です。  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーは実装されていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、Silverlight の互換性のために用意されています。 デバイスの実装に違いがあるため、WPF には実装されていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントのタイム スタンプを取得します。</summary>
        <value>このイベントのタイム スタンプ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
