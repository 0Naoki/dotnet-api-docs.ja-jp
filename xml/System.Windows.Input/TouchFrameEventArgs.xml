<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="48868-101"><see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="48868-101">Provides data for the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48868-102"><xref:System.Windows.Input.Touch.FrameReported>でイベントが含まれる[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]Silverlight との互換性をサポートするためにします。</span><span class="sxs-lookup"><span data-stu-id="48868-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="48868-103">Silverlight との互換性を確保する必要はありません、ように、タッチ イベントを使用して<xref:System.Windows.UIElement.TouchDown>と<xref:System.Windows.UIElement.TouchMove>の<xref:System.Windows.UIElement>、 <xref:System.Windows.UIElement3D>、または<xref:System.Windows.ContentElement>です。</span><span class="sxs-lookup"><span data-stu-id="48868-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="48868-104">使用して、<xref:System.Windows.Input.TouchFrameEventArgs>を取得する、<xref:System.Windows.Input.TouchPoint>タッチ イベントに関連する値。</span><span class="sxs-lookup"><span data-stu-id="48868-104">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="48868-105"><xref:System.Windows.Input.TouchPoint>、取得することができます、<xref:System.Windows.Input.TouchPoint.Position%2A>タッチのとを特定するかどうか、<xref:System.Windows.Input.TouchAction>が、 <xref:System.Windows.Input.TouchAction.Down>、 <xref:System.Windows.Input.TouchAction.Move>、または<xref:System.Windows.Input.TouchAction.Up>アクション。</span><span class="sxs-lookup"><span data-stu-id="48868-105">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="48868-106">使用することも、<xref:System.Windows.Input.TouchPoint>を取得する、<xref:System.Windows.Input.TouchDevice>です。</span><span class="sxs-lookup"><span data-stu-id="48868-106">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="48868-107"><xref:System.Windows.Input.TouchDevice>、デバイスを指定できます<xref:System.Windows.Input.TouchDevice.Id%2A>タッチは、要素に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="48868-107">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48868-108">次の例のハンドル、<xref:System.Windows.Input.Touch.FrameReported>イベントでタッチ データにアクセスして、<xref:System.Windows.Input.TouchFrameEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="48868-108">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event and accesses the touch data in the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="48868-109">タッチが押されたとき、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>にキャプチャされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="48868-109">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="48868-110">タッチを持ち上げると、<xref:System.Windows.Input.TouchDevice>を解放します。</span><span class="sxs-lookup"><span data-stu-id="48868-110">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="48868-111">タッチをまたいで移動するときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="48868-111">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="48868-112">最初のタッチの場合は、その場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="48868-112">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="48868-113">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="48868-113">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="48868-114">この例で使用可能なサンプルが大きくの一部である、<xref:System.Windows.Input.Touch>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="48868-114">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="48868-115">座標空間を定義する要素。</span><span class="sxs-lookup"><span data-stu-id="48868-115">The element that defines the coordinate space.</span></span> <span data-ttu-id="48868-116">WPF 絶対座標を使用するには、<c>relativeTo</c> を <see langword="null" /> として指定します。</span><span class="sxs-lookup"><span data-stu-id="48868-116">To use WPF absolute coordinates, specify <c>relativeTo</c> as <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="48868-117">指定された要素に対する相対的なプライマリ タッチ デバイスの現在のタッチ点を返します。</span><span class="sxs-lookup"><span data-stu-id="48868-117">Returns the current touch point of the primary touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="48868-118">指定した要素を基準とするプライマリ <see cref="T:System.Windows.Input.TouchDevice" /> の現在の位置。または、プライマリ <see cref="T:System.Windows.Input.TouchDevice" /> がアクティブでない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="48868-118">The current position of the primary <see cref="T:System.Windows.Input.TouchDevice" /> relative to the specified element; or <see langword="null" /> if the primary <see cref="T:System.Windows.Input.TouchDevice" /> is not active.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48868-119">アクティブのセットにタッチする最初のデバイスのデバイス<xref:System.Windows.Input.TouchDevice.Activated>プライマリ タッチ デバイスがします。</span><span class="sxs-lookup"><span data-stu-id="48868-119">In a set of active touch devices, the first device to be <xref:System.Windows.Input.TouchDevice.Activated> is the primary touch device.</span></span> <span data-ttu-id="48868-120">たとえば、2 本の指が画面に接している場合は、ダウンは、その指がプライマリ タッチ デバイスで表されます。</span><span class="sxs-lookup"><span data-stu-id="48868-120">For example, if two fingers are touching the screen, the first finger that is down is represented by the primary touch device.</span></span> <span data-ttu-id="48868-121">2 番目の指がまだ停止中に、指がリフトされた場合、プライマリ タッチ デバイスは次のようになります。`null`です。</span><span class="sxs-lookup"><span data-stu-id="48868-121">If the first finger is lifted while the second finger is still down, the primary touch device becomes `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48868-122">次のコードから取得されるタッチ ポイントを処理する、<xref:System.Windows.Input.TouchFrameEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="48868-122">The following code processes the touch points that are retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="48868-123">タッチが押されたとき、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>にキャプチャされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="48868-123">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="48868-124">タッチを持ち上げると、<xref:System.Windows.Input.TouchDevice>を解放します。</span><span class="sxs-lookup"><span data-stu-id="48868-124">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="48868-125">タッチをまたいで移動するときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="48868-125">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="48868-126">場合、<xref:System.Windows.Input.TouchDevice.Id%2A>と一致する、<xref:System.Windows.Input.TouchDevice.Id%2A>の最初のタッチを示す、プライマリのタッチ ポイントの場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="48868-126">If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded.</span></span> <span data-ttu-id="48868-127">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="48868-127">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="48868-128">この例で使用可能なサンプルが大きくの一部である、<xref:System.Windows.Input.Touch>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="48868-128">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="48868-129">座標空間を定義する要素。</span><span class="sxs-lookup"><span data-stu-id="48868-129">The element that defines the coordinate space.</span></span> <span data-ttu-id="48868-130">WPF 絶対座標を使用するには、<c>relativeTo</c> を <see langword="null" /> として指定します。</span><span class="sxs-lookup"><span data-stu-id="48868-130">To use WPF absolute coordinates, specify <c>relativeTo</c> as <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="48868-131">アクティブな各タッチ デバイスの、指定した要素を基準とする現在のタッチ点が格納されているコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="48868-131">Returns a collection that contains the current touch point for each active touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="48868-132">アクティブな各 <see cref="T:System.Windows.Input.TouchPoint" /> の現在の <see cref="T:System.Windows.Input.TouchDevice" /> が格納されたコレクション。</span><span class="sxs-lookup"><span data-stu-id="48868-132">A collection that contains the current <see cref="T:System.Windows.Input.TouchPoint" /> for each active <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48868-133">次のコードからタッチ ポイントを取得するプロセス、<xref:System.Windows.Input.TouchFrameEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="48868-133">The following code processes the touch points retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="48868-134">キャンバスでタッチが押されたときに、<xref:System.Windows.Input.TouchDevice>がキャンバスにキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="48868-134">When a touch is pressed on the canvas, the <xref:System.Windows.Input.TouchDevice> is captured to the canvas.</span></span> <span data-ttu-id="48868-135">タッチが発生したときに、<xref:System.Windows.Input.TouchDevice>を解放します。</span><span class="sxs-lookup"><span data-stu-id="48868-135">When the touch is raised, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="48868-136">タッチがキャンバスをまたがって移動したときに、<xref:System.Windows.Input.TouchDevice.Id%2A>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="48868-136">When a touch moves across the canvas, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="48868-137">場合、<xref:System.Windows.Input.TouchDevice.Id%2A>と一致する、<xref:System.Windows.Input.TouchDevice.Id%2A>の最初のタッチを示す、プライマリのタッチ ポイントの場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="48868-137">If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded.</span></span> <span data-ttu-id="48868-138">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="48868-138">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="48868-139">この例で使用可能なサンプルが大きくの一部である、<xref:System.Windows.Input.Touch>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="48868-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48868-140">このメンバーは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="48868-140">This member is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48868-141">このメソッドは、Silverlight の互換性のために提供します。</span><span class="sxs-lookup"><span data-stu-id="48868-141">This method is provided for Silverlight compatibility.</span></span> <span data-ttu-id="48868-142">デバイスの実装の違いにより、WPF は実装されません。</span><span class="sxs-lookup"><span data-stu-id="48868-142">Because of device implementation differences, it is not implemented in WPF.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48868-143">このイベントのタイム スタンプを取得します。</span><span class="sxs-lookup"><span data-stu-id="48868-143">Gets the time stamp for this event.</span></span></summary>
        <value><span data-ttu-id="48868-144">このイベントのタイム スタンプ。</span><span class="sxs-lookup"><span data-stu-id="48868-144">The time stamp for this event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>