<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f661ca07810a9bf0737a59d606e50671fa304676" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70664224" /></Metadata><TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コマンドの呼び出し方法を認識しているオブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コマンドソースは、特定のオブジェクトによってコマンドが呼び出される方法を定義します。  たとえば、 <xref:System.Windows.Controls.Button>がコマンドに関連付けられている場合、コマンドは、 <xref:System.Windows.Controls.Button>がクリックされると呼び出されます。  
  
 コマンドソースは、関連付けられているコマンドが現在のコマンドターゲットで実行できない場合、通常は自動的に無効になります。  たとえば、コマンド<xref:System.Windows.Input.ApplicationCommands.Paste%2A>に<xref:System.Windows.Controls.MenuItem>関連付けられているは、現在の<xref:System.Windows.Input.ApplicationCommands.Paste%2A>コマンドターゲットでコマンドを実行できないときにグレーで表示されます。  
  
 通常、コマンドソースはコマンドで<xref:System.Windows.Input.ICommand.CanExecuteChanged>イベントをリッスンします。  これは、コマンドターゲットで条件が変化したときに、キーボードフォーカスが失われた場合などに、コマンドソースに通知します。  コマンドソースは、 <xref:System.Windows.Input.ICommand.CanExecute%2A>メソッドを使用してコマンドに対してクエリを実行できます。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]を実装<xref:System.Windows.Controls.Primitives.ButtonBase> <xref:System.Windows.Controls.MenuItem>するクラスには、、、および<xref:System.Windows.Documents.Hyperlink>があります。 <xref:System.Windows.Input.ICommandSource>  
  
 Windows Presentation Foundation <xref:System.Windows.Input.InputBinding.CommandTarget%2A>コマンドのシステムでは、のプロパティ<xref:System.Windows.Input.ICommandSource>は、 <xref:System.Windows.Input.ICommand>がの場合にのみ<xref:System.Windows.Input.RoutedCommand>適用されます。  がに設定され、 <xref:System.Windows.Input.RoutedCommand>対応するコマンドがでない場合、コマンドターゲットは無視されます。 <xref:System.Windows.Input.ICommandSource> <xref:System.Windows.Input.InputBinding.CommandTarget%2A>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド ソースが呼び出されたときに実行されるコマンドを取得します。</summary>
        <value>コマンド ソースが呼び出されたときに実行されるコマンド。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行時にコマンドに渡すことができるユーザー定義のデータ値を表します。</summary>
        <value>コマンド固有のデータです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、は<xref:System.Windows.Input.ICommandSource.CommandParameter%2A> 、実行時に特定の情報をコマンドに渡すために使用されます。  データの型は、コマンドで定義されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドが実行されているオブジェクト。</summary>
        <value>コマンドが実行されているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Presentation Foundation <xref:System.Windows.Input.InputBinding.CommandTarget%2A>コマンドのシステムでは、のプロパティ<xref:System.Windows.Input.ICommandSource>は、 <xref:System.Windows.Input.ICommand>がの場合にのみ<xref:System.Windows.Input.RoutedCommand>適用されます。  がに設定され、 <xref:System.Windows.Input.RoutedCommand>対応するコマンドがでない場合、コマンドターゲットは無視されます。 <xref:System.Windows.Input.ICommandSource> <xref:System.Windows.Input.InputBinding.CommandTarget%2A>  
  
 と共<xref:System.Windows.Input.RoutedCommand>に使用する場合、コマンドターゲットは、イベント<xref:System.Windows.Input.CommandManager.Executed>と<xref:System.Windows.Input.CommandManager.CanExecute>イベントが発生する対象のオブジェクトです。 <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>プロパティが設定されていない場合、キーボードフォーカスを持つ要素がターゲットとして使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>
