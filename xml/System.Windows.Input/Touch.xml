<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="870410c897912ed665065d7fe1c067c6dad0ca7d" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70369083" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オペレーティング システムからのマルチタッチ入力を処理し、<see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントを生成するアプリケーション レベルのサービスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Windows.Input.Touch.FrameReported>イベントは、Silverlight [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]との互換性をサポートするためにに含まれています。 Silverlight との互換性を確保する必要がない場合は、 <xref:System.Windows.UIElement.TouchDown> 、 <xref:System.Windows.UIElement3D>、または<xref:System.Windows.ContentElement>の<xref:System.Windows.UIElement>よう<xref:System.Windows.UIElement.TouchMove>な touch イベントを使用します。  
  
 イベントは、や<xref:System.Windows.UIElement.TouchDown> <xref:System.Windows.UIElement.TouchMove>などの他の WPF 入力イベントと同じイベントモデルを使用しません。 <xref:System.Windows.Input.Touch.FrameReported> <xref:System.Windows.Input.Touch.FrameReported>イベントは、UI のオブジェクトツリーを通じてルーティングされる可能性がある要素固有のイベントとして公開される代わりに、アプリケーションレベルで処理される1つのイベントです。 したがって、イベントハンドラーの`sender`パラメーターを使用して、どの要素にタッチされるかを判断することはできません。  
  
 タッチイベント<xref:System.Windows.Input.TouchFrameEventArgs>に関連する<xref:System.Windows.Input.TouchPoint>値を取得するには、を使用します。 <xref:System.Windows.Input.TouchPoint.Position%2A> <xref:System.Windows.Input.TouchAction.Down> <xref:System.Windows.Input.TouchAction.Up> から、<xref:System.Windows.Input.TouchAction>タッチのを取得し、が、 <xref:System.Windows.Input.TouchAction.Move>、またはのいずれのアクションであったかを判断できます。 <xref:System.Windows.Input.TouchPoint> また、 <xref:System.Windows.Input.TouchPoint>を使用して<xref:System.Windows.Input.TouchDevice>を取得することもできます。 では、デバイス<xref:System.Windows.Input.TouchDevice.Id%2A>を特定し、タッチされた要素に関する情報を取得できます。 <xref:System.Windows.Input.TouchDevice>  
  
   
  
## Examples  
 次の例では、タッチスクリーン上で 2 <xref:System.Windows.Controls.Canvas>本の指をドラッグすることにより、に単純なパターンを作成できます。 各タッチは、 <xref:System.Windows.Input.TouchDevice>によって表されます。このパターンは、触れることによって提供されるタッチポイント間に線を描画することによって作成されます。 この例では、Windows タッチ互換画面が必要です。  
  
 次のマークアップは、の中央<xref:System.Windows.Controls.Canvas> <xref:System.Windows.Controls.Grid>にあるで構成されるユーザーインターフェイスを作成します。  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 次のコードでは<xref:System.Windows.Input.Touch.FrameReported> 、イベントを処理します。 で<xref:System.Windows.Controls.Canvas>タッチを<xref:System.Windows.Controls.Canvas>押すと、がにキャプチャされます。<xref:System.Windows.Input.TouchDevice> タッチがリフト<xref:System.Windows.Input.TouchDevice>されると、が解放されます。 タッチが上<xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A>を移動すると、がチェックされます。 最初のタッチから移動した場合は、その場所が記録されます。 2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タッチ メッセージが送信されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フレームは、一連のマルチタッチメッセージまたはタッチポイントの1つです。 イベントを処理<xref:System.Windows.Input.Touch.FrameReported>し、 <xref:System.Windows.Input.TouchFrameEventArgs>イベントデータからの詳細にアクセスすることに<xref:System.Windows.Input.TouchPoint>より、に応答できます。  
  
 イベントは、 <xref:System.Windows.UIElement.TouchDown>や[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] など<xref:System.Windows.UIElement.TouchMove>の他の入力イベントと同じイベントモデルを使用しません。 <xref:System.Windows.Input.Touch.FrameReported> <xref:System.Windows.Input.Touch.FrameReported>イベントは、UI のオブジェクトツリーを通じてルーティングされる可能性がある要素固有のイベントとして公開される代わりに、アプリケーションレベルで処理される1つのイベントです。 したがって、イベントハンドラーの`sender`パラメーターを使用して、どの要素にタッチされるかを判断することはできません。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Input.Touch.FrameReported> 、イベントを処理します。 で<xref:System.Windows.Controls.Canvas>タッチを<xref:System.Windows.Controls.Canvas>押すと、がにキャプチャされます。<xref:System.Windows.Input.TouchDevice> タッチがリフト<xref:System.Windows.Input.TouchDevice>されると、が解放されます。 タッチが上<xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A>を移動すると、がチェックされます。 最初のタッチから移動した場合は、その場所が記録されます。 2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。  
  
 この例は、 <xref:System.Windows.Input.Touch>クラスの概要で使用できる大規模な例の一部です。  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
