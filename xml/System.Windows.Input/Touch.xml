<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c303be5b4a301d0fee4df08c2d9b374d0081a934" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95e91-101">オペレーティング システムからのマルチタッチ入力を処理し、<see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントを生成するアプリケーション レベルのサービスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95e91-101">Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e91-102"><xref:System.Windows.Input.Touch.FrameReported>でイベントが含まれる[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]Silverlight との互換性をサポートするためにします。</span><span class="sxs-lookup"><span data-stu-id="95e91-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="95e91-103">Silverlight との互換性を確保する必要はありません、ように、タッチ イベントを使用して<xref:System.Windows.UIElement.TouchDown>と<xref:System.Windows.UIElement.TouchMove>の<xref:System.Windows.UIElement>、 <xref:System.Windows.UIElement3D>、または<xref:System.Windows.ContentElement>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="95e91-104"><xref:System.Windows.Input.Touch.FrameReported>イベント モデルを使用しない、同じイベントとその他の WPF 入力イベントなど<xref:System.Windows.UIElement.TouchDown>と<xref:System.Windows.UIElement.TouchMove>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-104">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other WPF input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="95e91-105">可能性のある、UI のオブジェクト ツリーを通じてルーティングする要素に固有のイベントとして公開されているのではなく、<xref:System.Windows.Input.Touch.FrameReported>イベントは、アプリケーション レベルで処理される 1 つのイベントです。</span><span class="sxs-lookup"><span data-stu-id="95e91-105">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="95e91-106">したがって、使用することはできません、`sender`タッチされる要素を決定する、イベント ハンドラーのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="95e91-106">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
 <span data-ttu-id="95e91-107">使用して、<xref:System.Windows.Input.TouchFrameEventArgs>を取得する、<xref:System.Windows.Input.TouchPoint>タッチ イベントに関連する値。</span><span class="sxs-lookup"><span data-stu-id="95e91-107">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="95e91-108"><xref:System.Windows.Input.TouchPoint>、取得することができます、<xref:System.Windows.Input.TouchPoint.Position%2A>タッチのとを特定するかどうか、<xref:System.Windows.Input.TouchAction>が、 <xref:System.Windows.Input.TouchAction.Down>、 <xref:System.Windows.Input.TouchAction.Move>、または<xref:System.Windows.Input.TouchAction.Up>アクション。</span><span class="sxs-lookup"><span data-stu-id="95e91-108">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="95e91-109">使用することも、<xref:System.Windows.Input.TouchPoint>を取得する、<xref:System.Windows.Input.TouchDevice>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-109">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="95e91-110"><xref:System.Windows.Input.TouchDevice>、デバイスを指定できます<xref:System.Windows.Input.TouchDevice.Id%2A>タッチは、要素に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="95e91-110">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e91-111">次の例では、上の単純なパターンを作成することができます、 <xref:System.Windows.Controls.Canvas> 2 本の指タッチ スクリーンをドラッグすることができます。</span><span class="sxs-lookup"><span data-stu-id="95e91-111">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen.</span></span> <span data-ttu-id="95e91-112">によって表される各タッチ、<xref:System.Windows.Input.TouchDevice>です。パターンは、タッチによって提供されるタッチ ポイント間に線を描画して作成されます。</span><span class="sxs-lookup"><span data-stu-id="95e91-112">Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches.</span></span> <span data-ttu-id="95e91-113">この例では、Windows タッチ対応画面が必要です。</span><span class="sxs-lookup"><span data-stu-id="95e91-113">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="95e91-114">次のマークアップで構成されるユーザー インターフェイスの作成、<xref:System.Windows.Controls.Canvas>が中心に、<xref:System.Windows.Controls.Grid>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-114">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.</span></span>  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="95e91-115">次のコードでハンドル、<xref:System.Windows.Input.Touch.FrameReported>イベント。</span><span class="sxs-lookup"><span data-stu-id="95e91-115">The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="95e91-116">タッチを押したときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>にキャプチャされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-116">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="95e91-117">タッチを持ち上げると、<xref:System.Windows.Input.TouchDevice>を解放します。</span><span class="sxs-lookup"><span data-stu-id="95e91-117">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="95e91-118">タッチをまたいで移動するときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="95e91-118">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="95e91-119">最初のタッチの場合は、その場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="95e91-119">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="95e91-120">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="95e91-120">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95e91-121">タッチ メッセージが送信されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95e91-121">Occurs when a touch message is sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e91-122">フレームは、一連のマルチタッチ メッセージまたはタッチ ポイントで 1 つです。</span><span class="sxs-lookup"><span data-stu-id="95e91-122">A frame is one in a series of multitouch messages or touch points.</span></span> <span data-ttu-id="95e91-123">処理することにより、タッチに応答できる、<xref:System.Windows.Input.Touch.FrameReported>イベントとの詳細にアクセスする、<xref:System.Windows.Input.TouchPoint>から、<xref:System.Windows.Input.TouchFrameEventArgs>イベント データ。</span><span class="sxs-lookup"><span data-stu-id="95e91-123">You can respond to touches by handling the <xref:System.Windows.Input.Touch.FrameReported> event and accessing the details of the <xref:System.Windows.Input.TouchPoint> from the <xref:System.Windows.Input.TouchFrameEventArgs> event data.</span></span>  
  
 <span data-ttu-id="95e91-124"><xref:System.Windows.Input.Touch.FrameReported>イベントが他の同じイベント モデルを使用しない[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]などの入力イベント、<xref:System.Windows.UIElement.TouchDown>と<xref:System.Windows.UIElement.TouchMove>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-124">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="95e91-125">可能性のある、UI のオブジェクト ツリーを通じてルーティングする要素に固有のイベントとして公開されているのではなく、<xref:System.Windows.Input.Touch.FrameReported>イベントは、アプリケーション レベルで処理される 1 つのイベントです。</span><span class="sxs-lookup"><span data-stu-id="95e91-125">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="95e91-126">したがって、使用することはできません、`sender`タッチされる要素を決定する、イベント ハンドラーのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="95e91-126">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e91-127">次の例のハンドル、<xref:System.Windows.Input.Touch.FrameReported>イベント。</span><span class="sxs-lookup"><span data-stu-id="95e91-127">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="95e91-128">タッチを押したときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>にキャプチャされて、<xref:System.Windows.Controls.Canvas>です。</span><span class="sxs-lookup"><span data-stu-id="95e91-128">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="95e91-129">タッチを持ち上げると、<xref:System.Windows.Input.TouchDevice>を解放します。</span><span class="sxs-lookup"><span data-stu-id="95e91-129">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="95e91-130">タッチをまたいで移動するときに、 <xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="95e91-130">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="95e91-131">最初のタッチの場合は、その場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="95e91-131">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="95e91-132">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="95e91-132">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="95e91-133">この例で使用可能なサンプルが大きくの一部である、<xref:System.Windows.Input.Touch>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="95e91-133">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>