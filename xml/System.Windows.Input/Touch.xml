<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Touch.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c303be5b4a301d0fee4df08c2d9b374d0081a934.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c303be5b4a301d0fee4df08c2d9b374d0081a934</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Touch">
          <source>Provides an application-level service that processes multitouch input from the operating system and raises the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> event.</source>
          <target state="translated">オペレーティング システムからのマルチタッチ入力を処理し、<ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> イベントを生成するアプリケーション レベルのサービスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is included in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> to support compatibility with Silverlight.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>でイベントが含まれる<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>Silverlight との互換性をサポートするためにします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If you do not have to ensure compatibility with Silverlight, use the touch events, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>, on <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>.</source>
          <target state="translated">Silverlight との互換性を確保する必要はありません、ように、タッチ イベントを使用して<ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>の<ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>、または<ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event does not use the same event model as other WPF input events, such as <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベント モデルを使用しない、同じイベントとその他の WPF 入力イベントなど<ph id="ph2">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is a single event that is handled at the application level.</source>
          <target state="translated">可能性のある、UI のオブジェクト ツリーを通じてルーティングする要素に固有のイベントとして公開されているのではなく、<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベントは、アプリケーション レベルで処理される 1 つのイベントです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Therefore, you cannot use the <ph id="ph1">`sender`</ph> parameter of the event handler to determine what element is touched.</source>
          <target state="translated">したがって、使用することはできません、<ph id="ph1">`sender`</ph>タッチされる要素を決定する、イベント ハンドラーのパラメーターです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> values that are relevant to the touch event.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>を取得する、<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>タッチ イベントに関連する値。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>, you can get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph> of the touch and determine whether the <ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph> was a <ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph> action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>、取得することができます、<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph>タッチのとを特定するかどうか、<ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph>が、 <ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>、または<ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph>アクション。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>.</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>を取得する、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>, you can determine the device <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> and get information about the element that is touched.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>、デバイスを指定できます<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>タッチは、要素に関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following example enables you to create simple patterns on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> by dragging two fingers across a touchscreen.</source>
          <target state="translated">次の例では、上の単純なパターンを作成することができます、 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> 2 本の指タッチ スクリーンをドラッグすることができます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Each touch is represented by a <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>.The pattern is created by drawing a line between the touch points provided by the touches.</source>
          <target state="translated">によって表される各タッチ、<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>です。パターンは、タッチによって提供されるタッチ ポイント間に線を描画して作成されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>This example requires a Windows Touch–compatible screen.</source>
          <target state="translated">この例では、Windows タッチ対応画面が必要です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following markup creates the user interface, which consists of a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> that is centered in a <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
          <target state="translated">次のマークアップで構成されるユーザー インターフェイスの作成、<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>が中心に、<ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following code handles the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event.</source>
          <target state="translated">次のコードでハンドル、<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When a touch presses on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">タッチを押したときに、 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>にキャプチャされて、<ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">タッチを持ち上げると、<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">タッチをまたいで移動するときに、 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>がオンになっています。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If the move came from the first touch, its location is recorded.</source>
          <target state="translated">最初のタッチの場合は、その場所が記録されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Occurs when a touch message is sent.</source>
          <target state="translated">タッチ メッセージが送信されたときに発生します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>A frame is one in a series of multitouch messages or touch points.</source>
          <target state="translated">フレームは、一連のマルチタッチ メッセージまたはタッチ ポイントで 1 つです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>You can respond to touches by handling the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event and accessing the details of the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> from the <ph id="ph3">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> event data.</source>
          <target state="translated">処理することにより、タッチに応答できる、<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベントとの詳細にアクセスする、<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>から、<ph id="ph3">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>イベント データ。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event does not use the same event model as other <ph id="ph2">[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]</ph> input events, such as <ph id="ph3">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベントが他の同じイベント モデルを使用しない<ph id="ph2">[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]</ph>などの入力イベント、<ph id="ph3">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is a single event that is handled at the application level.</source>
          <target state="translated">可能性のある、UI のオブジェクト ツリーを通じてルーティングする要素に固有のイベントとして公開されているのではなく、<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベントは、アプリケーション レベルで処理される 1 つのイベントです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Therefore, you cannot use the <ph id="ph1">`sender`</ph> parameter of the event handler to determine what element is touched.</source>
          <target state="translated">したがって、使用することはできません、<ph id="ph1">`sender`</ph>タッチされる要素を決定する、イベント ハンドラーのパラメーターです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event.</source>
          <target state="translated">次の例のハンドル、<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When a touch presses on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">タッチを押したときに、 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>にキャプチャされて、<ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">タッチを持ち上げると、<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">タッチをまたいで移動するときに、 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>がオンになっています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>If the move came from the first touch, its location is recorded.</source>
          <target state="translated">最初のタッチの場合は、その場所が記録されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">2 番目のタッチの場合は、最初のタッチ、位置から 2 番目のタッチの位置に線を描画します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>This example is part of a larger example that is available in the <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> class overview.</source>
          <target state="translated">この例で使用可能なサンプルが大きくの一部である、<ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph>クラスの概要です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>