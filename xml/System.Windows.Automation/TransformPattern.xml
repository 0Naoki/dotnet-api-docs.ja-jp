<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransformPattern.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f9b9f53144f82f3dac1c962cfbf56d10227e481c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9b9f53144f82f3dac1c962cfbf56d10227e481c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.TransformPattern">
          <source>Represents a control that can be moved, resized, or rotated within a two-dimensional space.</source>
          <target state="translated">2 次元空間で移動、サイズ変更、または回転できるコントロールを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.TransformPattern">
          <source>Support for this control pattern is not limited to objects on the desktop.</source>
          <target state="translated">このコントロール パターンのサポートは、デスクトップ上のオブジェクトに制限されません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.TransformPattern">
          <source>This control pattern must also be supported by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</source>
          <target state="translated">子の移動、サイズ変更、またはコンテナーの境界内で自由に回転でく限り、このコントロール パターンをコンテナー オブジェクトの子でサポートされてもする必要があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>Gets the cached <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph> のキャッシュされた <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> プロパティ値を取得します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>A structure containing the cached <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for the control pattern.</source>
          <target state="translated">コントロール パターンのキャッシュされた <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> プロパティ値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>Cached property values must have been previously requested using a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">キャッシュされたプロパティ値必要がありますが要求されていない以前を使用して、<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.Current%2A&gt;</ph> to get the current value of a property.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.Current%2A&gt;</ph>プロパティの現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>For information on the properties available and their use, see <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.TransformPatternInformation&gt;</ph>.</source>
          <target state="translated">使用可能なプロパティおよびその使用方法については、次を参照してください。<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.TransformPatternInformation&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.TransformPattern.Cached">
          <source>The requested property is not in the cache.</source>
          <target state="translated">要求されたプロパティがキャッシュ内にありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /&gt;</ph> プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI オートメーション プロバイダーの相当するフィールドを使用する必要があります<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
          <source>In the following example, a root element is passed to a function that returns a collection of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that are descendants of the root and satisfy a set of property conditions.</source>
          <target state="translated">次の例では、ルート要素がのコレクションを返す関数に渡される<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>ルートの子孫であり、一連のプロパティの条件を満たす要素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /&gt;</ph> プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI オートメーション プロバイダーの相当するフィールドを使用する必要があります<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
          <source>In the following example, a root element is passed to a function that returns a collection of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that are descendants of the root and satisfy a set of property conditions.</source>
          <target state="translated">次の例では、ルート要素がのコレクションを返す関数に渡される<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>ルートの子孫であり、一連のプロパティの条件を満たす要素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /&gt;</ph> プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI オートメーション プロバイダーの相当するフィールドを使用する必要があります<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
          <source>In the following example, a root element is passed to a function that returns a collection of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that are descendants of the root and satisfy a set of property conditions.</source>
          <target state="translated">次の例では、ルート要素がのコレクションを返す関数に渡される<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>ルートの子孫であり、一連のプロパティの条件を満たす要素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>Gets the current <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph> の現在の <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> プロパティ値を取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>A structure containing the current <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for the control pattern.</source>
          <target state="translated">コントロール パターンの現在の <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> プロパティ値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>This pattern must be from an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> with an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> reference in order to get current values.</source>
          <target state="translated">このパターンがあります、<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>で、<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph>の現在の値を取得するために参照します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> was obtained using <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, it contains only cached data, and attempting to get the current value of any property raises an exception.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>を使用して取得された<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>キャッシュされたデータのみが含まれている、および任意のプロパティの現在の値を取得しようとして例外を発生させます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.Cached%2A&gt;</ph> to get the cached value of a property that was previously specified using a <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.Cached%2A&gt;</ph>を使用してあらかじめ指定されているプロパティのキャッシュされた値を取得する、<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.TransformPattern.Current">
          <source>For information on the properties available and their use, see <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.TransformPatternInformation&gt;</ph>.</source>
          <target state="translated">使用可能なプロパティおよびその使用方法については、次を参照してください。<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern.TransformPatternInformation&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>Absolute screen coordinates of the left side of the control.</source>
          <target state="translated">コントロールの左側の絶対画面座標。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>Absolute screen coordinates of the top of the control.</source>
          <target state="translated">コントロールの上部の絶対画面座標。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>Moves the control.</source>
          <target state="translated">コントロールを移動します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</source>
          <target state="translated">オブジェクトは、移動、サイズ変更、またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</source>
          <target state="translated">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</source>
          <target state="translated">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph> control pattern is obtained from an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> and subsequently used to move the <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph>からコントロール パターンを取得、 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 、後で移動するために使用して、<ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /&gt;</ph> property is false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /&gt;</ph> プロパティが false です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.TransformPattern.Pattern">
          <source>Identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph> control pattern.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.TransformPattern" /&gt;</ph> コントロール パターンを識別します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.Pattern">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.Pattern">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI オートメーション プロバイダーの相当するフィールドを使用する必要があります<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPatternIdentifiers&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.Pattern">
          <source>The pattern identifier is passed to methods such as <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> to retrieve the control pattern of interest from the specified <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">パターン識別子がなどのメソッドに渡された<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>から、指定した目的のコントロール パターンを取得する<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.TransformPattern.Pattern">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph> control pattern is obtained from an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph>からコントロール パターンを取得、<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>The new width of the window, in pixels.</source>
          <target state="translated">ウィンドウの新しい幅 (ピクセル単位)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>The new height of the window, in pixels.</source>
          <target state="translated">ウィンドウの新しい高さ (ピクセル単位)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>Resizes the control.</source>
          <target state="translated">コントロールのサイズを変更します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</source>
          <target state="translated">コントロールで呼び出された場合は、分割ウィンドウをサポートする、このメソッドは、その他の連続したウィンドウのサイズ変更の副作用を持つことができます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</source>
          <target state="translated">オブジェクトは、移動、サイズ変更、またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</source>
          <target state="translated">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</source>
          <target state="translated">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph> control pattern is obtained from an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> and subsequently used to resize the <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph>からコントロール パターンを取得、 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 、その後のサイズを変更するために使用して、<ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /&gt;</ph> property is false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /&gt;</ph> プロパティが false です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>The number of degrees to rotate the element.</source>
          <target state="translated">要素を回転する角度の数値。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>A positive number rotates clockwise; a negative number rotates counterclockwise.</source>
          <target state="translated">正の値は時計回りの回転、負の値は反時計回りの回転を表します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>Rotates the control.</source>
          <target state="translated">コントロールを回転します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</source>
          <target state="translated">オブジェクトは、移動、サイズ変更、またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</source>
          <target state="translated">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</source>
          <target state="translated">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph> control pattern is obtained from an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> and subsequently used to rotate the <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Windows.Automation.TransformPattern&gt;</ph>からコントロール パターンを取得、<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>回転をその後使用、<ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /&gt;</ph> property is false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /&gt;</ph> プロパティが false です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>