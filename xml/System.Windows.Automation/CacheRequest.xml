<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="053f32061b083b45ca2c96dd8c022767bb686673" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37582966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティと使用パターンを取得する[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]パフォーマンスが低下することができます、プロセス間呼び出しが必要です。 バッチ操作でプロパティおよびパターンの値をキャッシュすることによって、アプリケーションのパフォーマンスを強化できます。  
  
 クラスのコンス トラクターを呼び出すことによって、新しいキャッシュ要求を作成します。 繰り返し呼び出すにより要求が作成される、<xref:System.Windows.Automation.CacheRequest.Add%2A>メソッド。  
  
 1 つだけ<xref:System.Windows.Automation.CacheRequest>アクティブにすることができます。 要求をアクティブ化する 2 つの方法はあります。  
  
-   呼び出す<xref:System.Windows.Automation.CacheRequest.Activate%2A>に要求します。 スタックには、要求をプッシュこれと、オブジェクトが破棄されたときに、要求がポップされます。 確実に破棄、例外が発生した場合でもからの戻り値を使用して、<xref:System.Windows.Automation.CacheRequest.Activate%2A>内、`using`ブロック (`Using` Visual Basic で)。  
  
-   呼び出すことによって、要求を内部スタックに配置<xref:System.Windows.Automation.CacheRequest.Push%2A>します。 スタックの最上位の要求がアクティブになり、次にあるによってスタックから削除する必要がありますのみ<xref:System.Windows.Automation.CacheRequest.Pop%2A>します。 要求はポップ非アクティブにします。  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要求がアクティブな状態を取得する要素には、指定されたパターンとプロパティの値がキャッシュがあります。  
  
   
  
## Examples  
 次の例は、使用する方法を示します<xref:System.Windows.Automation.CacheRequest.Activate%2A>キャッシュ パターンとプロパティにします。  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 次の例は、使用する方法を示します<xref:System.Windows.Automation.CacheRequest.Push%2A>と<xref:System.Windows.Automation.CacheRequest.Pop%2A>キャッシュ パターンとプロパティにします。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</summary>
        <returns>The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する方が便利ではこのメソッドを使用して<xref:System.Windows.Automation.CacheRequest.Push%2A>と<xref:System.Windows.Automation.CacheRequest.Pop%2A>をアクティブ化するための手段として、<xref:System.Windows.Automation.CacheRequest>します。 オブジェクトがスタックにプッシュと<xref:System.Windows.Automation.CacheRequest.Activate%2A>が呼び出されが破棄されるときにポップします。 破棄のために、配置内で戻り値、`using`ブロック (`Using` Visual Basic で)。  
  
   
  
## Examples  
 次の例は、使用する方法を示します<xref:System.Windows.Automation.CacheRequest.Activate%2A>キャッシュ パターンとプロパティにします。  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Automation.CacheRequest>オブジェクトが作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。  
  
 キャッシュ要求に既に含まれるオブジェクトを追加しても効果はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">An identifier specifying a pattern to cache.</param>
        <summary>Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュ要求に既に含まれるパターンを追加しても効果はありません。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Automation.CacheRequest>をキャッシュするためのパターンを追加します。  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">An identifier specifying a property value to cache.</param>
        <summary>Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。  
  
 キャッシュ要求に既に含まれるプロパティを追加しても効果はありません。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Automation.CacheRequest>してキャッシュするプロパティを追加します。  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</summary>
        <value>
          <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> 返される要素は、基になるの完全参照を含める場合は [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] です。それ以外の場合<see cref="F:System.Windows.Automation.AutomationElementMode.None" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElementMode.Full> 既定値は、返される要素が、基になるへの完全参照を含めることを指定[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]します。 <xref:System.Windows.Automation.AutomationElementMode.None> 返される要素に、基になるへの参照がないことを指定します[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]、キャッシュされた情報だけを含めることができます。  
  
 などの要素で特定の操作<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>、<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>と<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>、完全なリファレンスが必要です。 これらに対して実行しようとしています。 結果を none を持つ要素が、 <xref:System.InvalidOperationException>。  
  
 使用して<xref:System.Windows.Automation.AutomationElementMode.None>オーバーヘッドを回避できますようプロパティのみが必要なときより効率的にできますへの完全参照を設定します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A>に設定されている<xref:System.Windows.Automation.AutomationElementMode.None>結果とするのみキャッシュされたプロパティおよびパターンは、取得したオブジェクトを使用できます。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</summary>
        <returns>A modifiable copy of the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</summary>
        <value>アクティブな<see cref="T:System.Windows.Automation.CacheRequest" />します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して現在アクティブな要求のみを削除することができます、<xref:System.Windows.Automation.CacheRequest.Pop%2A>メソッド。 例外が現在の 1 つ結果いない要求を削除しようとしています。  
  
 使用することをお勧めはキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置します。 理由は、使用できる<xref:System.Windows.Automation.CacheRequest.Activate%2A>内、`using`ブロック (`Using` Visual basic)、例外が発生した場合でも、スタックから要求がポップされことを確認します。  
  
   
  
## Examples  
 次の例では、非アクティブ化する方法を示しています、<xref:System.Windows.Automation.CacheRequest>を使用して<xref:System.Windows.Automation.CacheRequest.Pop%2A>します。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数<xref:System.Windows.Automation.CacheRequest>状態スタックにオブジェクトを配置することができます。 キャッシュ要求が; プッシュされた順序でスタックから削除する必要があります。それ以外の場合、<xref:System.InvalidOperationException>例外が発生します。  
  
 使用することをお勧めはキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置します。 理由は、使用できる<xref:System.Windows.Automation.CacheRequest.Activate%2A>内、`using`ブロック (`Using` Visual basic)、例外が発生した場合でも、スタックから要求がポップされことを確認します。  
  
   
  
## Examples  
 次の例では、アクティブ化する方法を示しています、<xref:System.Windows.Automation.CacheRequest>を使用して<xref:System.Windows.Automation.CacheRequest.Push%2A>します。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</summary>
        <value>ビュー、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素のツリーです。 既定のビューは<see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビューの詳細については、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーを参照してください[UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md)します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>に設定されている<xref:System.Windows.Automation.Automation.RawViewCondition>コンテンツ ビューまたはコントロールのビューの一部であるかどうかに関係なく、すべての要素のキャッシュを実行できるようにします。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</summary>
        <value>1 つ以上の<see cref="F:System.Windows.Automation.TreeScope.Element" />、 <see cref="F:System.Windows.Automation.TreeScope.Children" />、 <see cref="F:System.Windows.Automation.TreeScope.Descendants" />、または<see cref="F:System.Windows.Automation.TreeScope.Subtree" />します。 既定値は <see cref="F:System.Windows.Automation.TreeScope.Element" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュのスコープまたは複数のオブジェクトに関連がフェッチされる、対象となるオブジェクトに関連しない<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>または<xref:System.Windows.Automation.AutomationElement.FindAll%2A>が呼び出されます。 例を参照してください。  
  
   
  
## Examples  
 次の例では、リスト ボックスの要素が中に、親ウィンドウの要素から取得した、<xref:System.Windows.Automation.CacheRequest>がアクティブと<xref:System.Windows.Automation.CacheRequest.TreeScope%2A>は<xref:System.Windows.Automation.TreeScope.Children>します。 子要素 (つまり、リスト項目) の指定されたプロパティがキャッシュに格納されから取得できます、<xref:System.Windows.Automation.AutomationElement.CachedChildren%2A>のリスト ボックス。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>