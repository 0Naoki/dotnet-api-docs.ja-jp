<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba79b367856f83c772f8c7971dde04e0ee956e6d" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="492fd-101">
        <see cref="T:System.Windows.Automation.AutomationElement" /> が取得されるときに、UI オートメーション フレームワークがキャッシュするプロパティおよびパターンを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="492fd-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-102">プロパティとパターンを取得する[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]パフォーマンスが低速化できる、プロセス間呼び出しが必要です。</span><span class="sxs-lookup"><span data-stu-id="492fd-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="492fd-103">バッチ操作でプロパティおよびパターンの値をキャッシュすることによって、アプリケーションのパフォーマンスを強化できます。</span><span class="sxs-lookup"><span data-stu-id="492fd-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="492fd-104">クラスのコンス トラクターを呼び出すことによって、新しいキャッシュ要求を作成します。</span><span class="sxs-lookup"><span data-stu-id="492fd-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="492fd-105">繰り返し呼び出すは、要求が表示されます、<xref:System.Windows.Automation.CacheRequest.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="492fd-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="492fd-106">1 つだけ<xref:System.Windows.Automation.CacheRequest>アクティブにすることができます。</span><span class="sxs-lookup"><span data-stu-id="492fd-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="492fd-107">これには要求をアクティブ化する 2 つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="492fd-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="492fd-108">呼び出す<xref:System.Windows.Automation.CacheRequest.Activate%2A>に要求します。</span><span class="sxs-lookup"><span data-stu-id="492fd-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="492fd-109">要求をスタックにプッシュし、要求がポップされます。 このオブジェクトが破棄されるときにします。</span><span class="sxs-lookup"><span data-stu-id="492fd-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="492fd-110">確実に破棄、例外が発生した場合でもからの戻り値を使用して<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="492fd-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="492fd-111">内部スタックに呼び出すことによって、要求を保留<xref:System.Windows.Automation.CacheRequest.Push%2A>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="492fd-112">スタックの最上位の要求がアクティブであり、によってスタックから削除された次のいずれかをする必要があります専用<xref:System.Windows.Automation.CacheRequest.Pop%2A>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="492fd-113">要求はポップ非アクティブにします。</span><span class="sxs-lookup"><span data-stu-id="492fd-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="492fd-114"> 要求がアクティブな状態を取得した要素には、プロパティとパターンが指定の値がキャッシュがされます。</span><span class="sxs-lookup"><span data-stu-id="492fd-114"> elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-115">次の例は、使用する方法を示しています。<xref:System.Windows.Automation.CacheRequest.Activate%2A>キャッシュ パターンおよびプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="492fd-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="492fd-116">次の例は、使用する方法を示しています。<xref:System.Windows.Automation.CacheRequest.Push%2A>と<xref:System.Windows.Automation.CacheRequest.Pop%2A>キャッシュ パターンおよびプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="492fd-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="492fd-117">
            <see cref="T:System.Windows.Automation.CacheRequest" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-117">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-118">ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="492fd-118">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="492fd-119">この <see cref="T:System.Windows.Automation.CacheRequest" /> を、同じスレッドで <see cref="T:System.Windows.Automation.AutomationElement" /> が要求されたときに返される項目のアクティブな指定として設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-119">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="492fd-120">
            <see cref="T:System.Windows.Automation.CacheRequest" /> を破棄するために使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-120">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-121">使用する方が便利ではこのメソッドを使用して<xref:System.Windows.Automation.CacheRequest.Push%2A>と<xref:System.Windows.Automation.CacheRequest.Pop%2A>をアクティブ化する手段として、<xref:System.Windows.Automation.CacheRequest>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-121">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="492fd-122">オブジェクトがスタックにプッシュされたときに<xref:System.Windows.Automation.CacheRequest.Activate%2A>が呼び出され、破棄されるときにポップされます。</span><span class="sxs-lookup"><span data-stu-id="492fd-122">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="492fd-123">確実に破棄、配置内で戻り値、`using`ブロック (`Using` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="492fd-123">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-124">次の例は、使用する方法を示しています。<xref:System.Windows.Automation.CacheRequest.Activate%2A>キャッシュ パターンおよびプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="492fd-124">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="492fd-125">プロパティまたはパターン識別子を <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-125">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-126">ときに、<xref:System.Windows.Automation.CacheRequest>オブジェクトが、作成、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="492fd-126">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="492fd-127">キャッシュ要求に既に含まれるオブジェクトを追加しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="492fd-127">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="492fd-128">キャッシュするパターンを指定する識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-128">An identifier specifying a pattern to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="492fd-129">指定した <see cref="T:System.Windows.Automation.AutomationPattern" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-129">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-130">キャッシュ要求に既にあるパターンを追加しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="492fd-130">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-131">次の例を作成する方法を示しています、<xref:System.Windows.Automation.CacheRequest>キャッシュに保存するパターンを追加するとします。</span><span class="sxs-lookup"><span data-stu-id="492fd-131">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="492fd-132">
            <see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-132">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="492fd-133">キャッシュするプロパティ値を指定する識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-133">An identifier specifying a property value to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="492fd-134">指定した <see cref="T:System.Windows.Automation.AutomationProperty" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-134">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-135">ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます。</span><span class="sxs-lookup"><span data-stu-id="492fd-135">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="492fd-136">キャッシュ要求に既にあるプロパティを追加しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="492fd-136">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-137">次の例を作成する方法を示しています、<xref:System.Windows.Automation.CacheRequest>キャッシュに保存するプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="492fd-137">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="492fd-138">
            <see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-138">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="492fd-139">返される要素に、基になる[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] への完全参照を含めるか、またはキャッシュされた情報だけを含めるかを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-139">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="492fd-140">返される要素に基になる[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] への完全参照を含める場合は、<see cref="F:System.Windows.Automation.AutomationElementMode.Full" />。それ以外の場合は <see cref="F:System.Windows.Automation.AutomationElementMode.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-140">
              <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-141"><xref:System.Windows.Automation.AutomationElementMode.Full> 既定値は、返される要素が、基になる完全参照を含むことを指定[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="492fd-141"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="492fd-142"><xref:System.Windows.Automation.AutomationElementMode.None> 返される要素に、基になるへの参照がないことを指定[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]、キャッシュされた情報のみを含めるとします。</span><span class="sxs-lookup"><span data-stu-id="492fd-142"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="492fd-143">などの要素で特定の操作<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>、および<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>、完全参照が必要です。 これらに対して実行しようとしています。 を [なし] を持つ要素がの結果、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-143">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="492fd-144">使用して<xref:System.Windows.Automation.AutomationElementMode.None>する方が効率的プロパティのみが必要な場合にオーバーヘッドを回避できるので完全参照を設定します。</span><span class="sxs-lookup"><span data-stu-id="492fd-144">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-145">次の例では、<xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A>に設定されている<xref:System.Windows.Automation.AutomationElementMode.None>、結果をキャッシュにしかプロパティとパターンは、取得したオブジェクトで使用できます。</span><span class="sxs-lookup"><span data-stu-id="492fd-145">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="492fd-146">この <see cref="T:System.Windows.Automation.CacheRequest" /> のコピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-146">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="492fd-147">現在のオブジェクトの変更可能なコピー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-147">A modifiable copy of the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="492fd-148">現在のスレッドでアクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-148">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="492fd-149">アクティブな <see cref="T:System.Windows.Automation.CacheRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-149">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="492fd-150">現在のスレッドの内部スタックから、アクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-150">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-151">使用して、現在アクティブな要求のみを削除することができます、<xref:System.Windows.Automation.CacheRequest.Pop%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="492fd-151">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="492fd-152">いない、現在 1 つの結果、例外は、要求を削除しようとしています。</span><span class="sxs-lookup"><span data-stu-id="492fd-152">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="492fd-153">使用することをお勧めはのキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置します。</span><span class="sxs-lookup"><span data-stu-id="492fd-153">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="492fd-154">その理由は、使用できること<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using` Visual Basic で)、例外が発生した場合でも、スタックから要求がポップされことを確認します。</span><span class="sxs-lookup"><span data-stu-id="492fd-154">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-155">次の例は、非アクティブ化する方法を示しています、<xref:System.Windows.Automation.CacheRequest>を使用して<xref:System.Windows.Automation.CacheRequest.Pop%2A>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-155">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="492fd-156">スタックに最後にプッシュされたものではないキャッシュ要求を削除しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-156">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="492fd-157">
            <see cref="T:System.Windows.Automation.CacheRequest" /> を内部状態スタックに配置して、現在のスレッドのアクティブな要求にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-157">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-158">複数<xref:System.Windows.Automation.CacheRequest>状態スタックにオブジェクトを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="492fd-158">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="492fd-159">プッシュされた順序でスタックからのキャッシュ要求を削除する必要があります。それ以外の場合、<xref:System.InvalidOperationException>例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="492fd-159">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="492fd-160">使用することをお勧めはのキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置します。</span><span class="sxs-lookup"><span data-stu-id="492fd-160">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="492fd-161">その理由は、使用できること<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using` Visual Basic で)、例外が発生した場合でも、スタックから要求がポップされことを確認します。</span><span class="sxs-lookup"><span data-stu-id="492fd-161">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-162">次の例は、アクティブ化する方法を示しています、<xref:System.Windows.Automation.CacheRequest>を使用して<xref:System.Windows.Automation.CacheRequest.Push%2A>です。</span><span class="sxs-lookup"><span data-stu-id="492fd-162">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="492fd-163">キャッシュ時に使用する、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーのビューを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-163">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="492fd-164">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーのビュー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-164">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span>
          </span>
          <span data-ttu-id="492fd-165">既定のビューは、<see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-165">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-166">ビューの詳細については、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーを参照してください[UI オートメーション ツリーの概要](~/docs/framework/ui-automation/ui-automation-tree-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="492fd-166">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-167">次の例では、<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>に設定されている<xref:System.Windows.Automation.Automation.RawViewCondition>できるように、キャッシュは、コンテンツ ビュー、またはコントロールのビューの一部であるかどうかに関係なく、すべての要素に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="492fd-167">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="492fd-168">キャッシュをサブツリーのルートに対してだけ実行するか、または子または子孫に対しても実行するかを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-168">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="492fd-169">
            <see cref="F:System.Windows.Automation.TreeScope.Element" />、<see cref="F:System.Windows.Automation.TreeScope.Children" />、<see cref="F:System.Windows.Automation.TreeScope.Descendants" />、または <see cref="F:System.Windows.Automation.TreeScope.Subtree" /> のうちの 1 つ以上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-169">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          </span>
          <span data-ttu-id="492fd-170">既定値は <see cref="F:System.Windows.Automation.TreeScope.Element" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-170">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="492fd-171">キャッシュのスコープまたは複数のオブジェクトに関連してフェッチされる、対象となるオブジェクトに関連していない<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>または<xref:System.Windows.Automation.AutomationElement.FindAll%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="492fd-171">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="492fd-172">この例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="492fd-172">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="492fd-173">次の例では、リスト ボックス要素は中に、親ウィンドウの要素から取得、<xref:System.Windows.Automation.CacheRequest>アクティブと<xref:System.Windows.Automation.CacheRequest.TreeScope%2A>は<xref:System.Windows.Automation.TreeScope.Children>します。</span><span class="sxs-lookup"><span data-stu-id="492fd-173">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="492fd-174">子要素 (つまり、リスト項目) の指定されたプロパティがキャッシュに格納されから取得できる、<xref:System.Windows.Automation.AutomationElement.CachedChildren%2A>リスト ボックスのです。</span><span class="sxs-lookup"><span data-stu-id="492fd-174">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="492fd-175">プロパティを <see cref="F:System.Windows.Automation.TreeScope.Parent" /> または <see cref="F:System.Windows.Automation.TreeScope.Ancestors" /> に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="492fd-175">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>