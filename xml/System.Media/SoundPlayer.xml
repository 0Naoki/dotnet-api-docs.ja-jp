<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4aa0-101">.wav ファイルからのサウンドの再生を制御します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-101">Controls playback of a sound from a .wav file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-102"><xref:System.Media.SoundPlayer>クラスの読み込みと .wav ファイルの再生の単純なインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-102">The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file.</span></span> <span data-ttu-id="c4aa0-103"><xref:System.Media.SoundPlayer>クラスは、URL、ファイル パスから .wav ファイルの読み込みをサポートする<xref:System.IO.Stream>.wav ファイル、または .wav ファイルを含む埋め込みリソースを格納しています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-103">The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.</span></span>  
  
 <span data-ttu-id="c4aa0-104">使用するサウンドを再生する、<xref:System.Media.SoundPlayer>クラス、構成、 <xref:System.Media.SoundPlayer> .wav ファイルと再生のいずれかの呼び出しパスを使用します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-104">To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods.</span></span> <span data-ttu-id="c4aa0-105">コンス トラクターのいずれかを使用するか、いずれかの設定を再生する .wav ファイルを特定することができます、<xref:System.Media.SoundPlayer.SoundLocation%2A>または<xref:System.Media.SoundPlayer.Stream%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-105">You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property.</span></span> <span data-ttu-id="c4aa0-106">Load メソッドのいずれかを使用して再生する前に、ファイルを読み込むことができるまたは再生方法のいずれかが呼び出されるまでは、読み込みを延期することができます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-106">The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called.</span></span> <span data-ttu-id="c4aa0-107">A<xref:System.Media.SoundPlayer>から .wav ファイルを読み込むように構成、 <xref:System.IO.Stream> URL は、再生を開始する前に、メモリの .wav ファイルを読み込む必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-107">A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.</span></span>  
  
 <span data-ttu-id="c4aa0-108">ロードまたは同期的または非同期的に .wav ファイルを再生できます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-108">You can load or play a .wav file synchronously or asynchronously.</span></span> <span data-ttu-id="c4aa0-109">同期のロードを呼び出すメソッドを再生するか、呼び出し元のスレッドは、メソッドから制御が戻る中断は、描画などその他のイベントが発生する可能性がありますまで待機します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-109">If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted.</span></span> <span data-ttu-id="c4aa0-110">非同期の読み込みまたは play メソッドを呼び出すと、呼び出し元のスレッドを中断することがなく続行が許可されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-110">Calling an asynchronous load or play method will allow the calling thread to continue without interruption.</span></span> <span data-ttu-id="c4aa0-111">非同期メソッド呼び出しの詳細については、次を参照してください。[する方法: バック グラウンドで操作を実行](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-111">For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
 <span data-ttu-id="c4aa0-112">ときに、 <xref:System.Media.SoundPlayer> .wav ファイルの読み込みが完了したを生成、<xref:System.Media.SoundPlayer.LoadCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-112">When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event.</span></span> <span data-ttu-id="c4aa0-113">調べることができます、<xref:System.ComponentModel.AsyncCompletedEventArgs>かどうか、ロード、成功または失敗を決定するイベント ハンドラーでします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-113">You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed.</span></span> <span data-ttu-id="c4aa0-114"><xref:System.Media.SoundPlayer.SoundLocationChanged>オーディオのソースが、新しいファイル パスまたは URL に設定されているときにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-114">The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL.</span></span> <span data-ttu-id="c4aa0-115"><xref:System.Media.SoundPlayer.StreamChanged>新しいにオーディオのソースが設定されているときにイベントが発生した<xref:System.IO.Stream>です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-115">The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>.</span></span> <span data-ttu-id="c4aa0-116">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-116">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="c4aa0-117">詳細については<xref:System.Media.SoundPlayer>を参照してください[SoundPlayer クラスの概要](~/docs/framework/winforms/controls/soundplayer-class-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-117">For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4aa0-118"><xref:System.Media.SoundPlayer>クラスは、.wma、.mp3 など、他のファイルの種類を再生できません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-118">The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3.</span></span> <span data-ttu-id="c4aa0-119">その他のファイルの種類を再生する場合は、Windows Media Player コントロールを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-119">If you want to play other file types, you can use the Windows Media Player control.</span></span> <span data-ttu-id="c4aa0-120">詳細については、次を参照してください。 [、.NET Framework のソリューションで Windows Media Player のコントロールを使用して](http://go.microsoft.com/fwlink/?LinkId=131267)と[Visual Basic .NET および c# の Windows Media Player オブジェクト モデル リファレンス](http://go.microsoft.com/fwlink/?LinkId=131269)Windows Media Player の SDK でします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-120">For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-121">使用を次のコード例に示します、<xref:System.Media.SoundPlayer>ローカル パスまたは Uniform Resource 識別子 (URI) から .wav ファイルを再生するためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-121">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer> class for playing .wav files from a local path or a Uniform Resource Identifier (URI).</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4aa0-122"><see cref="T:System.Media.SoundPlayer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-122">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-123"><see cref="T:System.Media.SoundPlayer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-123">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-124">このコンス トラクター、<xref:System.Media.SoundPlayer>オーディオ ソースのないです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-124">This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source.</span></span> <span data-ttu-id="c4aa0-125">オーディオのソース パスで構成されるまで、<xref:System.Media.SoundPlayer>は、ビープ音を鳴らすサウンドの再生方法のいずれかが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-125">Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="c4aa0-126">.wav ファイルに結び付ける <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-126">A <see cref="T:System.IO.Stream" /> to a .wav file.</span></span></param>
        <summary><span data-ttu-id="c4aa0-127"><see cref="T:System.Media.SoundPlayer" /> クラスの新しいインスタンスを初期化し、指定した <see cref="T:System.IO.Stream" /> 内で .wav ファイルを結び付けます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-127">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the .wav file within the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-128"><xref:System.IO.Stream>に渡される、`stream`パラメーターでなければなりません、 <xref:System.IO.Stream> .wav ファイルを格納します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-128">The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file.</span></span> <span data-ttu-id="c4aa0-129">によって返されるデータ、<xref:System.IO.Stream.Read%2A>のメソッド、 <xref:System.IO.Stream> .wav ファイル内のデータをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-129">The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation"><span data-ttu-id="c4aa0-130">読み込む .wav ファイルの場所。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-130">The location of a .wav file to load.</span></span></param>
        <summary><span data-ttu-id="c4aa0-131"><see cref="T:System.Media.SoundPlayer" /> クラスの新しいインスタンスを初期化し、指定した .wav ファイルを結び付けます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-131">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the specified .wav file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-132">渡された文字列、`soundLocation`パラメーターには、ファイル パスまたは .wav ファイルへの URL のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-132">The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file.</span></span> <span data-ttu-id="c4aa0-133">パスまたは URL が有効でない場合、<xref:System.Media.SoundPlayer>負荷へ、構築されたが、後続の呼び出しでは引き続きまたは play メソッドは失敗します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-133">If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c4aa0-134"><paramref name="soundLocation" /> で指定した URL の値が解決できません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-134">The URL value specified by <paramref name="soundLocation" /> cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="c4aa0-135">逆シリアル化に使用する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-135">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span></span></param>
        <param name="context"><span data-ttu-id="c4aa0-136">逆シリアル化に使用する転送先。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-136">The destination to be used for deserialization.</span></span></param>
        <summary><span data-ttu-id="c4aa0-137"><see cref="T:System.Media.SoundPlayer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-137">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c4aa0-138"><paramref name="serializationInfo" /> で指定された <see cref="P:System.Media.SoundPlayer.SoundLocation" /> が解決できません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-138">The <see cref="P:System.Media.SoundPlayer.SoundLocation" /> specified in <paramref name="serializationInfo" /> cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-139">.wav ファイルの読み込みが正常に終了したかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-139">Gets a value indicating whether loading of a .wav file has successfully completed.</span></span></summary>
        <value>
          <span data-ttu-id="c4aa0-140">.wav ファイルが読み込まれている場合は <see langword="true" />。.wav ファイルがまだ読み込まれていない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-140"><see langword="true" /> if a .wav file is loaded; <see langword="false" /> if a .wav file has not yet been loaded.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-141">サウンドを同期的に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-141">Loads a sound synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-142"><xref:System.Media.SoundPlayer.Load%2A>メソッドでは、現在のスレッドを使用して、スレッドが、読み込みが完了するまで、他のメッセージを処理するを妨げて .wav ファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-142">The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4aa0-143"><xref:System.Media.SoundPlayer.Load%2A>メソッドでは、大きな .wav ファイルの読み込み中に遅延が生じる。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-143">The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file.</span></span> <span data-ttu-id="c4aa0-144">さらに、描画などその他のイベントが、読み込みが完了するまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-144">In addition, painting and other events will be blocked until the load is completed.</span></span> <span data-ttu-id="c4aa0-145">使用して、<xref:System.Media.SoundPlayer.LoadAsync%2A>により、呼び出し元のスレッドを中断せず、サウンドを非同期的にロードするメソッド。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-145">Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.</span></span>  
  
 <span data-ttu-id="c4aa0-146">このメソッドを発生させる、<xref:System.Media.SoundPlayer.LoadCompleted>イベントを読み込むときに完了すると、負荷が失敗した場合でもです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-146">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-147">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.LoadAsync%2A> .wav ファイルのインスタンスにアタッチするメソッド、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-147">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="c4aa0-148">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-148">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="c4aa0-149">読み込み時の経過時間が、<see cref="P:System.Media.SoundPlayer.LoadTimeout" /> で指定された時間 (ミリ秒単位) を超過しました。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-149">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c4aa0-150"><see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-150">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="c4aa0-151">HTTP インターネット リソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-151">for access to HTTP Internet resources.</span></span> <span data-ttu-id="c4aa0-152">関連する列挙。 <see cref="F:System.Net.NetworkAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-152">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-153">新しいスレッドを使用して、ストリームまたは Web リソースから .wav ファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-153">Loads a .wav file from a stream or a Web resource using a new thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-154">場合、<xref:System.Media.SoundPlayer>から .wav ファイルを読み込むように構成されて、<xref:System.IO.Stream>か、新しいスレッドを使用してその場所から .wav ファイルを読み込む Web リソースでは、このメソッドを開始します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-154">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.</span></span>  
  
 <span data-ttu-id="c4aa0-155">このメソッドを発生させる、<xref:System.Media.SoundPlayer.LoadCompleted>イベントを読み込むときに完了すると、負荷が失敗した場合でもです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-155">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
 <span data-ttu-id="c4aa0-156">場合、<xref:System.Media.SoundPlayer>が構成されている読み込むには、.wav ファイルをローカル ファイル パスから、このメソッドは何も、再生を開始するまでに遅延が読み込みのためです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-156">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.</span></span>  
  
 <span data-ttu-id="c4aa0-157">非同期読み込みに関する詳細については、次を参照してください。[する方法:、サウンドを非同期で読み込む Windows フォーム内で](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-157">For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-158">使用を次のコード例に示します、<xref:System.Media.SoundPlayer.LoadAsync%2A>のインスタンスで使用するため .wav ファイルを非同期的にロードするメソッド、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-158">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="c4aa0-159">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-159">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="c4aa0-160">読み込み時の経過時間が、<see cref="P:System.Media.SoundPlayer.LoadTimeout" /> で指定された時間 (ミリ秒単位) を超過しました。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-160">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c4aa0-161"><see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-161">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-162">.wav ファイルが正常に読み込まれたか、読み込みが失敗した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-162">Occurs when a .wav file has been successfully or unsuccessfully loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-163">このイベントは .wav ファイルの読み込みが完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-163">This event is raised when loading of a .wav file is complete.</span></span> <span data-ttu-id="c4aa0-164">イベント引数は、サウンドの負荷が正常に完了したか、失敗したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-164">The event arguments indicate whether the load of the sound was completed successfully or failed.</span></span>  
  
 <span data-ttu-id="c4aa0-165">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-165">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-166">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> .wav ファイルの内容が読み込まれたことを示す通知を受信するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-166">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded.</span></span> <span data-ttu-id="c4aa0-167">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-167">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-168">.wav ファイルの読み込みに必要な時間 (ミリ秒単位) を、取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-168">Gets or sets the time, in milliseconds, in which the .wav file must load.</span></span></summary>
        <value><span data-ttu-id="c4aa0-169">ミリ秒数単位の待機時間。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-169">The number of milliseconds to wait.</span></span> <span data-ttu-id="c4aa0-170">既定値は 10000 (10 秒) です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-170">The default is 10000 (10 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-171">この期間が過ぎた後、読み込みが取り消されると<xref:System.ServiceProcess.TimeoutException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-171">After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c4aa0-172">イベント データを格納している <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-172">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c4aa0-173"><see cref="E:System.Media.SoundPlayer.LoadCompleted" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-173">Raises the <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-174">.Wav ファイルの読み込みが完了すると、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-174">This method is called when loading of a .wav file is complete.</span></span>  
  
 <span data-ttu-id="c4aa0-175">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-175">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4aa0-176">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-176">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4aa0-177"><xref:System.Media.SoundPlayer.OnLoadCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-177">The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4aa0-178">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-178">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c4aa0-179">派生クラスで <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-179">When overriding <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c4aa0-180">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-180">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c4aa0-181"><see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-181">Raises the <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-182">このメソッドは新しいオーディオ ソース パスの場合にこの<xref:System.Media.SoundPlayer>が設定されています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-182">This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="c4aa0-183">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-183">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4aa0-184">詳細については、次を参照してください。 方法: イベントの提供機能と[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-184">For more information, see How to: Provide Event functionality and [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4aa0-185"><xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-185">The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4aa0-186">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-186">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c4aa0-187">派生クラスで <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-187">When overriding <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c4aa0-188">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-188">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c4aa0-189"><see cref="E:System.Media.SoundPlayer.StreamChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-189">Raises the <see cref="E:System.Media.SoundPlayer.StreamChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-190">このメソッドは、新しい<xref:System.IO.Stream>この音源<xref:System.Media.SoundPlayer>が設定されています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-190">This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="c4aa0-191">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-191">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c4aa0-192">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-192">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c4aa0-193"><xref:System.Media.SoundPlayer.OnStreamChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-193">The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c4aa0-194">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-194">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c4aa0-195">派生クラスで <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-195">When overriding <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-196">新しいスレッドを使用して .wav ファイルを再生します。.wav ファイルが読み込まれていない場合は、まずそのファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-196">Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-197"><xref:System.Media.SoundPlayer.Play%2A>メソッドは新しいスレッドを使用してサウンドを再生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-197">The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread.</span></span> <span data-ttu-id="c4aa0-198">呼び出す場合<xref:System.Media.SoundPlayer.Play%2A>再生を開始する前に、.wav ファイルは、メモリに読み込まれましたが、前に、.wav ファイルが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-198">If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="c4aa0-199">使用することができます、<xref:System.Media.SoundPlayer.LoadAsync%2A>または<xref:System.Media.SoundPlayer.Load%2A>.wav ファイルをメモリを事前に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-199">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="c4aa0-200">.Wav 後にファイルが正常に読み込まれてから、<xref:System.IO.Stream>または将来メソッドの呼び出しを再生用の URL、<xref:System.Media.SoundPlayer>パスのサウンドの変更まで、.wav ファイルを再読み込みする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-200">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="c4aa0-201">.Wav ファイルが指定されていないか、読み込むには、失敗した場合、<xref:System.Media.SoundPlayer.Play%2A>メソッドは、既定ビープ音を鳴らすサウンドです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-201">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-202">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.Play%2A> .wav ファイルを非同期的に再生する方法です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-202">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Play%2A> method to asynchronously play a .wav file.</span></span> <span data-ttu-id="c4aa0-203">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-203">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="c4aa0-204">読み込み時の経過時間が、<see cref="P:System.Media.SoundPlayer.LoadTimeout" /> で指定された時間 (ミリ秒単位) を超過しました。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-204">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c4aa0-205"><see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-205">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4aa0-206">.wav ヘッダーが破損しています。<see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルは、PCM .wav ファイルではありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-206">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c4aa0-207">ファイルを読み取る。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-207">for reading files.</span></span> <span data-ttu-id="c4aa0-208">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-208">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c4aa0-209">ネイティブ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-209">for access to native code.</span></span> <span data-ttu-id="c4aa0-210">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-210">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-211">新しいスレッドを使用し、.wav ファイルを反復して再生します。ファイルが読み込まれていない場合は、まずそのファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-211">Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-212"><xref:System.Media.SoundPlayer.PlayLooping%2A>メソッドを再生し、新しいスレッドを使用してサウンドのループを実行します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-212">The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread.</span></span> <span data-ttu-id="c4aa0-213">呼び出す場合<xref:System.Media.SoundPlayer.PlayLooping%2A>再生を開始する前に、.wav ファイルは、メモリに読み込まれましたが、前に、.wav ファイルが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-213">If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="c4aa0-214">使用することができます、<xref:System.Media.SoundPlayer.LoadAsync%2A>または<xref:System.Media.SoundPlayer.Load%2A>.wav ファイルをメモリを事前に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-214">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="c4aa0-215">.Wav 後にファイルが正常に読み込まれてから、<xref:System.IO.Stream>または将来メソッドの呼び出しを再生用の URL、<xref:System.Media.SoundPlayer>パスのサウンドの変更まで、.wav ファイルを再読み込みする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-215">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="c4aa0-216">.Wav ファイルが指定されていないか、読み込むには、失敗した場合、<xref:System.Media.SoundPlayer.PlayLooping%2A>メソッドは、既定ビープ音を鳴らすサウンドです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-216">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.</span></span>  
  
 <span data-ttu-id="c4aa0-217">詳細については<xref:System.Media.SoundPlayer.PlayLooping%2A>を参照してください[する方法: Windows フォームでサウンドの再生をループ](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-217">For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-218">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.PlayLooping%2A> .wav ファイルを繰り返し再生する方法です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-218">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlayLooping%2A> method to repeatedly play a .wav file.</span></span> <span data-ttu-id="c4aa0-219">まで再生する、.wav、<xref:System.Media.SoundPlayer.Stop%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-219">The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called.</span></span> <span data-ttu-id="c4aa0-220">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-220">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="c4aa0-221">読み込み時の経過時間が、<see cref="P:System.Media.SoundPlayer.LoadTimeout" /> で指定された時間 (ミリ秒単位) を超過しました。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-221">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c4aa0-222"><see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-222">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4aa0-223">.wav ヘッダーが破損しています。<see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルは、PCM .wav ファイルではありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-223">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c4aa0-224">ファイルを読み取る。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-224">for reading files.</span></span> <span data-ttu-id="c4aa0-225">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-225">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c4aa0-226">ネイティブ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-226">for access to native code.</span></span> <span data-ttu-id="c4aa0-227">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-227">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-228">.wav ファイルを再生します。.wav ファイルが読み込まれていない場合は、まずそのファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-228">Plays the .wav file and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-229"><xref:System.Media.SoundPlayer.PlaySync%2A>メソッドでは、現在のスレッドを使用して、スレッドが、読み込みが完了するまで、他のメッセージを処理するを妨げて .wav ファイルを再生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-229">The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.</span></span> <span data-ttu-id="c4aa0-230">使用することができます、<xref:System.Media.SoundPlayer.LoadAsync%2A>または<xref:System.Media.SoundPlayer.Load%2A>.wav ファイルをメモリを事前に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-230">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="c4aa0-231">.Wav 後にファイルが正常に読み込まれてから、<xref:System.IO.Stream>または将来メソッドの呼び出しを再生用の URL、<xref:System.Media.SoundPlayer>パスのサウンドの変更まで、.wav ファイルを再読み込みする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-231">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="c4aa0-232">.Wav ファイルが指定されていないか、読み込むには、失敗した場合、<xref:System.Media.SoundPlayer.PlaySync%2A>メソッドは、既定ビープ音を鳴らすサウンドです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-232">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-233">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.PlaySync%2A> .wav ファイルを同期的に再生する方法です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-233">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlaySync%2A> method to synchronously play a .wav file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="c4aa0-234">読み込み時の経過時間が、<see cref="P:System.Media.SoundPlayer.LoadTimeout" /> で指定された時間 (ミリ秒単位) を超過しました。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-234">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c4aa0-235"><see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-235">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4aa0-236">.wav ヘッダーが破損しています。<see cref="P:System.Media.SoundPlayer.SoundLocation" /> で指定したファイルは、PCM .wav ファイルではありません。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-236">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c4aa0-237">ファイルを読み取る。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-237">for reading files.</span></span> <span data-ttu-id="c4aa0-238">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c4aa0-239">ネイティブ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-239">for access to native code.</span></span> <span data-ttu-id="c4aa0-240">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-240">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-241">読み込む .wav ファイルのファイル パスまたは URL を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-241">Gets or sets the file path or URL of the .wav file to load.</span></span></summary>
        <value><span data-ttu-id="c4aa0-242">.wav ファイルの読み込み元のファイル パスまたは URL。ファイル パスが存在しない場合は <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-242">The file path or URL from which to load a .wav file, or <see cref="F:System.String.Empty" /> if no file path is present.</span></span> <span data-ttu-id="c4aa0-243">既定値は、<see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-243">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-244">このプロパティに設定<xref:System.String.Empty?displayProperty=nameWithType>ときに、<xref:System.Media.SoundPlayer.Stream%2A>プロパティに設定されている、<xref:System.IO.Stream>です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-244">This property is set to <xref:System.String.Empty?displayProperty=nameWithType> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-245">使用を次のコード例に示します、 <xref:System.Media.SoundPlayer.SoundLocation%2A> .wav ファイル ソースのインスタンスに割り当てるプロパティを<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-245">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.SoundLocation%2A> property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="c4aa0-246">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-246">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c4aa0-247">ファイルを検索します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-247">for finding files.</span></span> <span data-ttu-id="c4aa0-248">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-248">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-249">この <see cref="T:System.Media.SoundPlayer" /> の新しいオーディオ ソース パスが設定されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-249">Occurs when a new audio source path for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-250">このイベントは、新しい音声のソース パスこの<xref:System.Media.SoundPlayer>が設定されています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-250">This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="c4aa0-251">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-251">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4aa0-252">使用を次のコード例に示します、<xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>通知を受信するイベント ハンドラーと、<xref:System.Media.SoundPlayer>別の .wav ファイルに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-252">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file.</span></span> <span data-ttu-id="c4aa0-253">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-253">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aa0-254">再生が行われている場合、サウンドの再生を中断します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-254">Stops playback of the sound if playback is occurring.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4aa0-255">使用を次のコード例に示します、<xref:System.Media.SoundPlayer.Stop%2A>現在再生されている .wav ファイルを停止するようにメソッドです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-255">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Stop%2A> method to halt a .wav file that is currently playing.</span></span> <span data-ttu-id="c4aa0-256">このコード例に示されている例の一部である、<xref:System.Media.SoundPlayer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-256">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c4aa0-257">ネイティブ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-257">for access to native code.</span></span> <span data-ttu-id="c4aa0-258">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="c4aa0-258">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-259">.wav ファイルの読み込み元の <see cref="T:System.IO.Stream" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-259">Gets or sets the <see cref="T:System.IO.Stream" /> from which to load the .wav file.</span></span></summary>
        <value><span data-ttu-id="c4aa0-260">.wav ファイルの読み込み元の <see cref="T:System.IO.Stream" />。使用できるストリームがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-260">A <see cref="T:System.IO.Stream" /> from which to load the .wav file, or <see langword="null" /> if no stream is available.</span></span> <span data-ttu-id="c4aa0-261">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-261">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-262">このプロパティに設定`null`ときに、<xref:System.Media.SoundPlayer.SoundLocation%2A>プロパティが新しいと有効なサウンドの場所に設定します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-262">This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-263">この <see cref="T:System.IO.Stream" /> の新しい <see cref="T:System.Media.SoundPlayer" /> オーディオ ソースが設定されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-263">Occurs when a new <see cref="T:System.IO.Stream" /> audio source for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-264">このイベントは、新しい<xref:System.IO.Stream>この音源<xref:System.Media.SoundPlayer>が設定されています。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-264">This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="c4aa0-265">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-265">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c4aa0-266">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-266">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="c4aa0-267">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-267">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span></span></param>
        <summary><span data-ttu-id="c4aa0-268">このメンバーの説明については、<see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> メソッドのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-268">For a description of this member, see the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aa0-269">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4aa0-270">これは、<xref:System.Media.SoundPlayer> のインスタンスが <xref:System.Runtime.Serialization.ISerializable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-270">It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4aa0-271"><see cref="T:System.Object" /> に関するデータを格納する <see cref="T:System.Media.SoundPlayer" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-271">Gets or sets the <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span></span></summary>
        <value><span data-ttu-id="c4aa0-272"><see cref="T:System.Media.SoundPlayer" /> に関するデータを格納している <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="c4aa0-272">An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>