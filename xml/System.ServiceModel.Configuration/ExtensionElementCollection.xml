<Type Name="ExtensionElementCollection" FullName="System.ServiceModel.Configuration.ExtensionElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89a4569a3b7562b6a52b5e4fae80f12c8432ff6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30509456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ExtensionElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ExtensionElementCollection&#xA;Inherits ServiceModelConfigurationElementCollection(Of ExtensionElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensionElementCollection : System::ServiceModel::Configuration::ServiceModelConfigurationElementCollection&lt;System::ServiceModel::Configuration::ExtensionElement ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="ConfigurationElementType">System.ServiceModel.Configuration.ExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="66607-101">
        <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> インスタンスのコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="66607-101">Represents a collection of <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> instances.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExtensionElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66607-102">
            <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66607-103">
            <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> に構成要素を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-103">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66607-104">追加するときに、キーが同じで値が異なる場合のみ、要素は重複と見なされます。</span><span class="sxs-lookup"><span data-stu-id="66607-104">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="66607-105">同じキーと値を持つ要素の場合、要素は競合しないので、エラーなしで受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="66607-105">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="66607-106">ただし、同じキーを持っていて値が異なる場合は、競合する値のどれを受け入れるかを決定するためのロジックがないので追加できません。</span><span class="sxs-lookup"><span data-stu-id="66607-106">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="66607-107">追加する <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-107">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66607-108">
            <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> に構成要素を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-108">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66607-109">追加するときに、キーが同じで値が異なる場合のみ、要素は重複と見なされます。</span><span class="sxs-lookup"><span data-stu-id="66607-109">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="66607-110">同じキーと値を持つ要素の場合、要素は競合しないので、エラーなしで受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="66607-110">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="66607-111">ただし、同じキーを持っていて値が異なる場合は、競合する値のどれを受け入れるかを決定するためのロジックがないので追加できません。</span><span class="sxs-lookup"><span data-stu-id="66607-111">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="66607-112">
            <paramref name="element" /> と同じ名前と種類の拡張機能が既にコレクションに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-112">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="66607-113">
            <c>element</c> を追加するインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-113">The index location at which to add <c>element</c>.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="66607-114">追加する <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-114">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66607-115">構成要素を指定された位置にある <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-115">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, at the specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66607-116">追加するときに、キーが同じで値が異なる場合のみ、要素は重複と見なされます。</span><span class="sxs-lookup"><span data-stu-id="66607-116">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="66607-117">同じキーと値を持つ要素の場合、要素は競合しないので、エラーなしで受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="66607-117">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="66607-118">ただし、同じキーを持っていて値が異なる場合は、競合する値のどれを受け入れるかを決定するためのロジックがないので追加できません。</span><span class="sxs-lookup"><span data-stu-id="66607-118">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="66607-119">
            <paramref name="element" /> と同じ名前と種類の拡張機能が既にコレクションに存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-119">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="66607-120">キーを返す <see cref="T:System.Configuration.ConfigurationElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-120">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66607-121">指定した構成要素の要素キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-121">Gets the element key for the specified configuration element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66607-122">指定した構成要素のキーとして機能する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-122">An <see cref="T:System.Object" /> that acts as the key for the specified configuration element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66607-123">
            <paramref name="element" /> が <see langword="null" /> または空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-123">
              <paramref name="element" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected override bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66607-124">重複する <see cref="T:System.Configuration.ConfigurationElement" /> を <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> に追加しようとしたときに、例外をスローするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-124">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66607-125">重複する <see langword="true" /> を <see cref="T:System.Configuration.ConfigurationElement" /> に追加しようとしたときに、例外をスローする場合は <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66607-125">
              <see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd" />
      </Docs>
    </Member>
  </Members>
</Type>