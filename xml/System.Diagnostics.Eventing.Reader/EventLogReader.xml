<Type Name="EventLogReader" FullName="System.Diagnostics.Eventing.Reader.EventLogReader">
  <TypeSignature Language="C#" Value="public class EventLogReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogReader" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogReader : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a95a5-101">イベント クエリに基づいて、イベント ログからイベントを読み取ることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="a95a5-101">Enables you to read events from an event log based on an event query.</span></span> <span data-ttu-id="a95a5-102">このオブジェクトによって読み取られるイベントは、<see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトとして返されます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-102">The events that are read by this object are returned as <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a95a5-103">たとえば、このクラスを使用してコードを参照してください[する方法: イベントのクエリの](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069)または[How To: アクセスおよびイベント情報の読み取り](http://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c)です。</span><span class="sxs-lookup"><span data-stu-id="a95a5-103">For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a95a5-104"><see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-104">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogReader(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="a95a5-105">イベントを取得するために使用するイベント クエリ。</span><span class="sxs-lookup"><span data-stu-id="a95a5-105">The event query used to retrieve events.</span></span></param>
        <summary><span data-ttu-id="a95a5-106">イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-106">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> class by specifying an event query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-107">使用して、<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>このオブジェクトからイベントを取得します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-107">Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogReader (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogReader(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a95a5-108">イベントの取得対象のイベント ログの名前。</span><span class="sxs-lookup"><span data-stu-id="a95a5-108">The name of the event log to retrieve events from.</span></span></param>
        <summary><span data-ttu-id="a95a5-109">イベントの取得対象のアクティブなイベント ログを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-109">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> class by specifying an active event log to retrieve events from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-110">使用して、<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>このオブジェクトからイベントを取得します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-110">Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, class System.Diagnostics.Eventing.Reader.EventBookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery, bookmark As EventBookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogReader(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery, System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="a95a5-111">イベントを取得するために使用するイベント クエリ。</span><span class="sxs-lookup"><span data-stu-id="a95a5-111">The event query used to retrieve events.</span></span></param>
        <param name="bookmark"><span data-ttu-id="a95a5-112">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。</span><span class="sxs-lookup"><span data-stu-id="a95a5-112">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="a95a5-113">ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-113">Only events logged after the bookmark event will be returned by the query.</span></span></param>
        <summary><span data-ttu-id="a95a5-114">イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-114">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> class by specifying an event query and a bookmark that is used as starting position for the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-115">使用して、<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>このオブジェクトからイベントを取得します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-115">Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogReader(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a95a5-116">イベントの取得対象のイベント ログの名前、またはイベントの取得対象のイベント ログ ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="a95a5-116">The name of the event log to retrieve events from, or the path to the event log file to retrieve events from.</span></span></param>
        <param name="pathType"><span data-ttu-id="a95a5-117">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-117">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span></span></param>
        <summary><span data-ttu-id="a95a5-118">イベントの取得対象のイベント ログの名前、またはイベントの取得対象のログ ファイルのパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-118">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> class by specifying the name of an event log to retrieve events from or the path to a log file to retrieve events from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-119">使用して、<xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>このオブジェクトからイベントを取得します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-119">Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a95a5-120">読み取り操作のたびにイベントのストリームから取得されるイベントの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-120">Gets or sets the number of events retrieved from the stream of events on every read operation.</span></span></summary>
        <value><span data-ttu-id="a95a5-121">整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-121">Returns an integer value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelReading">
      <MemberSignature Language="C#" Value="public void CancelReading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelReading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelReading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelReading();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a95a5-122">現在のクエリ操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="a95a5-122">Cancels the current query operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a95a5-123">このオブジェクトに使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-123">Releases the resources used by this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a95a5-124">このオブジェクトに使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-124">Releases all the resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a95a5-125">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a95a5-125"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a95a5-126">このオブジェクトに使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-126">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStatus">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLogStatus&gt; LogStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventLogStatus&gt; LogStatus" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogStatus As IList(Of EventLogStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLogStatus ^&gt; ^ LogStatus { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLogStatus ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLogStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a95a5-127">このオブジェクト内のイベント クエリに関連付けられているイベント ログまたはログ ファイルごとのステータスを取得します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-127">Gets the status of each event log or log file associated with the event query in this object.</span></span></summary>
        <value><span data-ttu-id="a95a5-128">このオブジェクト内のイベント クエリに関連付けられたイベント ログに関するステータス情報がそれぞれに格納されている <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-128">Returns a list of <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> objects that each contain status information about an event log associated with the event query in this object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a95a5-129">このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a95a5-129">Reads the next event that is returned from the event query in this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadEvent">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Eventing.Reader.EventRecord ReadEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEvent () As EventRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Eventing::Reader::EventRecord ^ ReadEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a95a5-130">このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a95a5-130">Reads the next event that is returned from the event query in this object.</span></span></summary>
        <returns><span data-ttu-id="a95a5-131"><see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-131">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a95a5-132">たとえば、このクラスを使用してコードを参照してください[操作方法: イベントのクエリの](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069)します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-132">For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEvent">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Eventing.Reader.EventRecord ReadEvent(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEvent (timeout As TimeSpan) As EventRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Eventing::Reader::EventRecord ^ ReadEvent(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="a95a5-133">キャンセルされるまでの、読み取り操作を実行できる最大時間。</span><span class="sxs-lookup"><span data-stu-id="a95a5-133">The maximum time to allow the read operation to run before canceling the operation.</span></span></param>
        <summary><span data-ttu-id="a95a5-134">このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="a95a5-134">Reads the next event that is returned from the event query in this object.</span></span></summary>
        <returns><span data-ttu-id="a95a5-135"><see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-135">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a95a5-136">読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-136">Changes the position in the event stream where the next event that is read will come from.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Diagnostics.Eventing.Reader.EventBookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (bookmark As EventBookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="a95a5-137">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。</span><span class="sxs-lookup"><span data-stu-id="a95a5-137">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="a95a5-138">ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-138">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <summary><span data-ttu-id="a95a5-139">ブックマーク イベントを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-139">Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event.</span></span> <span data-ttu-id="a95a5-140">ブックマーク イベントより前に記録されたイベントは取得されません。</span><span class="sxs-lookup"><span data-stu-id="a95a5-140">No events logged before the bookmark event will be retrieved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-141">この関数は、管理者または稼動チャネルまたは .evtx ログ ファイルからの結果セットでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-141">You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files.</span></span> <span data-ttu-id="a95a5-142">この関数は、分析ではサポートされていませんし、デバッグ チャネル、または ETL ファイルします。</span><span class="sxs-lookup"><span data-stu-id="a95a5-142">This function is not supported on analytic and debug channels, or for ETL files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Diagnostics.Eventing.Reader.EventBookmark bookmark, int64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (bookmark As EventBookmark, offset As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark, long offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
        <Parameter Name="offset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="a95a5-143">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。</span><span class="sxs-lookup"><span data-stu-id="a95a5-143">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="a95a5-144">ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-144">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <param name="offset"><span data-ttu-id="a95a5-145">ブックマークの位置を変更するためのイベントのオフセット番号。</span><span class="sxs-lookup"><span data-stu-id="a95a5-145">The offset number of events to change the position of the bookmark.</span></span></param>
        <summary><span data-ttu-id="a95a5-146">ブックマーク イベント、およびブックマークからのイベントのオフセット番号を指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-146">Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event and an offset number of events from the bookmark.</span></span> <span data-ttu-id="a95a5-147">ブックマーク イベントにオフセットを加えた位置より前に記録されたイベントは取得されません。</span><span class="sxs-lookup"><span data-stu-id="a95a5-147">No events logged before the bookmark plus the offset will be retrieved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-148">この関数は、管理者または稼動チャネルまたは .evtx ログ ファイルからの結果セットでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-148">You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files.</span></span> <span data-ttu-id="a95a5-149">この関数は、分析ではサポートされていませんし、デバッグ チャネル、または ETL ファイルします。</span><span class="sxs-lookup"><span data-stu-id="a95a5-149">This function is not supported on analytic and debug channels, or for ETL files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.IO.SeekOrigin origin, long offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.IO.SeekOrigin origin, int64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (origin As SeekOrigin, offset As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::IO::SeekOrigin origin, long offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        <Parameter Name="offset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="origin"><span data-ttu-id="a95a5-150">イベントのストリーム内でイベントに対してクエリを開始する位置を定義する <see cref="T:System.IO.SeekOrigin" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="a95a5-150">A value from the <see cref="T:System.IO.SeekOrigin" /> enumeration defines where in the stream of events to start querying for events.</span></span></param>
        <param name="offset"><span data-ttu-id="a95a5-151">開始位置に追加するイベントのオフセット番号。</span><span class="sxs-lookup"><span data-stu-id="a95a5-151">The offset number of events to add to the origin.</span></span></param>
        <summary><span data-ttu-id="a95a5-152">開始位置、および開始位置からのオフセットを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="a95a5-152">Changes the position in the event stream where the next event that is read will come from by specifying a starting position and an offset from the starting position.</span></span> <span data-ttu-id="a95a5-153">開始位置にオフセットを加えた位置より前に記録されたイベントは取得されません。</span><span class="sxs-lookup"><span data-stu-id="a95a5-153">No events logged before the starting position plus the offset will be retrieved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a95a5-154">この関数は、管理者または稼動チャネルまたは .evtx ログ ファイルからの結果セットでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="a95a5-154">You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files.</span></span> <span data-ttu-id="a95a5-155">この関数は、分析ではサポートされていませんし、デバッグ チャネル、または ETL ファイルします。</span><span class="sxs-lookup"><span data-stu-id="a95a5-155">This function is not supported on analytic and debug channels, or for ETL files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>