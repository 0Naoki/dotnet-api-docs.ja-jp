<Type Name="EventRegistrationTokenTable&lt;T&gt;" FullName="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9c6d4457daa56b0791ea4dc02eeafa896fd0768" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39994309" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventRegistrationTokenTable&lt;T&gt; where T : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRegistrationTokenTable`1&lt;class T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRegistrationTokenTable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : classpublic ref class EventRegistrationTokenTable sealed" />
  <TypeSignature Language="F#" Value="type EventRegistrationTokenTable&lt;'T (requires 'T : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">特定のイベントのイベント ハンドラー デリゲートの型。</typeparam>
    <summary>マネージド コード中の Windows ランタイム イベントの実装をサポートするための、デリゲートとイベント トークンの間のマッピングを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加とイベントの削除を手動で管理する必要がある場合は、この型を使用します。  
  
 このテーブルのインスタンスは、イベントに追加されたイベント ハンドラーを表すデリゲートを格納します。 イベントを発生させるには、によって返されるデリゲートを呼び出し、<xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.InvocationList%2A>でない場合は、プロパティ`null`します。 このテーブルのインスタンスは、各イベントに必要です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRegistrationTokenTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRegistrationTokenTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="T" /> がデリゲート型でありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken AddEventHandler (T handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken AddEventHandler(!T handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEventHandler (handler As T) As EventRegistrationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::WindowsRuntime::EventRegistrationToken AddEventHandler(T handler);" />
      <MemberSignature Language="F#" Value="member this.AddEventHandler : 'T -&gt; System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" Usage="eventRegistrationTokenTable.AddEventHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="T" />
      </Parameters>
      <Docs>
        <param name="handler">追加するイベント ハンドラー。</param>
        <summary>指定したイベント ハンドラーをテーブルと呼び出しリストに追加し、イベント ハンドラーを削除するために使用できるトークンを返します。</summary>
        <returns>テーブルと呼び出しリストからイベント ハンドラーを削除するために使用できるトークン。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEventRegistrationTokenTable">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt; GetOrCreateEventRegistrationTokenTable (ref System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt; refEventTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1&lt;!T&gt; GetOrCreateEventRegistrationTokenTable(class System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1&lt;!T&gt;&amp; refEventTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrCreateEventRegistrationTokenTable (ByRef refEventTable As EventRegistrationTokenTable(Of T)) As EventRegistrationTokenTable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::WindowsRuntime::EventRegistrationTokenTable&lt;T&gt; ^ GetOrCreateEventRegistrationTokenTable(System::Runtime::InteropServices::WindowsRuntime::EventRegistrationTokenTable&lt;T&gt; ^ % refEventTable);" />
      <MemberSignature Language="F#" Value="static member GetOrCreateEventRegistrationTokenTable :  -&gt; System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;'T (requires 'T : null)&gt;" Usage="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;'T (requires 'T : null)&gt;.GetOrCreateEventRegistrationTokenTable refEventTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refEventTable" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;T&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="refEventTable">参照渡しされるイベント登録テーブル トークン。</param>
        <summary>これが <see langword="null" />でない場合には、指定されたイベントの登録トークン テーブルを返します。それ以外の場合、新しいイベント登録トークン テーブルを返します。</summary>
        <returns>これが <see langword="null" /> でない場合は <paramref name="refEventTable" /> で指定されたイベント登録トークン テーブル。それ以外の場合は新しいイベント登録トークン テーブル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.GetOrCreateEventRegistrationTokenTable%2A>そのテーブルを作成の複数のスレッドのいずれかのシナリオでイベント登録トークン テーブルを初期化します。 このメソッドは同時に複数のスレッドで呼び出されると、すべてのスレッドで同じイベント登録トークン テーブルが返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvocationList">
      <MemberSignature Language="C#" Value="public T InvocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T InvocationList" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property InvocationList As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T InvocationList { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.InvocationList : 'T with get, set" Usage="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable&lt;'T (requires 'T : null)&gt;.InvocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>追加されて、まだ削除されていないすべてのイベント ハンドラー デリゲートが呼び出しリストに含まれる <paramref name="T" /> 型のデリゲートを取得または設定します。 このデリゲートを呼び出すと、すべてのイベント ハンドラーが呼び出されます。</summary>
        <value>イベント用に現在登録されているすべてのイベント ハンドラー デリゲートを表す型 <paramref name="T" /> のデリゲート。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveEventHandler">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>テーブルと呼び出しリストからイベント ハンドラーを削除します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler(valuetype System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (token As EventRegistrationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventHandler(System::Runtime::InteropServices::WindowsRuntime::EventRegistrationToken token);" />
      <MemberSignature Language="F#" Value="member this.RemoveEventHandler : System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken -&gt; unit" Usage="eventRegistrationTokenTable.RemoveEventHandler token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" />
      </Parameters>
      <Docs>
        <param name="token">イベント ハンドラーが追加されたときに返されたトークン。</param>
        <summary>テーブルと呼び出しリストから指定したトークンに関連付けられているイベント ハンドラーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トークンが登録されていない場合、テーブルと呼び出しリストは変更されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (T handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler(!T handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (handler As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventHandler(T handler);" />
      <MemberSignature Language="F#" Value="member this.RemoveEventHandler : 'T -&gt; unit" Usage="eventRegistrationTokenTable.RemoveEventHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="T" />
      </Parameters>
      <Docs>
        <param name="handler">削除するイベント ハンドラー。</param>
        <summary>テーブルと呼び出しリストから、指定されたイベント ハンドラー デリゲートを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドラーが登録されていない場合、テーブルと呼び出しリストは変更されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>