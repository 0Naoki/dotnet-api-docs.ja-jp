<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f65efc2bf5e51cf23ed0a83e2215697298c0bb8" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52906606" /></Metadata><TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type CustomLineCap = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ユーザー定義のカスタム ライン キャップをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ライン キャップが先頭と末尾の直線や曲線で GDI + 描画に使用される<xref:System.Drawing.Pen>オブジェクト。 GDI + いくつかの定義済みのキャップ スタイルをサポートし、ユーザーが自分のキャップのスタイルを定義することができます。 このクラスは、カスタム キャップのスタイルを作成して使用されます。  
  
   
  
## Examples  
 <xref:System.Drawing.Drawing2D.CustomLineCap> クラスを使用する方法を次の例に示します。 Windows フォームのコードを貼り付け、この例を実行します。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し`DrawCaps`から、フォームの<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したアウトラインと塗りつぶしを使用して、<see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <summary>指定したアウトラインと塗りつぶしを使用して、<see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath`と`strokePath`パラメーターは同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合`fillPath`は無視されます。 場合`strokePath`は`null`、`fillPath`負の値の y 軸をインターセプトする必要があります。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A>コンス トラクター。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し`DrawCaps`から、フォームの<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <param name="baseCap">カスタム キャップの作成元となるライン キャップ。</param>
        <summary>指定したアウトラインと塗りつぶしを使用して、指定した既存の <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体から <see cref="T:System.Drawing.Drawing2D.LineCap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath`と`strokePath`パラメーターは同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合`fillPath`は無視されます。 場合`strokePath`は`null`、`fillPath`負の値の y 軸をインターセプトする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap * single -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap, baseInset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
        <param name="baseCap">カスタム キャップの作成元となるライン キャップ。</param>
        <param name="baseInset">キャップと直線との距離。</param>
        <summary>指定したアウトライン、塗りつぶし、およびくぼみを使用して、指定した既存の <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体から <see cref="T:System.Drawing.Drawing2D.LineCap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath`と`strokePath`パラメーターは同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合`fillPath`は無視されます。 場合`strokePath`は`null`、`fillPath`負の値の y 軸をインターセプトする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.BaseCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.LineCap" /> の基になっている <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体を取得または設定します。</summary>
        <value>この <see cref="T:System.Drawing.Drawing2D.LineCap" /> の基になっている <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.BaseInset : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャップと直線との距離を取得または設定します。</summary>
        <value>キャップの開始点からと直線の終了点までの距離。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="customLineCap.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> の同一コピーを作成します。</summary>
        <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>イベント オブジェクト。 コードは、次のアクションを実行します。  
  
-   カスタム ライン キャップを使用して、作成、<xref:System.Drawing.Drawing2D.GraphicsPath>オブジェクト。  
  
-   作成、<xref:System.Drawing.Drawing2D.CustomLineCap>オブジェクト、`firstCap`を使用して、<xref:System.Drawing.Drawing2D.GraphicsPath>先ほど作成したオブジェクト。  
  
-   複製を作成します`firstCap`を使用して、<xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A>メソッド。  
  
-   設定、<xref:System.Drawing.Pen.CustomStartCap%2A>と<xref:System.Drawing.Pen.CustomEndCap%2A>のプロパティ、<xref:System.Drawing.Pen>オブジェクト、およびペンの行とカスタム キャップを画面に描画するために使用します。  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="customLineCap.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.IDisposable.Dispose%2A>により、これによって使用されるリソース<xref:System.Drawing.Drawing2D.CustomLineCap>他の目的で再割り当てするオブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="customLineCap.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="customLineCap.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> がガベージ コレクションにより収集される前に、その <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> がリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberSignature Language="F#" Value="member this.GetStrokeCaps :  *  -&gt; unit" Usage="customLineCap.GetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap">このキャップ内で直線の開始点で使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
        <param name="endCap">このキャップ内で直線の終了点に使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
        <summary>このカスタム キャップを構成する直線の開始と終了に使用するキャップを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し`DrawCaps`から、フォームの<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberSignature Language="F#" Value="member this.SetStrokeCaps : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap -&gt; unit" Usage="customLineCap.SetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap">このキャップ内で直線の開始点で使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
        <param name="endCap">このキャップ内で直線の終了点に使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
        <summary>直線の開始と終了に使用する、このカスタム キャップを構成するキャップを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し`DrawCaps`から、フォームの<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.StrokeJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.LineJoin" /> オブジェクトを構成する直線の接合方法を決定する、<see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体を取得または設定します。</summary>
        <value>この <see cref="T:System.Drawing.Drawing2D.LineJoin" /> オブジェクトが直線の接合に使用する <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを指定します、<xref:System.Drawing.Drawing2D.LineJoin>直線と曲線のストロークのパスを構成するに参加するために使用する列挙体<xref:System.Drawing.Drawing2D.CustomLineCap>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.WidthScale : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトの幅に対応した、この <see cref="T:System.Drawing.Pen" /> クラス オブジェクトのスケーリングの量を取得または設定します。</summary>
        <value>キャップのスケーリングの量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、カスタム キャップのサイズを乗算するペンの幅の倍数を指定します。 たとえば場合、このプロパティが 1 に等しい、カスタム キャップの幅が 10、カスタム キャップの高さが 5、および 3 の太さのペンを使用して線を描画、描画 30 ユニット全体に適用され、15 ユニット高はキャップにします。 このプロパティを 3 に設定すると、幅が描画 90 単位で高さ 45 単位の上限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>