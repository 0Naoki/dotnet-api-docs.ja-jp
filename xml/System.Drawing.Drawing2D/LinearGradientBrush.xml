<Type Name="LinearGradientBrush" FullName="System.Drawing.Drawing2D.LinearGradientBrush">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99af14782b55988d3dec08bf3b893ab3cccff429" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56780618" /></Metadata><TypeSignature Language="C#" Value="public sealed class LinearGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LinearGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearGradientBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type LinearGradientBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="359c4-101">線形グラデーションされた <see cref="T:System.Drawing.Brush" /> をカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="359c4-101">Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient.</span></span> <span data-ttu-id="359c4-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="359c4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-103">このクラスには、2 色のグラデーションとカスタム多色グラデーションの両方がカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="359c4-103">This class encapsulates both two-color gradients and custom multicolor gradients.</span></span>  
  
 <span data-ttu-id="359c4-104">行の四角形の幅または 2 つのポイントのいずれかを指定してに沿ってすべての線形グラデーションが定義されます。</span><span class="sxs-lookup"><span data-stu-id="359c4-104">All linear gradients are defined along a line specified either by the width of a rectangle or by two points.</span></span>  
  
 <span data-ttu-id="359c4-105">既定では、2 色の線状グラデーションは、水平方向に均等線形 blend 開始色から終了色まで指定した行に沿ったです。</span><span class="sxs-lookup"><span data-stu-id="359c4-105">By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.</span></span> <span data-ttu-id="359c4-106">Blend のパターンを使用して、カスタマイズ、<xref:System.Drawing.Drawing2D.Blend>クラス、<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>メソッド、または<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="359c4-106">Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods.</span></span> <span data-ttu-id="359c4-107">グラデーションの方向を指定することによってカスタマイズ、<xref:System.Drawing.Drawing2D.LinearGradientMode>列挙またはコンス トラクターで角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-107">Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.</span></span>  
  
 <span data-ttu-id="359c4-108">使用して、<xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>多色グラデーションを作成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="359c4-108">Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.</span></span>  
  
 <span data-ttu-id="359c4-109"><xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>プロパティがグラデーションに適用されるローカル ジオメトリック変換を指定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-109">The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="359c4-110">次の例では、水平<xref:System.Drawing.Drawing2D.LinearGradientBrush>; 0 の水平座標から 200 の水平座標に移動するとカラー コンポーネントを直線的に変更します。</span><span class="sxs-lookup"><span data-stu-id="359c4-110">The following example creates a horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200.</span></span> <span data-ttu-id="359c4-111">たとえば、最初の座標が 0 と 200 の中間点は、0 から 255 までの中間に位置が青要素があります。</span><span class="sxs-lookup"><span data-stu-id="359c4-111">For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255.</span></span> <span data-ttu-id="359c4-112">この例は、Windows フォームで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="359c4-112">This example is designed for use with Windows Forms.</span></span> <span data-ttu-id="359c4-113">次のコード例が、Windows フォームで使用するために設計されており、必要があります、 <xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーター<xref:System.Windows.Forms.PaintEventHandler>します。</span><span class="sxs-lookup"><span data-stu-id="359c4-113">The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.</span></span>  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6c88e1cc-1217-4399-ac12-cb37592b9f01"><span data-ttu-id="359c4-114">方法: 線形グラデーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-114">How To: Create a Linear Gradient</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-115">指定したポイントと色で、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="359c4-115">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point point1, valuetype System.Drawing.Point point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Point point1, System::Drawing::Point point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.Point" />
        <Parameter Name="point2" Type="System.Drawing.Point" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="359c4-116">線形グラデーションの開始点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-116">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.</span></span></param>
        <param name="point2"><span data-ttu-id="359c4-117">線形グラデーションの終了点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-117">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-118">線形グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-118">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-119">線形グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-119">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span></span></param>
        <summary><span data-ttu-id="359c4-120">指定したポイントと色で、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="359c4-120">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF point1, valuetype System.Drawing.PointF point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As PointF, point2 As PointF, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::PointF point1, System::Drawing::PointF point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.PointF" />
        <Parameter Name="point2" Type="System.Drawing.PointF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="359c4-121">線形グラデーションの開始点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-121">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.</span></span></param>
        <param name="point2"><span data-ttu-id="359c4-122">線形グラデーションの終了点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-122">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-123">線形グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-123">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-124">線形グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-124">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span></span></param>
        <summary><span data-ttu-id="359c4-125">指定したポイントと色で、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="359c4-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-126">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-126">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-127">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-127">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-128">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-128">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="linearGradientMode"><span data-ttu-id="359c4-129">グラデーションの方向を指定する <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列挙体要素。</span><span class="sxs-lookup"><span data-stu-id="359c4-129">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span></span> <span data-ttu-id="359c4-130">方向によって、グラデーションの開始点と終了点が決まります。</span><span class="sxs-lookup"><span data-stu-id="359c4-130">The orientation determines the starting and ending points of the gradient.</span></span> <span data-ttu-id="359c4-131">たとえば、<see langword="LinearGradientMode.ForwardDiagonal" /> の場合、開始点は四角形の左上隅、終了点は四角形の右下隅になります。</span><span class="sxs-lookup"><span data-stu-id="359c4-131">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span></span></param>
        <summary><span data-ttu-id="359c4-132">四角形、開始色、終了色、および方向に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-132">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-133">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-133">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-134">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-134">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-135">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-135">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="359c4-136">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-136">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <summary><span data-ttu-id="359c4-137">四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-137">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-138">方向の線に対して垂直な線は、すべてのポイントは、同じ色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-138">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="359c4-139">開始行方向の線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-139">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-140">開始行のすべてのポイントは、開始色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-140">All points on the starting line are the starting color.</span></span> <span data-ttu-id="359c4-141">行の終了方向線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-141">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-142">最終行のすべてのポイントは、終了色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-142">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="359c4-143">行方向の角度は、最初と最後の行が通過する隅を決定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-143">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="359c4-144">など角度が 0 ~ 90 ° の範囲にある場合は、開始行の左上隅が通過し、最終行が右下隅を通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-144">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-145">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-145">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-146">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-146">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-147">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-147">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="linearGradientMode"><span data-ttu-id="359c4-148">グラデーションの方向を指定する <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列挙体要素。</span><span class="sxs-lookup"><span data-stu-id="359c4-148">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span></span> <span data-ttu-id="359c4-149">方向によって、グラデーションの開始点と終了点が決まります。</span><span class="sxs-lookup"><span data-stu-id="359c4-149">The orientation determines the starting and ending points of the gradient.</span></span> <span data-ttu-id="359c4-150">たとえば、<see langword="LinearGradientMode.ForwardDiagonal" /> の場合、開始点は四角形の左上隅、終了点は四角形の右下隅になります。</span><span class="sxs-lookup"><span data-stu-id="359c4-150">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span></span></param>
        <summary><span data-ttu-id="359c4-151">四角形、開始色、終了色、および方向のモードに基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-151">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-152">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-152">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-153">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-153">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-154">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-154">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="359c4-155">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-155">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <summary><span data-ttu-id="359c4-156">四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-156">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-157">方向の線に対して垂直な線は、すべてのポイントは、同じ色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-157">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="359c4-158">開始行方向の線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-158">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-159">開始行のすべてのポイントは、開始色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-159">All points on the starting line are the starting color.</span></span> <span data-ttu-id="359c4-160">行の終了方向線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-160">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-161">最終行のすべてのポイントは、終了色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-161">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="359c4-162">行方向の角度は、最初と最後の行が通過する隅を決定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-162">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="359c4-163">など角度が 0 ~ 90 ° の範囲にある場合は、開始行の左上隅が通過し、最終行が右下隅を通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-163">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-164">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-164">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-165">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-165">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-166">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-166">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="359c4-167">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-167">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <param name="isAngleScaleable"><span data-ttu-id="359c4-168"><see langword="true" /> に設定すると、この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に関連付けられた変換によって角度が影響を受けることが指定されます。それ以外の場合は <see langword="false" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-168">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="359c4-169">四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-169">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-170">方向の線に対して垂直な線は、すべてのポイントは、同じ色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-170">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="359c4-171">開始行方向の線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-171">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-172">開始行のすべてのポイントは、開始色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-172">All points on the starting line are the starting color.</span></span> <span data-ttu-id="359c4-173">行の終了方向線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-173">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-174">最終行のすべてのポイントは、終了色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-174">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="359c4-175">行方向の角度は、最初と最後の行が通過する隅を決定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-175">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="359c4-176">など角度が 0 ~ 90 ° の範囲にある場合は、開始行の左上隅が通過し、最終行が右下隅を通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-176">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="359c4-177">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-177">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="359c4-178">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-178">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="359c4-179">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-179">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="359c4-180">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-180">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <param name="isAngleScaleable"><span data-ttu-id="359c4-181"><see langword="true" /> に設定すると、この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に関連付けられた変換によって角度が影響を受けることが指定されます。それ以外の場合は <see langword="false" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-181">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="359c4-182">四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-182">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-183">方向の線に対して垂直な線は、すべてのポイントは、同じ色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-183">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="359c4-184">開始行方向の線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-184">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-185">開始行のすべてのポイントは、開始色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-185">All points on the starting line are the starting color.</span></span> <span data-ttu-id="359c4-186">行の終了方向線に対して垂直なし、四角形の四隅のいずれかを通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-186">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="359c4-187">最終行のすべてのポイントは、終了色です。</span><span class="sxs-lookup"><span data-stu-id="359c4-187">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="359c4-188">行方向の角度は、最初と最後の行が通過する隅を決定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-188">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="359c4-189">など角度が 0 ~ 90 ° の範囲にある場合は、開始行の左上隅が通過し、最終行が右下隅を通過します。</span><span class="sxs-lookup"><span data-stu-id="359c4-189">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Blend : System.Drawing.Drawing2D.Blend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-190">グラデーションのカスタムの減色を定義する位置と係数を保持した <see cref="T:System.Drawing.Drawing2D.Blend" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-190">Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</span></span></summary>
        <value><span data-ttu-id="359c4-191">グラデーションのカスタムの減色を表す <see cref="T:System.Drawing.Drawing2D.Blend" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-191">A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-192">A<xref:System.Drawing.Drawing2D.Blend>ブレンド係数と位置の対応する配列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="359c4-192">A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions.</span></span> <span data-ttu-id="359c4-193">ブレンド係数は、開始色と終了、対応する位置を使用する色の割合を指定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-193">The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.</span></span> <span data-ttu-id="359c4-194">位置は、グラデーション ラインに沿って距離の割合として指定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-194">The positions are given as a percentage of distance along the gradient line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="linearGradientBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="359c4-195">この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> の同一コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-195">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <returns><span data-ttu-id="359c4-196">このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-196">The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-197">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-197">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-198">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-198">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-199">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-199">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-200">このブラシを使用して、画面には、楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-200">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="359c4-201">クローン、 <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`)。</span><span class="sxs-lookup"><span data-stu-id="359c4-201">Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span></span>  
  
-   <span data-ttu-id="359c4-202">複製されたブラシを使用して、最初の楕円のすぐ下の画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-202">Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaCorrection">
      <MemberSignature Language="C#" Value="public bool GammaCorrection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GammaCorrection" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberSignature Language="VB.NET" Value="Public Property GammaCorrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GammaCorrection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GammaCorrection : bool with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-203"><see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に対してガンマ補正が有効になっているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-203">Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="359c4-204"><see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に対してガンマ補正が有効な場合の値は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-204">The value is <see langword="true" /> if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationColors : System.Drawing.Drawing2D.ColorBlend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-205">複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-205">Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span></span></summary>
        <value><span data-ttu-id="359c4-206">複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-206">A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-207">A<xref:System.Drawing.Drawing2D.ColorBlend>色と位置の対応する配列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="359c4-207">A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions.</span></span> <span data-ttu-id="359c4-208">位置は、対応する色が配置されているグラデーション ラインに沿って距離の割合を指定する 0 ~ 1 の値です。</span><span class="sxs-lookup"><span data-stu-id="359c4-208">The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.</span></span>  
  
 <span data-ttu-id="359c4-209">このプロパティの設定は、グラデーション ラインに沿って各位置にある 1 つの色をグラデーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-209">Setting this property creates a multicolor gradient with one color at each position along the gradient line.</span></span> <span data-ttu-id="359c4-210">このプロパティの設定はすべて以前の色、位置、および減衰設定を無効<xref:System.Drawing.Drawing2D.LinearGradientBrush>します。</span><span class="sxs-lookup"><span data-stu-id="359c4-210">Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] LinearColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] LinearColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberSignature Language="VB.NET" Value="Public Property LinearColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ LinearColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinearColors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-211">グラデーションの開始色と終了色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-211">Gets or sets the starting and ending colors of the gradient.</span></span></summary>
        <value><span data-ttu-id="359c4-212">グラデーションの開始色と終了色を表す 2 つの <see cref="T:System.Drawing.Color" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="359c4-212">An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-213">指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を先に適用するように指定して、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> に、この指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を乗算します。</span><span class="sxs-lookup"><span data-stu-id="359c4-213">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="linearGradientBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="359c4-214">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-214">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span></span></param>
        <summary><span data-ttu-id="359c4-215">指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を先に適用するように指定して、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> に、この指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を乗算します。</span><span class="sxs-lookup"><span data-stu-id="359c4-215">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-216">例については、「<xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-216">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="359c4-217">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-217">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span></span></param>
        <param name="order"><span data-ttu-id="359c4-218">2 つの行列を乗算する順序を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</span></span></param>
        <summary><span data-ttu-id="359c4-219"><see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> に、指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を指定された順序で乗算します。</span><span class="sxs-lookup"><span data-stu-id="359c4-219">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-220">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-221">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-222">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-222">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-223">このブラシを使用して、画面には、楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-223">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="359c4-224">呼び出し、<xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>を変換する、メソッド、<xref:System.Drawing.Drawing2D.LinearGradientBrush>します。</span><span class="sxs-lookup"><span data-stu-id="359c4-224">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-225">変換されたブラシを使用して、最初の楕円のすぐ下の画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-225">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
 <span data-ttu-id="359c4-226">下の楕円が水平方向に拡大することと、グラデーションを拡大して、新しい形状と一致することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-226">Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.RectangleF" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-227">グラデーションの開始点と終了点を定義する四角形領域を取得します。</span><span class="sxs-lookup"><span data-stu-id="359c4-227">Gets a rectangular region that defines the starting and ending points of the gradient.</span></span></summary>
        <value><span data-ttu-id="359c4-228">グラデーションの開始点と終了点を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="359c4-228">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-229">四角形の左側にある線形グラデーションの開始位置を指定して、四角形の右側にあるエンドポイントを指定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-229">The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="linearGradientBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="359c4-230"><see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> プロパティを ID にリセットします。</span><span class="sxs-lookup"><span data-stu-id="359c4-230">Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-231">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-231">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-232">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-232">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-233">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-233">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-234">このブラシを使用して、画面には、楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-234">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="359c4-235">呼び出し、<xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>に変換し、<xref:System.Drawing.Drawing2D.LinearGradientBrush>します。</span><span class="sxs-lookup"><span data-stu-id="359c4-235">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-236">変換されたブラシを使用して、最初の楕円のすぐ下の画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-236">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
-   <span data-ttu-id="359c4-237">トランス フォームをリセットします。</span><span class="sxs-lookup"><span data-stu-id="359c4-237">Resets the transform.</span></span>  
  
-   <span data-ttu-id="359c4-238">最初の 2 つ下の画面には、3 番目の楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-238">Draws a third ellipse to the screen below the first two.</span></span>  
  
 <span data-ttu-id="359c4-239">楕円を描画することに注意してください。 同じサイズと、期限の呼び出しに、<xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A>メソッド、グラデーションが一致するように削減されました。</span><span class="sxs-lookup"><span data-stu-id="359c4-239">Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> method, the gradient has been reduced to match.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-240">指定した分量だけローカル ジオメトリック変換を回転します。</span><span class="sxs-lookup"><span data-stu-id="359c4-240">Rotates the local geometric transform by the specified amount.</span></span> <span data-ttu-id="359c4-241">このメソッドは変換の前に回転を行います。</span><span class="sxs-lookup"><span data-stu-id="359c4-241">This method prepends the rotation to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="linearGradientBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="359c4-242">回転角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-242">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="359c4-243">指定した分量だけローカル ジオメトリック変換を回転します。</span><span class="sxs-lookup"><span data-stu-id="359c4-243">Rotates the local geometric transform by the specified amount.</span></span> <span data-ttu-id="359c4-244">このメソッドは変換の前に回転を行います。</span><span class="sxs-lookup"><span data-stu-id="359c4-244">This method prepends the rotation to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-245">例については、「<xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-245">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="359c4-246">回転角度。</span><span class="sxs-lookup"><span data-stu-id="359c4-246">The angle of rotation.</span></span></param>
        <param name="order"><span data-ttu-id="359c4-247">回転行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-247">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span></span></param>
        <summary><span data-ttu-id="359c4-248">指定した順序で、指定した分量だけローカル ジオメトリック変換を回転します。</span><span class="sxs-lookup"><span data-stu-id="359c4-248">Rotates the local geometric transform by the specified amount in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-249">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-249">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-250">コード</span><span class="sxs-lookup"><span data-stu-id="359c4-250">The code</span></span>  
  
-   <span data-ttu-id="359c4-251">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-251">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-252">このブラシを使用して、画面には、楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-252">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="359c4-253">回転、 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 度呼び出すことによって、<xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="359c4-253">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.</span></span>  
  
-   <span data-ttu-id="359c4-254">回転のブラシを使用して、最初の楕円のすぐ下の画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-254">Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.</span></span>  
  
 <span data-ttu-id="359c4-255">下の楕円のグラデーションは、上の楕円の x 軸に 45 度の角度があることを確認します。</span><span class="sxs-lookup"><span data-stu-id="359c4-255">Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse.</span></span> <span data-ttu-id="359c4-256">またへの呼び出し、<xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>左端下の楕円の塗りつぶしのグラデーションの左端を正当化するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="359c4-256">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-257">指定した分量だけローカル ジオメトリック変換をスケールします。</span><span class="sxs-lookup"><span data-stu-id="359c4-257">Scales the local geometric transform by the specified amounts.</span></span> <span data-ttu-id="359c4-258">このメソッドは変換の前にスケーリング行列を適用します。</span><span class="sxs-lookup"><span data-stu-id="359c4-258">This method prepends the scaling matrix to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="359c4-259">x 軸方向に変換をスケールする量。</span><span class="sxs-lookup"><span data-stu-id="359c4-259">The amount by which to scale the transform in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="359c4-260">y 軸方向に変換をスケールする量。</span><span class="sxs-lookup"><span data-stu-id="359c4-260">The amount by which to scale the transform in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="359c4-261">指定した分量だけローカル ジオメトリック変換をスケールします。</span><span class="sxs-lookup"><span data-stu-id="359c4-261">Scales the local geometric transform by the specified amounts.</span></span> <span data-ttu-id="359c4-262">このメソッドは変換の前にスケーリング行列を適用します。</span><span class="sxs-lookup"><span data-stu-id="359c4-262">This method prepends the scaling matrix to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-263">例については、「<xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-263">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="359c4-264">x 軸方向に変換をスケールする量。</span><span class="sxs-lookup"><span data-stu-id="359c4-264">The amount by which to scale the transform in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="359c4-265">y 軸方向に変換をスケールする量。</span><span class="sxs-lookup"><span data-stu-id="359c4-265">The amount by which to scale the transform in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="359c4-266">スケーリング行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-266">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span></span></param>
        <summary><span data-ttu-id="359c4-267">指定した順序で、指定した分量だけローカル ジオメトリック変換をスケールします。</span><span class="sxs-lookup"><span data-stu-id="359c4-267">Scales the local geometric transform by the specified amounts in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-268">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-268">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-269">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-269">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-270">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-270">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-271">このブラシを使用して、画面には、楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-271">Draw an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="359c4-272">スケール、<xref:System.Drawing.Drawing2D.LinearGradientBrush>の x 軸に 2 つの係数を使用しています。</span><span class="sxs-lookup"><span data-stu-id="359c4-272">Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.</span></span>  
  
-   <span data-ttu-id="359c4-273">スケーリングされたブラシを使用して、最初の楕円のすぐ下の画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-273">Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.</span></span>  
  
 <span data-ttu-id="359c4-274">下の楕円のグラデーションが 2 つの倍に拡大することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-274">Notice that the gradient of the lower ellipse is stretched by a factor of two.</span></span> <span data-ttu-id="359c4-275">またへの呼び出し、<xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>楕円の左端とグラデーションの左端を正当化するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="359c4-275">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-276">中心の色、および両端の単色への線形の減色が設定されている線形グラデーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-276">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="359c4-277">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-277">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <summary><span data-ttu-id="359c4-278">中心の色、および両端の単色への線形の減色が設定されている線形グラデーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-278">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-279">このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。</span><span class="sxs-lookup"><span data-stu-id="359c4-279">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="359c4-280">`focus`パラメーター グラデーション ラインに沿って距離の割合としての場所を表します。</span><span class="sxs-lookup"><span data-stu-id="359c4-280">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="359c4-281">いずれかの側に直線的に開始色をグラデーションになります。</span><span class="sxs-lookup"><span data-stu-id="359c4-281">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="359c4-282">例については、「<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-282">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single * single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="359c4-283">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-283">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <param name="scale"><span data-ttu-id="359c4-284">開始色から <paramref name="focus" /> 終了色へ変化する度合いを指定する 0 ～ 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-284">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)</span></span></param>
        <summary><span data-ttu-id="359c4-285">中心の色、および両端の単色への線形の減色が設定されている線形グラデーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-285">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-286">このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。</span><span class="sxs-lookup"><span data-stu-id="359c4-286">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="359c4-287">`focus`パラメーター グラデーション ラインに沿って距離の割合としての場所を表します。</span><span class="sxs-lookup"><span data-stu-id="359c4-287">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="359c4-288">いずれかの側に直線的に開始色をグラデーションになります。</span><span class="sxs-lookup"><span data-stu-id="359c4-288">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="359c4-289">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-289">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-290">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-290">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-291">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-291">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-292">このブラシを使用すると、色の線形の左から右の遷移のある画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-292">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="359c4-293">変換、<xref:System.Drawing.Drawing2D.LinearGradientBrush>センターで、ピークによって図形を三角形にします。</span><span class="sxs-lookup"><span data-stu-id="359c4-293">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.</span></span>  
  
-   <span data-ttu-id="359c4-294">変換されたブラシを使用して、画面には、2 番目の楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-294">Draws a second ellipse to the screen using the transformed brush.</span></span>  
  
 <span data-ttu-id="359c4-295">下の楕円のグラデーションを青に赤と青に、背面から遷移することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-295">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-296">釣鐘型の曲線に基づいて、グラデーションの減色を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-296">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="359c4-297">グラデーションの中央 (開始色と終了色が同量ずつブレンドされる点) を指定する 0 から 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-297">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</span></span></param>
        <summary><span data-ttu-id="359c4-298">釣鐘型の曲線に基づいて、グラデーションの減色を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-298">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-299">このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。</span><span class="sxs-lookup"><span data-stu-id="359c4-299">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="359c4-300">`focus`パラメーター グラデーション ラインに沿って距離の割合としての場所を表します。</span><span class="sxs-lookup"><span data-stu-id="359c4-300">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="359c4-301">いずれかの側にベル曲線図形 (正規分布) に基づく開始色をグラデーションになります。</span><span class="sxs-lookup"><span data-stu-id="359c4-301">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="359c4-302">例については、次を参照してください。 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span><span class="sxs-lookup"><span data-stu-id="359c4-302">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single * single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="359c4-303">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-303">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <param name="scale"><span data-ttu-id="359c4-304">色が <paramref name="focus" /> に向かって変化する度合いを指定する 0 ～ 1 の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-304">A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />.</span></span></param>
        <summary><span data-ttu-id="359c4-305">釣鐘型の曲線に基づいて、グラデーションの減色を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-305">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-306">このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。</span><span class="sxs-lookup"><span data-stu-id="359c4-306">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="359c4-307">`focus`パラメーター グラデーション ラインに沿って距離の割合としての場所を表します。</span><span class="sxs-lookup"><span data-stu-id="359c4-307">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="359c4-308">いずれかの側にベル曲線図形 (正規分布) に基づく開始色をグラデーションになります。</span><span class="sxs-lookup"><span data-stu-id="359c4-308">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="359c4-309">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-309">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-310">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-310">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-311">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-311">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-312">このブラシを使用すると、色の線形の左から右の遷移のある画面に楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-312">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="359c4-313">変換、<xref:System.Drawing.Drawing2D.LinearGradientBrush>センターでピーク時の鐘形曲線にします。</span><span class="sxs-lookup"><span data-stu-id="359c4-313">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.</span></span>  
  
-   <span data-ttu-id="359c4-314">鐘状のブラシを使用して、画面には、2 番目の楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-314">Draws a second ellipse to the screen using the bell-shaped brush.</span></span>  
  
 <span data-ttu-id="359c4-315">下の楕円のグラデーションを青に赤と青に、背面から遷移することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-315">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-316">この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に適用されるローカル ジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.Matrix" /> のコピーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-316">Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="359c4-317">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> で描画する塗りつぶしにだけ適用されるジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のコピー。</span><span class="sxs-lookup"><span data-stu-id="359c4-317">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="359c4-318">ジオメトリック変換は、変換、拡大縮小、回転、または傾斜グラデーションの塗りつぶしに使用できます。</span><span class="sxs-lookup"><span data-stu-id="359c4-318">A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.</span></span> <span data-ttu-id="359c4-319">マトリックスが返されるため、<xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>プロパティは、ブラシのジオメトリック変換のコピーが不要になったときに、マトリックスの破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="359c4-319">Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="359c4-320">指定した寸法でローカル ジオメトリック変換を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="359c4-320">Translates the local geometric transform by the specified dimensions.</span></span> <span data-ttu-id="359c4-321">このメソッドは変換の前に平行移動を行います。</span><span class="sxs-lookup"><span data-stu-id="359c4-321">This method prepends the translation to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="359c4-322">x 軸方向の平行移動の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-322">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="359c4-323">y 軸方向の平行移動の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-323">The value of the translation in y.</span></span></param>
        <summary><span data-ttu-id="359c4-324">指定した寸法でローカル ジオメトリック変換を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="359c4-324">Translates the local geometric transform by the specified dimensions.</span></span> <span data-ttu-id="359c4-325">このメソッドは変換の前に平行移動を行います。</span><span class="sxs-lookup"><span data-stu-id="359c4-325">This method prepends the translation to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-326">例については、「<xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="359c4-326">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="359c4-327">x 軸方向の平行移動の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-327">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="359c4-328">y 軸方向の平行移動の値。</span><span class="sxs-lookup"><span data-stu-id="359c4-328">The value of the translation in y.</span></span></param>
        <param name="order"><span data-ttu-id="359c4-329">平行移動を適用する順序 (前または後)。</span><span class="sxs-lookup"><span data-stu-id="359c4-329">The order (prepend or append) in which to apply the translation.</span></span></param>
        <summary><span data-ttu-id="359c4-330">指定した順序で、指定した寸法だけローカル ジオメトリック変換を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="359c4-330">Translates the local geometric transform by the specified dimensions in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="359c4-331">次のコード例は、Windows フォームで使用するために設計されています。 また必要が<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Form.OnPaint%2A>イベント オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="359c4-331">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="359c4-332">コードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="359c4-332">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="359c4-333">新しい <xref:System.Drawing.Drawing2D.LinearGradientBrush> を作成します。</span><span class="sxs-lookup"><span data-stu-id="359c4-333">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="359c4-334">このブラシを使用すると、色の線形の左から右の遷移のある画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-334">Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="359c4-335">回転、<xref:System.Drawing.Drawing2D.LinearGradientBrush>に 90 度とグラデーションをスケールします。</span><span class="sxs-lookup"><span data-stu-id="359c4-335">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.</span></span>  
  
-   <span data-ttu-id="359c4-336">画面に、回転とスケーリングのグラデーションを使用して、四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-336">Draws the rectangle, with the rotated and scaled gradient, to the screen.</span></span>  
  
-   <span data-ttu-id="359c4-337">上から下に線形グラデーションを持つように、四角形を変換します。</span><span class="sxs-lookup"><span data-stu-id="359c4-337">Translates the rectangle so that it has a linear gradient running from top to bottom.</span></span>  
  
-   <span data-ttu-id="359c4-338">画面に翻訳された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="359c4-338">Draws the translated rectangle to the screen.</span></span>  
  
 <span data-ttu-id="359c4-339">次の 3 つの四角形があることに注意してくださいでは、左から右の回転とスケーリングのグラデーションと下部にある、最後に、翻訳されたグラデーションを示すいずれかを示す 1 つの中間グラデーション、表示の上部にあるものが表示されます。</span><span class="sxs-lookup"><span data-stu-id="359c4-339">Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="359c4-340">この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のラップ モードを示す <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列挙体を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="359c4-340">Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="359c4-341">この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> を使用して描画された塗りつぶしをどのように並べるかを指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" />。</span><span class="sxs-lookup"><span data-stu-id="359c4-341">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>