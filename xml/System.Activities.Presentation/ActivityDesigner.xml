<Type Name="ActivityDesigner" FullName="System.Activities.Presentation.ActivityDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b76608e78061541052b8d4568af47af5dd61cead" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358336" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActivityDesigner : System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ActivityDesigner extends System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesigner&#xA;Inherits WorkflowViewElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesigner : System::Activities::Presentation::WorkflowViewElement" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.WorkflowViewElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3fbb1-101">アクティビティ デザイナーのすべてのコンポーネントの基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3fbb1-101">Provides a base class for all activity designer components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fbb1-102">この型は他のアクティビティ デザイナーに基本的な外観機能を提供し、開発者がアクティビティ デザイナー画面に機能を追加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-102">This type provides the basic look-and-feel functionality for other activity designers and allows a developer to add additional capabilities to an activity designer surface.</span></span> <span data-ttu-id="3fbb1-103">いずれかで、アクティビティのユーザーにその他の有用な情報を表示、編集エクスペリエンス キャンバスにより良いを作成するためにこれは、通常 (などを使用して、`ExpressionTextBox`で、`If`アクティビティ デザイナー)、または格納されている要素を編集することを許可する (再度を検討してください、<xref:System.Activities.Statements.If.Then%2A>と<xref:System.Activities.Statements.If.Else%2A>のプロパティ、<xref:System.Activities.Statements.If>アクティビティ)。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-103">This is typically done in order to either display additional interesting information to the user of the activity, create a better on canvas editing experience  (for example, using the `ExpressionTextBox` on an `If` activity designer), or to allow contained elements to be edited (again, consider the <xref:System.Activities.Statements.If.Then%2A> and <xref:System.Activities.Statements.If.Else%2A> properties of the <xref:System.Activities.Statements.If> activity).</span></span>  
  
 <span data-ttu-id="3fbb1-104"><xref:System.Activities.Presentation.ActivityDesigner> は <xref:System.Activities.Presentation.WorkflowViewElement> を継承し、主に既定のスタイルを追加するだけでなく、<xref:System.Activities.Presentation.ActivityDesigner.Icon%2A> プロパティを使用してアイコンをカスタマイズする機能も提供します。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-104">The <xref:System.Activities.Presentation.ActivityDesigner> inherits from <xref:System.Activities.Presentation.WorkflowViewElement> and primarily adds the default styling, as well as the ability to customize the icon via the <xref:System.Activities.Presentation.ActivityDesigner.Icon%2A> property.</span></span> <span data-ttu-id="3fbb1-105"><xref:System.Activities.Activity> から派生する型のデザイナーを作成するたびに使用されます。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-105">It should be used whenever you are creating a designer for a type which derives from <xref:System.Activities.Activity>.</span></span> <span data-ttu-id="3fbb1-106"><xref:System.Activities.Activity> 型と関連付けると、<xref:System.Activities.Presentation.WorkflowViewElement.ModelItem%2A> プロパティは、編集対象の型のインスタンスについて記述した ModelItem 階層を指します。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-106">When associated with an <xref:System.Activities.Activity> type, the <xref:System.Activities.Presentation.WorkflowViewElement.ModelItem%2A> property will point to the ModelItem hierarchy describing the instance of that type being edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fbb1-107">下のサンプル コードでは、`First2of3` アクティビティを最初に定義し、次に First2of3 デザイナーのコードを表示して、最後に Designer 属性を使用してアクティビティをデザイナーに関連付ける方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3fbb1-107">In the sample code below, a `First2of3` activity is defined first, then the code for the First2of3 designer is shown, and finally it is shown how to use the Designer attribute to associate the activity with the designer is provided.</span></span>  
  
```  
  
//The First2of3 activity  
using System.Activities;  
using System.Collections.Generic;  
using System.Linq;  
  
namespace Microsoft.Activities.Documentation.ActivityTypes  
{  
  
    public sealed class First2of3 : NativeActivity  
    {  
        public Activity Activity1 { get; set; }  
        public Activity Activity2 { get; set; }  
        public Activity Activity3 { get; set; }  
  
        Variable<List<ActivityInstance>> ExecutingActivities { get; set; }  
  
        public First2of3()  
        {  
            ExecutingActivities = new Variable<List<ActivityInstance>>();  
        }  
  
        // If your activity returns a value, derive from CodeActivity<TResult>  
        // and return the value from the Execute method.  
        protected override void Execute(NativeActivityContext context)  
        {  
            // Obtain the runtime value of the Text input argument  
            var l = new List<ActivityInstance>();  
            ExecutingActivities.Set(context, l);  
            l.Add(context.ScheduleActivity(Activity1, onComplete));  
            l.Add(context.ScheduleActivity(Activity2, onComplete));  
            l.Add(context.ScheduleActivity(Activity3, onComplete));  
        }  
  
        protected override void CacheMetadata(NativeActivityMetadata metadata)  
        {  
            metadata.AddImplementationVariable(ExecutingActivities);  
            metadata.AddChild(Activity1);  
            metadata.AddChild(Activity2);  
            metadata.AddChild(Activity3);  
        }  
  
        private void onComplete(NativeActivityContext context, ActivityInstance completedInstance)  
        {  
            var l = ExecutingActivities.Get(context);  
            l.Remove(completedInstance);  
            if (l.Count == 1)  
            {  
                context.CancelChild(l.Single());  
            }  
        }  
    }  
}  
  
//’Code for the First2of3 Designer:  
<sap:ActivityDesigner x:Class="Microsoft.Activites.Documentation.First2of3Designer"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"  
    xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation">  
    <StackPanel>  
        <Label Content="2 of 3 activity">  
            <Label.ToolTip>  
                This activity has 3 child activities which will be scheduled in parallel.    
                Upon completion of any 2, the third will be cancelled  
            </Label.ToolTip>  
        </Label>  
        <StackPanel Orientation="Horizontal">  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity1 Here" Item="{Binding Path=ModelItem.Activity1, Mode=TwoWay}" />  
            </Border>  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity2 Here" Item="{Binding Path=ModelItem.Activity2, Mode=TwoWay}" />  
  
            </Border>  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity3 Here" Item="{Binding Path=ModelItem.Activity3, Mode=TwoWay}" />  
  
            </Border>  
        </StackPanel>  
    </StackPanel>  
</sap:ActivityDesigner>  
  
//Code for associating the activity with the designer using the Designer attribute.  
[Designer(typeof(First2of3Designer))]  
public sealed class First2of3 : NativeActivity  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-108">
            <see cref="T:System.Activities.Presentation.ActivityDesigner" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-108">Initializes a new instance of the <see cref="T:System.Activities.Presentation.ActivityDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected override string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetAutomationIdMemberName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-109">メソッドをオーバーライドするこの実装で "DisplayName" の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-109">Returns the string "DisplayName" in this overridden method implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3fbb1-110">メソッドをオーバーライドするこの実装での文字列 "DisplayName"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-110">The string "DisplayName" in this overridden method implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal override string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetAutomationItemStatus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-111">オートメーション項目のステータスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-111">Returns the status of the automation item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3fbb1-112">オートメーション項目のステータス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-112">The status of the automation item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingBrush Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingBrush Icon" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ActivityDesigner.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As DrawingBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingBrush ^ Icon { System::Windows::Media::DrawingBrush ^ get(); void set(System::Windows::Media::DrawingBrush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingBrush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-113">この <see cref="T:System.Activities.Presentation.ActivityDesigner" /> に関連付けられているアイコンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-113">Gets or sets the icon associated with this <see cref="T:System.Activities.Presentation.ActivityDesigner" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3fbb1-114">この <see cref="T:System.Windows.Media.DrawingBrush" /> に関連付けられたアイコンを表す <see cref="T:System.Activities.Presentation.ActivityDesigner" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-114">Returns a <see cref="T:System.Windows.Media.DrawingBrush" /> that represents the icon associated with this <see cref="T:System.Activities.Presentation.ActivityDesigner" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.ActivityDesigner.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-115">
            <see cref="F:System.Activities.Presentation.ActivityDesigner.IconProperty" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-115">Identifies the <see cref="F:System.Activities.Presentation.ActivityDesigner.IconProperty" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-116">テンプレートを適用して <see cref="T:System.Activities.Presentation.ActivityDesigner" /> を作成するプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-116">Begins the process of applying a template to create an <see cref="T:System.Activities.Presentation.ActivityDesigner" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal override void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEditAnnotation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fbb1-117">注釈の編集時に発生する処理を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-117">Begins the processing that occurs when editing annotation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected override void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="3fbb1-118">新しい項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-118">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3fbb1-119">モデル項目が変更されると発生する処理を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-119">Begins the processing that occurs when the model item is changed..</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3fbb1-120">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-120">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3fbb1-121">任意のマウス ボタンを解放したときに発生するプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-121">Begins the processing that occurs when any mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3fbb1-122">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-122">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3fbb1-123">アタッチされた未処理の <see cref="T:System.Windows.Input.Mouse.PreviewMouseDown" /> ルーティング イベントが、そのルート上でこのクラスから派生した要素に到達した場合に行われる処理を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fbb1-123">Begins the processing that occurs when an unhandled <see cref="T:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>