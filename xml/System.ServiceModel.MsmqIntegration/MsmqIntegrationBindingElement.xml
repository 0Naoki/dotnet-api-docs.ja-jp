<Type Name="MsmqIntegrationBindingElement" FullName="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="141142bac3d72d460e8a9ddf260162836d78bcec" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39810723" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqIntegrationBindingElement : System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqIntegrationBindingElement extends System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqIntegrationBindingElement&#xA;Inherits MsmqBindingElementBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqIntegrationBindingElement sealed : System::ServiceModel::Channels::MsmqBindingElementBase" />
  <TypeSignature Language="F#" Value="type MsmqIntegrationBindingElement = class&#xA;    inherit MsmqBindingElementBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MsmqBindingElementBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ff31c-101">このバインディング要素を使用することで、WCF (Windows Communication Foundation) アプリケーションは、COM、MSMQ ネイティブ API、または <see cref="N:System.Messaging" /> の API を使用する既存の MSMQ アプリケーションとメッセージを送受信できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ff31c-101">This binding element can be used to enable Windows Communication Foundation (WCF) applications to send messages to and receive messages from existing MSMQ applications that use either COM, MSMQ native APIs, or the APIs in <see cref="N:System.Messaging" />.</span></span> <span data-ttu-id="ff31c-102">このクラスを使用して、MSMQ ベースのメッセージング アプリケーションからメッセージを送受信します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-102">Use this class to send and receive messages from MSMQ-based messaging applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqIntegrationBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqIntegrationBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff31c-103"><see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-103">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="msmqIntegrationBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ff31c-104">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="ff31c-104">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ff31c-105">チャネル ファクトリのビルドに使用する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-105">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="ff31c-106">指定したコンテキストを使用してチャネル ファクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-106">Builds a channel factory using the context provided.</span></span></summary>
        <returns><span data-ttu-id="ff31c-107">既存の MSMQ アプリケーションへのメッセージ送信用チャネルを作成するための MSMQ 統合チャネル ファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ff31c-107">An MSMQ integration channel factory that can be used to create channels to send messages to existing MSMQ applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-108">このメソッドが作成するチャネル ファクトリを使用すると、サービスと通信するためのクライアント チャネルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-108">This method builds a channel factory that enables the developer to create a client channel to communicate with a service.</span></span> <span data-ttu-id="ff31c-109">チャネル ファクトリはチャネルではなく、チャネルを作成できるファクトリです。</span><span class="sxs-lookup"><span data-stu-id="ff31c-109">The channel factory is not a channel, but rather a factory that can create a channel.</span></span> <span data-ttu-id="ff31c-110">チャネルを作成するには `IChannelFactory<TChannel>.CreateChannel` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-110">You create a channel by calling `IChannelFactory<TChannel>.CreateChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff31c-111">コンテキスト値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-111">The context value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff31c-112"><paramref name="TChannel" /> が <see langword="IOutputChannel" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff31c-112">The <paramref name="TChannel" /> is not <see langword="IOutputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ff31c-113"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> が Certificate または WindowsDomain で、<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> が None です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-113"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ff31c-114">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="ff31c-114">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ff31c-115">チャネル リスナーのビルドに使用する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-115">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="ff31c-116">指定したコンテキストを使用してチャネル リスナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-116">Builds a channel listener using the context provided.</span></span></summary>
        <returns><span data-ttu-id="ff31c-117">既存の MSMQ アプリケーションからのメッセージを受信するためのチャネルの作成に使用できる MSMQ 統合チャネル リスナー。</span><span class="sxs-lookup"><span data-stu-id="ff31c-117">An MSMQ integration channel listener that can be used to create channels to receive messages from existing MSMQ applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-118">チャネル リスナーはサービスで作成され、クライアント チャネルが送信するメッセージの受信に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-118">Channel listeners are created on the service and are used to receive messages sent by a client channel.</span></span> <span data-ttu-id="ff31c-119">サービスは、実際のチャネルに対する参照を取得するには、`IChannelListener.Open` を呼び出した後、`IChannelListener.AcceptChannel` を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff31c-119">The service must call `IChannelListener.Open` and then `IChannelListener.AcceptChannel` to get a reference to the actual channel.</span></span> <span data-ttu-id="ff31c-120">その後、`IChannel.Open` を呼び出してチャネルを開く必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff31c-120">Then `IChannel.Open` must be called to open the channel.</span></span> <span data-ttu-id="ff31c-121">この時点で、チャネルを使用してメッセージを取得できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ff31c-121">At this point, the channel can be used to retrieve messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff31c-122">コンテキスト値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-122">The context value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff31c-123"><paramref name="TChannel" /> が <see langword="IInputChannel" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff31c-123">The <paramref name="TChannel" /> is not <see langword="IInputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ff31c-124"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> が Certificate または WindowsDomain で、<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> が None です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-124"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="msmqIntegrationBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ff31c-125">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="ff31c-125">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ff31c-126">チャネル ファクトリのビルドに使用する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-126">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="ff31c-127">指定したコンテキストを使用してチャネル ファクトリを作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-127">Returns a value that indicates whether you can build a channel factory with the context provided.</span></span></summary>
        <returns><span data-ttu-id="ff31c-128">与えられたコンテキストでチャネル ファクトリをビルドできる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-128"><see langword="true" /> if you can build a channel factory with the context provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ff31c-129">このメソッドは、<see langword="true" /> が <paramref name="TChannel" /> のときだけ、<see cref="T:System.ServiceModel.Channels.IOutputChannel" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-129">This method returns <see langword="true" /> only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ff31c-130">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="ff31c-130">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ff31c-131">チャネル リスナーのビルドに使用する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-131">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="ff31c-132">指定したコンテキストを使用してチャネル リスナーを作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-132">Returns a value that indicates whether you can build a channel listener with the context provided.</span></span></summary>
        <returns><span data-ttu-id="ff31c-133">与えられたコンテキストでチャネル リスナーをビルドできる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-133"><see langword="true" /> if you can build a channel listener with the context provided; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="ff31c-134">このメソッドは、<see langword="true" /> が <paramref name="TChannel" /> のときだけ、<see cref="T:System.ServiceModel.Channels.IInputChannel" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-134">This method returns <see langword="true" /> only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="msmqIntegrationBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff31c-135">バインド要素の複製を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-135">Returns a clone of the binding element.</span></span></summary>
        <returns><span data-ttu-id="ff31c-136">バインド要素の複製。</span><span class="sxs-lookup"><span data-stu-id="ff31c-136">A clone of the binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="msmqIntegrationBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ff31c-137">プロパティの種類。</span><span class="sxs-lookup"><span data-stu-id="ff31c-137">The type of property.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ff31c-138">バインド コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="ff31c-138">The binding context.</span></span></param>
        <summary><span data-ttu-id="ff31c-139">指定した <see langword="BindingContext" /> 型から、要求した型のプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-139">Gets a property of the requested type from the specified <see langword="BindingContext" />.</span></span></summary>
        <returns><span data-ttu-id="ff31c-140"><paramref name="T" /> 型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff31c-140">An object of type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-141">このメソッドは、要素から機能および保護要件を取得するための機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-141">This method provides the functionality to retrieve capabilities and protection requirements from the element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff31c-142">コンテキストは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-142">Context is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff31c-143">バインド要素で使用されるスキームを格納する <see cref="T:System.String" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-143">Gets a <see cref="T:System.String" /> that contains the scheme used by the binding element.</span></span></summary>
        <value><span data-ttu-id="ff31c-144">バインド要素で使用されるスキームを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-144">The <see cref="T:System.String" /> that contains the scheme used by the binding element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-145">このプロパティは、MSMQ 統合チャネルで使用されるアドレス スキームを示す文字列 "msmq.formatname" を返します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-145">This property returns the string "msmq.formatname" to indicate the addressing scheme used by the MSMQ integration channel.</span></span> <span data-ttu-id="ff31c-146">キューのアドレス指定に関する詳細については、次を参照してください。[サービス エンドポイントとキューのアドレス指定](~/docs/framework/wcf/feature-details/service-endpoints-and-queue-addressing.md)します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-146">For more information about queue addressing, see [Service Endpoints and Queue Addressing](~/docs/framework/wcf/feature-details/service-endpoints-and-queue-addressing.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializationFormat As MsmqMessageSerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat SerializationFormat { System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat get(); void set(System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationFormat : System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff31c-147">MSMQ メッセージのシリアル化に使用される <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-147">Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</span></span></summary>
        <value><span data-ttu-id="ff31c-148">MSMQ メッセージのシリアル化に使用される <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />。</span><span class="sxs-lookup"><span data-stu-id="ff31c-148">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-149">このプロパティは、次の値のいずれか 1 つをとります。</span><span class="sxs-lookup"><span data-stu-id="ff31c-149">This property can have one of the following values:</span></span>  
  
-   <span data-ttu-id="ff31c-150">`ActiveX` - ActiveX シリアライザーは、オブジェクトのシリアル化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-150">`ActiveX` - The ActiveX serializer is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="ff31c-151">`Binary` - <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> は、オブジェクトのシリアル化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-151">`Binary` - The <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="ff31c-152">`ByteArray` - オブジェクトをバイト配列にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-152">`ByteArray` - The object is serialized to an array of bytes.</span></span>  
  
-   <span data-ttu-id="ff31c-153">`Stream` - オブジェクトをストリームにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-153">`Stream` - The object is serialized to a stream.</span></span>  
  
-   <span data-ttu-id="ff31c-154">`Xml` - <xref:System.Xml.Serialization.XmlSerializer> は、オブジェクトのシリアル化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-154">`Xml` - The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="ff31c-155">既定値は `Xml` です。</span><span class="sxs-lookup"><span data-stu-id="ff31c-155">The default value is `Xml`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ff31c-156">値が <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> の値の範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="ff31c-156">The value is not within the values of <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TargetSerializationTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetSerializationTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetSerializationTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetSerializationTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetSerializationTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetSerializationTypes : Type[] with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff31c-157">メッセージが逆シリアル化された後の型を格納する <see cref="T:System.Type" /> オブジェクトの配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-157">Gets or sets an array of <see cref="T:System.Type" /> objects that contain the types to which messages should be deserialized.</span></span></summary>
        <value><span data-ttu-id="ff31c-158">メッセージが逆シリアル化された後の型を格納している <see cref="T:System.Type" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="ff31c-158">An array of <see cref="T:System.Type" /> that contains the types to which messages should be deserialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff31c-159">MSMQ メッセージの本文に型はありません。</span><span class="sxs-lookup"><span data-stu-id="ff31c-159">The body of an MSMQ message is not typed.</span></span> <span data-ttu-id="ff31c-160"><xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes%2A>プロパティでは、Windows Communication Foundation (WCF) 受信側アプリケーションへの MSMQ アプリケーションから送信されたときにメッセージが逆シリアルする種類を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="ff31c-160">The <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes%2A> property enables you to specify the types to which messages are deserialized when they are sent from an MSMQ application to a Windows Communication Foundation (WCF) receiving application.</span></span> <span data-ttu-id="ff31c-161">このプロパティは、<xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat> を `Xml` に設定している場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="ff31c-161">This property is used only if <xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat> is set to `Xml`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>