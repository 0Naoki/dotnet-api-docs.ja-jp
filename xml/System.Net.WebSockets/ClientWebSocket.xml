<Type Name="ClientWebSocket" FullName="System.Net.WebSockets.ClientWebSocket">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fc95a132d4979a36e9969027ba45b2b304b7e93" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientWebSocket : System.Net.WebSockets.WebSocket, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientWebSocket extends System.Net.WebSockets.WebSocket implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.ClientWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientWebSocket&#xA;Inherits WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientWebSocket : System::Net::WebSockets::WebSocket, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1e8fa-101">WebSocket サービスに接続するクライアントを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e8fa-101">Provides a client for connecting to WebSocket services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-102">一部のクラスとクラスの要素で、<xref:System.Net.WebSockets>名前空間は、Windows 7、Windows Vista SP2、および Windows Server 2008 でサポートされます。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-102">Some of the classes and class elements in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="1e8fa-103">ただし、クライアントとサーバー Websocket の唯一のパブリックの実装は、Windows 8 および Windows Server 2012 でサポートされます。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="1e8fa-104">クラスの要素、 <xref:System.Net.WebSockets> Windows 7、Windows Vista SP2、および Windows Server 2008 でサポートされている名前空間は抽象クラスの要素。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-104">The class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</span></span> <span data-ttu-id="1e8fa-105">これにより、継承、およびこれらのクラスの抽象クラスとクライアント Websocket の実際の実装を持つクラス要素を拡張するアプリケーションの開発者。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-105">This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientWebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientWebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-106">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> クラスのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-106">Creates an instance of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-107">接続を中止し、保留中の IO 操作を取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-107">Aborts the connection and cancels any pending IO operations.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="1e8fa-108">`ClientWebSocket` 1 回が中止された後に再利用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-108">The `ClientWebSocket` cannot be reused once once it is aborted.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.WebSockets.ClientWebSocket/&lt;CloseAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="1e8fa-109">WebSocket の終了状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-109">The WebSocket close status.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="1e8fa-110">終了状態の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-110">A description of the close status.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1e8fa-111">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-111">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e8fa-112">非同期操作として <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-112">Close the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e8fa-113">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-113">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="1e8fa-114">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-114">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-115">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-115">This operation will not block.</span></span> <span data-ttu-id="1e8fa-116">返された<xref:System.Threading.Tasks.Task>オブジェクトは、後に完了、<xref:System.Net.WebSockets.ClientWebSocket>インスタンスが閉じています。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-116">The returned <xref:System.Threading.Tasks.Task> object will complete after the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.WebSockets.ClientWebSocket/&lt;CloseOutputAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="1e8fa-117">WebSocket の終了状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-117">The WebSocket close status.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="1e8fa-118">終了状態の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-118">A description of the close status.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1e8fa-119">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-119">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e8fa-120">非同期操作として <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの出力を閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-120">Close the output for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e8fa-121">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-121">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="1e8fa-122">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-122">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-123">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-123">This operation will not block.</span></span> <span data-ttu-id="1e8fa-124">返された<xref:System.Threading.Tasks.Task>オブジェクトは、出力後、完了、<xref:System.Net.WebSockets.ClientWebSocket>インスタンスが閉じています。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-124">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-125">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスで終了ハンドシェイクが開始された理由を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-125">Gets the reason why the close handshake was initiated on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e8fa-126">
            <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-126">Returns <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</span>
          </span>
          <span data-ttu-id="1e8fa-127">終了ハンドシェイクが開始された理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-127">The reason why the close handshake was initiated.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-128">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスが終了した理由の説明を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-128">Gets a description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e8fa-129">
            <see cref="T:System.String" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-129">Returns <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="1e8fa-130">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスが終了した理由の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-130">The description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Uri uri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(Uri ^ uri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.WebSockets.ClientWebSocket/&lt;ConnectAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="1e8fa-131">接続する WebSocket サーバーの URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-131">The URI of the WebSocket server to connect to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1e8fa-132">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-132">A cancellation token used to propagate notification that the  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e8fa-133">非同期操作として、WebSocket サーバーに接続します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-133">Connect to a WebSocket server as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e8fa-134">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-134">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="1e8fa-135">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-135">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-136"><xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A>メソッドは、リモートのネットワーク送信先と WebSocket ハンドシェイクを開始し、サブ プロトコルをネゴシエートします。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-136">The <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</span></span>  
  
 <span data-ttu-id="1e8fa-137">普通の WebSocket 接続を使用して、 `ws://` uri のスキーム。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-137">For plain WebSocket connections, use the `ws://` scheme in the uri.</span></span> <span data-ttu-id="1e8fa-138">TLS と SSL 経由で WebSocket 接続をセキュリティで保護された、使用、`wss://`スキームです。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-138">For secure WebSocket connections over TLS/SSL, use the `wss://` scheme.</span></span>  
  
 <span data-ttu-id="1e8fa-139">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-139">This operation will not block.</span></span> <span data-ttu-id="1e8fa-140">返された<xref:System.Threading.Tasks.Task>オブジェクトは、接続要求の後に完了する、<xref:System.Net.WebSockets.ClientWebSocket>インスタンスが完了しました。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-140">The returned <xref:System.Threading.Tasks.Task> object will complete after the connect request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-141">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスによって使用されているアンマネージ リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-141">Releases the unmanaged resources used by the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.WebSockets.ClientWebSocketOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebSockets.ClientWebSocketOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ClientWebSocketOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebSockets::ClientWebSocketOptions ^ Options { System::Net::WebSockets::ClientWebSocketOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.ClientWebSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-142">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket オプションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-142">Gets the WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e8fa-143">
            <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-143">Returns <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />.</span>
          </span>
          <span data-ttu-id="1e8fa-144">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket オプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-144">The WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e8fa-145">応答を受信するバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-145">The buffer to receive the response.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1e8fa-146">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-146">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e8fa-147">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-147">Receive data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e8fa-148">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-148">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="1e8fa-149">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-149">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-150">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-150">This operation will not block.</span></span> <span data-ttu-id="1e8fa-151">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは受信要求の後、完了、<xref:System.Net.WebSockets.ClientWebSocket>インスタンスが完了しました。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-151">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="1e8fa-152">正確に 1 つの送信および 1 つの受信ごとにサポートされて<xref:System.Net.WebSockets.ClientWebSocket>並列内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-152">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e8fa-153">送信するメッセージが含まれるバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-153">The buffer containing the message to be sent.</span>
          </span>
        </param>
        <param name="messageType">
          <span data-ttu-id="1e8fa-154">バッファーがクリア テキストとバイナリ形式のどちらであるかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-154">Specifies whether the buffer is clear text or in a binary format.</span>
          </span>
        </param>
        <param name="endOfMessage">
          <span data-ttu-id="1e8fa-155">これが、最終的な非同期送信かどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-155">Specifies whether this is the final asynchronous send.</span>
          </span>
          <span data-ttu-id="1e8fa-156">最終送信の場合には <see langword="true" /> に、それ以外の場合は <see langword="false" /> に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-156">Set to <see langword="true" /> if this is the final send; <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1e8fa-157">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-157">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e8fa-158">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 上のデータを非同期操作として送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-158">Send data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e8fa-159">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-159">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e8fa-160">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-160">This operation will not block.</span></span> <span data-ttu-id="1e8fa-161">返された<xref:System.Threading.Tasks.Task>オブジェクトは、送信要求の後に完了する、<xref:System.Net.WebSockets.ClientWebSocket>インスタンスが完了しました。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-161">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="1e8fa-162">正確に 1 つの送信および 1 つの受信ごとにサポートされて<xref:System.Net.WebSockets.ClientWebSocket>並列内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e8fa-162">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-163">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket 状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-163">Get the WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e8fa-164">
            <see cref="T:System.Net.WebSockets.WebSocketState" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-164">Returns <see cref="T:System.Net.WebSockets.WebSocketState" />.</span>
          </span>
          <span data-ttu-id="1e8fa-165">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスの WebSocket 状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-165">The WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e8fa-166">
            <see cref="T:System.Net.WebSockets.ClientWebSocket" /> インスタンスでサポートされている WebSocket サブプロトコルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-166">Gets the supported WebSocket sub-protocol for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e8fa-167">
            <see cref="T:System.String" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-167">Returns <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="1e8fa-168">サポートされている WebSocket サブプロトコル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e8fa-168">The supported WebSocket sub-protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>