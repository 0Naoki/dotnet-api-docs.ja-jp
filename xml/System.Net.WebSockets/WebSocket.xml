<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebSocket.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86ccf4f01f890d0349a5ca5282124817bb4f1ee854e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf4f01f890d0349a5ca5282124817bb4f1ee854e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebSockets.WebSocket">
          <source>The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</source>
          <target state="translated">WebSocket のアップグレードが完了した後、WebSocket クラスにより、アプリケーションがデータを送受信できるようになります。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.WebSocket">
          <source>Some of the classes in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</source>
          <target state="translated">一部のクラスの<ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph>名前空間は、Windows 7、Windows Vista SP2、および Windows Server 2008 でサポートされます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.WebSocket">
          <source>However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</source>
          <target state="translated">ただし、クライアントとサーバー Websocket の唯一のパブリックの実装は、Windows 8 および Windows Server 2012 でサポートされます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.WebSocket">
          <source>The classes and class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract classes.</source>
          <target state="translated">クラスとクラスの要素で、 <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> Windows 7、Windows Vista SP2、および Windows Server 2008 でサポートされている名前空間は抽象クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.WebSocket">
          <source>This allows an application developer to inherit and extend these abstract classes with an actual implementation of client WebSockets.</source>
          <target state="translated">これにより、アプリケーション開発者を継承して、クライアント Websocket の実際の実装でこれらの抽象クラスを拡張できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.#ctor">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> クラスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.Abort">
          <source>Aborts the WebSocket connection and cancels any pending IO operations.</source>
          <target state="translated">WebSocket 接続を中止し、保留中の IO 操作を取り消します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Indicates the reason for closing the WebSocket connection.</source>
          <target state="translated">WebSocket 接続を閉じる理由を示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Specifies a human readable explanation as to why the connection is closed.</source>
          <target state="translated">接続が閉じられる理由について人間が判読可能な説明を指定します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The token that can be used to propagate notification that operations should be canceled.</source>
          <target state="translated">操作を取り消す必要があることを示す通知を伝達するために使用可能なトークン。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> section 7.</source>
          <target state="translated"><bpt id="p1">[</bpt>WebSocket プロトコル仕様<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> セクション 7 で定義されている終了ハンドシェイクを使用して、非同期操作で WebSocket 接続を閉じます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the WebSocket has been closed.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>オブジェクトは、WebSocket が閉じられた後に完了します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>This method closes the WebSocket connection using the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> section 7.</source>
          <target state="translated">このメソッドで定義されている終了ハンドシェイクを使用して WebSocket 接続を閉じ、 <bpt id="p1">[</bpt>WebSocket プロトコル仕様<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept>セクション 7 です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Indicates the reason for closing the WebSocket connection.</source>
          <target state="translated">WebSocket 接続を閉じる理由を示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Allows applications to specify a human readable explanation as to why the connection is closed.</source>
          <target state="translated">接続が閉じられた理由について人間が判読可能な説明をアプリケーションが指定できるようにします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The token that can be used to propagate notification that operations should be canceled.</source>
          <target state="translated">操作を取り消す必要があることを示す通知を伝達するために使用可能なトークン。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Initiates or completes the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification section 7<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>WebSocket プロトコル仕様のセクション 7<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> で定義されている終了ハンドシェイクを開始または完了します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the output on the WebSocket has been closed.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>オブジェクトは、WebSocket の出力が閉じられた後に完了します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.WebSocket.CloseStatus">
          <source>Indicates the reason why the remote endpoint initiated the close handshake.</source>
          <target state="translated">リモート エンドポイントが終了ハンドシェイクを開始した理由を示します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.CloseStatus">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.CloseStatus">
          <source>If the close handshake has not been initiated yet, WebSocketCloseStatus.None is returned.</source>
          <target state="translated">終了ハンドシェイクがまだ開始されていないが、WebSocketCloseStatus.None が返されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
          <source>Allows the remote endpoint to describe the reason why the connection was closed.</source>
          <target state="translated">リモート エンドポイントが接続の終了理由を記述できるようにします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
          <source>The size, in bytes, of the client receive buffer.</source>
          <target state="translated">クライアント受信バッファーのサイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
          <source>The size, in bytes, of the send buffer.</source>
          <target state="translated">送信バッファーのバイト単位のサイズ。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
          <source>Create client buffers to use with this <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> インスタンスを使用するようにクライアント バッファーを作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
          <source>An array with the client buffers.</source>
          <target state="translated">クライアント バッファーから成る配列。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>The connection to be used for IO operations.</source>
          <target state="translated">IO 操作に使用する接続。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>The subprotocol accepted by the client.</source>
          <target state="translated">クライアントが受け付けたサブプロトコル。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>The size in bytes of the client WebSocket receive buffer.</source>
          <target state="translated">クライアント WebSocket の受信バッファーのサイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>The size in bytes of the client WebSocket send buffer.</source>
          <target state="translated">クライアント WebSocket の送信バッファーのサイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Determines how regularly a frame is sent over the connection as a keep-alive.</source>
          <target state="translated">接続を介してフレームをキープアライブとして定期的に送信する方法を決定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Applies only when the connection is idle.</source>
          <target state="translated">接続がアイドルである場合にのみ適用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Indicates whether a random key or a static key (just zeros) should be used for the WebSocket masking.</source>
          <target state="translated">WebSocket マスクに乱数キーを使用するか、または静的キー (ゼロだけ) を使用するかを示します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Will be used as the internal buffer in the WPC.</source>
          <target state="translated">WPC の内部バッファーとして使用されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>The size has to be at least <bpt id="p1">&lt;c&gt;</bpt>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">サイズは、少なくとも <bpt id="p1">&lt;c&gt;</bpt>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (32 ビットでは 16)<ept id="p1">&lt;/c&gt;</ept> である必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">この API は、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Allows callers to create a client side WebSocket class which will use the WSPC for framing purposes.</source>
          <target state="translated">WSPC がフレーム化に使用するクライアント側の WebSocket クラスを呼び出し元が作成できるようにします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
          <source>The size, in bytes, of the desired buffer.</source>
          <target state="translated">要求されるバッファーのサイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
          <source>Creates a WebSocket server buffer.</source>
          <target state="translated">WebSocket サーバー バッファーを作成します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
          <source>Gets the default WebSocket protocol keep-alive interval in milliseconds.</source>
          <target state="translated">WebSocket プロトコルの既定の keep-alive 間隔をミリ秒単位で取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
          <source>The default WebSocket protocol keep-alive interval in milliseconds.</source>
          <target state="translated">WebSocket プロトコルのキープ アライブ間隔の、ミリ秒単位での既定値です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
          <source>The typical value for this interval is 30 seconds.</source>
          <target state="translated">この時間間隔として一般的な値は 30 秒です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.Dispose">
          <source>Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</source>
          <target state="translated">ASP.NET および自己ホスト型の実装のアンマネージ リソースをクリーンアップするために使用します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
          <source>Returns a value that indicates if the WebSocket instance is targeting <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>.</source>
          <target state="translated">WebSocket インスタンスのターゲットが <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> であることを示す値を返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> is targeting <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> が <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> を対象としている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
          <source>The current state of the WebSocket.</source>
          <target state="translated">WebSocket の現在の状態。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
          <source>Returns a value that indicates if the state of the WebSocket instance is closed or aborted.</source>
          <target state="translated">WebSocket インスタンスの状態が終了または中止の場合、状態を示す値を返します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> is closed or aborted; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> が終了または中止された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>References the application buffer that is the storage location for the received data.</source>
          <target state="translated">受信したデータの格納場所であるアプリケーション バッファーを参照します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Propagates the notification that operations should be canceled.</source>
          <target state="translated">操作を取り消す通知を配信します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Receives data from the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> connection asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> 接続からデータを非同期的に受信します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> array containing the received data.</source>
          <target state="translated">タスク オブジェクト上の <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> プロパティは、受信したデータを含む <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 配列を返します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data has been received on the <ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>オブジェクトはデータを受信した後、完了、<ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph> object in parallel.</source>
          <target state="translated">正確に 1 つの送信および 1 つの受信ごとにサポートされて<ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>並列内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">この API は、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
          <source>Allows callers to register prefixes for WebSocket requests (ws and wss).</source>
          <target state="translated">WebSocket 要求のプレフィックス (ws および wss) を呼び出し元が登録できるようにします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The buffer to be sent over the connection.</source>
          <target state="translated">この接続で送信するバッファー。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Indicates whether the application is sending a binary or text message.</source>
          <target state="translated">アプリケーションが送信するのはバイナリかテキスト メッセージかを示します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Indicates whether the data in "buffer" is the last part of a message.</source>
          <target state="translated">"バッファー" 内のデータがメッセージの最後の部分であるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The token that propagates the notification that operations should be canceled.</source>
          <target state="translated">操作を取り消す必要があることを示す通知を伝達するトークン。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Sends data over the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> connection asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocket" /&gt;</ph> 接続でデータを非同期的に送信します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the data has been sent on the <ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>オブジェクトは、データ送信された後、完了、<ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph> object in parallel.</source>
          <target state="translated">正確に 1 つの送信および 1 つの受信ごとにサポートされて<ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>並列内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.WebSocket.State">
          <source>Returns the current state of the WebSocket connection.</source>
          <target state="translated">WebSocket 接続の現在の状態を返します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.State">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketState" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.WebSocket.SubProtocol">
          <source>The subprotocol that was negotiated during the opening handshake.</source>
          <target state="translated">開始ハンドシェイクでネゴシエートされたサブプロトコル。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.WebSocket.SubProtocol">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
          <source>The current state of the WebSocket to be tested against the list of valid states.</source>
          <target state="translated">有効な状態のリストに対してテストする WebSocket の現在の状態。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
          <source>List of valid connection states.</source>
          <target state="translated">有効な接続状態の一覧。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
          <source>Verifies that the connection is in an expected state.</source>
          <target state="translated">接続が予期された状態であることを確認します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>