<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ec87b13a560e1c0a80cb426d7ea2d94c9b63f49" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48634355" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68cdf-101">カスタマイズ可能なリフレクション コンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68cdf-102"><xref:System.Reflection.Context.CustomReflectionContext> 追加またはリフレクション オブジェクトからカスタム属性を削除したり、完全なリフレクション モデルを再実装しなくても、これらのオブジェクトにダミーのプロパティを追加する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="68cdf-103">既定の<xref:System.Reflection.Context.CustomReflectionContext>リフレクションを単にラップしますが、変更を加えずにオブジェクトが、サブクラス化して関連するメソッドのオーバーライドで、することができますを追加、削除、またはリフレクションされたパラメーターまたはのメンバーに適用される属性を変更または新しいプロパティを追加します。リフレクションされた型。</span><span class="sxs-lookup"><span data-stu-id="68cdf-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="68cdf-104">たとえば、コードが工場出荷時のメソッドに特定の属性を適用する規則に従うことが、属性が不足しているサード パーティのコードを使用するようになりました必要があります。</span><span class="sxs-lookup"><span data-stu-id="68cdf-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="68cdf-105">使用することができます<xref:System.Reflection.Context.CustomReflectionContext>属性が持つべきオブジェクトを識別するための規則を指定して、コードから表示したときに、これらの属性を持つオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="68cdf-106">使用する<xref:System.Reflection.Context.CustomReflectionContext>実際には、反映されたオブジェクトを使用するコードがオブジェクトのランタイムのリフレクション コンテキストに関連付けられたすべて反映されると仮定した場合ではなく、リフレクション コンテキストの指定という概念をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68cdf-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="68cdf-107">.NET Framework の多くのリフレクション メソッドを提供する<xref:System.Reflection.ReflectionContext>この目的のためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="68cdf-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="68cdf-108">リフレクションされたパラメーターまたはメンバーに適用される属性を変更するには、オーバーライド、<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>または<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="68cdf-109">これらのメソッドは、反映されたオブジェクトとその現在のリフレクション コンテキストで属性の一覧を取得しがカスタム リフレクション コンテキストで属性の一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="68cdf-110"><xref:System.Reflection.Context.CustomReflectionContext> メソッドは、反映されたオブジェクトまたはメソッドの属性の一覧を呼び出すことによって、直接アクセスしないでください、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドを指定された<xref:System.Reflection.MemberInfo>または<xref:System.Reflection.ParameterInfo>のインスタンスが、代わりに使用する必要があります、`declaredAttributes`一覧で、パラメーターとして渡されます<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="68cdf-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="68cdf-111">リフレクションされた型には、プロパティを追加するには、オーバーライド、<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="68cdf-112">このメソッドは、リフレクションの型を指定し、追加のプロパティの一覧を返しますパラメーターを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="68cdf-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="68cdf-113">使用する必要があります、<xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>プロパティで返されるオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="68cdf-114">プロパティのアクセサーとして機能するプロパティを作成して、読み取り専用または書き込み専用プロパティを作成するアクセサーのいずれかを省略することができる場合は、デリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="68cdf-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="68cdf-115">このようなダミー プロパティがメタデータまたは共通中間言語 (CIL) バッキングあるしないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="68cdf-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="68cdf-116">原因であるリフレクション オブジェクト間の等値には注意して、リフレクション コンテキストを使用するときにオブジェクトが複数のコンテキストで同じ反映されたオブジェクトを表すことがあります。</span><span class="sxs-lookup"><span data-stu-id="68cdf-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="68cdf-117">使用することができます、<xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>反映されたオブジェクトの特定のリフレクション コンテキストのバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="68cdf-118">A<xref:System.Reflection.Context.CustomReflectionContext>オブジェクトで取得されたなどの特定のリフレクション オブジェクトによって返される属性の変更、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="68cdf-119">によって返されるカスタム属性のデータは変更されません、<xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>メソッド、およびこれら 2 つの一覧と一致しないカスタム リフレクション コンテキストを使用するとします。</span><span class="sxs-lookup"><span data-stu-id="68cdf-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68cdf-120">次の例をサブクラス化方法<xref:System.Reflection.Context.CustomReflectionContext>名前が"To"で始まる、指定された型のすべてのメンバーにカスタム属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="68cdf-121">このコードを実行するには、空のコンソール プロジェクトに貼り付けることと System.Reflection.Context.dll への参照を含めることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68cdf-122"><see cref="T:System.Reflection.Context.CustomReflectionContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68cdf-123"><see cref="T:System.Reflection.Context.CustomReflectionContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68cdf-124">ベースとして使用するリフレクション コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="68cdf-125">指定したリフレクション コンテキストを使用して、<see cref="T:System.Reflection.Context.CustomReflectionContext" /> クラスの新しいインスタンスをベースとして初期化します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68cdf-126">プロパティを追加した後の型。</span><span class="sxs-lookup"><span data-stu-id="68cdf-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="68cdf-127">派生クラスでオーバーライドされると、このリフレクション コンテキストで表されるように、指定された型の追加のプロパティのコレクションを提供します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="68cdf-128">指定した型の追加プロパティのコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68cdf-129">指定した型にプロパティを追加する必要がありますを指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="68cdf-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="68cdf-130">プロパティを作成するには、使用、<xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68cdf-131"><see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> メソッドの指定に従って、型に追加するプロパティを表すオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="68cdf-132">作成するプロパティの型。</span><span class="sxs-lookup"><span data-stu-id="68cdf-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="68cdf-133">作成するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="68cdf-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="68cdf-134">プロパティの <see langword="get" /> アクセサーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="68cdf-135">プロパティの <see langword="set" /> アクセサーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="68cdf-136"><see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> メソッドで使用される、型に追加するプロパティを表すオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="68cdf-137">プロパティを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68cdf-138">このメソッドによって返されるオブジェクトは、不完全な<xref:System.Reflection.PropertyInfo>オブジェクトし、のコンテキストでのみ使用する必要があります、<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="68cdf-139">作成するプロパティの型。</span><span class="sxs-lookup"><span data-stu-id="68cdf-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="68cdf-140">作成するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="68cdf-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="68cdf-141">プロパティの <see langword="get" /> アクセサーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="68cdf-142">プロパティの <see langword="set" /> アクセサーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="68cdf-143">プロパティに適用するカスタム属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="68cdf-144">プロパティの <see langword="get" /> アクセサーに適用するカスタム属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="68cdf-145">プロパティの <see langword="set" /> アクセサーに適用するカスタム属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="68cdf-146"><see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> メソッドで使用される、指定したカスタム属性を使用して、型に追加するプロパティを表すオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="68cdf-147">プロパティを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68cdf-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68cdf-148">このメソッドによって返されるオブジェクトは、不完全な<xref:System.Reflection.PropertyInfo>オブジェクトし、のコンテキストでのみ使用する必要があります、<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68cdf-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68cdf-149">派生クラスでオーバーライドされると、このリフレクション コンテキストで表されるように、指定されたオブジェクトのカスタム属性の変更されたコレクションを提供します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="68cdf-150">カスタム属性を返す対象のメンバー。</span><span class="sxs-lookup"><span data-stu-id="68cdf-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="68cdf-151">現在のコンテキストにあるメンバーの属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="68cdf-152">派生クラスでオーバーライドされると、このリフレクション コンテキストで表されるように、指定されたメンバーのカスタム属性の一覧を提供します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="68cdf-153">このリフレクション コンテキストの指定されたメンバーのカスタム属性を表すコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="68cdf-154">カスタム属性が返されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="68cdf-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="68cdf-155">現在のコンテキストにあるパラメーターの属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="68cdf-156">派生クラスでオーバーライドされると、このリフレクション コンテキストで表されるように、指定されたパラメーターのカスタム属性の一覧を提供します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="68cdf-157">このリフレクション コンテキストの指定されたパラメーターのカスタム属性を表すコレクション。</span><span class="sxs-lookup"><span data-stu-id="68cdf-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="68cdf-158">このコンテキストで表すアセンブリの外部表現。</span><span class="sxs-lookup"><span data-stu-id="68cdf-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="68cdf-159">このリフレクション コンテキストで、別のリフレクション コンテキストからのオブジェクトによって表されるアセンブリの表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="68cdf-160">このリフレクション コンテキストのアセンブリの表現。</span><span class="sxs-lookup"><span data-stu-id="68cdf-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68cdf-161">このコンテキストで表す型の外部表現。</span><span class="sxs-lookup"><span data-stu-id="68cdf-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="68cdf-162">このリフレクション コンテキストで、別のリフレクション コンテキストからのオブジェクトによって表される型の表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="68cdf-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="68cdf-163">このリフレクション コンテキストの型の表現。</span><span class="sxs-lookup"><span data-stu-id="68cdf-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>