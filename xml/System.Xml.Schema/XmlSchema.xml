<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchema.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e5670012a2291fcf6ad80297ce12c8ef147aeaf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e5670012a2291fcf6ad80297ce12c8ef147aeaf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) <bpt id="p1">[</bpt>XML Schema Part 1: Structures<ept id="p1">](http://www.w3.org/TR/xmlschema-1/)</ept> and <bpt id="p2">[</bpt>XML Schema Part 2: Datatypes<ept id="p2">](http://www.w3.org/TR/xmlschema-2/)</ept> specifications.</source>
          <target state="translated">World Wide Web コンソーシアム (W3C) の『<bpt id="p1">[</bpt>XML スキーマ、パート 1: 構造体<ept id="p1">](http://www.w3.org/TR/xmlschema-1/)</ept>』および『<bpt id="p2">[</bpt>XML スキーマ、パート 2: データ型<ept id="p2">](http://www.w3.org/TR/xmlschema-2/)</ept>』の仕様で指定されている XML スキーマのメモリ内表現です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">場所や不明または信頼できないソースからスキーマを使用しないでください。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">これは、コードのセキュリティが低下します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class, may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">使用した結果として発生した例外、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>クラスなど、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>クラス、信頼されていないシナリオで公開するべきではない機密情報を含めることがあります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>例外が発生したスキーマ ファイル パスが URI パスを返します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>信頼されていないシナリオ プロパティを公開するべきはありません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>Exceptions should be properly handled so this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">信頼されていないシナリオでは、この機密情報は公開されていないために、例外を正しく処理する必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The following example creates a schema definition.</source>
          <target state="translated">次の例では、スキーマの定義を作成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The following XML file is generated for the preceding code example.</source>
          <target state="translated">上記のコード例については、次の XML ファイルが生成されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Gets or sets the form for attributes declared in the target namespace of the schema.</source>
          <target state="translated">スキーマのターゲット名前空間で宣言された属性の形式を取得または設定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix.</source>
          <target state="translated">ターゲット名前空間の属性を名前空間プリフィックスで修飾する必要があるかどうかを示す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The value must be one of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> values shown in the following table.</source>
          <target state="translated">値は、のいずれかを指定する必要があります、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph>次の表に示す値。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>The attribute form is not specified in schema.</source>
          <target state="translated">属性の形式は、スキーマで指定されていません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Attributes from the target namespace must be qualified with the namespace prefix.</source>
          <target state="translated">ターゲットの名前空間からの属性は、名前空間プレフィックスで修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Attributes from the target namespace are not required to be qualified with the namespace prefix.</source>
          <target state="translated">ターゲットの名前空間からの属性は、名前空間プレフィックスで修飾する必要はありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>This value is the global default for all attributes declared in the target namespace.</source>
          <target state="translated">この値は、対象名前空間で宣言されているすべての属性に対するグローバル既定値です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
          <source>Individual attributes can override this setting for the local scope using the <ph id="ph1">`form`</ph> attribute.</source>
          <target state="translated">個々 の属性は、ローカル スコープを使用するためには、この設定を上書きできます、<ph id="ph1">`form`</ph>属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.AttributeGroups">
          <source>Gets the post-schema-compilation value of all the global attribute groups in the schema.</source>
          <target state="translated">スキーマ内のすべてのグローバル属性グループについて、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.AttributeGroups">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the global attribute groups in the schema.</source>
          <target state="translated">スキーマ内のすべてのグローバル属性グループの <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Attributes">
          <source>Gets the post-schema-compilation value for all the attributes in the schema.</source>
          <target state="translated">スキーマ内のすべての属性について、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Attributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the attributes in the schema.</source>
          <target state="translated">スキーマ内のすべての属性の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="blockDefault" /&gt;</ph> attribute which sets the default value of the <ph id="ph2">&lt;see langword="block" /&gt;</ph> attribute on element and complex types in the <ph id="ph3">&lt;see langword="targetNamespace" /&gt;</ph> of the schema.</source>
          <target state="translated">スキーマの <ph id="ph1">&lt;see langword="blockDefault" /&gt;</ph> の要素および複合型に対し、<ph id="ph2">&lt;see langword="block" /&gt;</ph> 属性の既定値を設定する <ph id="ph3">&lt;see langword="targetNamespace" /&gt;</ph> 属性を取得または設定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> value representing the different methods for preventing derivation.</source>
          <target state="translated">派生を禁止する各種メソッドを表す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The default value is <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The <ph id="ph1">`block`</ph> attribute prevents a <ph id="ph2">`complexType`</ph> or element that has the specified type of derivation from being used in place of the inherited <ph id="ph3">`complexType`</ph> or element.</source>
          <target state="translated"><ph id="ph1">`block`</ph>属性により、<ph id="ph2">`complexType`</ph>かを指定した、継承の代わりに使用されてからの派生型を持つ要素<ph id="ph3">`complexType`</ph>または要素です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>This attribute's value can either be a white space separated list of restriction, extension and substitution or the value can contain <ph id="ph1">`#all`</ph> or a list that is a subset of extension, restriction, or substitution.</source>
          <target state="translated">この属性の値はまたはいずれかの制限、拡張と置換ホワイト スペースで区切られたリスト値を含めることができます<ph id="ph1">`#all`</ph>または拡張機能、制限、または代替のサブセットであるを一覧します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>The following table lists the possible values of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>.</source>
          <target state="translated">次の表に、使用できる値<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, there are no restrictions on type derivations in the schema.</source>
          <target state="translated">既定では、スキーマの派生型に制限はありません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Overrides the default derivation method and allows any type derivations in the schema.</source>
          <target state="translated">既定の派生メソッドをオーバーライドし、スキーマ内の任意の型の派生を許可します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Extension.</source>
          <target state="translated">既定には、拡張機能によってこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to element and complex type elements.</source>
          <target state="translated">要素と複合型要素にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Restriction.</source>
          <target state="translated">既定では、このスキーマの要素は、制限による派生できません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by Union.</source>
          <target state="translated">既定には、和集合でこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">単純型にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by List.</source>
          <target state="translated">既定には、一覧でこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">単純型にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.BlockDefault">
          <source>By default, elements in this schema cannot be derived by any method.</source>
          <target state="translated">既定では、このスキーマの要素をいずれの方法でも派生させることはできません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">XML SOM (Schema Object Model) を検証用のスキーマ情報にコンパイルします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">プログラムによって構築された SOM の構文および意味構造をチェックするために使用します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">意味検証チェックは、コンパイル時に実行されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph>メソッドは、Microsoft .NET Framework version 2.0 では廃止されておりは置き換えられました、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about XML Schema validation errors.</source>
          <target state="translated">XML スキーマ検証エラーに関する情報を受け取る検証イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">XML SOM (Schema Object Model) を検証用のスキーマ情報にコンパイルします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">プログラムによって構築された SOM の構文および意味構造をチェックするために使用します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">意味検証チェックは、コンパイル時に実行されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph>メソッドは、Microsoft .NET Framework version 2.0 では廃止されておりは置き換えられました、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The validation event handler that receives information about the XML Schema validation errors.</source>
          <target state="translated">XML スキーマ検証エラーに関する情報を受け取る検証イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph> used to resolve namespaces referenced in <ph id="ph2">&lt;see langword="include" /&gt;</ph> and <ph id="ph3">&lt;see langword="import" /&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="include" /&gt;</ph> 要素および <ph id="ph3">&lt;see langword="import" /&gt;</ph> 要素で参照される名前空間を解決するために使用される <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Compiles the XML Schema Object Model (SOM) into schema information for validation.</source>
          <target state="translated">XML SOM (Schema Object Model) を検証用のスキーマ情報にコンパイルします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Used to check the syntactic and semantic structure of the programmatically built SOM.</source>
          <target state="translated">プログラムによって構築された SOM の構文および意味構造をチェックするために使用します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>Semantic validation checking is performed during compilation.</source>
          <target state="translated">意味検証チェックは、コンパイル時に実行されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>If the SOM references other namespaces through the <ph id="ph1">`import`</ph> or <ph id="ph2">`include`</ph> elements, the <ph id="ph3">`XmlResolver`</ph> is used to resolve these references.</source>
          <target state="translated">SOM はを介して他の名前空間を参照している場合、<ph id="ph1">`import`</ph>または<ph id="ph2">`include`</ph>要素、<ph id="ph3">`XmlResolver`</ph>これらの参照を解決するために使用します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>If the resolver is set to <ph id="ph1">`null`</ph>, this indicates that the user does not care about resolving <ph id="ph2">`import`</ph> or <ph id="ph3">`include`</ph> elements.</source>
          <target state="translated">競合回避モジュールに設定されている場合<ph id="ph1">`null`</ph>、これは、あるユーザーは考慮しませんを解決することを示します。<ph id="ph2">`import`</ph>または<ph id="ph3">`include`</ph>要素。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>In this case, the references are not resolved.</source>
          <target state="translated">この場合、参照は解決されません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The resolver is not cached after the <ph id="ph1">`Compile`</ph> method completes.</source>
          <target state="translated">競合回避モジュールが後にキャッシュされていない、<ph id="ph1">`Compile`</ph>メソッドが完了しました。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method is obsolete in the Microsoft .NET Framework version 2.0 and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph>メソッドは、Microsoft .NET Framework version 2.0 では廃止されておりは置き換えられました、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class to resolve external schemas referenced in include, import, or redefine elements by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Compile%2A&gt;</ph>メソッドを使用、<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>で参照されている外部のスキーマが含まれて、インポート、または既定の要素を再定義を解決するのにはクラスです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
          <source>You can disable resolution of external schemas by passing null as the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> parameter.</source>
          <target state="translated">として null を渡すことで外部のスキーマの解像度を無効にすることができます、<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Gets or sets the form for elements declared in the target namespace of the schema.</source>
          <target state="translated">スキーマのターゲット名前空間で宣言された要素の形式を取得または設定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> value that indicates if elements from the target namespace are required to be qualified with the namespace prefix.</source>
          <target state="translated">ターゲット名前空間からの要素を、名前空間プリフィックスで修飾する必要があるかどうかを示す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The value must be one of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> values shown in the following table.</source>
          <target state="translated">値は、のいずれかを指定する必要があります、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph>次の表に示す値。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaForm&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>The element form is not specified in the schema.</source>
          <target state="translated">要素の形式は、スキーマで指定されていません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Elements from the target namespace must be qualified with the namespace prefix.</source>
          <target state="translated">ターゲットの名前空間からの要素は、名前空間プレフィックスで修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Elements from the target namespace are not required to be qualified with the namespace prefix.</source>
          <target state="translated">ターゲットの名前空間からの要素は、名前空間プレフィックスで修飾する必要はありません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>This value is the global default for all elements declared in the target namespace.</source>
          <target state="translated">この値は、対象名前空間で宣言されているすべての要素に対するグローバル既定値です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
          <source>Individual elements can override this setting for the local scope by using the <ph id="ph1">`form`</ph> attribute.</source>
          <target state="translated">個々 の要素を使用して、ローカル スコープのこの設定をオーバーライドすることができます、<ph id="ph1">`form`</ph>属性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Elements">
          <source>Gets the post-schema-compilation value for all the elements in the schema.</source>
          <target state="translated">スキーマ内のすべての要素について、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Elements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the elements in the schema.</source>
          <target state="translated">スキーマ内のすべての要素の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> attribute which sets the default value of the <ph id="ph2">&lt;see langword="final" /&gt;</ph> attribute on elements and complex types in the target namespace of the schema.</source>
          <target state="translated">スキーマのターゲット名前空間の要素および複合型に対し、<ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> 属性の既定値を設定する <ph id="ph2">&lt;see langword="final" /&gt;</ph> 属性を取得または設定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> value representing the different methods for preventing derivation.</source>
          <target state="translated">派生を禁止する各種メソッドを表す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The default value is <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The <ph id="ph1">`final`</ph> attribute prevents the specified type of derivation of an element or complex type.</source>
          <target state="translated"><ph id="ph1">`final`</ph>属性は、指定の派生型要素または複合型を回避します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>This value can contain <ph id="ph1">`#all`</ph> or a list that is a subset of extension or restriction.</source>
          <target state="translated">この値を含めることができます<ph id="ph1">`#all`</ph>または拡張または制限のサブセットであるを一覧します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>The following table lists the possible values of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>.</source>
          <target state="translated">次の表に、使用できる値<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, there are no restrictions on type derivations in the schema.</source>
          <target state="translated">既定では、スキーマの派生型に制限はありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Overrides the default derivation method and allows any type derivations in the schema.</source>
          <target state="translated">既定の派生メソッドをオーバーライドし、スキーマ内の任意の型の派生を許可します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Extension.</source>
          <target state="translated">既定には、拡張機能によってこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to element and complex type elements.</source>
          <target state="translated">要素と複合型要素にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Restriction.</source>
          <target state="translated">既定では、このスキーマの要素は、制限による派生できません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by Union.</source>
          <target state="translated">既定には、和集合でこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">単純型にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by List.</source>
          <target state="translated">既定には、一覧でこのスキーマで要素を派生させることはできません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>Applies only to simple types.</source>
          <target state="translated">単純型にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.FinalDefault">
          <source>By default, elements in this schema cannot be derived by any method.</source>
          <target state="translated">既定では、このスキーマの要素をいずれの方法でも派生させることはできません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Groups">
          <source>Gets the post-schema-compilation value of all the groups in the schema.</source>
          <target state="translated">スキーマ内のすべてのグループについて、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Groups">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all the groups in the schema.</source>
          <target state="translated">スキーマ内のすべてのグループの <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>Gets or sets the string ID.</source>
          <target state="translated">文字列 ID を取得または設定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>The ID of the string.</source>
          <target state="translated">文字列の ID。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Id">
          <source>The default value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>Gets the collection of included and imported schemas.</source>
          <target state="translated">インクルードされたスキーマとインポートされたスキーマのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of the included and imported schemas.</source>
          <target state="translated">インクルードされたスキーマとインポートされたスキーマの <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> method expects only <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> and its derived types (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) as parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph>メソッドにのみが必要ですが<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph>とその派生型 (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>、 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>、および<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) パラメーターとして。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Includes">
          <source>The following example illustrates adding an included schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> collection of an existing <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.</source>
          <target state="translated">次の例に含まれるスキーマの追加、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> 、既存のコレクション<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
          <source>The XML schema instance namespace.</source>
          <target state="translated">XML スキーマ インスタンスの名前空間。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source>Indicates if the schema has been compiled.</source>
          <target state="translated">スキーマがコンパイル済みかどうかを示します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if schema has been compiled, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">スキーマがコンパイル済みである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.IsCompiled">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>Gets the collection of schema elements in the schema and is used to add new element types at the <ph id="ph1">&lt;see langword="schema" /&gt;</ph> element level.</source>
          <target state="translated">スキーマに含まれるスキーマ要素コレクションを取得します。新しい要素型を <ph id="ph1">&lt;see langword="schema" /&gt;</ph> 要素レベルで追加する場合に使用します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of schema elements in the schema.</source>
          <target state="translated">スキーマに含まれるスキーマ要素の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Items">
          <source>The collection of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnnotation&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttributeGroup&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph>, <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>, <ph id="ph7">&lt;xref:System.Xml.Schema.XmlSchemaGroup&gt;</ph>, or <ph id="ph8">&lt;xref:System.Xml.Schema.XmlSchemaNotation&gt;</ph>.</source>
          <target state="translated">コレクション<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnnotation&gt;</ph>、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttributeGroup&gt;</ph>、 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph>、 <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph>、 <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>、 <ph id="ph7">&lt;xref:System.Xml.Schema.XmlSchemaGroup&gt;</ph>、または<ph id="ph8">&lt;xref:System.Xml.Schema.XmlSchemaNotation&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.Namespace">
          <source>The XML schema namespace.</source>
          <target state="translated">XML スキーマの名前空間。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchema.Namespace">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Notations">
          <source>Gets the post-schema-compilation value for all notations in the schema.</source>
          <target state="translated">スキーマ内のすべての注釈について、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Notations">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> collection of all notations in the schema.</source>
          <target state="translated">スキーマ内のすべての注釈の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /&gt;</ph> コレクション。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Reads an XML Schema.</source>
          <target state="translated">XML スキーマを読み込みます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The supplied data stream.</source>
          <target state="translated">提供されたデータ ストリーム。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about XML Schema syntax errors.</source>
          <target state="translated">XML スキーマ構文エラーに関する情報を受け取る検証イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema  from the supplied stream.</source>
          <target state="translated">提供されたストリームから XML スキーマを読み込みます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML スキーマを表す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> は、<ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されていない場合に発生します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML Schema to read.</source>
          <target state="translated">読み取る XML スキーマを格納している <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about the XML Schema syntax errors.</source>
          <target state="translated">XML スキーマ構文エラーに関する情報を受け取る検証イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema from the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> から XML スキーマを読み込みます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML スキーマを表す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> は、<ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されていない場合に発生します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML Schema to read.</source>
          <target state="translated">読み取る XML スキーマを格納している <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The validation event handler that receives information about the XML Schema syntax errors.</source>
          <target state="translated">XML スキーマ構文エラーに関する情報を受け取る検証イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>Reads an XML Schema from the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> から XML スキーマを読み込みます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object representing the XML Schema.</source>
          <target state="translated">XML スキーマを表す <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is raised if no <ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> は、<ph id="ph2">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されていない場合に発生します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.SchemaTypes">
          <source>Gets the post-schema-compilation value of all schema types in the schema.</source>
          <target state="translated">スキーマ内のすべてのスキーマ型について、スキーマ コンパイル後の値を取得します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.SchemaTypes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph> of all schema types in the schema.</source>
          <target state="translated">スキーマ内のすべてのスキーマ型の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.</source>
          <target state="translated">スキーマのターゲット名前空間の URI (Uniform Resource Identifier) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>The schema target namespace.</source>
          <target state="translated">スキーマのターゲット名前空間。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph> is the namespace of all schema components in this schema as well as any schema included using the <ph id="ph2">`include`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph>は、このスキーマ内のすべてのスキーマ コンポーネントだけを使用して含まれている任意のスキーマの名前空間、<ph id="ph2">`include`</ph>要素。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.TargetNamespace">
          <source>Included schemas must either have the same target namespace as the containing schema or have no target namespace specified.</source>
          <target state="translated">スキーマに含まする必要があります、ターゲットと同じ名前空間を含むスキーマがあるかなしターゲットの名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
          <source>Gets and sets the qualified attributes which do not belong to the schema target namespace.</source>
          <target state="translated">スキーマのターゲット名前空間に属さない、修飾された属性を取得および設定します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
          <source>An array of qualified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> objects that do not belong to the schema target namespace.</source>
          <target state="translated">スキーマのターゲット名前空間に属さない、修飾された <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>Gets or sets the version of the schema.</source>
          <target state="translated">スキーマのバージョンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>The version of the schema.</source>
          <target state="translated">スキーマのバージョン。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchema.Version">
          <source>The default value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchema">
          <source>Writes out an XML Schema.</source>
          <target state="translated">XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
          <source>The supplied data stream.</source>
          <target state="translated">提供されたデータ ストリーム。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
          <source>Writes the XML Schema to the supplied data stream.</source>
          <target state="translated">提供されたデータ ストリームに XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to.</source>
          <target state="translated">書き込み先の <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">書き込み先の <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> に XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> パラメーターが null です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>The supplied data stream.</source>
          <target state="translated">提供されたデータ ストリーム。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> using the <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> specified.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> を使用し、指定された <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> に XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">指定する、<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>自動名前空間とプレフィックスのマッピングを無効にします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to.</source>
          <target state="translated">書き込み先の <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">指定する、<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>自動名前空間とプレフィックスのマッピングを無効にします。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">書き込み先の <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>Writes the XML Schema to the supplied <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">提供された <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> に XML スキーマを書き込みます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
          <source>Supplying an <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> disables automatic namespace prefix mapping.</source>
          <target state="translated">指定する、<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>自動名前空間とプレフィックスのマッピングを無効にします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>